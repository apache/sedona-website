{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":true,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"08/30/2022: Sedona 1.2.1-incubating is released. It supports Spark 2.4 - 3.3. and Flink 1.12+. \u00b6 04/16/2022: Sedona 1.2.0-incubating is released. Sedona now supports geospatial stream processing in Apache Flink. \u00b6 11/23/2021: Sedona 1.1.1-incubating is released. It now supports Spark 3.2. \u00b6 10/06/2021: Sedona 1.1.0-incubating is released. R lang API is available on CRAN. Raster data and map algebra SQL functions are now supported. \u00b6 05/25/2021: Sedona 1.0.1-incubating is released. It supports Spark 2.3 - 3.1, Scala 2.11 - 2.12, Python 3.6 - 3.9. \u00b6","title":"Home"},{"location":"#08302022-sedona-121-incubating-is-released-it-supports-spark-24-33-and-flink-112","text":"","title":"08/30/2022: Sedona 1.2.1-incubating is released. It supports Spark 2.4 - 3.3. and Flink 1.12+."},{"location":"#04162022-sedona-120-incubating-is-released-sedona-now-supports-geospatial-stream-processing-in-apache-flink","text":"","title":"04/16/2022: Sedona 1.2.0-incubating is released. Sedona now supports geospatial stream processing in Apache Flink."},{"location":"#11232021-sedona-111-incubating-is-released-it-now-supports-spark-32","text":"","title":"11/23/2021: Sedona 1.1.1-incubating is released. It now supports Spark 3.2."},{"location":"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported","text":"","title":"10/06/2021: Sedona 1.1.0-incubating is released. R lang API is available on CRAN. Raster data and map algebra SQL functions are now supported."},{"location":"#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39","text":"","title":"05/25/2021: Sedona 1.0.1-incubating is released. It supports Spark 2.3 - 3.1, Scala 2.11 - 2.12, Python 3.6 - 3.9."},{"location":"download/","text":"GitHub repository \u00b6 Latest source code: GitHub repository Old GeoSpark releases: GitHub releases Automatically generated binary JARs (per each Master branch commit): GitHub Action Verify the integrity \u00b6 Public keys Instructions Versions \u00b6 1.2.1-incubating \u00b6 Download from ASF Checksum Signature Source code src sha512 asc Binary bin sha512 asc 1.2.0-incubating \u00b6 Download from ASF Checksum Signature Source code src sha512 asc Binary bin sha512 asc Past releases \u00b6 Past Sedona releases are archived and can be found here: https://archive.apache.org/dist/incubator/sedona/ Security \u00b6 For security issues, please refer to https://www.apache.org/security/","title":"Download"},{"location":"download/#github-repository","text":"Latest source code: GitHub repository Old GeoSpark releases: GitHub releases Automatically generated binary JARs (per each Master branch commit): GitHub Action","title":"GitHub repository"},{"location":"download/#verify-the-integrity","text":"Public keys Instructions","title":"Verify the integrity"},{"location":"download/#versions","text":"","title":"Versions"},{"location":"download/#121-incubating","text":"Download from ASF Checksum Signature Source code src sha512 asc Binary bin sha512 asc","title":"1.2.1-incubating"},{"location":"download/#120-incubating","text":"Download from ASF Checksum Signature Source code src sha512 asc Binary bin sha512 asc","title":"1.2.0-incubating"},{"location":"download/#past-releases","text":"Past Sedona releases are archived and can be found here: https://archive.apache.org/dist/incubator/sedona/","title":"Past releases"},{"location":"download/#security","text":"For security issues, please refer to https://www.apache.org/security/","title":"Security"},{"location":"api/java-api/","text":"Please read Javadoc Note: Scala can call Java APIs seamlessly. That means Scala users use the same APIs with Java users","title":"Scala/Java doc"},{"location":"api/python-api/","text":"Will be available soon.","title":"Python doc"},{"location":"api/r-api/","text":"Please read R docs","title":"R doc"},{"location":"api/flink/Aggregator/","text":"ST_Envelope_Aggr \u00b6 Introduction: Return the entire envelope boundary of all geometries in A Format: ST_Envelope_Aggr (A:geometryColumn) Since: v1.3.0 SQL example: SELECT ST_Envelope_Aggr ( pointdf . arealandmark ) FROM pointdf ST_Union_Aggr \u00b6 Introduction: Return the polygon union of all polygons in A. All inputs must be polygons. Format: ST_Union_Aggr (A:geometryColumn) Since: v1.3.0 SQL example: SELECT ST_Union_Aggr ( polygondf . polygonshape ) FROM polygondf","title":"Aggregator"},{"location":"api/flink/Aggregator/#st_envelope_aggr","text":"Introduction: Return the entire envelope boundary of all geometries in A Format: ST_Envelope_Aggr (A:geometryColumn) Since: v1.3.0 SQL example: SELECT ST_Envelope_Aggr ( pointdf . arealandmark ) FROM pointdf","title":"ST_Envelope_Aggr"},{"location":"api/flink/Aggregator/#st_union_aggr","text":"Introduction: Return the polygon union of all polygons in A. All inputs must be polygons. Format: ST_Union_Aggr (A:geometryColumn) Since: v1.3.0 SQL example: SELECT ST_Union_Aggr ( polygondf . polygonshape ) FROM polygondf","title":"ST_Union_Aggr"},{"location":"api/flink/Constructor/","text":"ST_GeomFromGeoHash \u00b6 Introduction: Create Geometry from geohash string and optional precision Format: ST_GeomFromGeoHash(geohash: string, precision: int) Since: v1.2.1 SQL example: SELECT ST_GeomFromGeoHash ( 's00twy01mt' , 4 ) AS geom ST_GeomFromGeoJSON \u00b6 Introduction: Construct a Geometry from GeoJson Format: ST_GeomFromGeoJSON (GeoJson:string) Since: v1.2.0 SQL example: SELECT ST_GeomFromGeoJSON ( polygontable . _c0 ) AS polygonshape FROM polygontable ST_GeomFromGML \u00b6 Introduction: Construct a Geometry from GML. Format: ST_GeomFromGML (gml:string) Since: v1.3.0 SQL example: SELECT ST_GeomFromGML ( '<gml:LineString srsName=\"EPSG:4269\"><gml:coordinates>-71.16028,42.258729 -71.160837,42.259112 -71.161143,42.25932</gml:coordinates></gml:LineString>' ) AS geometry ST_GeomFromKML \u00b6 Introduction: Construct a Geometry from KML. Format: ST_GeomFromKML (kml:string) Since: v1.3.0 SQL example: SELECT ST_GeomFromKML ( '<LineString><coordinates>-71.1663,42.2614 -71.1667,42.2616</coordinates></LineString>' ) AS geometry ST_GeomFromText \u00b6 Introduction: Construct a Geometry from Wkt. Alias of ST_GeomFromWKT Format: ST_GeomFromText (Wkt:string) Since: v1.2.1 SQL example: SELECT ST_GeomFromText ( 'POINT(40.7128 -74.0060)' ) AS geometry ST_GeomFromWKB \u00b6 Introduction: Construct a Geometry from WKB string or Binary Format: ST_GeomFromWKB (Wkb:string) ST_GeomFromWKB (Wkb:binary) Since: v1.2.0 SQL example: SELECT ST_GeomFromWKB ( polygontable . _c0 ) AS polygonshape FROM polygontable Format: ST_GeomFromWKB (Wkb:bytes) Since: v1.2.1 SQL example: SELECT ST_GeomFromWKB ( polygontable . _c0 ) AS polygonshape FROM polygontable ST_GeomFromWKT \u00b6 Introduction: Construct a Geometry from Wkt Format: ST_GeomFromWKT (Wkt:string) Since: v1.2.0 SQL example: SELECT ST_GeomFromWKT ( 'POINT(40.7128 -74.0060)' ) AS geometry ST_LineFromText \u00b6 Introduction: Construct a LineString from Text, delimited by Delimiter (Optional) Format: ST_LineFromText (Text:string, Delimiter:char) Since: v1.2.1 SQL example: SELECT ST_LineFromText ( 'Linestring(1 2, 3 4)' ) AS line ST_LineStringFromText \u00b6 Introduction: Construct a LineString from Text, delimited by Delimiter (Optional). Alias of ST_LineFromText Format: ST_LineStringFromText (Text:string, Delimiter:char) Since: v1.2.1 Spark SQL example: SELECT ST_LineStringFromText ( 'Linestring(1 2, 3 4)' ) AS line ST_Point \u00b6 Introduction: Construct a Point from X and Y Format: ST_Point (X:decimal, Y:decimal) Since: v1.2.1 SQL example: SELECT ST_Point ( x , y ) AS pointshape FROM pointtable ST_PointFromText \u00b6 Introduction: Construct a Point from Text, delimited by Delimiter Format: ST_PointFromText (Text:string, Delimiter:char) Since: v1.2.0 SQL example: SELECT ST_PointFromText ( '40.7128,-74.0060' , ',' ) AS pointshape ST_PolygonFromEnvelope \u00b6 Introduction: Construct a Polygon from MinX, MinY, MaxX, MaxY. Format: ST_PolygonFromEnvelope (MinX:decimal, MinY:decimal, MaxX:decimal, MaxY:decimal) Since: v1.2.0 SQL example: SELECT * FROM pointdf WHERE ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . pointshape ) ST_PolygonFromText \u00b6 Introduction: Construct a Polygon from Text, delimited by Delimiter. Path must be closed Format: ST_PolygonFromText (Text:string, Delimiter:char) Since: v1.2.0 SQL example: SELECT ST_PolygonFromText ( '-74.0428197,40.6867969,-74.0421975,40.6921336,-74.0508020,40.6912794,-74.0428197,40.6867969' , ',' ) AS polygonshape","title":"Constructor"},{"location":"api/flink/Constructor/#st_geomfromgeohash","text":"Introduction: Create Geometry from geohash string and optional precision Format: ST_GeomFromGeoHash(geohash: string, precision: int) Since: v1.2.1 SQL example: SELECT ST_GeomFromGeoHash ( 's00twy01mt' , 4 ) AS geom","title":"ST_GeomFromGeoHash"},{"location":"api/flink/Constructor/#st_geomfromgeojson","text":"Introduction: Construct a Geometry from GeoJson Format: ST_GeomFromGeoJSON (GeoJson:string) Since: v1.2.0 SQL example: SELECT ST_GeomFromGeoJSON ( polygontable . _c0 ) AS polygonshape FROM polygontable","title":"ST_GeomFromGeoJSON"},{"location":"api/flink/Constructor/#st_geomfromgml","text":"Introduction: Construct a Geometry from GML. Format: ST_GeomFromGML (gml:string) Since: v1.3.0 SQL example: SELECT ST_GeomFromGML ( '<gml:LineString srsName=\"EPSG:4269\"><gml:coordinates>-71.16028,42.258729 -71.160837,42.259112 -71.161143,42.25932</gml:coordinates></gml:LineString>' ) AS geometry","title":"ST_GeomFromGML"},{"location":"api/flink/Constructor/#st_geomfromkml","text":"Introduction: Construct a Geometry from KML. Format: ST_GeomFromKML (kml:string) Since: v1.3.0 SQL example: SELECT ST_GeomFromKML ( '<LineString><coordinates>-71.1663,42.2614 -71.1667,42.2616</coordinates></LineString>' ) AS geometry","title":"ST_GeomFromKML"},{"location":"api/flink/Constructor/#st_geomfromtext","text":"Introduction: Construct a Geometry from Wkt. Alias of ST_GeomFromWKT Format: ST_GeomFromText (Wkt:string) Since: v1.2.1 SQL example: SELECT ST_GeomFromText ( 'POINT(40.7128 -74.0060)' ) AS geometry","title":"ST_GeomFromText"},{"location":"api/flink/Constructor/#st_geomfromwkb","text":"Introduction: Construct a Geometry from WKB string or Binary Format: ST_GeomFromWKB (Wkb:string) ST_GeomFromWKB (Wkb:binary) Since: v1.2.0 SQL example: SELECT ST_GeomFromWKB ( polygontable . _c0 ) AS polygonshape FROM polygontable Format: ST_GeomFromWKB (Wkb:bytes) Since: v1.2.1 SQL example: SELECT ST_GeomFromWKB ( polygontable . _c0 ) AS polygonshape FROM polygontable","title":"ST_GeomFromWKB"},{"location":"api/flink/Constructor/#st_geomfromwkt","text":"Introduction: Construct a Geometry from Wkt Format: ST_GeomFromWKT (Wkt:string) Since: v1.2.0 SQL example: SELECT ST_GeomFromWKT ( 'POINT(40.7128 -74.0060)' ) AS geometry","title":"ST_GeomFromWKT"},{"location":"api/flink/Constructor/#st_linefromtext","text":"Introduction: Construct a LineString from Text, delimited by Delimiter (Optional) Format: ST_LineFromText (Text:string, Delimiter:char) Since: v1.2.1 SQL example: SELECT ST_LineFromText ( 'Linestring(1 2, 3 4)' ) AS line","title":"ST_LineFromText"},{"location":"api/flink/Constructor/#st_linestringfromtext","text":"Introduction: Construct a LineString from Text, delimited by Delimiter (Optional). Alias of ST_LineFromText Format: ST_LineStringFromText (Text:string, Delimiter:char) Since: v1.2.1 Spark SQL example: SELECT ST_LineStringFromText ( 'Linestring(1 2, 3 4)' ) AS line","title":"ST_LineStringFromText"},{"location":"api/flink/Constructor/#st_point","text":"Introduction: Construct a Point from X and Y Format: ST_Point (X:decimal, Y:decimal) Since: v1.2.1 SQL example: SELECT ST_Point ( x , y ) AS pointshape FROM pointtable","title":"ST_Point"},{"location":"api/flink/Constructor/#st_pointfromtext","text":"Introduction: Construct a Point from Text, delimited by Delimiter Format: ST_PointFromText (Text:string, Delimiter:char) Since: v1.2.0 SQL example: SELECT ST_PointFromText ( '40.7128,-74.0060' , ',' ) AS pointshape","title":"ST_PointFromText"},{"location":"api/flink/Constructor/#st_polygonfromenvelope","text":"Introduction: Construct a Polygon from MinX, MinY, MaxX, MaxY. Format: ST_PolygonFromEnvelope (MinX:decimal, MinY:decimal, MaxX:decimal, MaxY:decimal) Since: v1.2.0 SQL example: SELECT * FROM pointdf WHERE ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . pointshape )","title":"ST_PolygonFromEnvelope"},{"location":"api/flink/Constructor/#st_polygonfromtext","text":"Introduction: Construct a Polygon from Text, delimited by Delimiter. Path must be closed Format: ST_PolygonFromText (Text:string, Delimiter:char) Since: v1.2.0 SQL example: SELECT ST_PolygonFromText ( '-74.0428197,40.6867969,-74.0421975,40.6921336,-74.0508020,40.6912794,-74.0428197,40.6867969' , ',' ) AS polygonshape","title":"ST_PolygonFromText"},{"location":"api/flink/Function/","text":"ST_3DDistance \u00b6 Introduction: Return the 3-dimensional minimum cartesian distance between A and B Format: ST_3DDistance (A:geometry, B:geometry) Since: v1.3.0 Example: SELECT ST_3DDistance ( polygondf . countyshape , polygondf . countyshape ) FROM polygondf ST_Area \u00b6 Introduction: Return the area of A Format: ST_Area (A:geometry) Since: v1.3.0 Example: SELECT ST_Area ( polygondf . countyshape ) FROM polygondf ST_AsBinary \u00b6 Introduction: Return the Well-Known Binary representation of a geometry Format: ST_AsBinary (A:geometry) Since: v1.3.0 Example: SELECT ST_AsBinary ( polygondf . countyshape ) FROM polygondf ST_AsEWKB \u00b6 Introduction: Return the Extended Well-Known Binary representation of a geometry. EWKB is an extended version of WKB which includes the SRID of the geometry. The format originated in PostGIS but is supported by many GIS tools. If the geometry is lacking SRID a WKB format is produced. Format: ST_AsEWKB (A:geometry) Since: v1.3.0 Example: SELECT ST_AsEWKB ( polygondf . countyshape ) FROM polygondf ST_AsEWKT \u00b6 Introduction: Return the Extended Well-Known Text representation of a geometry. EWKT is an extended version of WKT which includes the SRID of the geometry. The format originated in PostGIS but is supported by many GIS tools. If the geometry is lacking SRID a WKT format is produced. See ST_SetSRID Format: ST_AsEWKT (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_AsEWKT ( polygondf . countyshape ) FROM polygondf ST_AsGeoJSON \u00b6 Introduction: Return the GeoJSON string representation of a geometry Format: ST_AsGeoJSON (A:geometry) Since: v1.3.0 Spark SQL example: SELECT ST_AsGeoJSON ( polygondf . countyshape ) FROM polygondf ST_AsGML \u00b6 Introduction: Return the GML string representation of a geometry Format: ST_AsGML (A:geometry) Since: v1.3.0 Spark SQL example: SELECT ST_AsGML ( polygondf . countyshape ) FROM polygondf ST_AsKML \u00b6 Introduction: Return the KML string representation of a geometry Format: ST_AsKML (A:geometry) Since: v1.3.0 Spark SQL example: SELECT ST_AsKML ( polygondf . countyshape ) FROM polygondf ST_AsText \u00b6 Introduction: Return the Well-Known Text string representation of a geometry Format: ST_AsText (A:geometry) Since: v1.3.0 Example: SELECT ST_AsText ( polygondf . countyshape ) FROM polygondf ST_Azimuth \u00b6 Introduction: Returns Azimuth for two given points in radians null otherwise. Format: ST_Azimuth(pointA: Point, pointB: Point) Since: v1.3.0 Example: SELECT ST_Azimuth ( ST_POINT ( 0 . 0 , 25 . 0 ), ST_POINT ( 0 . 0 , 0 . 0 )) Output: 3.141592653589793 ST_Boundary \u00b6 Introduction: Returns the closure of the combinatorial boundary of this Geometry. Format: ST_Boundary(geom: geometry) Since: v1.3.0 Example: SELECT ST_Boundary ( ST_GeomFromText ( 'POLYGON ((1 1, 0 0, -1 1, 1 1))' )) Output: LINEARRING (1 1, 0 0, -1 1, 1 1) ST_Buffer \u00b6 Introduction: Returns a geometry/geography that represents all points whose distance from this Geometry/geography is less than or equal to distance. Format: ST_Buffer (A:geometry, buffer: Double) Since: v1.2.0 Spark SQL example: SELECT ST_Buffer ( polygondf . countyshape , 1 ) FROM polygondf ST_BuildArea \u00b6 Introduction: Returns the areal geometry formed by the constituent linework of the input geometry. Format: ST_BuildArea (A:geometry) Since: v1.2.1 Example: SELECT ST_BuildArea ( ST_Collect ( smallDf , bigDf )) AS geom FROM smallDf , bigDf Input: MULTILINESTRING((0 0, 10 0, 10 10, 0 10, 0 0),(10 10, 20 10, 20 20, 10 20, 10 10)) Output: MULTIPOLYGON(((0 0,0 10,10 10,10 0,0 0)),((10 10,10 20,20 20,20 10,10 10))) ST_Distance \u00b6 Introduction: Return the Euclidean distance between A and B Format: ST_Distance (A:geometry, B:geometry) Since: v1.2.0 Spark SQL example: SELECT ST_Distance ( polygondf . countyshape , polygondf . countyshape ) FROM polygondf ST_Envelope \u00b6 Introduction: Return the envelop boundary of A Format: ST_Envelope (A:geometry) Since: v1.3.0 Example: SELECT ST_Envelope ( polygondf . countyshape ) FROM polygondf ST_ExteriorRing \u00b6 Introduction: Returns a LINESTRING representing the exterior ring (shell) of a POLYGON. Returns NULL if the geometry is not a polygon. Format: ST_ExteriorRing(A:geometry) Since: v1.2.1 Examples: SELECT ST_ExteriorRing ( df . geometry ) FROM df Input: POLYGON ((0 0, 1 1, 2 1, 0 1, 1 -1, 0 0)) Output: LINESTRING (0 0, 1 1, 2 1, 0 1, 1 -1, 0 0) ST_FlipCoordinates \u00b6 Introduction: Returns a version of the given geometry with X and Y axis flipped. Format: ST_FlipCoordinates(A:geometry) Since: v1.2.0 Spark SQL example: SELECT ST_FlipCoordinates ( df . geometry ) FROM df Input: POINT (1 2) Output: POINT (2 1) ST_Force_2D \u00b6 Introduction: Forces the geometries into a \"2-dimensional mode\" so that all output representations will only have the X and Y coordinates Format: ST_Force_2D (A:geometry) Since: v1.2.1 Example: SELECT ST_Force_2D ( df . geometry ) AS geom FROM df Input: POLYGON((0 0 2,0 5 2,5 0 2,0 0 2),(1 1 2,3 1 2,1 3 2,1 1 2)) Output: POLYGON((0 0,0 5,5 0,0 0),(1 1,3 1,1 3,1 1)) ST_GeoHash \u00b6 Introduction: Returns GeoHash of the geometry with given precision Format: ST_GeoHash(geom: geometry, precision: int) Since: v1.2.0 Example: Query: SELECT ST_GeoHash ( ST_GeomFromText ( 'POINT(21.427834 52.042576573)' ), 5 ) AS geohash Result: +-----------------------------+ |geohash | +-----------------------------+ |u3r0p | +-----------------------------+ ST_GeometryN \u00b6 Introduction: Return the 0-based Nth geometry if the geometry is a GEOMETRYCOLLECTION, (MULTI)POINT, (MULTI)LINESTRING, MULTICURVE or (MULTI)POLYGON. Otherwise, return null Format: ST_GeometryN(geom: geometry, n: Int) Since: v1.3.0 Example: SELECT ST_GeometryN ( ST_GeomFromText ( 'MULTIPOINT((1 2), (3 4), (5 6), (8 9))' ), 1 ) Output: POINT (3 4) ST_InteriorRingN \u00b6 Introduction: Returns the Nth interior linestring ring of the polygon geometry. Returns NULL if the geometry is not a polygon or the given N is out of range Format: ST_InteriorRingN(geom: geometry, n: Int) Since: v1.3.0 Example: SELECT ST_InteriorRingN ( ST_GeomFromText ( 'POLYGON((0 0, 0 5, 5 5, 5 0, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1), (1 3, 2 3, 2 4, 1 4, 1 3), (3 3, 4 3, 4 4, 3 4, 3 3))' ), 0 ) Output: LINEARRING (1 1, 2 1, 2 2, 1 2, 1 1) ST_IsClosed \u00b6 Introduction: RETURNS true if the LINESTRING start and end point are the same. Format: ST_IsClosed(geom: geometry) Since: v1.3.0 Example: SELECT ST_IsClosed ( ST_GeomFromText ( 'LINESTRING(0 0, 1 1, 1 0)' )) ST_IsEmpty \u00b6 Introduction: Test if a geometry is empty geometry Format: ST_IsEmpty (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_IsEmpty ( polygondf . countyshape ) FROM polygondf ST_IsRing \u00b6 Introduction: RETURN true if LINESTRING is ST_IsClosed and ST_IsSimple. Format: ST_IsRing(geom: geometry) Since: v1.3.0 Example: SELECT ST_IsRing ( ST_GeomFromText ( \"LINESTRING(0 0, 0 1, 1 1, 1 0, 0 0)\" )) Output: true ST_IsSimple \u00b6 Introduction: Test if geometry's only self-intersections are at boundary points. Format: ST_IsSimple (A:geometry) Since: v1.3.0 Example: SELECT ST_IsSimple ( polygondf . countyshape ) FROM polygondf ST_IsValid \u00b6 Introduction: Test if a geometry is well formed Format: ST_IsValid (A:geometry) Since: v1.3.0 Example: SELECT ST_IsValid ( polygondf . countyshape ) FROM polygondf ST_Length \u00b6 Introduction: Return the perimeter of A Format: ST_Length (A:geometry) Since: v1.3.0 Example: SELECT ST_Length ( polygondf . countyshape ) FROM polygondf ST_NPoints \u00b6 Introduction: Returns the number of points of the geometry Since: v1.3.0 Format: ST_NPoints (A:geometry) Example: SELECT ST_NPoints ( polygondf . countyshape ) FROM polygondf ST_NumGeometries \u00b6 Introduction: Returns the number of Geometries. If geometry is a GEOMETRYCOLLECTION (or MULTI*) return the number of geometries, for single geometries will return 1. Format: ST_NumGeometries (A:geometry) Since: v1.3.0 Example: SELECT ST_NumGeometries ( df . geometry ) FROM df ST_NumInteriorRings \u00b6 Introduction: Returns number of interior rings of polygon geometries. Format: ST_NumInteriorRings(geom: geometry) Since: v1.3.0 Example: SELECT ST_NumInteriorRings ( ST_GeomFromText ( 'POLYGON ((0 0, 0 5, 5 5, 5 0, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1))' )) Output: 1 ST_PointN \u00b6 Introduction: Return the Nth point in a single linestring or circular linestring in the geometry. Negative values are counted backwards from the end of the LineString, so that -1 is the last point. Returns NULL if there is no linestring in the geometry. Format: ST_PointN(A:geometry, B:integer) Since: v1.2.1 Examples: SELECT ST_PointN ( df . geometry , 2 ) FROM df Input: LINESTRING(0 0, 1 2, 2 4, 3 6), 2 Output: POINT (1 2) Input: LINESTRING(0 0, 1 2, 2 4, 3 6), -2 Output: POINT (2 4) Input: CIRCULARSTRING(1 1, 1 2, 2 4, 3 6, 1 2, 1 1), -1 Output: POINT (1 1) ST_PointOnSurface \u00b6 Introduction: Returns a POINT guaranteed to lie on the surface. Format: ST_PointOnSurface(A:geometry) Since: v1.2.1 Examples: SELECT ST_PointOnSurface ( df . geometry ) FROM df Input: POINT (0 5) Output: POINT (0 5) Input: LINESTRING(0 5, 0 10) Output: POINT (0 5) Input: POLYGON((0 0, 0 5, 5 5, 5 0, 0 0)) Output: POINT (2.5 2.5) Input: LINESTRING(0 5 1, 0 0 1, 0 10 2) Output: POINT Z(0 0 1) ST_Reverse \u00b6 Introduction: Return the geometry with vertex order reversed Format: ST_Reverse (A:geometry) Since: v1.2.1 Example: SELECT ST_Reverse ( df . geometry ) AS geom FROM df Input: POLYGON ((-0.5 -0.5, -0.5 0.5, 0.5 0.5, 0.5 -0.5, -0.5 -0.5)) Output: POLYGON ((-0.5 -0.5, 0.5 -0.5, 0.5 0.5, -0.5 0.5, -0.5 -0.5)) ST_SetSRID \u00b6 Introduction: Sets the spatial refence system identifier (SRID) of the geometry. Format: ST_SetSRID (A:geometry, srid: integer) Since: v1.3.0 Example: SELECT ST_SetSRID ( polygondf . countyshape , 3021 ) FROM polygondf ST_SRID \u00b6 Introduction: Return the spatial refence system identifier (SRID) of the geometry. Format: ST_SRID (A:geometry) Since: v1.3.0 Example: SELECT ST_SRID ( polygondf . countyshape ) FROM polygondf ST_Transform \u00b6 Introduction: Transform the Spatial Reference System / Coordinate Reference System of A, from SourceCRS to TargetCRS Note By default, this function uses lat/lon order. You can use ST_FlipCoordinates to swap X and Y. Note If ST_Transform throws an Exception called \"Bursa wolf parameters required\", you need to disable the error notification in ST_Transform. You can append a boolean value at the end. Format: ST_Transform (A:geometry, SourceCRS:string, TargetCRS:string ,[Optional] DisableError) Since: v1.2.0 Spark SQL example (simple): SELECT ST_Transform ( polygondf . countyshape , 'epsg:4326' , 'epsg:3857' ) FROM polygondf Spark SQL example (with optional parameters): SELECT ST_Transform ( polygondf . countyshape , 'epsg:4326' , 'epsg:3857' , false ) FROM polygondf Note The detailed EPSG information can be searched on EPSG.io . ST_X \u00b6 Introduction: Returns X Coordinate of given Point, null otherwise. Format: ST_X(pointA: Point) Since: v1.3.0 Example: SELECT ST_X ( ST_POINT ( 0 . 0 25 . 0 )) Output: 0.0 ST_XMax \u00b6 Introduction: Returns the maximum X coordinate of a geometry Format: ST_XMax (A:geometry) Since: v1.2.1 Example: SELECT ST_XMax ( df . geometry ) AS xmax FROM df Input: POLYGON ((-1 -11, 0 10, 1 11, 2 12, -1 -11)) Output: 2 ST_XMin \u00b6 Introduction: Returns the minimum X coordinate of a geometry Format: ST_XMin (A:geometry) Since: v1.2.1 Example: SELECT ST_XMin ( df . geometry ) AS xmin FROM df Input: POLYGON ((-1 -11, 0 10, 1 11, 2 12, -1 -11)) Output: -1 ST_Y \u00b6 Introduction: Returns Y Coordinate of given Point, null otherwise. Format: ST_Y(pointA: Point) Since: v1.3.0 Example: SELECT ST_Y ( ST_POINT ( 0 . 0 25 . 0 )) Output: 25.0 ST_YMax \u00b6 Introduction: Return the minimum Y coordinate of A Format: ST_YMax (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_YMax ( ST_GeomFromText ( 'POLYGON((0 0 1, 1 1 1, 1 2 1, 1 1 1, 0 0 1))' )) Output : 2 ST_YMin \u00b6 Introduction: Return the minimum Y coordinate of A Format: ST_Y_Min (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_YMin ( ST_GeomFromText ( 'POLYGON((0 0 1, 1 1 1, 1 2 1, 1 1 1, 0 0 1))' )) Output : 0 ST_Z \u00b6 Introduction: Returns Z Coordinate of given Point, null otherwise. Format: ST_Z(pointA: Point) Since: v1.3.0 Example: SELECT ST_Z ( ST_POINT ( 0 . 0 25 . 0 11 . 0 )) Output: 11.0","title":"Function"},{"location":"api/flink/Function/#st_3ddistance","text":"Introduction: Return the 3-dimensional minimum cartesian distance between A and B Format: ST_3DDistance (A:geometry, B:geometry) Since: v1.3.0 Example: SELECT ST_3DDistance ( polygondf . countyshape , polygondf . countyshape ) FROM polygondf","title":"ST_3DDistance"},{"location":"api/flink/Function/#st_area","text":"Introduction: Return the area of A Format: ST_Area (A:geometry) Since: v1.3.0 Example: SELECT ST_Area ( polygondf . countyshape ) FROM polygondf","title":"ST_Area"},{"location":"api/flink/Function/#st_asbinary","text":"Introduction: Return the Well-Known Binary representation of a geometry Format: ST_AsBinary (A:geometry) Since: v1.3.0 Example: SELECT ST_AsBinary ( polygondf . countyshape ) FROM polygondf","title":"ST_AsBinary"},{"location":"api/flink/Function/#st_asewkb","text":"Introduction: Return the Extended Well-Known Binary representation of a geometry. EWKB is an extended version of WKB which includes the SRID of the geometry. The format originated in PostGIS but is supported by many GIS tools. If the geometry is lacking SRID a WKB format is produced. Format: ST_AsEWKB (A:geometry) Since: v1.3.0 Example: SELECT ST_AsEWKB ( polygondf . countyshape ) FROM polygondf","title":"ST_AsEWKB"},{"location":"api/flink/Function/#st_asewkt","text":"Introduction: Return the Extended Well-Known Text representation of a geometry. EWKT is an extended version of WKT which includes the SRID of the geometry. The format originated in PostGIS but is supported by many GIS tools. If the geometry is lacking SRID a WKT format is produced. See ST_SetSRID Format: ST_AsEWKT (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_AsEWKT ( polygondf . countyshape ) FROM polygondf","title":"ST_AsEWKT"},{"location":"api/flink/Function/#st_asgeojson","text":"Introduction: Return the GeoJSON string representation of a geometry Format: ST_AsGeoJSON (A:geometry) Since: v1.3.0 Spark SQL example: SELECT ST_AsGeoJSON ( polygondf . countyshape ) FROM polygondf","title":"ST_AsGeoJSON"},{"location":"api/flink/Function/#st_asgml","text":"Introduction: Return the GML string representation of a geometry Format: ST_AsGML (A:geometry) Since: v1.3.0 Spark SQL example: SELECT ST_AsGML ( polygondf . countyshape ) FROM polygondf","title":"ST_AsGML"},{"location":"api/flink/Function/#st_askml","text":"Introduction: Return the KML string representation of a geometry Format: ST_AsKML (A:geometry) Since: v1.3.0 Spark SQL example: SELECT ST_AsKML ( polygondf . countyshape ) FROM polygondf","title":"ST_AsKML"},{"location":"api/flink/Function/#st_astext","text":"Introduction: Return the Well-Known Text string representation of a geometry Format: ST_AsText (A:geometry) Since: v1.3.0 Example: SELECT ST_AsText ( polygondf . countyshape ) FROM polygondf","title":"ST_AsText"},{"location":"api/flink/Function/#st_azimuth","text":"Introduction: Returns Azimuth for two given points in radians null otherwise. Format: ST_Azimuth(pointA: Point, pointB: Point) Since: v1.3.0 Example: SELECT ST_Azimuth ( ST_POINT ( 0 . 0 , 25 . 0 ), ST_POINT ( 0 . 0 , 0 . 0 )) Output: 3.141592653589793","title":"ST_Azimuth"},{"location":"api/flink/Function/#st_boundary","text":"Introduction: Returns the closure of the combinatorial boundary of this Geometry. Format: ST_Boundary(geom: geometry) Since: v1.3.0 Example: SELECT ST_Boundary ( ST_GeomFromText ( 'POLYGON ((1 1, 0 0, -1 1, 1 1))' )) Output: LINEARRING (1 1, 0 0, -1 1, 1 1)","title":"ST_Boundary"},{"location":"api/flink/Function/#st_buffer","text":"Introduction: Returns a geometry/geography that represents all points whose distance from this Geometry/geography is less than or equal to distance. Format: ST_Buffer (A:geometry, buffer: Double) Since: v1.2.0 Spark SQL example: SELECT ST_Buffer ( polygondf . countyshape , 1 ) FROM polygondf","title":"ST_Buffer"},{"location":"api/flink/Function/#st_buildarea","text":"Introduction: Returns the areal geometry formed by the constituent linework of the input geometry. Format: ST_BuildArea (A:geometry) Since: v1.2.1 Example: SELECT ST_BuildArea ( ST_Collect ( smallDf , bigDf )) AS geom FROM smallDf , bigDf Input: MULTILINESTRING((0 0, 10 0, 10 10, 0 10, 0 0),(10 10, 20 10, 20 20, 10 20, 10 10)) Output: MULTIPOLYGON(((0 0,0 10,10 10,10 0,0 0)),((10 10,10 20,20 20,20 10,10 10)))","title":"ST_BuildArea"},{"location":"api/flink/Function/#st_distance","text":"Introduction: Return the Euclidean distance between A and B Format: ST_Distance (A:geometry, B:geometry) Since: v1.2.0 Spark SQL example: SELECT ST_Distance ( polygondf . countyshape , polygondf . countyshape ) FROM polygondf","title":"ST_Distance"},{"location":"api/flink/Function/#st_envelope","text":"Introduction: Return the envelop boundary of A Format: ST_Envelope (A:geometry) Since: v1.3.0 Example: SELECT ST_Envelope ( polygondf . countyshape ) FROM polygondf","title":"ST_Envelope"},{"location":"api/flink/Function/#st_exteriorring","text":"Introduction: Returns a LINESTRING representing the exterior ring (shell) of a POLYGON. Returns NULL if the geometry is not a polygon. Format: ST_ExteriorRing(A:geometry) Since: v1.2.1 Examples: SELECT ST_ExteriorRing ( df . geometry ) FROM df Input: POLYGON ((0 0, 1 1, 2 1, 0 1, 1 -1, 0 0)) Output: LINESTRING (0 0, 1 1, 2 1, 0 1, 1 -1, 0 0)","title":"ST_ExteriorRing"},{"location":"api/flink/Function/#st_flipcoordinates","text":"Introduction: Returns a version of the given geometry with X and Y axis flipped. Format: ST_FlipCoordinates(A:geometry) Since: v1.2.0 Spark SQL example: SELECT ST_FlipCoordinates ( df . geometry ) FROM df Input: POINT (1 2) Output: POINT (2 1)","title":"ST_FlipCoordinates"},{"location":"api/flink/Function/#st_force_2d","text":"Introduction: Forces the geometries into a \"2-dimensional mode\" so that all output representations will only have the X and Y coordinates Format: ST_Force_2D (A:geometry) Since: v1.2.1 Example: SELECT ST_Force_2D ( df . geometry ) AS geom FROM df Input: POLYGON((0 0 2,0 5 2,5 0 2,0 0 2),(1 1 2,3 1 2,1 3 2,1 1 2)) Output: POLYGON((0 0,0 5,5 0,0 0),(1 1,3 1,1 3,1 1))","title":"ST_Force_2D"},{"location":"api/flink/Function/#st_geohash","text":"Introduction: Returns GeoHash of the geometry with given precision Format: ST_GeoHash(geom: geometry, precision: int) Since: v1.2.0 Example: Query: SELECT ST_GeoHash ( ST_GeomFromText ( 'POINT(21.427834 52.042576573)' ), 5 ) AS geohash Result: +-----------------------------+ |geohash | +-----------------------------+ |u3r0p | +-----------------------------+","title":"ST_GeoHash"},{"location":"api/flink/Function/#st_geometryn","text":"Introduction: Return the 0-based Nth geometry if the geometry is a GEOMETRYCOLLECTION, (MULTI)POINT, (MULTI)LINESTRING, MULTICURVE or (MULTI)POLYGON. Otherwise, return null Format: ST_GeometryN(geom: geometry, n: Int) Since: v1.3.0 Example: SELECT ST_GeometryN ( ST_GeomFromText ( 'MULTIPOINT((1 2), (3 4), (5 6), (8 9))' ), 1 ) Output: POINT (3 4)","title":"ST_GeometryN"},{"location":"api/flink/Function/#st_interiorringn","text":"Introduction: Returns the Nth interior linestring ring of the polygon geometry. Returns NULL if the geometry is not a polygon or the given N is out of range Format: ST_InteriorRingN(geom: geometry, n: Int) Since: v1.3.0 Example: SELECT ST_InteriorRingN ( ST_GeomFromText ( 'POLYGON((0 0, 0 5, 5 5, 5 0, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1), (1 3, 2 3, 2 4, 1 4, 1 3), (3 3, 4 3, 4 4, 3 4, 3 3))' ), 0 ) Output: LINEARRING (1 1, 2 1, 2 2, 1 2, 1 1)","title":"ST_InteriorRingN"},{"location":"api/flink/Function/#st_isclosed","text":"Introduction: RETURNS true if the LINESTRING start and end point are the same. Format: ST_IsClosed(geom: geometry) Since: v1.3.0 Example: SELECT ST_IsClosed ( ST_GeomFromText ( 'LINESTRING(0 0, 1 1, 1 0)' ))","title":"ST_IsClosed"},{"location":"api/flink/Function/#st_isempty","text":"Introduction: Test if a geometry is empty geometry Format: ST_IsEmpty (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_IsEmpty ( polygondf . countyshape ) FROM polygondf","title":"ST_IsEmpty"},{"location":"api/flink/Function/#st_isring","text":"Introduction: RETURN true if LINESTRING is ST_IsClosed and ST_IsSimple. Format: ST_IsRing(geom: geometry) Since: v1.3.0 Example: SELECT ST_IsRing ( ST_GeomFromText ( \"LINESTRING(0 0, 0 1, 1 1, 1 0, 0 0)\" )) Output: true","title":"ST_IsRing"},{"location":"api/flink/Function/#st_issimple","text":"Introduction: Test if geometry's only self-intersections are at boundary points. Format: ST_IsSimple (A:geometry) Since: v1.3.0 Example: SELECT ST_IsSimple ( polygondf . countyshape ) FROM polygondf","title":"ST_IsSimple"},{"location":"api/flink/Function/#st_isvalid","text":"Introduction: Test if a geometry is well formed Format: ST_IsValid (A:geometry) Since: v1.3.0 Example: SELECT ST_IsValid ( polygondf . countyshape ) FROM polygondf","title":"ST_IsValid"},{"location":"api/flink/Function/#st_length","text":"Introduction: Return the perimeter of A Format: ST_Length (A:geometry) Since: v1.3.0 Example: SELECT ST_Length ( polygondf . countyshape ) FROM polygondf","title":"ST_Length"},{"location":"api/flink/Function/#st_npoints","text":"Introduction: Returns the number of points of the geometry Since: v1.3.0 Format: ST_NPoints (A:geometry) Example: SELECT ST_NPoints ( polygondf . countyshape ) FROM polygondf","title":"ST_NPoints"},{"location":"api/flink/Function/#st_numgeometries","text":"Introduction: Returns the number of Geometries. If geometry is a GEOMETRYCOLLECTION (or MULTI*) return the number of geometries, for single geometries will return 1. Format: ST_NumGeometries (A:geometry) Since: v1.3.0 Example: SELECT ST_NumGeometries ( df . geometry ) FROM df","title":"ST_NumGeometries"},{"location":"api/flink/Function/#st_numinteriorrings","text":"Introduction: Returns number of interior rings of polygon geometries. Format: ST_NumInteriorRings(geom: geometry) Since: v1.3.0 Example: SELECT ST_NumInteriorRings ( ST_GeomFromText ( 'POLYGON ((0 0, 0 5, 5 5, 5 0, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1))' )) Output: 1","title":"ST_NumInteriorRings"},{"location":"api/flink/Function/#st_pointn","text":"Introduction: Return the Nth point in a single linestring or circular linestring in the geometry. Negative values are counted backwards from the end of the LineString, so that -1 is the last point. Returns NULL if there is no linestring in the geometry. Format: ST_PointN(A:geometry, B:integer) Since: v1.2.1 Examples: SELECT ST_PointN ( df . geometry , 2 ) FROM df Input: LINESTRING(0 0, 1 2, 2 4, 3 6), 2 Output: POINT (1 2) Input: LINESTRING(0 0, 1 2, 2 4, 3 6), -2 Output: POINT (2 4) Input: CIRCULARSTRING(1 1, 1 2, 2 4, 3 6, 1 2, 1 1), -1 Output: POINT (1 1)","title":"ST_PointN"},{"location":"api/flink/Function/#st_pointonsurface","text":"Introduction: Returns a POINT guaranteed to lie on the surface. Format: ST_PointOnSurface(A:geometry) Since: v1.2.1 Examples: SELECT ST_PointOnSurface ( df . geometry ) FROM df Input: POINT (0 5) Output: POINT (0 5) Input: LINESTRING(0 5, 0 10) Output: POINT (0 5) Input: POLYGON((0 0, 0 5, 5 5, 5 0, 0 0)) Output: POINT (2.5 2.5) Input: LINESTRING(0 5 1, 0 0 1, 0 10 2) Output: POINT Z(0 0 1)","title":"ST_PointOnSurface"},{"location":"api/flink/Function/#st_reverse","text":"Introduction: Return the geometry with vertex order reversed Format: ST_Reverse (A:geometry) Since: v1.2.1 Example: SELECT ST_Reverse ( df . geometry ) AS geom FROM df Input: POLYGON ((-0.5 -0.5, -0.5 0.5, 0.5 0.5, 0.5 -0.5, -0.5 -0.5)) Output: POLYGON ((-0.5 -0.5, 0.5 -0.5, 0.5 0.5, -0.5 0.5, -0.5 -0.5))","title":"ST_Reverse"},{"location":"api/flink/Function/#st_setsrid","text":"Introduction: Sets the spatial refence system identifier (SRID) of the geometry. Format: ST_SetSRID (A:geometry, srid: integer) Since: v1.3.0 Example: SELECT ST_SetSRID ( polygondf . countyshape , 3021 ) FROM polygondf","title":"ST_SetSRID"},{"location":"api/flink/Function/#st_srid","text":"Introduction: Return the spatial refence system identifier (SRID) of the geometry. Format: ST_SRID (A:geometry) Since: v1.3.0 Example: SELECT ST_SRID ( polygondf . countyshape ) FROM polygondf","title":"ST_SRID"},{"location":"api/flink/Function/#st_transform","text":"Introduction: Transform the Spatial Reference System / Coordinate Reference System of A, from SourceCRS to TargetCRS Note By default, this function uses lat/lon order. You can use ST_FlipCoordinates to swap X and Y. Note If ST_Transform throws an Exception called \"Bursa wolf parameters required\", you need to disable the error notification in ST_Transform. You can append a boolean value at the end. Format: ST_Transform (A:geometry, SourceCRS:string, TargetCRS:string ,[Optional] DisableError) Since: v1.2.0 Spark SQL example (simple): SELECT ST_Transform ( polygondf . countyshape , 'epsg:4326' , 'epsg:3857' ) FROM polygondf Spark SQL example (with optional parameters): SELECT ST_Transform ( polygondf . countyshape , 'epsg:4326' , 'epsg:3857' , false ) FROM polygondf Note The detailed EPSG information can be searched on EPSG.io .","title":"ST_Transform"},{"location":"api/flink/Function/#st_x","text":"Introduction: Returns X Coordinate of given Point, null otherwise. Format: ST_X(pointA: Point) Since: v1.3.0 Example: SELECT ST_X ( ST_POINT ( 0 . 0 25 . 0 )) Output: 0.0","title":"ST_X"},{"location":"api/flink/Function/#st_xmax","text":"Introduction: Returns the maximum X coordinate of a geometry Format: ST_XMax (A:geometry) Since: v1.2.1 Example: SELECT ST_XMax ( df . geometry ) AS xmax FROM df Input: POLYGON ((-1 -11, 0 10, 1 11, 2 12, -1 -11)) Output: 2","title":"ST_XMax"},{"location":"api/flink/Function/#st_xmin","text":"Introduction: Returns the minimum X coordinate of a geometry Format: ST_XMin (A:geometry) Since: v1.2.1 Example: SELECT ST_XMin ( df . geometry ) AS xmin FROM df Input: POLYGON ((-1 -11, 0 10, 1 11, 2 12, -1 -11)) Output: -1","title":"ST_XMin"},{"location":"api/flink/Function/#st_y","text":"Introduction: Returns Y Coordinate of given Point, null otherwise. Format: ST_Y(pointA: Point) Since: v1.3.0 Example: SELECT ST_Y ( ST_POINT ( 0 . 0 25 . 0 )) Output: 25.0","title":"ST_Y"},{"location":"api/flink/Function/#st_ymax","text":"Introduction: Return the minimum Y coordinate of A Format: ST_YMax (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_YMax ( ST_GeomFromText ( 'POLYGON((0 0 1, 1 1 1, 1 2 1, 1 1 1, 0 0 1))' )) Output : 2","title":"ST_YMax"},{"location":"api/flink/Function/#st_ymin","text":"Introduction: Return the minimum Y coordinate of A Format: ST_Y_Min (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_YMin ( ST_GeomFromText ( 'POLYGON((0 0 1, 1 1 1, 1 2 1, 1 1 1, 0 0 1))' )) Output : 0","title":"ST_YMin"},{"location":"api/flink/Function/#st_z","text":"Introduction: Returns Z Coordinate of given Point, null otherwise. Format: ST_Z(pointA: Point) Since: v1.3.0 Example: SELECT ST_Z ( ST_POINT ( 0 . 0 25 . 0 11 . 0 )) Output: 11.0","title":"ST_Z"},{"location":"api/flink/Overview/","text":"Introduction \u00b6 SedonaSQL supports SQL/MM Part3 Spatial SQL Standard. Please read the programming guide: Sedona with Flink SQL app . Sedona includes SQL operators as follows. Constructor: Construct a Geometry given an input string or coordinates Example: ST_GeomFromWKT (string). Create a Geometry from a WKT String. Function: Execute a function on the given column or columns Example: ST_Distance (A, B). Given two Geometry A and B, return the Euclidean distance of A and B. Aggregator: Return a single aggregated value on the given column Example: ST_Envelope_Aggr (Geometry column). Given a Geometry column, calculate the entire envelope boundary of this column. Predicate: Execute a logic judgement on the given columns and return true or false Example: ST_Contains (A, B). Check if A fully contains B. Return \"True\" if yes, else return \"False\".","title":"Overview"},{"location":"api/flink/Overview/#introduction","text":"SedonaSQL supports SQL/MM Part3 Spatial SQL Standard. Please read the programming guide: Sedona with Flink SQL app . Sedona includes SQL operators as follows. Constructor: Construct a Geometry given an input string or coordinates Example: ST_GeomFromWKT (string). Create a Geometry from a WKT String. Function: Execute a function on the given column or columns Example: ST_Distance (A, B). Given two Geometry A and B, return the Euclidean distance of A and B. Aggregator: Return a single aggregated value on the given column Example: ST_Envelope_Aggr (Geometry column). Given a Geometry column, calculate the entire envelope boundary of this column. Predicate: Execute a logic judgement on the given columns and return true or false Example: ST_Contains (A, B). Check if A fully contains B. Return \"True\" if yes, else return \"False\".","title":"Introduction"},{"location":"api/flink/Predicate/","text":"ST_Contains \u00b6 Introduction: Return true if A fully contains B Format: ST_Contains (A:geometry, B:geometry) Since: v1.2.0 SQL example: SELECT * FROM pointdf WHERE ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . arealandmark ) ST_Disjoint \u00b6 Introduction: Return true if A and B are disjoint Format: ST_Disjoint (A:geometry, B:geometry) Since: v1.2.1 Spark SQL example: SELECT * FROM pointdf WHERE ST_Disjoinnt ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . arealandmark ) ST_Intersects \u00b6 Introduction: Return true if A intersects B Format: ST_Intersects (A:geometry, B:geometry) Since: v1.2.0 SQL example: SELECT * FROM pointdf WHERE ST_Intersects ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . arealandmark ) ST_OrderingEquals \u00b6 Introduction: Returns true if the geometries are equal and the coordinates are in the same order Format: ST_OrderingEquals(A: geometry, B: geometry) Since: v1.2.1 SQL example 1: SELECT ST_OrderingEquals ( ST_GeomFromWKT ( 'POLYGON((2 0, 0 2, -2 0, 2 0))' ), ST_GeomFromWKT ( 'POLYGON((2 0, 0 2, -2 0, 2 0))' )) Output: true SQL example 2: SELECT ST_OrderingEquals ( ST_GeomFromWKT ( 'POLYGON((2 0, 0 2, -2 0, 2 0))' ), ST_GeomFromWKT ( 'POLYGON((0 2, -2 0, 2 0, 0 2))' )) Output: false","title":"Predicate"},{"location":"api/flink/Predicate/#st_contains","text":"Introduction: Return true if A fully contains B Format: ST_Contains (A:geometry, B:geometry) Since: v1.2.0 SQL example: SELECT * FROM pointdf WHERE ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . arealandmark )","title":"ST_Contains"},{"location":"api/flink/Predicate/#st_disjoint","text":"Introduction: Return true if A and B are disjoint Format: ST_Disjoint (A:geometry, B:geometry) Since: v1.2.1 Spark SQL example: SELECT * FROM pointdf WHERE ST_Disjoinnt ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . arealandmark )","title":"ST_Disjoint"},{"location":"api/flink/Predicate/#st_intersects","text":"Introduction: Return true if A intersects B Format: ST_Intersects (A:geometry, B:geometry) Since: v1.2.0 SQL example: SELECT * FROM pointdf WHERE ST_Intersects ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . arealandmark )","title":"ST_Intersects"},{"location":"api/flink/Predicate/#st_orderingequals","text":"Introduction: Returns true if the geometries are equal and the coordinates are in the same order Format: ST_OrderingEquals(A: geometry, B: geometry) Since: v1.2.1 SQL example 1: SELECT ST_OrderingEquals ( ST_GeomFromWKT ( 'POLYGON((2 0, 0 2, -2 0, 2 0))' ), ST_GeomFromWKT ( 'POLYGON((2 0, 0 2, -2 0, 2 0))' )) Output: true SQL example 2: SELECT ST_OrderingEquals ( ST_GeomFromWKT ( 'POLYGON((2 0, 0 2, -2 0, 2 0))' ), ST_GeomFromWKT ( 'POLYGON((0 2, -2 0, 2 0, 0 2))' )) Output: false","title":"ST_OrderingEquals"},{"location":"api/sql/AggregateFunction/","text":"ST_Envelope_Aggr \u00b6 Introduction: Return the entire envelope boundary of all geometries in A Format: ST_Envelope_Aggr (A:geometryColumn) Since: v1.0.0 Spark SQL example: SELECT ST_Envelope_Aggr ( pointdf . arealandmark ) FROM pointdf ST_Intersection_Aggr \u00b6 Introduction: Return the polygon intersection of all polygons in A Format: ST_Intersection_Aggr (A:geometryColumn) Since: v1.0.0 Spark SQL example: SELECT ST_Intersection_Aggr ( polygondf . polygonshape ) FROM polygondf ST_Union_Aggr \u00b6 Introduction: Return the polygon union of all polygons in A Format: ST_Union_Aggr (A:geometryColumn) Since: v1.0.0 Spark SQL example: SELECT ST_Union_Aggr ( polygondf . polygonshape ) FROM polygondf","title":"Aggregate function"},{"location":"api/sql/AggregateFunction/#st_envelope_aggr","text":"Introduction: Return the entire envelope boundary of all geometries in A Format: ST_Envelope_Aggr (A:geometryColumn) Since: v1.0.0 Spark SQL example: SELECT ST_Envelope_Aggr ( pointdf . arealandmark ) FROM pointdf","title":"ST_Envelope_Aggr"},{"location":"api/sql/AggregateFunction/#st_intersection_aggr","text":"Introduction: Return the polygon intersection of all polygons in A Format: ST_Intersection_Aggr (A:geometryColumn) Since: v1.0.0 Spark SQL example: SELECT ST_Intersection_Aggr ( polygondf . polygonshape ) FROM polygondf","title":"ST_Intersection_Aggr"},{"location":"api/sql/AggregateFunction/#st_union_aggr","text":"Introduction: Return the polygon union of all polygons in A Format: ST_Union_Aggr (A:geometryColumn) Since: v1.0.0 Spark SQL example: SELECT ST_Union_Aggr ( polygondf . polygonshape ) FROM polygondf","title":"ST_Union_Aggr"},{"location":"api/sql/Constructor/","text":"Read ESRI Shapefile \u00b6 Introduction: Construct a DataFrame from a Shapefile Since: v1.0.0 SparkSQL example: var spatialRDD = new SpatialRDD [ Geometry ] spatialRDD . rawSpatialRDD = ShapefileReader . readToGeometryRDD ( sparkSession . sparkContext , shapefileInputLocation ) var rawSpatialDf = Adapter . toDf ( spatialRDD , sparkSession ) rawSpatialDf . createOrReplaceTempView ( \"rawSpatialDf\" ) var spatialDf = sparkSession . sql ( \"\"\" | ST_GeomFromWKT(rddshape), _c1, _c2 | FROM rawSpatialDf \"\"\" . stripMargin ) spatialDf . show () spatialDf . printSchema () Note The file extensions of .shp, .shx, .dbf must be in lowercase. Assume you have a shape file called myShapefile , the file structure should be like this: - shapefile1 - shapefile2 - myshapefile - myshapefile.shp - myshapefile.shx - myshapefile.dbf - myshapefile... - ... Warning Please make sure you use ST_GeomFromWKT to create Geometry type column otherwise that column cannot be used in SedonaSQL. If the file you are reading contains non-ASCII characters you'll need to explicitly set the encoding via sedona.global.charset system property before the call to ShapefileReader.readToGeometryRDD . Example: System . setProperty ( \"sedona.global.charset\" , \"utf8\" ) ST_GeomFromGeoHash \u00b6 Introduction: Create Geometry from geohash string and optional precision Format: ST_GeomFromGeoHash(geohash: string, precision: int) Since: v1.1.1 Spark SQL example: SELECT ST_GeomFromGeoHash ( 's00twy01mt' , 4 ) AS geom result: +--------------------------------------------------------------------------------------------------------------------+ |geom | +--------------------------------------------------------------------------------------------------------------------+ |POLYGON ((0.703125 0.87890625, 0.703125 1.0546875, 1.0546875 1.0546875, 1.0546875 0.87890625, 0.703125 0.87890625)) | +--------------------------------------------------------------------------------------------------------------------+ ST_GeomFromGeoJSON \u00b6 Introduction: Construct a Geometry from GeoJson Format: ST_GeomFromGeoJSON (GeoJson:string) Since: v1.0.0 Spark SQL example: var polygonJsonDf = sparkSession . read . format ( \"csv\" ). option ( \"delimiter\" , \"\\t\" ). option ( \"header\" , \"false\" ). load ( geoJsonGeomInputLocation ) polygonJsonDf . createOrReplaceTempView ( \"polygontable\" ) polygonJsonDf . show () var polygonDf = sparkSession . sql ( \"\"\" | SELECT ST_GeomFromGeoJSON(polygontable._c0) AS countyshape | FROM polygontable \"\"\" . stripMargin ) polygonDf . show () Warning The way that SedonaSQL reads GeoJSON is different from that in SparkSQL ST_GeomFromGML \u00b6 Introduction: Construct a Geometry from GML. Format: ST_GeomFromGML (gml:string) Since: v1.3.0 SQL example: SELECT ST_GeomFromGML ( '<gml:LineString srsName=\"EPSG:4269\"><gml:coordinates>-71.16028,42.258729 -71.160837,42.259112 -71.161143,42.25932</gml:coordinates></gml:LineString>' ) AS geometry ST_GeomFromKML \u00b6 Introduction: Construct a Geometry from KML. Format: ST_GeomFromKML (kml:string) Since: v1.3.0 SQL example: SELECT ST_GeomFromKML ( '<LineString><coordinates>-71.1663,42.2614 -71.1667,42.2616</coordinates></LineString>' ) AS geometry ST_GeomFromText \u00b6 Introduction: Construct a Geometry from Wkt. Alias of ST_GeomFromWKT Format: ST_GeomFromText (Wkt:string) Since: v1.0.0 Spark SQL example: SELECT ST_GeomFromText ( 'POINT(40.7128 -74.0060)' ) AS geometry ST_GeomFromWKB \u00b6 Introduction: Construct a Geometry from WKB string or Binary Format: ST_GeomFromWKB (Wkb:string) ST_GeomFromWKB (Wkb:binary) Since: v1.0.0 Spark SQL example: SELECT ST_GeomFromWKB ( polygontable . _c0 ) AS polygonshape FROM polygontable ST_GeomFromWKT \u00b6 Introduction: Construct a Geometry from Wkt Format: ST_GeomFromWKT (Wkt:string) Since: v1.0.0 Spark SQL example: SELECT ST_GeomFromWKT ( polygontable . _c0 ) AS polygonshape FROM polygontable SELECT ST_GeomFromWKT ( 'POINT(40.7128 -74.0060)' ) AS geometry ST_LineFromText \u00b6 Introduction: Construct a Line from Wkt text Format: ST_LineFromText (Wkt:string) Since: v1.2.1 Spark SQL example: SELECT ST_LineFromText ( linetable . _c0 ) AS lineshape FROM linetable SELECT ST_LineFromText ( 'Linestring(1 2, 3 4)' ) AS line ST_LineStringFromText \u00b6 Introduction: Construct a LineString from Text, delimited by Delimiter Format: ST_LineStringFromText (Text:string, Delimiter:char) Since: v1.0.0 Spark SQL example: SELECT ST_LineStringFromText ( linestringtable . _c0 , ',' ) AS linestringshape FROM linestringtable SELECT ST_LineStringFromText ( '-74.0428197,40.6867969,-74.0421975,40.6921336,-74.0508020,40.6912794' , ',' ) AS linestringshape ST_Point \u00b6 Introduction: Construct a Point from X and Y Format: ST_Point (X:decimal, Y:decimal) Format: ST_Point (X:decimal, Y:decimal, Z:decimal) Since: v1.0.0 Spark SQL example: SELECT ST_Point ( CAST ( pointtable . _c0 AS Decimal ( 24 , 20 )), CAST ( pointtable . _c1 AS Decimal ( 24 , 20 ))) AS pointshape FROM pointtable ST_PointFromText \u00b6 Introduction: Construct a Point from Text, delimited by Delimiter Format: ST_PointFromText (Text:string, Delimiter:char) Since: v1.0.0 Spark SQL example: SELECT ST_PointFromText ( pointtable . _c0 , ',' ) AS pointshape FROM pointtable SELECT ST_PointFromText ( '40.7128,-74.0060' , ',' ) AS pointshape ST_PolygonFromEnvelope \u00b6 Introduction: Construct a Polygon from MinX, MinY, MaxX, MaxY. Format: ST_PolygonFromEnvelope (MinX:decimal, MinY:decimal, MaxX:decimal, MaxY:decimal) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . pointshape ) ST_PolygonFromText \u00b6 Introduction: Construct a Polygon from Text, delimited by Delimiter. Path must be closed Format: ST_PolygonFromText (Text:string, Delimiter:char) Since: v1.0.0 Spark SQL example: SELECT ST_PolygonFromText ( polygontable . _c0 , ',' ) AS polygonshape FROM polygontable SELECT ST_PolygonFromText ( '-74.0428197,40.6867969,-74.0421975,40.6921336,-74.0508020,40.6912794,-74.0428197,40.6867969' , ',' ) AS polygonshape","title":"Constructor"},{"location":"api/sql/Constructor/#read-esri-shapefile","text":"Introduction: Construct a DataFrame from a Shapefile Since: v1.0.0 SparkSQL example: var spatialRDD = new SpatialRDD [ Geometry ] spatialRDD . rawSpatialRDD = ShapefileReader . readToGeometryRDD ( sparkSession . sparkContext , shapefileInputLocation ) var rawSpatialDf = Adapter . toDf ( spatialRDD , sparkSession ) rawSpatialDf . createOrReplaceTempView ( \"rawSpatialDf\" ) var spatialDf = sparkSession . sql ( \"\"\" | ST_GeomFromWKT(rddshape), _c1, _c2 | FROM rawSpatialDf \"\"\" . stripMargin ) spatialDf . show () spatialDf . printSchema () Note The file extensions of .shp, .shx, .dbf must be in lowercase. Assume you have a shape file called myShapefile , the file structure should be like this: - shapefile1 - shapefile2 - myshapefile - myshapefile.shp - myshapefile.shx - myshapefile.dbf - myshapefile... - ... Warning Please make sure you use ST_GeomFromWKT to create Geometry type column otherwise that column cannot be used in SedonaSQL. If the file you are reading contains non-ASCII characters you'll need to explicitly set the encoding via sedona.global.charset system property before the call to ShapefileReader.readToGeometryRDD . Example: System . setProperty ( \"sedona.global.charset\" , \"utf8\" )","title":"Read ESRI Shapefile"},{"location":"api/sql/Constructor/#st_geomfromgeohash","text":"Introduction: Create Geometry from geohash string and optional precision Format: ST_GeomFromGeoHash(geohash: string, precision: int) Since: v1.1.1 Spark SQL example: SELECT ST_GeomFromGeoHash ( 's00twy01mt' , 4 ) AS geom result: +--------------------------------------------------------------------------------------------------------------------+ |geom | +--------------------------------------------------------------------------------------------------------------------+ |POLYGON ((0.703125 0.87890625, 0.703125 1.0546875, 1.0546875 1.0546875, 1.0546875 0.87890625, 0.703125 0.87890625)) | +--------------------------------------------------------------------------------------------------------------------+","title":"ST_GeomFromGeoHash"},{"location":"api/sql/Constructor/#st_geomfromgeojson","text":"Introduction: Construct a Geometry from GeoJson Format: ST_GeomFromGeoJSON (GeoJson:string) Since: v1.0.0 Spark SQL example: var polygonJsonDf = sparkSession . read . format ( \"csv\" ). option ( \"delimiter\" , \"\\t\" ). option ( \"header\" , \"false\" ). load ( geoJsonGeomInputLocation ) polygonJsonDf . createOrReplaceTempView ( \"polygontable\" ) polygonJsonDf . show () var polygonDf = sparkSession . sql ( \"\"\" | SELECT ST_GeomFromGeoJSON(polygontable._c0) AS countyshape | FROM polygontable \"\"\" . stripMargin ) polygonDf . show () Warning The way that SedonaSQL reads GeoJSON is different from that in SparkSQL","title":"ST_GeomFromGeoJSON"},{"location":"api/sql/Constructor/#st_geomfromgml","text":"Introduction: Construct a Geometry from GML. Format: ST_GeomFromGML (gml:string) Since: v1.3.0 SQL example: SELECT ST_GeomFromGML ( '<gml:LineString srsName=\"EPSG:4269\"><gml:coordinates>-71.16028,42.258729 -71.160837,42.259112 -71.161143,42.25932</gml:coordinates></gml:LineString>' ) AS geometry","title":"ST_GeomFromGML"},{"location":"api/sql/Constructor/#st_geomfromkml","text":"Introduction: Construct a Geometry from KML. Format: ST_GeomFromKML (kml:string) Since: v1.3.0 SQL example: SELECT ST_GeomFromKML ( '<LineString><coordinates>-71.1663,42.2614 -71.1667,42.2616</coordinates></LineString>' ) AS geometry","title":"ST_GeomFromKML"},{"location":"api/sql/Constructor/#st_geomfromtext","text":"Introduction: Construct a Geometry from Wkt. Alias of ST_GeomFromWKT Format: ST_GeomFromText (Wkt:string) Since: v1.0.0 Spark SQL example: SELECT ST_GeomFromText ( 'POINT(40.7128 -74.0060)' ) AS geometry","title":"ST_GeomFromText"},{"location":"api/sql/Constructor/#st_geomfromwkb","text":"Introduction: Construct a Geometry from WKB string or Binary Format: ST_GeomFromWKB (Wkb:string) ST_GeomFromWKB (Wkb:binary) Since: v1.0.0 Spark SQL example: SELECT ST_GeomFromWKB ( polygontable . _c0 ) AS polygonshape FROM polygontable","title":"ST_GeomFromWKB"},{"location":"api/sql/Constructor/#st_geomfromwkt","text":"Introduction: Construct a Geometry from Wkt Format: ST_GeomFromWKT (Wkt:string) Since: v1.0.0 Spark SQL example: SELECT ST_GeomFromWKT ( polygontable . _c0 ) AS polygonshape FROM polygontable SELECT ST_GeomFromWKT ( 'POINT(40.7128 -74.0060)' ) AS geometry","title":"ST_GeomFromWKT"},{"location":"api/sql/Constructor/#st_linefromtext","text":"Introduction: Construct a Line from Wkt text Format: ST_LineFromText (Wkt:string) Since: v1.2.1 Spark SQL example: SELECT ST_LineFromText ( linetable . _c0 ) AS lineshape FROM linetable SELECT ST_LineFromText ( 'Linestring(1 2, 3 4)' ) AS line","title":"ST_LineFromText"},{"location":"api/sql/Constructor/#st_linestringfromtext","text":"Introduction: Construct a LineString from Text, delimited by Delimiter Format: ST_LineStringFromText (Text:string, Delimiter:char) Since: v1.0.0 Spark SQL example: SELECT ST_LineStringFromText ( linestringtable . _c0 , ',' ) AS linestringshape FROM linestringtable SELECT ST_LineStringFromText ( '-74.0428197,40.6867969,-74.0421975,40.6921336,-74.0508020,40.6912794' , ',' ) AS linestringshape","title":"ST_LineStringFromText"},{"location":"api/sql/Constructor/#st_point","text":"Introduction: Construct a Point from X and Y Format: ST_Point (X:decimal, Y:decimal) Format: ST_Point (X:decimal, Y:decimal, Z:decimal) Since: v1.0.0 Spark SQL example: SELECT ST_Point ( CAST ( pointtable . _c0 AS Decimal ( 24 , 20 )), CAST ( pointtable . _c1 AS Decimal ( 24 , 20 ))) AS pointshape FROM pointtable","title":"ST_Point"},{"location":"api/sql/Constructor/#st_pointfromtext","text":"Introduction: Construct a Point from Text, delimited by Delimiter Format: ST_PointFromText (Text:string, Delimiter:char) Since: v1.0.0 Spark SQL example: SELECT ST_PointFromText ( pointtable . _c0 , ',' ) AS pointshape FROM pointtable SELECT ST_PointFromText ( '40.7128,-74.0060' , ',' ) AS pointshape","title":"ST_PointFromText"},{"location":"api/sql/Constructor/#st_polygonfromenvelope","text":"Introduction: Construct a Polygon from MinX, MinY, MaxX, MaxY. Format: ST_PolygonFromEnvelope (MinX:decimal, MinY:decimal, MaxX:decimal, MaxY:decimal) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . pointshape )","title":"ST_PolygonFromEnvelope"},{"location":"api/sql/Constructor/#st_polygonfromtext","text":"Introduction: Construct a Polygon from Text, delimited by Delimiter. Path must be closed Format: ST_PolygonFromText (Text:string, Delimiter:char) Since: v1.0.0 Spark SQL example: SELECT ST_PolygonFromText ( polygontable . _c0 , ',' ) AS polygonshape FROM polygontable SELECT ST_PolygonFromText ( '-74.0428197,40.6867969,-74.0421975,40.6921336,-74.0508020,40.6912794,-74.0428197,40.6867969' , ',' ) AS polygonshape","title":"ST_PolygonFromText"},{"location":"api/sql/Function/","text":"ST_3DDistance \u00b6 Introduction: Return the 3-dimensional minimum cartesian distance between A and B Format: ST_3DDistance (A:geometry, B:geometry) Since: v1.2.0 Spark SQL example: SELECT ST_3DDistance ( polygondf . countyshape , polygondf . countyshape ) FROM polygondf ST_AddPoint \u00b6 Introduction: RETURN Linestring with additional point at the given index, if position is not available the point will be added at the end of line. Format: ST_AddPoint(geom: geometry, point: geometry, position: integer) Format: ST_AddPoint(geom: geometry, point: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_AddPoint ( ST_GeomFromText ( \"LINESTRING(0 0, 1 1, 1 0)\" ), ST_GeomFromText ( \"Point(21 52)\" ), 1 ) SELECT ST_AddPoint ( ST_GeomFromText ( \"Linestring(0 0, 1 1, 1 0)\" ), ST_GeomFromText ( \"Point(21 52)\" )) Output: LINESTRING(0 0, 21 52, 1 1, 1 0) LINESTRING(0 0, 1 1, 1 0, 21 52) ST_Area \u00b6 Introduction: Return the area of A Format: ST_Area (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Area ( polygondf . countyshape ) FROM polygondf ST_AsBinary \u00b6 Introduction: Return the Well-Known Binary representation of a geometry Format: ST_AsBinary (A:geometry) Since: v1.1.1 Spark SQL example: SELECT ST_AsBinary ( polygondf . countyshape ) FROM polygondf ST_AsEWKB \u00b6 Introduction: Return the Extended Well-Known Binary representation of a geometry. EWKB is an extended version of WKB which includes the SRID of the geometry. The format originated in PostGIS but is supported by many GIS tools. If the geometry is lacking SRID a WKB format is produced. Se ST_SetSRID Format: ST_AsEWKB (A:geometry) Since: v1.1.1 Spark SQL example: SELECT ST_AsEWKB ( polygondf . countyshape ) FROM polygondf ST_AsEWKT \u00b6 Introduction: Return the Extended Well-Known Text representation of a geometry. EWKT is an extended version of WKT which includes the SRID of the geometry. The format originated in PostGIS but is supported by many GIS tools. If the geometry is lacking SRID a WKT format is produced. See ST_SetSRID Format: ST_AsEWKT (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_AsEWKT ( polygondf . countyshape ) FROM polygondf ST_AsGeoJSON \u00b6 Introduction: Return the GeoJSON string representation of a geometry Format: ST_AsGeoJSON (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_AsGeoJSON ( polygondf . countyshape ) FROM polygondf ST_AsGML \u00b6 Introduction: Return the GML string representation of a geometry Format: ST_AsGML (A:geometry) Since: v1.3.0 Spark SQL example: SELECT ST_AsGML ( polygondf . countyshape ) FROM polygondf ST_AsKML \u00b6 Introduction: Return the KML string representation of a geometry Format: ST_AsKML (A:geometry) Since: v1.3.0 Spark SQL example: SELECT ST_AsKML ( polygondf . countyshape ) FROM polygondf ST_AsText \u00b6 Introduction: Return the Well-Known Text string representation of a geometry Format: ST_AsText (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_AsText ( polygondf . countyshape ) FROM polygondf ST_Azimuth \u00b6 Introduction: Returns Azimuth for two given points in radians null otherwise. Format: ST_Azimuth(pointA: Point, pointB: Point) Since: v1.0.0 Spark SQL example: SELECT ST_Azimuth ( ST_POINT ( 0 . 0 , 25 . 0 ), ST_POINT ( 0 . 0 , 0 . 0 )) Output: 3.141592653589793 ST_Boundary \u00b6 Introduction: Returns the closure of the combinatorial boundary of this Geometry. Format: ST_Boundary(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Boundary ( ST_GeomFromText ( 'POLYGON((1 1,0 0, -1 1, 1 1))' )) Output: LINESTRING (1 1, 0 0, -1 1, 1 1) ST_Buffer \u00b6 Introduction: Returns a geometry/geography that represents all points whose distance from this Geometry/geography is less than or equal to distance. Format: ST_Buffer (A:geometry, buffer: Double) Since: v1.0.0 Spark SQL example: SELECT ST_Buffer ( polygondf . countyshape , 1 ) FROM polygondf ST_BuildArea \u00b6 Introduction: Returns the areal geometry formed by the constituent linework of the input geometry. Format: ST_BuildArea (A:geometry) Since: v1.2.1 Example: SELECT ST_BuildArea ( ST_GeomFromText ( 'MULTILINESTRING((0 0, 20 0, 20 20, 0 20, 0 0),(2 2, 18 2, 18 18, 2 18, 2 2))' ) ) AS geom Result: +----------------------------------------------------------------------------+ |geom | +----------------------------------------------------------------------------+ |POLYGON((0 0,0 20,20 20,20 0,0 0),(2 2,18 2,18 18,2 18,2 2)) | +----------------------------------------------------------------------------+ ST_Centroid \u00b6 Introduction: Return the centroid point of A Format: ST_Centroid (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Centroid ( polygondf . countyshape ) FROM polygondf ST_Collect \u00b6 Introduction: Returns MultiGeometry object based on geometry column/s or array with geometries Format ST_Collect(*geom: geometry) ST_Collect(geom: array<geometry>) Since: v1.2.0 Example: SELECT ST_Collect ( ST_GeomFromText ( 'POINT(21.427834 52.042576573)' ), ST_GeomFromText ( 'POINT(45.342524 56.342354355)' ) ) AS geom Result: +---------------------------------------------------------------+ |geom | +---------------------------------------------------------------+ |MULTIPOINT ((21.427834 52.042576573), (45.342524 56.342354355))| +---------------------------------------------------------------+ Example: SELECT ST_Collect ( Array ( ST_GeomFromText ( 'POINT(21.427834 52.042576573)' ), ST_GeomFromText ( 'POINT(45.342524 56.342354355)' ) ) ) AS geom Result: +---------------------------------------------------------------+ |geom | +---------------------------------------------------------------+ |MULTIPOINT ((21.427834 52.042576573), (45.342524 56.342354355))| +---------------------------------------------------------------+ ST_CollectionExtract \u00b6 Introduction: Returns a homogeneous multi-geometry from a given geometry collection. The type numbers are: 1. POINT 2. LINESTRING 3. POLYGON If the type parameter is omitted a multi-geometry of the highest dimension is returned. Format: ST_CollectionExtract (A:geometry) Format: ST_CollectionExtract (A:geometry, type:Int) Since: v1.2.1 Example: WITH test_data as ( ST_GeomFromText ( 'GEOMETRYCOLLECTION(POINT(40 10), POLYGON((0 0, 0 5, 5 5, 5 0, 0 0)))' ) as geom ) SELECT ST_CollectionExtract ( geom ) as c1 , ST_CollectionExtract ( geom , 1 ) as c2 FROM test_data Result: +----------------------------------------------------------------------------+ |c1 |c2 | +----------------------------------------------------------------------------+ |MULTIPOLYGON(((0 0, 0 5, 5 5, 5 0, 0 0))) |MULTIPOINT(40 10) | | +----------------------------------------------------------------------------+ ST_ConvexHull \u00b6 Introduction: Return the Convex Hull of polgyon A Format: ST_ConvexHull (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_ConvexHull ( polygondf . countyshape ) FROM polygondf ST_Difference \u00b6 Introduction: Return the difference between geometry A and B (return part of geometry A that does not intersect geometry B) Format: ST_Difference (A:geometry, B:geometry) Since: v1.2.0 Example: SELECT ST_Difference ( ST_GeomFromWKT ( 'POLYGON ((-3 -3, 3 -3, 3 3, -3 3, -3 -3))' ), ST_GeomFromWKT ( 'POLYGON ((0 -4, 4 -4, 4 4, 0 4, 0 -4))' )) Result: POLYGON ((0 -3, -3 -3, -3 3, 0 3, 0 -3)) ST_Distance \u00b6 Introduction: Return the Euclidean distance between A and B Format: ST_Distance (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Distance ( polygondf . countyshape , polygondf . countyshape ) FROM polygondf ST_Dump \u00b6 Introduction: It expands the geometries. If the geometry is simple (Point, Polygon Linestring etc.) it returns the geometry itself, if the geometry is collection or multi it returns record for each of collection components. Format: ST_Dump(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Dump ( ST_GeomFromText ( 'MULTIPOINT ((10 40), (40 30), (20 20), (30 10))' )) Output: [POINT (10 40), POINT (40 30), POINT (20 20), POINT (30 10)] ST_DumpPoints \u00b6 Introduction: Returns list of Points which geometry consists of. Format: ST_DumpPoints(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_DumpPoints ( ST_GeomFromText ( 'LINESTRING (0 0, 1 1, 1 0)' )) Output: [POINT (0 0), POINT (0 1), POINT (1 1), POINT (1 0), POINT (0 0)] ST_EndPoint \u00b6 Introduction: Returns last point of given linestring. Format: ST_EndPoint(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_EndPoint ( ST_GeomFromText ( 'LINESTRING(100 150,50 60, 70 80, 160 170)' )) Output: POINT(160 170) ST_Envelope \u00b6 Introduction: Return the envelop boundary of A Format: ST_Envelope (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Envelope ( polygondf . countyshape ) FROM polygondf ST_ExteriorRing \u00b6 Introduction: Returns a line string representing the exterior ring of the POLYGON geometry. Return NULL if the geometry is not a polygon. Format: ST_ExteriorRing(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_ExteriorRing ( ST_GeomFromText ( 'POLYGON((0 0 1, 1 1 1, 1 2 1, 1 1 1, 0 0 1))' )) Output: LINESTRING (0 0, 1 1, 1 2, 1 1, 0 0) ST_FlipCoordinates \u00b6 Introduction: Returns a version of the given geometry with X and Y axis flipped. Format: ST_FlipCoordinates(A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_FlipCoordinates ( df . geometry ) FROM df Input: POINT (1 2) Output: POINT (2 1) ST_Force_2D \u00b6 Introduction: Forces the geometries into a \"2-dimensional mode\" so that all output representations will only have the X and Y coordinates Format: ST_Force_2D (A:geometry) Since: v1.2.1 Example: SELECT ST_AsText ( ST_Force_2D ( ST_GeomFromText ( 'POLYGON((0 0 2,0 5 2,5 0 2,0 0 2),(1 1 2,3 1 2,1 3 2,1 1 2))' )) ) AS geom Result: +---------------------------------------------------------------+ |geom | +---------------------------------------------------------------+ |POLYGON((0 0,0 5,5 0,0 0),(1 1,3 1,1 3,1 1)) | +---------------------------------------------------------------+ ST_GeoHash \u00b6 Introduction: Returns GeoHash of the geometry with given precision Format: ST_GeoHash(geom: geometry, precision: int) Since: v1.1.1 Example: Query: SELECT ST_GeoHash ( ST_GeomFromText ( 'POINT(21.427834 52.042576573)' ), 5 ) AS geohash Result: +-----------------------------+ |geohash | +-----------------------------+ |u3r0p | +-----------------------------+ ST_GeometryN \u00b6 Introduction: Return the 0-based Nth geometry if the geometry is a GEOMETRYCOLLECTION, (MULTI)POINT, (MULTI)LINESTRING, MULTICURVE or (MULTI)POLYGON. Otherwise, return null Format: ST_GeometryN(geom: geometry, n: Int) Since: v1.0.0 Spark SQL example: SELECT ST_GeometryN ( ST_GeomFromText ( 'MULTIPOINT((1 2), (3 4), (5 6), (8 9))' ), 1 ) Output: POINT (3 4) ST_GeometryType \u00b6 Introduction: Returns the type of the geometry as a string. EG: 'ST_Linestring', 'ST_Polygon' etc. Format: ST_GeometryType (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_GeometryType ( polygondf . countyshape ) FROM polygondf ST_InteriorRingN \u00b6 Introduction: Returns the Nth interior linestring ring of the polygon geometry. Returns NULL if the geometry is not a polygon or the given N is out of range Format: ST_InteriorRingN(geom: geometry, n: Int) Since: v1.0.0 Spark SQL example: SELECT ST_InteriorRingN ( ST_GeomFromText ( 'POLYGON((0 0, 0 5, 5 5, 5 0, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1), (1 3, 2 3, 2 4, 1 4, 1 3), (3 3, 4 3, 4 4, 3 4, 3 3))' ), 0 ) Output: LINESTRING (1 1, 2 1, 2 2, 1 2, 1 1) ST_Intersection \u00b6 Introduction: Return the intersection geometry of A and B Format: ST_Intersection (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Intersection ( polygondf . countyshape , polygondf . countyshape ) FROM polygondf ST_IsClosed \u00b6 Introduction: RETURNS true if the LINESTRING start and end point are the same. Format: ST_IsClosed(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_IsClosed ( ST_GeomFromText ( 'LINESTRING(0 0, 1 1, 1 0)' )) Output: false ST_IsEmpty \u00b6 Introduction: Test if a geometry is empty geometry Format: ST_IsEmpty (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_IsEmpty ( polygondf . countyshape ) FROM polygondf ST_IsRing \u00b6 Introduction: RETURN true if LINESTRING is ST_IsClosed and ST_IsSimple. Format: ST_IsRing(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_IsRing ( ST_GeomFromText ( \"LINESTRING(0 0, 0 1, 1 1, 1 0, 0 0)\" )) Output: true ST_IsSimple \u00b6 Introduction: Test if geometry's only self-intersections are at boundary points. Format: ST_IsSimple (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_IsSimple ( polygondf . countyshape ) FROM polygondf ST_IsValid \u00b6 Introduction: Test if a geometry is well formed Format: ST_IsValid (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_IsValid ( polygondf . countyshape ) FROM polygondf ST_Length \u00b6 Introduction: Return the perimeter of A Format: ST_Length (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Length ( polygondf . countyshape ) FROM polygondf ST_LineInterpolatePoint \u00b6 Introduction: Returns a point interpolated along a line. First argument must be a LINESTRING. Second argument is a Double between 0 and 1 representing fraction of total linestring length the point has to be located. Format: ST_LineInterpolatePoint (geom: geometry, fraction: Double) Since: v1.0.1 Spark SQL example: SELECT ST_LineInterpolatePoint ( ST_GeomFromWKT ( 'LINESTRING(25 50, 100 125, 150 190)' ), 0 . 2 ) as Interpolated Output: +-----------------------------------------+ |Interpolated | +-----------------------------------------+ |POINT (51.5974135047432 76.5974135047432)| +-----------------------------------------+ ST_LineMerge \u00b6 Introduction: Returns a LineString formed by sewing together the constituent line work of a MULTILINESTRING. Note Only works for MULTILINESTRING. Using other geometry will return a GEOMETRYCOLLECTION EMPTY. If the MultiLineString can't be merged, the original MULTILINESTRING is returned. Format: ST_LineMerge (A:geometry) Since: v1.0.0 SELECT ST_LineMerge ( geometry ) FROM df ST_LineSubstring \u00b6 Introduction: Return a linestring being a substring of the input one starting and ending at the given fractions of total 2d length. Second and third arguments are Double values between 0 and 1. This only works with LINESTRINGs. Format: ST_LineSubstring (geom: geometry, startfraction: Double, endfraction: Double) Since: v1.0.1 Spark SQL example: SELECT ST_LineSubstring ( ST_GeomFromWKT ( 'LINESTRING(25 50, 100 125, 150 190)' ), 0 . 333 , 0 . 666 ) as Substring Output: +------------------------------------------------------------------------------------------------+ |Substring | +------------------------------------------------------------------------------------------------+ |LINESTRING (69.28469348539744 94.28469348539744, 100 125, 111.70035626068274 140.21046313888758)| +------------------------------------------------------------------------------------------------+ ST_MakePolygon \u00b6 Introduction: Function to convert closed linestring to polygon including holes Format: ST_MakePolygon(geom: geometry, holes: array<geometry>) Since: v1.1.0 Example: Query: SELECT ST_MakePolygon ( ST_GeomFromText ( 'LINESTRING(7 -1, 7 6, 9 6, 9 1, 7 -1)' ), ARRAY ( ST_GeomFromText ( 'LINESTRING(6 2, 8 2, 8 1, 6 1, 6 2)' )) ) AS polygon Result: +----------------------------------------------------------------+ |polygon | +----------------------------------------------------------------+ |POLYGON ((7 -1, 7 6, 9 6, 9 1, 7 -1), (6 2, 8 2, 8 1, 6 1, 6 2))| +----------------------------------------------------------------+ ST_MakeValid \u00b6 Introduction: Given an invalid geometry, create a valid representation of the geometry. Collapsed geometries are either converted to empty (keepCollaped=true) or a valid geometry of lower dimension (keepCollapsed=false). Default is keepCollapsed=false. Format: ST_MakeValid (A:geometry) Format: ST_MakeValid (A:geometry, keepCollapsed:Boolean) Since: v1.0.0 Spark SQL example: WITH linestring AS ( SELECT ST_GeomFromWKT ( 'LINESTRING(1 1, 1 1)' ) AS geom ) SELECT ST_MakeValid ( geom ), ST_MakeValid ( geom , true ) FROM linestring Result: +------------------+------------------------+ |st_makevalid(geom)|st_makevalid(geom, true)| +------------------+------------------------+ | LINESTRING EMPTY| POINT (1 1)| +------------------+------------------------+ Note In Sedona up to and including version 1.2 the behaviour of ST_MakeValid was different. Be sure to check you code when upgrading. The previous implementation only worked for (multi)polygons and had a different interpretation of the second, boolean, argument. It would also sometimes return multiple geometries for a single geomtry input. ST_MinimumBoundingCircle \u00b6 Introduction: Returns the smallest circle polygon that contains a geometry. Format: ST_MinimumBoundingCircle(geom: geometry, [Optional] quadrantSegments:int) Since: v1.0.1 Spark SQL example: SELECT ST_MinimumBoundingCircle ( ST_GeomFromText ( 'POLYGON((1 1,0 0, -1 1, 1 1))' )) ST_MinimumBoundingRadius \u00b6 Introduction: Returns a struct containing the center point and radius of the smallest circle that contains a geometry. Format: ST_MinimumBoundingRadius(geom: geometry) Since: v1.0.1 Spark SQL example: SELECT ST_MinimumBoundingRadius ( ST_GeomFromText ( 'POLYGON((1 1,0 0, -1 1, 1 1))' )) ST_Multi \u00b6 Introduction: Returns a MultiGeometry object based on the geometry input. ST_Multi is basically an alias for ST_Collect with one geometry. Format ST_Multi(geom: geometry) Since: v1.2.0 Example: SELECT ST_Multi ( ST_GeomFromText ( 'POINT(1 1)' ) ) AS geom Result: +---------------------------------------------------------------+ |geom | +---------------------------------------------------------------+ |MULTIPOINT (1 1) | +---------------------------------------------------------------+ ST_NPoints \u00b6 Introduction: Return points of the geometry Since: v1.0.0 Format: ST_NPoints (A:geometry) SELECT ST_NPoints ( polygondf . countyshape ) FROM polygondf ST_NumGeometries \u00b6 Introduction: Returns the number of Geometries. If geometry is a GEOMETRYCOLLECTION (or MULTI*) return the number of geometries, for single geometries will return 1. Format: ST_NumGeometries (A:geometry) Since: v1.0.0 SELECT ST_NumGeometries ( df . geometry ) FROM df ST_NumInteriorRings \u00b6 Introduction: RETURNS number of interior rings of polygon geometries. Format: ST_NumInteriorRings(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_NumInteriorRings ( ST_GeomFromText ( 'POLYGON ((0 0, 0 5, 5 5, 5 0, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1))' )) Output: 1 ST_PointN \u00b6 Introduction: Return the Nth point in a single linestring or circular linestring in the geometry. Negative values are counted backwards from the end of the LineString, so that -1 is the last point. Returns NULL if there is no linestring in the geometry. Format: ST_PointN(geom: geometry, n: integer) Since: v1.2.1 Spark SQL example: SELECT ST_PointN ( ST_GeomFromText ( \"LINESTRING(0 0, 1 2, 2 4, 3 6)\" ), 2 ) AS geom Result: +---------------------------------------------------------------+ |geom | +---------------------------------------------------------------+ |POINT (1 2) | +---------------------------------------------------------------+ ST_PointOnSurface \u00b6 Introduction: Returns a POINT guaranteed to lie on the surface. Format: ST_PointOnSurface(A:geometry) Since: v1.2.1 Examples: SELECT ST_AsText(ST_PointOnSurface(ST_GeomFromText('POINT(0 5)'))); st_astext ------------ POINT(0 5) SELECT ST_AsText(ST_PointOnSurface(ST_GeomFromText('LINESTRING(0 5, 0 10)'))); st_astext ------------ POINT(0 5) SELECT ST_AsText(ST_PointOnSurface(ST_GeomFromText('POLYGON((0 0, 0 5, 5 5, 5 0, 0 0))'))); st_astext ---------------- POINT(2.5 2.5) SELECT ST_AsText(ST_PointOnSurface(ST_GeomFromText('LINESTRING(0 5 1, 0 0 1, 0 10 2)'))); st_astext ---------------- POINT Z(0 0 1) ST_PrecisionReduce \u00b6 Introduction: Reduce the decimals places in the coordinates of the geometry to the given number of decimal places. The last decimal place will be rounded. Format: ST_PrecisionReduce (A:geometry, B:int) Since: v1.0.0 Spark SQL example: SELECT ST_PrecisionReduce ( polygondf . countyshape , 9 ) FROM polygondf The new coordinates will only have 9 decimal places. ST_RemovePoint \u00b6 Introduction: RETURN Line with removed point at given index, position can be omitted and then last one will be removed. Format: ST_RemovePoint(geom: geometry, position: integer) Format: ST_RemovePoint(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_RemovePoint ( ST_GeomFromText ( \"LINESTRING(0 0, 1 1, 1 0)\" ), 1 ) Output: LINESTRING(0 0, 1 0) ST_Reverse \u00b6 Introduction: Return the geometry with vertex order reversed Format: ST_Reverse (A:geometry) Since: v1.2.1 Example: SELECT ST_AsText ( ST_Reverse ( ST_GeomFromText ( 'LINESTRING(0 0, 1 2, 2 4, 3 6)' )) ) AS geom Result: +---------------------------------------------------------------+ |geom | +---------------------------------------------------------------+ |LINESTRING (3 6, 2 4, 1 2, 0 0) | +---------------------------------------------------------------+ ST_SetSRID \u00b6 Introduction: Sets the spatial refence system identifier (SRID) of the geometry. Format: ST_SetSRID (A:geometry, srid: Integer) Since: v1.1.1 Spark SQL example: SELECT ST_SetSRID ( polygondf . countyshape , 3021 ) FROM polygondf ST_SimplifyPreserveTopology \u00b6 Introduction: Simplifies a geometry and ensures that the result is a valid geometry having the same dimension and number of components as the input, and with the components having the same topological relationship. Since: v1.0.0 Format: ST_SimplifyPreserveTopology (A:geometry, distanceTolerance: Double) SELECT ST_SimplifyPreserveTopology ( polygondf . countyshape , 10 . 0 ) FROM polygondf ST_SRID \u00b6 Introduction: Return the spatial refence system identifier (SRID) of the geometry. Format: ST_SRID (A:geometry) Since: v1.1.1 Spark SQL example: SELECT ST_SRID ( polygondf . countyshape ) FROM polygondf ST_StartPoint \u00b6 Introduction: Returns first point of given linestring. Format: ST_StartPoint(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_StartPoint ( ST_GeomFromText ( 'LINESTRING(100 150,50 60, 70 80, 160 170)' )) Output: POINT(100 150) ST_SubDivide \u00b6 Introduction: Returns list of geometries divided based of given maximum number of vertices. Format: ST_SubDivide(geom: geometry, maxVertices: int) Since: v1.1.0 Spark SQL example: SELECT ST_SubDivide ( ST_GeomFromText ( \"POLYGON((35 10, 45 45, 15 40, 10 20, 35 10), (20 30, 35 35, 30 20, 20 30))\" ), 5 ) Output: [ POLYGON((37.857142857142854 20, 35 10, 10 20, 37.857142857142854 20)), POLYGON((15 20, 10 20, 15 40, 15 20)), POLYGON((20 20, 15 20, 15 30, 20 30, 20 20)), POLYGON((26.428571428571427 20, 20 20, 20 30, 26.4285714 23.5714285, 26.4285714 20)), POLYGON((15 30, 15 40, 20 40, 20 30, 15 30)), POLYGON((20 40, 26.4285714 40, 26.4285714 32.1428571, 20 30, 20 40)), POLYGON((37.8571428 20, 30 20, 34.0476190 32.1428571, 37.8571428 32.1428571, 37.8571428 20)), POLYGON((34.0476190 34.6825396, 26.4285714 32.1428571, 26.4285714 40, 34.0476190 40, 34.0476190 34.6825396)), POLYGON((34.0476190 32.1428571, 35 35, 37.8571428 35, 37.8571428 32.1428571, 34.0476190 32.1428571)), POLYGON((35 35, 34.0476190 34.6825396, 34.0476190 35, 35 35)), POLYGON((34.0476190 35, 34.0476190 40, 37.8571428 40, 37.8571428 35, 34.0476190 35)), POLYGON((30 20, 26.4285714 20, 26.4285714 23.5714285, 30 20)), POLYGON((15 40, 37.8571428 43.8095238, 37.8571428 40, 15 40)), POLYGON((45 45, 37.8571428 20, 37.8571428 43.8095238, 45 45)) ] Spark SQL example: SELECT ST_SubDivide ( ST_GeomFromText ( \"LINESTRING(0 0, 85 85, 100 100, 120 120, 21 21, 10 10, 5 5)\" ), 5 ) Output: [ LINESTRING(0 0, 5 5) LINESTRING(5 5, 10 10) LINESTRING(10 10, 21 21) LINESTRING(21 21, 60 60) LINESTRING(60 60, 85 85) LINESTRING(85 85, 100 100) LINESTRING(100 100, 120 120) ] ST_SubDivideExplode \u00b6 Introduction: It works the same as ST_SubDivide but returns new rows with geometries instead of list. Format: ST_SubDivideExplode(geom: geometry, maxVertices: int) Since: v1.1.0 Example: Query: SELECT ST_SubDivideExplode ( ST_GeomFromText ( \"LINESTRING(0 0, 85 85, 100 100, 120 120, 21 21, 10 10, 5 5)\" ), 5 ) Result: +-----------------------------+ |geom | +-----------------------------+ |LINESTRING(0 0, 5 5) | |LINESTRING(5 5, 10 10) | |LINESTRING(10 10, 21 21) | |LINESTRING(21 21, 60 60) | |LINESTRING(60 60, 85 85) | |LINESTRING(85 85, 100 100) | |LINESTRING(100 100, 120 120) | +-----------------------------+ Using Lateral View Table: +-------------------------------------------------------------+ |geometry | +-------------------------------------------------------------+ |LINESTRING(0 0, 85 85, 100 100, 120 120, 21 21, 10 10, 5 5) | +-------------------------------------------------------------+ Query select geom from geometries LATERAL VIEW ST_SubdivideExplode ( geometry , 5 ) AS geom Result: +-----------------------------+ |geom | +-----------------------------+ |LINESTRING(0 0, 5 5) | |LINESTRING(5 5, 10 10) | |LINESTRING(10 10, 21 21) | |LINESTRING(21 21, 60 60) | |LINESTRING(60 60, 85 85) | |LINESTRING(85 85, 100 100) | |LINESTRING(100 100, 120 120) | +-----------------------------+ ST_SymDifference \u00b6 Introduction: Return the symmetrical difference between geometry A and B (return parts of geometries which are in either of the sets, but not in their intersection) Format: ST_SymDifference (A:geometry, B:geometry) Since: v1.2.0 Example: SELECT ST_SymDifference ( ST_GeomFromWKT ( 'POLYGON ((-3 -3, 3 -3, 3 3, -3 3, -3 -3))' ), ST_GeomFromWKT ( 'POLYGON ((-2 -3, 4 -3, 4 3, -2 3, -2 -3))' )) Result: MULTIPOLYGON (((-2 -3, -3 -3, -3 3, -2 3, -2 -3)), ((3 -3, 3 3, 4 3, 4 -3, 3 -3))) ST_Transform \u00b6 Introduction: Transform the Spatial Reference System / Coordinate Reference System of A, from SourceCRS to TargetCRS Note By default, this function uses lat/lon order. You can use ST_FlipCoordinates to swap X and Y. Note If ST_Transform throws an Exception called \"Bursa wolf parameters required\", you need to disable the error notification in ST_Transform. You can append a boolean value at the end. Format: ST_Transform (A:geometry, SourceCRS:string, TargetCRS:string ,[Optional] DisableError) Since: v1.0.0 Spark SQL example (simple): SELECT ST_Transform ( polygondf . countyshape , 'epsg:4326' , 'epsg:3857' ) FROM polygondf Spark SQL example (with optional parameters): SELECT ST_Transform ( polygondf . countyshape , 'epsg:4326' , 'epsg:3857' , false ) FROM polygondf Note The detailed EPSG information can be searched on EPSG.io . ST_Union \u00b6 Introduction: Return the union of geometry A and B Format: ST_Union (A:geometry, B:geometry) Since: v1.2.0 Example: SELECT ST_Union ( ST_GeomFromWKT ( 'POLYGON ((-3 -3, 3 -3, 3 3, -3 3, -3 -3))' ), ST_GeomFromWKT ( 'POLYGON ((1 -2, 5 0, 1 2, 1 -2))' )) Result: POLYGON ((3 -1, 3 -3, -3 -3, -3 3, 3 3, 3 1, 5 0, 3 -1)) ST_X \u00b6 Introduction: Returns X Coordinate of given Point null otherwise. Format: ST_X(pointA: Point) Since: v1.0.0 Spark SQL example: SELECT ST_X ( ST_POINT ( 0 . 0 25 . 0 )) Output: 0.0 ST_XMax \u00b6 Introduction: Returns the maximum X coordinate of a geometry Format: ST_XMax (A:geometry) Since: v1.2.1 Example: SELECT ST_XMax ( df . geometry ) AS xmax FROM df Input: POLYGON ((-1 -11, 0 10, 1 11, 2 12, -1 -11)) Output: 2 ST_XMin \u00b6 Introduction: Returns the minimum X coordinate of a geometry Format: ST_XMin (A:geometry) Since: v1.2.1 Example: SELECT ST_XMin ( df . geometry ) AS xmin FROM df Input: POLYGON ((-1 -11, 0 10, 1 11, 2 12, -1 -11)) Output: -1 ST_Y \u00b6 Introduction: Returns Y Coordinate of given Point, null otherwise. Format: ST_Y(pointA: Point) Since: v1.0.0 Spark SQL example: SELECT ST_Y ( ST_POINT ( 0 . 0 25 . 0 )) Output: 25.0 ST_YMax \u00b6 Introduction: Return the minimum Y coordinate of A Format: ST_YMax (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_YMax ( ST_GeomFromText ( 'POLYGON((0 0 1, 1 1 1, 1 2 1, 1 1 1, 0 0 1))' )) Output: 2 ST_YMin \u00b6 Introduction: Return the minimum Y coordinate of A Format: ST_Y_Min (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_YMin ( ST_GeomFromText ( 'POLYGON((0 0 1, 1 1 1, 1 2 1, 1 1 1, 0 0 1))' )) Output : 0 ST_Z \u00b6 Introduction: Returns Z Coordinate of given Point, null otherwise. Format: ST_Z(pointA: Point) Since: v1.2.0 Spark SQL example: SELECT ST_Z ( ST_POINT ( 0 . 0 25 . 0 11 . 0 )) Output: 11.0","title":"Function"},{"location":"api/sql/Function/#st_3ddistance","text":"Introduction: Return the 3-dimensional minimum cartesian distance between A and B Format: ST_3DDistance (A:geometry, B:geometry) Since: v1.2.0 Spark SQL example: SELECT ST_3DDistance ( polygondf . countyshape , polygondf . countyshape ) FROM polygondf","title":"ST_3DDistance"},{"location":"api/sql/Function/#st_addpoint","text":"Introduction: RETURN Linestring with additional point at the given index, if position is not available the point will be added at the end of line. Format: ST_AddPoint(geom: geometry, point: geometry, position: integer) Format: ST_AddPoint(geom: geometry, point: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_AddPoint ( ST_GeomFromText ( \"LINESTRING(0 0, 1 1, 1 0)\" ), ST_GeomFromText ( \"Point(21 52)\" ), 1 ) SELECT ST_AddPoint ( ST_GeomFromText ( \"Linestring(0 0, 1 1, 1 0)\" ), ST_GeomFromText ( \"Point(21 52)\" )) Output: LINESTRING(0 0, 21 52, 1 1, 1 0) LINESTRING(0 0, 1 1, 1 0, 21 52)","title":"ST_AddPoint"},{"location":"api/sql/Function/#st_area","text":"Introduction: Return the area of A Format: ST_Area (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Area ( polygondf . countyshape ) FROM polygondf","title":"ST_Area"},{"location":"api/sql/Function/#st_asbinary","text":"Introduction: Return the Well-Known Binary representation of a geometry Format: ST_AsBinary (A:geometry) Since: v1.1.1 Spark SQL example: SELECT ST_AsBinary ( polygondf . countyshape ) FROM polygondf","title":"ST_AsBinary"},{"location":"api/sql/Function/#st_asewkb","text":"Introduction: Return the Extended Well-Known Binary representation of a geometry. EWKB is an extended version of WKB which includes the SRID of the geometry. The format originated in PostGIS but is supported by many GIS tools. If the geometry is lacking SRID a WKB format is produced. Se ST_SetSRID Format: ST_AsEWKB (A:geometry) Since: v1.1.1 Spark SQL example: SELECT ST_AsEWKB ( polygondf . countyshape ) FROM polygondf","title":"ST_AsEWKB"},{"location":"api/sql/Function/#st_asewkt","text":"Introduction: Return the Extended Well-Known Text representation of a geometry. EWKT is an extended version of WKT which includes the SRID of the geometry. The format originated in PostGIS but is supported by many GIS tools. If the geometry is lacking SRID a WKT format is produced. See ST_SetSRID Format: ST_AsEWKT (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_AsEWKT ( polygondf . countyshape ) FROM polygondf","title":"ST_AsEWKT"},{"location":"api/sql/Function/#st_asgeojson","text":"Introduction: Return the GeoJSON string representation of a geometry Format: ST_AsGeoJSON (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_AsGeoJSON ( polygondf . countyshape ) FROM polygondf","title":"ST_AsGeoJSON"},{"location":"api/sql/Function/#st_asgml","text":"Introduction: Return the GML string representation of a geometry Format: ST_AsGML (A:geometry) Since: v1.3.0 Spark SQL example: SELECT ST_AsGML ( polygondf . countyshape ) FROM polygondf","title":"ST_AsGML"},{"location":"api/sql/Function/#st_askml","text":"Introduction: Return the KML string representation of a geometry Format: ST_AsKML (A:geometry) Since: v1.3.0 Spark SQL example: SELECT ST_AsKML ( polygondf . countyshape ) FROM polygondf","title":"ST_AsKML"},{"location":"api/sql/Function/#st_astext","text":"Introduction: Return the Well-Known Text string representation of a geometry Format: ST_AsText (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_AsText ( polygondf . countyshape ) FROM polygondf","title":"ST_AsText"},{"location":"api/sql/Function/#st_azimuth","text":"Introduction: Returns Azimuth for two given points in radians null otherwise. Format: ST_Azimuth(pointA: Point, pointB: Point) Since: v1.0.0 Spark SQL example: SELECT ST_Azimuth ( ST_POINT ( 0 . 0 , 25 . 0 ), ST_POINT ( 0 . 0 , 0 . 0 )) Output: 3.141592653589793","title":"ST_Azimuth"},{"location":"api/sql/Function/#st_boundary","text":"Introduction: Returns the closure of the combinatorial boundary of this Geometry. Format: ST_Boundary(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Boundary ( ST_GeomFromText ( 'POLYGON((1 1,0 0, -1 1, 1 1))' )) Output: LINESTRING (1 1, 0 0, -1 1, 1 1)","title":"ST_Boundary"},{"location":"api/sql/Function/#st_buffer","text":"Introduction: Returns a geometry/geography that represents all points whose distance from this Geometry/geography is less than or equal to distance. Format: ST_Buffer (A:geometry, buffer: Double) Since: v1.0.0 Spark SQL example: SELECT ST_Buffer ( polygondf . countyshape , 1 ) FROM polygondf","title":"ST_Buffer"},{"location":"api/sql/Function/#st_buildarea","text":"Introduction: Returns the areal geometry formed by the constituent linework of the input geometry. Format: ST_BuildArea (A:geometry) Since: v1.2.1 Example: SELECT ST_BuildArea ( ST_GeomFromText ( 'MULTILINESTRING((0 0, 20 0, 20 20, 0 20, 0 0),(2 2, 18 2, 18 18, 2 18, 2 2))' ) ) AS geom Result: +----------------------------------------------------------------------------+ |geom | +----------------------------------------------------------------------------+ |POLYGON((0 0,0 20,20 20,20 0,0 0),(2 2,18 2,18 18,2 18,2 2)) | +----------------------------------------------------------------------------+","title":"ST_BuildArea"},{"location":"api/sql/Function/#st_centroid","text":"Introduction: Return the centroid point of A Format: ST_Centroid (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Centroid ( polygondf . countyshape ) FROM polygondf","title":"ST_Centroid"},{"location":"api/sql/Function/#st_collect","text":"Introduction: Returns MultiGeometry object based on geometry column/s or array with geometries Format ST_Collect(*geom: geometry) ST_Collect(geom: array<geometry>) Since: v1.2.0 Example: SELECT ST_Collect ( ST_GeomFromText ( 'POINT(21.427834 52.042576573)' ), ST_GeomFromText ( 'POINT(45.342524 56.342354355)' ) ) AS geom Result: +---------------------------------------------------------------+ |geom | +---------------------------------------------------------------+ |MULTIPOINT ((21.427834 52.042576573), (45.342524 56.342354355))| +---------------------------------------------------------------+ Example: SELECT ST_Collect ( Array ( ST_GeomFromText ( 'POINT(21.427834 52.042576573)' ), ST_GeomFromText ( 'POINT(45.342524 56.342354355)' ) ) ) AS geom Result: +---------------------------------------------------------------+ |geom | +---------------------------------------------------------------+ |MULTIPOINT ((21.427834 52.042576573), (45.342524 56.342354355))| +---------------------------------------------------------------+","title":"ST_Collect"},{"location":"api/sql/Function/#st_collectionextract","text":"Introduction: Returns a homogeneous multi-geometry from a given geometry collection. The type numbers are: 1. POINT 2. LINESTRING 3. POLYGON If the type parameter is omitted a multi-geometry of the highest dimension is returned. Format: ST_CollectionExtract (A:geometry) Format: ST_CollectionExtract (A:geometry, type:Int) Since: v1.2.1 Example: WITH test_data as ( ST_GeomFromText ( 'GEOMETRYCOLLECTION(POINT(40 10), POLYGON((0 0, 0 5, 5 5, 5 0, 0 0)))' ) as geom ) SELECT ST_CollectionExtract ( geom ) as c1 , ST_CollectionExtract ( geom , 1 ) as c2 FROM test_data Result: +----------------------------------------------------------------------------+ |c1 |c2 | +----------------------------------------------------------------------------+ |MULTIPOLYGON(((0 0, 0 5, 5 5, 5 0, 0 0))) |MULTIPOINT(40 10) | | +----------------------------------------------------------------------------+","title":"ST_CollectionExtract"},{"location":"api/sql/Function/#st_convexhull","text":"Introduction: Return the Convex Hull of polgyon A Format: ST_ConvexHull (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_ConvexHull ( polygondf . countyshape ) FROM polygondf","title":"ST_ConvexHull"},{"location":"api/sql/Function/#st_difference","text":"Introduction: Return the difference between geometry A and B (return part of geometry A that does not intersect geometry B) Format: ST_Difference (A:geometry, B:geometry) Since: v1.2.0 Example: SELECT ST_Difference ( ST_GeomFromWKT ( 'POLYGON ((-3 -3, 3 -3, 3 3, -3 3, -3 -3))' ), ST_GeomFromWKT ( 'POLYGON ((0 -4, 4 -4, 4 4, 0 4, 0 -4))' )) Result: POLYGON ((0 -3, -3 -3, -3 3, 0 3, 0 -3))","title":"ST_Difference"},{"location":"api/sql/Function/#st_distance","text":"Introduction: Return the Euclidean distance between A and B Format: ST_Distance (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Distance ( polygondf . countyshape , polygondf . countyshape ) FROM polygondf","title":"ST_Distance"},{"location":"api/sql/Function/#st_dump","text":"Introduction: It expands the geometries. If the geometry is simple (Point, Polygon Linestring etc.) it returns the geometry itself, if the geometry is collection or multi it returns record for each of collection components. Format: ST_Dump(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Dump ( ST_GeomFromText ( 'MULTIPOINT ((10 40), (40 30), (20 20), (30 10))' )) Output: [POINT (10 40), POINT (40 30), POINT (20 20), POINT (30 10)]","title":"ST_Dump"},{"location":"api/sql/Function/#st_dumppoints","text":"Introduction: Returns list of Points which geometry consists of. Format: ST_DumpPoints(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_DumpPoints ( ST_GeomFromText ( 'LINESTRING (0 0, 1 1, 1 0)' )) Output: [POINT (0 0), POINT (0 1), POINT (1 1), POINT (1 0), POINT (0 0)]","title":"ST_DumpPoints"},{"location":"api/sql/Function/#st_endpoint","text":"Introduction: Returns last point of given linestring. Format: ST_EndPoint(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_EndPoint ( ST_GeomFromText ( 'LINESTRING(100 150,50 60, 70 80, 160 170)' )) Output: POINT(160 170)","title":"ST_EndPoint"},{"location":"api/sql/Function/#st_envelope","text":"Introduction: Return the envelop boundary of A Format: ST_Envelope (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Envelope ( polygondf . countyshape ) FROM polygondf","title":"ST_Envelope"},{"location":"api/sql/Function/#st_exteriorring","text":"Introduction: Returns a line string representing the exterior ring of the POLYGON geometry. Return NULL if the geometry is not a polygon. Format: ST_ExteriorRing(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_ExteriorRing ( ST_GeomFromText ( 'POLYGON((0 0 1, 1 1 1, 1 2 1, 1 1 1, 0 0 1))' )) Output: LINESTRING (0 0, 1 1, 1 2, 1 1, 0 0)","title":"ST_ExteriorRing"},{"location":"api/sql/Function/#st_flipcoordinates","text":"Introduction: Returns a version of the given geometry with X and Y axis flipped. Format: ST_FlipCoordinates(A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_FlipCoordinates ( df . geometry ) FROM df Input: POINT (1 2) Output: POINT (2 1)","title":"ST_FlipCoordinates"},{"location":"api/sql/Function/#st_force_2d","text":"Introduction: Forces the geometries into a \"2-dimensional mode\" so that all output representations will only have the X and Y coordinates Format: ST_Force_2D (A:geometry) Since: v1.2.1 Example: SELECT ST_AsText ( ST_Force_2D ( ST_GeomFromText ( 'POLYGON((0 0 2,0 5 2,5 0 2,0 0 2),(1 1 2,3 1 2,1 3 2,1 1 2))' )) ) AS geom Result: +---------------------------------------------------------------+ |geom | +---------------------------------------------------------------+ |POLYGON((0 0,0 5,5 0,0 0),(1 1,3 1,1 3,1 1)) | +---------------------------------------------------------------+","title":"ST_Force_2D"},{"location":"api/sql/Function/#st_geohash","text":"Introduction: Returns GeoHash of the geometry with given precision Format: ST_GeoHash(geom: geometry, precision: int) Since: v1.1.1 Example: Query: SELECT ST_GeoHash ( ST_GeomFromText ( 'POINT(21.427834 52.042576573)' ), 5 ) AS geohash Result: +-----------------------------+ |geohash | +-----------------------------+ |u3r0p | +-----------------------------+","title":"ST_GeoHash"},{"location":"api/sql/Function/#st_geometryn","text":"Introduction: Return the 0-based Nth geometry if the geometry is a GEOMETRYCOLLECTION, (MULTI)POINT, (MULTI)LINESTRING, MULTICURVE or (MULTI)POLYGON. Otherwise, return null Format: ST_GeometryN(geom: geometry, n: Int) Since: v1.0.0 Spark SQL example: SELECT ST_GeometryN ( ST_GeomFromText ( 'MULTIPOINT((1 2), (3 4), (5 6), (8 9))' ), 1 ) Output: POINT (3 4)","title":"ST_GeometryN"},{"location":"api/sql/Function/#st_geometrytype","text":"Introduction: Returns the type of the geometry as a string. EG: 'ST_Linestring', 'ST_Polygon' etc. Format: ST_GeometryType (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_GeometryType ( polygondf . countyshape ) FROM polygondf","title":"ST_GeometryType"},{"location":"api/sql/Function/#st_interiorringn","text":"Introduction: Returns the Nth interior linestring ring of the polygon geometry. Returns NULL if the geometry is not a polygon or the given N is out of range Format: ST_InteriorRingN(geom: geometry, n: Int) Since: v1.0.0 Spark SQL example: SELECT ST_InteriorRingN ( ST_GeomFromText ( 'POLYGON((0 0, 0 5, 5 5, 5 0, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1), (1 3, 2 3, 2 4, 1 4, 1 3), (3 3, 4 3, 4 4, 3 4, 3 3))' ), 0 ) Output: LINESTRING (1 1, 2 1, 2 2, 1 2, 1 1)","title":"ST_InteriorRingN"},{"location":"api/sql/Function/#st_intersection","text":"Introduction: Return the intersection geometry of A and B Format: ST_Intersection (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Intersection ( polygondf . countyshape , polygondf . countyshape ) FROM polygondf","title":"ST_Intersection"},{"location":"api/sql/Function/#st_isclosed","text":"Introduction: RETURNS true if the LINESTRING start and end point are the same. Format: ST_IsClosed(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_IsClosed ( ST_GeomFromText ( 'LINESTRING(0 0, 1 1, 1 0)' )) Output: false","title":"ST_IsClosed"},{"location":"api/sql/Function/#st_isempty","text":"Introduction: Test if a geometry is empty geometry Format: ST_IsEmpty (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_IsEmpty ( polygondf . countyshape ) FROM polygondf","title":"ST_IsEmpty"},{"location":"api/sql/Function/#st_isring","text":"Introduction: RETURN true if LINESTRING is ST_IsClosed and ST_IsSimple. Format: ST_IsRing(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_IsRing ( ST_GeomFromText ( \"LINESTRING(0 0, 0 1, 1 1, 1 0, 0 0)\" )) Output: true","title":"ST_IsRing"},{"location":"api/sql/Function/#st_issimple","text":"Introduction: Test if geometry's only self-intersections are at boundary points. Format: ST_IsSimple (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_IsSimple ( polygondf . countyshape ) FROM polygondf","title":"ST_IsSimple"},{"location":"api/sql/Function/#st_isvalid","text":"Introduction: Test if a geometry is well formed Format: ST_IsValid (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_IsValid ( polygondf . countyshape ) FROM polygondf","title":"ST_IsValid"},{"location":"api/sql/Function/#st_length","text":"Introduction: Return the perimeter of A Format: ST_Length (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Length ( polygondf . countyshape ) FROM polygondf","title":"ST_Length"},{"location":"api/sql/Function/#st_lineinterpolatepoint","text":"Introduction: Returns a point interpolated along a line. First argument must be a LINESTRING. Second argument is a Double between 0 and 1 representing fraction of total linestring length the point has to be located. Format: ST_LineInterpolatePoint (geom: geometry, fraction: Double) Since: v1.0.1 Spark SQL example: SELECT ST_LineInterpolatePoint ( ST_GeomFromWKT ( 'LINESTRING(25 50, 100 125, 150 190)' ), 0 . 2 ) as Interpolated Output: +-----------------------------------------+ |Interpolated | +-----------------------------------------+ |POINT (51.5974135047432 76.5974135047432)| +-----------------------------------------+","title":"ST_LineInterpolatePoint"},{"location":"api/sql/Function/#st_linemerge","text":"Introduction: Returns a LineString formed by sewing together the constituent line work of a MULTILINESTRING. Note Only works for MULTILINESTRING. Using other geometry will return a GEOMETRYCOLLECTION EMPTY. If the MultiLineString can't be merged, the original MULTILINESTRING is returned. Format: ST_LineMerge (A:geometry) Since: v1.0.0 SELECT ST_LineMerge ( geometry ) FROM df","title":"ST_LineMerge"},{"location":"api/sql/Function/#st_linesubstring","text":"Introduction: Return a linestring being a substring of the input one starting and ending at the given fractions of total 2d length. Second and third arguments are Double values between 0 and 1. This only works with LINESTRINGs. Format: ST_LineSubstring (geom: geometry, startfraction: Double, endfraction: Double) Since: v1.0.1 Spark SQL example: SELECT ST_LineSubstring ( ST_GeomFromWKT ( 'LINESTRING(25 50, 100 125, 150 190)' ), 0 . 333 , 0 . 666 ) as Substring Output: +------------------------------------------------------------------------------------------------+ |Substring | +------------------------------------------------------------------------------------------------+ |LINESTRING (69.28469348539744 94.28469348539744, 100 125, 111.70035626068274 140.21046313888758)| +------------------------------------------------------------------------------------------------+","title":"ST_LineSubstring"},{"location":"api/sql/Function/#st_makepolygon","text":"Introduction: Function to convert closed linestring to polygon including holes Format: ST_MakePolygon(geom: geometry, holes: array<geometry>) Since: v1.1.0 Example: Query: SELECT ST_MakePolygon ( ST_GeomFromText ( 'LINESTRING(7 -1, 7 6, 9 6, 9 1, 7 -1)' ), ARRAY ( ST_GeomFromText ( 'LINESTRING(6 2, 8 2, 8 1, 6 1, 6 2)' )) ) AS polygon Result: +----------------------------------------------------------------+ |polygon | +----------------------------------------------------------------+ |POLYGON ((7 -1, 7 6, 9 6, 9 1, 7 -1), (6 2, 8 2, 8 1, 6 1, 6 2))| +----------------------------------------------------------------+","title":"ST_MakePolygon"},{"location":"api/sql/Function/#st_makevalid","text":"Introduction: Given an invalid geometry, create a valid representation of the geometry. Collapsed geometries are either converted to empty (keepCollaped=true) or a valid geometry of lower dimension (keepCollapsed=false). Default is keepCollapsed=false. Format: ST_MakeValid (A:geometry) Format: ST_MakeValid (A:geometry, keepCollapsed:Boolean) Since: v1.0.0 Spark SQL example: WITH linestring AS ( SELECT ST_GeomFromWKT ( 'LINESTRING(1 1, 1 1)' ) AS geom ) SELECT ST_MakeValid ( geom ), ST_MakeValid ( geom , true ) FROM linestring Result: +------------------+------------------------+ |st_makevalid(geom)|st_makevalid(geom, true)| +------------------+------------------------+ | LINESTRING EMPTY| POINT (1 1)| +------------------+------------------------+ Note In Sedona up to and including version 1.2 the behaviour of ST_MakeValid was different. Be sure to check you code when upgrading. The previous implementation only worked for (multi)polygons and had a different interpretation of the second, boolean, argument. It would also sometimes return multiple geometries for a single geomtry input.","title":"ST_MakeValid"},{"location":"api/sql/Function/#st_minimumboundingcircle","text":"Introduction: Returns the smallest circle polygon that contains a geometry. Format: ST_MinimumBoundingCircle(geom: geometry, [Optional] quadrantSegments:int) Since: v1.0.1 Spark SQL example: SELECT ST_MinimumBoundingCircle ( ST_GeomFromText ( 'POLYGON((1 1,0 0, -1 1, 1 1))' ))","title":"ST_MinimumBoundingCircle"},{"location":"api/sql/Function/#st_minimumboundingradius","text":"Introduction: Returns a struct containing the center point and radius of the smallest circle that contains a geometry. Format: ST_MinimumBoundingRadius(geom: geometry) Since: v1.0.1 Spark SQL example: SELECT ST_MinimumBoundingRadius ( ST_GeomFromText ( 'POLYGON((1 1,0 0, -1 1, 1 1))' ))","title":"ST_MinimumBoundingRadius"},{"location":"api/sql/Function/#st_multi","text":"Introduction: Returns a MultiGeometry object based on the geometry input. ST_Multi is basically an alias for ST_Collect with one geometry. Format ST_Multi(geom: geometry) Since: v1.2.0 Example: SELECT ST_Multi ( ST_GeomFromText ( 'POINT(1 1)' ) ) AS geom Result: +---------------------------------------------------------------+ |geom | +---------------------------------------------------------------+ |MULTIPOINT (1 1) | +---------------------------------------------------------------+","title":"ST_Multi"},{"location":"api/sql/Function/#st_npoints","text":"Introduction: Return points of the geometry Since: v1.0.0 Format: ST_NPoints (A:geometry) SELECT ST_NPoints ( polygondf . countyshape ) FROM polygondf","title":"ST_NPoints"},{"location":"api/sql/Function/#st_numgeometries","text":"Introduction: Returns the number of Geometries. If geometry is a GEOMETRYCOLLECTION (or MULTI*) return the number of geometries, for single geometries will return 1. Format: ST_NumGeometries (A:geometry) Since: v1.0.0 SELECT ST_NumGeometries ( df . geometry ) FROM df","title":"ST_NumGeometries"},{"location":"api/sql/Function/#st_numinteriorrings","text":"Introduction: RETURNS number of interior rings of polygon geometries. Format: ST_NumInteriorRings(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_NumInteriorRings ( ST_GeomFromText ( 'POLYGON ((0 0, 0 5, 5 5, 5 0, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1))' )) Output: 1","title":"ST_NumInteriorRings"},{"location":"api/sql/Function/#st_pointn","text":"Introduction: Return the Nth point in a single linestring or circular linestring in the geometry. Negative values are counted backwards from the end of the LineString, so that -1 is the last point. Returns NULL if there is no linestring in the geometry. Format: ST_PointN(geom: geometry, n: integer) Since: v1.2.1 Spark SQL example: SELECT ST_PointN ( ST_GeomFromText ( \"LINESTRING(0 0, 1 2, 2 4, 3 6)\" ), 2 ) AS geom Result: +---------------------------------------------------------------+ |geom | +---------------------------------------------------------------+ |POINT (1 2) | +---------------------------------------------------------------+","title":"ST_PointN"},{"location":"api/sql/Function/#st_pointonsurface","text":"Introduction: Returns a POINT guaranteed to lie on the surface. Format: ST_PointOnSurface(A:geometry) Since: v1.2.1 Examples: SELECT ST_AsText(ST_PointOnSurface(ST_GeomFromText('POINT(0 5)'))); st_astext ------------ POINT(0 5) SELECT ST_AsText(ST_PointOnSurface(ST_GeomFromText('LINESTRING(0 5, 0 10)'))); st_astext ------------ POINT(0 5) SELECT ST_AsText(ST_PointOnSurface(ST_GeomFromText('POLYGON((0 0, 0 5, 5 5, 5 0, 0 0))'))); st_astext ---------------- POINT(2.5 2.5) SELECT ST_AsText(ST_PointOnSurface(ST_GeomFromText('LINESTRING(0 5 1, 0 0 1, 0 10 2)'))); st_astext ---------------- POINT Z(0 0 1)","title":"ST_PointOnSurface"},{"location":"api/sql/Function/#st_precisionreduce","text":"Introduction: Reduce the decimals places in the coordinates of the geometry to the given number of decimal places. The last decimal place will be rounded. Format: ST_PrecisionReduce (A:geometry, B:int) Since: v1.0.0 Spark SQL example: SELECT ST_PrecisionReduce ( polygondf . countyshape , 9 ) FROM polygondf The new coordinates will only have 9 decimal places.","title":"ST_PrecisionReduce"},{"location":"api/sql/Function/#st_removepoint","text":"Introduction: RETURN Line with removed point at given index, position can be omitted and then last one will be removed. Format: ST_RemovePoint(geom: geometry, position: integer) Format: ST_RemovePoint(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_RemovePoint ( ST_GeomFromText ( \"LINESTRING(0 0, 1 1, 1 0)\" ), 1 ) Output: LINESTRING(0 0, 1 0)","title":"ST_RemovePoint"},{"location":"api/sql/Function/#st_reverse","text":"Introduction: Return the geometry with vertex order reversed Format: ST_Reverse (A:geometry) Since: v1.2.1 Example: SELECT ST_AsText ( ST_Reverse ( ST_GeomFromText ( 'LINESTRING(0 0, 1 2, 2 4, 3 6)' )) ) AS geom Result: +---------------------------------------------------------------+ |geom | +---------------------------------------------------------------+ |LINESTRING (3 6, 2 4, 1 2, 0 0) | +---------------------------------------------------------------+","title":"ST_Reverse"},{"location":"api/sql/Function/#st_setsrid","text":"Introduction: Sets the spatial refence system identifier (SRID) of the geometry. Format: ST_SetSRID (A:geometry, srid: Integer) Since: v1.1.1 Spark SQL example: SELECT ST_SetSRID ( polygondf . countyshape , 3021 ) FROM polygondf","title":"ST_SetSRID"},{"location":"api/sql/Function/#st_simplifypreservetopology","text":"Introduction: Simplifies a geometry and ensures that the result is a valid geometry having the same dimension and number of components as the input, and with the components having the same topological relationship. Since: v1.0.0 Format: ST_SimplifyPreserveTopology (A:geometry, distanceTolerance: Double) SELECT ST_SimplifyPreserveTopology ( polygondf . countyshape , 10 . 0 ) FROM polygondf","title":"ST_SimplifyPreserveTopology"},{"location":"api/sql/Function/#st_srid","text":"Introduction: Return the spatial refence system identifier (SRID) of the geometry. Format: ST_SRID (A:geometry) Since: v1.1.1 Spark SQL example: SELECT ST_SRID ( polygondf . countyshape ) FROM polygondf","title":"ST_SRID"},{"location":"api/sql/Function/#st_startpoint","text":"Introduction: Returns first point of given linestring. Format: ST_StartPoint(geom: geometry) Since: v1.0.0 Spark SQL example: SELECT ST_StartPoint ( ST_GeomFromText ( 'LINESTRING(100 150,50 60, 70 80, 160 170)' )) Output: POINT(100 150)","title":"ST_StartPoint"},{"location":"api/sql/Function/#st_subdivide","text":"Introduction: Returns list of geometries divided based of given maximum number of vertices. Format: ST_SubDivide(geom: geometry, maxVertices: int) Since: v1.1.0 Spark SQL example: SELECT ST_SubDivide ( ST_GeomFromText ( \"POLYGON((35 10, 45 45, 15 40, 10 20, 35 10), (20 30, 35 35, 30 20, 20 30))\" ), 5 ) Output: [ POLYGON((37.857142857142854 20, 35 10, 10 20, 37.857142857142854 20)), POLYGON((15 20, 10 20, 15 40, 15 20)), POLYGON((20 20, 15 20, 15 30, 20 30, 20 20)), POLYGON((26.428571428571427 20, 20 20, 20 30, 26.4285714 23.5714285, 26.4285714 20)), POLYGON((15 30, 15 40, 20 40, 20 30, 15 30)), POLYGON((20 40, 26.4285714 40, 26.4285714 32.1428571, 20 30, 20 40)), POLYGON((37.8571428 20, 30 20, 34.0476190 32.1428571, 37.8571428 32.1428571, 37.8571428 20)), POLYGON((34.0476190 34.6825396, 26.4285714 32.1428571, 26.4285714 40, 34.0476190 40, 34.0476190 34.6825396)), POLYGON((34.0476190 32.1428571, 35 35, 37.8571428 35, 37.8571428 32.1428571, 34.0476190 32.1428571)), POLYGON((35 35, 34.0476190 34.6825396, 34.0476190 35, 35 35)), POLYGON((34.0476190 35, 34.0476190 40, 37.8571428 40, 37.8571428 35, 34.0476190 35)), POLYGON((30 20, 26.4285714 20, 26.4285714 23.5714285, 30 20)), POLYGON((15 40, 37.8571428 43.8095238, 37.8571428 40, 15 40)), POLYGON((45 45, 37.8571428 20, 37.8571428 43.8095238, 45 45)) ] Spark SQL example: SELECT ST_SubDivide ( ST_GeomFromText ( \"LINESTRING(0 0, 85 85, 100 100, 120 120, 21 21, 10 10, 5 5)\" ), 5 ) Output: [ LINESTRING(0 0, 5 5) LINESTRING(5 5, 10 10) LINESTRING(10 10, 21 21) LINESTRING(21 21, 60 60) LINESTRING(60 60, 85 85) LINESTRING(85 85, 100 100) LINESTRING(100 100, 120 120) ]","title":"ST_SubDivide"},{"location":"api/sql/Function/#st_subdivideexplode","text":"Introduction: It works the same as ST_SubDivide but returns new rows with geometries instead of list. Format: ST_SubDivideExplode(geom: geometry, maxVertices: int) Since: v1.1.0 Example: Query: SELECT ST_SubDivideExplode ( ST_GeomFromText ( \"LINESTRING(0 0, 85 85, 100 100, 120 120, 21 21, 10 10, 5 5)\" ), 5 ) Result: +-----------------------------+ |geom | +-----------------------------+ |LINESTRING(0 0, 5 5) | |LINESTRING(5 5, 10 10) | |LINESTRING(10 10, 21 21) | |LINESTRING(21 21, 60 60) | |LINESTRING(60 60, 85 85) | |LINESTRING(85 85, 100 100) | |LINESTRING(100 100, 120 120) | +-----------------------------+ Using Lateral View Table: +-------------------------------------------------------------+ |geometry | +-------------------------------------------------------------+ |LINESTRING(0 0, 85 85, 100 100, 120 120, 21 21, 10 10, 5 5) | +-------------------------------------------------------------+ Query select geom from geometries LATERAL VIEW ST_SubdivideExplode ( geometry , 5 ) AS geom Result: +-----------------------------+ |geom | +-----------------------------+ |LINESTRING(0 0, 5 5) | |LINESTRING(5 5, 10 10) | |LINESTRING(10 10, 21 21) | |LINESTRING(21 21, 60 60) | |LINESTRING(60 60, 85 85) | |LINESTRING(85 85, 100 100) | |LINESTRING(100 100, 120 120) | +-----------------------------+","title":"ST_SubDivideExplode"},{"location":"api/sql/Function/#st_symdifference","text":"Introduction: Return the symmetrical difference between geometry A and B (return parts of geometries which are in either of the sets, but not in their intersection) Format: ST_SymDifference (A:geometry, B:geometry) Since: v1.2.0 Example: SELECT ST_SymDifference ( ST_GeomFromWKT ( 'POLYGON ((-3 -3, 3 -3, 3 3, -3 3, -3 -3))' ), ST_GeomFromWKT ( 'POLYGON ((-2 -3, 4 -3, 4 3, -2 3, -2 -3))' )) Result: MULTIPOLYGON (((-2 -3, -3 -3, -3 3, -2 3, -2 -3)), ((3 -3, 3 3, 4 3, 4 -3, 3 -3)))","title":"ST_SymDifference"},{"location":"api/sql/Function/#st_transform","text":"Introduction: Transform the Spatial Reference System / Coordinate Reference System of A, from SourceCRS to TargetCRS Note By default, this function uses lat/lon order. You can use ST_FlipCoordinates to swap X and Y. Note If ST_Transform throws an Exception called \"Bursa wolf parameters required\", you need to disable the error notification in ST_Transform. You can append a boolean value at the end. Format: ST_Transform (A:geometry, SourceCRS:string, TargetCRS:string ,[Optional] DisableError) Since: v1.0.0 Spark SQL example (simple): SELECT ST_Transform ( polygondf . countyshape , 'epsg:4326' , 'epsg:3857' ) FROM polygondf Spark SQL example (with optional parameters): SELECT ST_Transform ( polygondf . countyshape , 'epsg:4326' , 'epsg:3857' , false ) FROM polygondf Note The detailed EPSG information can be searched on EPSG.io .","title":"ST_Transform"},{"location":"api/sql/Function/#st_union","text":"Introduction: Return the union of geometry A and B Format: ST_Union (A:geometry, B:geometry) Since: v1.2.0 Example: SELECT ST_Union ( ST_GeomFromWKT ( 'POLYGON ((-3 -3, 3 -3, 3 3, -3 3, -3 -3))' ), ST_GeomFromWKT ( 'POLYGON ((1 -2, 5 0, 1 2, 1 -2))' )) Result: POLYGON ((3 -1, 3 -3, -3 -3, -3 3, 3 3, 3 1, 5 0, 3 -1))","title":"ST_Union"},{"location":"api/sql/Function/#st_x","text":"Introduction: Returns X Coordinate of given Point null otherwise. Format: ST_X(pointA: Point) Since: v1.0.0 Spark SQL example: SELECT ST_X ( ST_POINT ( 0 . 0 25 . 0 )) Output: 0.0","title":"ST_X"},{"location":"api/sql/Function/#st_xmax","text":"Introduction: Returns the maximum X coordinate of a geometry Format: ST_XMax (A:geometry) Since: v1.2.1 Example: SELECT ST_XMax ( df . geometry ) AS xmax FROM df Input: POLYGON ((-1 -11, 0 10, 1 11, 2 12, -1 -11)) Output: 2","title":"ST_XMax"},{"location":"api/sql/Function/#st_xmin","text":"Introduction: Returns the minimum X coordinate of a geometry Format: ST_XMin (A:geometry) Since: v1.2.1 Example: SELECT ST_XMin ( df . geometry ) AS xmin FROM df Input: POLYGON ((-1 -11, 0 10, 1 11, 2 12, -1 -11)) Output: -1","title":"ST_XMin"},{"location":"api/sql/Function/#st_y","text":"Introduction: Returns Y Coordinate of given Point, null otherwise. Format: ST_Y(pointA: Point) Since: v1.0.0 Spark SQL example: SELECT ST_Y ( ST_POINT ( 0 . 0 25 . 0 )) Output: 25.0","title":"ST_Y"},{"location":"api/sql/Function/#st_ymax","text":"Introduction: Return the minimum Y coordinate of A Format: ST_YMax (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_YMax ( ST_GeomFromText ( 'POLYGON((0 0 1, 1 1 1, 1 2 1, 1 1 1, 0 0 1))' )) Output: 2","title":"ST_YMax"},{"location":"api/sql/Function/#st_ymin","text":"Introduction: Return the minimum Y coordinate of A Format: ST_Y_Min (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_YMin ( ST_GeomFromText ( 'POLYGON((0 0 1, 1 1 1, 1 2 1, 1 1 1, 0 0 1))' )) Output : 0","title":"ST_YMin"},{"location":"api/sql/Function/#st_z","text":"Introduction: Returns Z Coordinate of given Point, null otherwise. Format: ST_Z(pointA: Point) Since: v1.2.0 Spark SQL example: SELECT ST_Z ( ST_POINT ( 0 . 0 25 . 0 11 . 0 )) Output: 11.0","title":"ST_Z"},{"location":"api/sql/Optimizer/","text":"SedonaSQL query optimizer \u00b6 Sedona Spatial operators fully supports Apache SparkSQL query optimizer. It has the following query optimization features: Automatically optimizes range join query and distance join query. Automatically performs predicate pushdown. Range join \u00b6 Introduction: Find geometries from A and geometries from B such that each geometry pair satisfies a certain predicate. Most predicates supported by SedonaSQL can trigger a range join. Spark SQL Example: SELECT * FROM polygondf , pointdf WHERE ST_Contains ( polygondf . polygonshape , pointdf . pointshape ) SELECT * FROM polygondf , pointdf WHERE ST_Intersects ( polygondf . polygonshape , pointdf . pointshape ) SELECT * FROM pointdf , polygondf WHERE ST_Within ( pointdf . pointshape , polygondf . polygonshape ) Spark SQL Physical plan: == Physical Plan == RangeJoin polygonshape#20: geometry, pointshape#43: geometry, false :- Project [st_polygonfromenvelope(cast(_c0#0 as decimal(24,20)), cast(_c1#1 as decimal(24,20)), cast(_c2#2 as decimal(24,20)), cast(_c3#3 as decimal(24,20)), mypolygonid) AS polygonshape#20] : +- *FileScan csv +- Project [st_point(cast(_c0#31 as decimal(24,20)), cast(_c1#32 as decimal(24,20)), myPointId) AS pointshape#43] +- *FileScan csv Note All join queries in SedonaSQL are inner joins Distance join \u00b6 Introduction: Find geometries from A and geometries from B such that the internal Euclidean distance of each geometry pair is less or equal than a certain distance Spark SQL Example: Only consider fully within a certain distance SELECT * FROM pointdf1 , pointdf2 WHERE ST_Distance ( pointdf1 . pointshape1 , pointdf2 . pointshape2 ) < 2 Consider intersects within a certain distance SELECT * FROM pointdf1 , pointdf2 WHERE ST_Distance ( pointdf1 . pointshape1 , pointdf2 . pointshape2 ) <= 2 Spark SQL Physical plan: == Physical Plan == DistanceJoin pointshape1#12: geometry, pointshape2#33: geometry, 2.0, true :- Project [st_point(cast(_c0#0 as decimal(24,20)), cast(_c1#1 as decimal(24,20)), myPointId) AS pointshape1#12] : +- *FileScan csv +- Project [st_point(cast(_c0#21 as decimal(24,20)), cast(_c1#22 as decimal(24,20)), myPointId) AS pointshape2#33] +- *FileScan csv Warning Sedona doesn't control the distance's unit (degree or meter). It is same with the geometry. To change the geometry's unit, please transform the coordinate reference system. See ST_Transform . Broadcast join \u00b6 Introduction: Perform a range join or distance join but broadcast one of the sides of the join. This maintains the partitioning of the non-broadcast side and doesn't require a shuffle. pointDf . alias ( \"pointDf\" ). join ( broadcast ( polygonDf ). alias ( \"polygonDf\" ), expr ( \"ST_Contains(polygonDf.polygonshape, pointDf.pointshape)\" )) Spark SQL Physical plan: == Physical Plan == BroadcastIndexJoin pointshape#52: geometry, BuildRight, BuildRight, false ST_Contains(polygonshape#30, pointshape#52) :- Project [st_point(cast(_c0#48 as decimal(24,20)), cast(_c1#49 as decimal(24,20))) AS pointshape#52] : +- FileScan csv +- SpatialIndex polygonshape#30: geometry, QUADTREE, [id=#62] +- Project [st_polygonfromenvelope(cast(_c0#22 as decimal(24,20)), cast(_c1#23 as decimal(24,20)), cast(_c2#24 as decimal(24,20)), cast(_c3#25 as decimal(24,20))) AS polygonshape#30] +- FileScan csv This also works for distance joins: pointDf1 . alias ( \"pointDf1\" ). join ( broadcast ( pointDf2 ). alias ( \"pointDf2\" ), expr ( \"ST_Distance(pointDf1.pointshape, pointDf2.pointshape) <= 2\" )) Spark SQL Physical plan: == Physical Plan == BroadcastIndexJoin pointshape#52: geometry, BuildRight, BuildLeft, true, 2.0 ST_Distance(pointshape#52, pointshape#415) <= 2.0 :- Project [st_point(cast(_c0#48 as decimal(24,20)), cast(_c1#49 as decimal(24,20))) AS pointshape#52] : +- FileScan csv +- SpatialIndex pointshape#415: geometry, QUADTREE, [id=#1068] +- Project [st_point(cast(_c0#48 as decimal(24,20)), cast(_c1#49 as decimal(24,20))) AS pointshape#415] +- FileScan csv Note: Ff the distance is an expression, it is only evaluated on the first argument to ST_Distance ( pointDf1 above). Predicate pushdown \u00b6 Introduction: Given a join query and a predicate in the same WHERE clause, first executes the Predicate as a filter, then executes the join query* Spark SQL Example: SELECT * FROM polygondf , pointdf WHERE ST_Contains ( polygondf . polygonshape , pointdf . pointshape ) AND ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 101 . 0 , 501 . 0 , 601 . 0 ), polygondf . polygonshape ) Spark SQL Physical plan: == Physical Plan == RangeJoin polygonshape#20: geometry, pointshape#43: geometry, false :- Project [st_polygonfromenvelope(cast(_c0#0 as decimal(24,20)), cast(_c1#1 as decimal(24,20)), cast(_c2#2 as decimal(24,20)), cast(_c3#3 as decimal(24,20)), mypolygonid) AS polygonshape#20] : +- Filter **org.apache.spark.sql.sedona_sql.expressions.ST_Contains$** : +- *FileScan csv +- Project [st_point(cast(_c0#31 as decimal(24,20)), cast(_c1#32 as decimal(24,20)), myPointId) AS pointshape#43] +- *FileScan csv","title":"Join query (optimizer)"},{"location":"api/sql/Optimizer/#sedonasql-query-optimizer","text":"Sedona Spatial operators fully supports Apache SparkSQL query optimizer. It has the following query optimization features: Automatically optimizes range join query and distance join query. Automatically performs predicate pushdown.","title":"SedonaSQL query optimizer"},{"location":"api/sql/Optimizer/#range-join","text":"Introduction: Find geometries from A and geometries from B such that each geometry pair satisfies a certain predicate. Most predicates supported by SedonaSQL can trigger a range join. Spark SQL Example: SELECT * FROM polygondf , pointdf WHERE ST_Contains ( polygondf . polygonshape , pointdf . pointshape ) SELECT * FROM polygondf , pointdf WHERE ST_Intersects ( polygondf . polygonshape , pointdf . pointshape ) SELECT * FROM pointdf , polygondf WHERE ST_Within ( pointdf . pointshape , polygondf . polygonshape ) Spark SQL Physical plan: == Physical Plan == RangeJoin polygonshape#20: geometry, pointshape#43: geometry, false :- Project [st_polygonfromenvelope(cast(_c0#0 as decimal(24,20)), cast(_c1#1 as decimal(24,20)), cast(_c2#2 as decimal(24,20)), cast(_c3#3 as decimal(24,20)), mypolygonid) AS polygonshape#20] : +- *FileScan csv +- Project [st_point(cast(_c0#31 as decimal(24,20)), cast(_c1#32 as decimal(24,20)), myPointId) AS pointshape#43] +- *FileScan csv Note All join queries in SedonaSQL are inner joins","title":"Range join"},{"location":"api/sql/Optimizer/#distance-join","text":"Introduction: Find geometries from A and geometries from B such that the internal Euclidean distance of each geometry pair is less or equal than a certain distance Spark SQL Example: Only consider fully within a certain distance SELECT * FROM pointdf1 , pointdf2 WHERE ST_Distance ( pointdf1 . pointshape1 , pointdf2 . pointshape2 ) < 2 Consider intersects within a certain distance SELECT * FROM pointdf1 , pointdf2 WHERE ST_Distance ( pointdf1 . pointshape1 , pointdf2 . pointshape2 ) <= 2 Spark SQL Physical plan: == Physical Plan == DistanceJoin pointshape1#12: geometry, pointshape2#33: geometry, 2.0, true :- Project [st_point(cast(_c0#0 as decimal(24,20)), cast(_c1#1 as decimal(24,20)), myPointId) AS pointshape1#12] : +- *FileScan csv +- Project [st_point(cast(_c0#21 as decimal(24,20)), cast(_c1#22 as decimal(24,20)), myPointId) AS pointshape2#33] +- *FileScan csv Warning Sedona doesn't control the distance's unit (degree or meter). It is same with the geometry. To change the geometry's unit, please transform the coordinate reference system. See ST_Transform .","title":"Distance join"},{"location":"api/sql/Optimizer/#broadcast-join","text":"Introduction: Perform a range join or distance join but broadcast one of the sides of the join. This maintains the partitioning of the non-broadcast side and doesn't require a shuffle. pointDf . alias ( \"pointDf\" ). join ( broadcast ( polygonDf ). alias ( \"polygonDf\" ), expr ( \"ST_Contains(polygonDf.polygonshape, pointDf.pointshape)\" )) Spark SQL Physical plan: == Physical Plan == BroadcastIndexJoin pointshape#52: geometry, BuildRight, BuildRight, false ST_Contains(polygonshape#30, pointshape#52) :- Project [st_point(cast(_c0#48 as decimal(24,20)), cast(_c1#49 as decimal(24,20))) AS pointshape#52] : +- FileScan csv +- SpatialIndex polygonshape#30: geometry, QUADTREE, [id=#62] +- Project [st_polygonfromenvelope(cast(_c0#22 as decimal(24,20)), cast(_c1#23 as decimal(24,20)), cast(_c2#24 as decimal(24,20)), cast(_c3#25 as decimal(24,20))) AS polygonshape#30] +- FileScan csv This also works for distance joins: pointDf1 . alias ( \"pointDf1\" ). join ( broadcast ( pointDf2 ). alias ( \"pointDf2\" ), expr ( \"ST_Distance(pointDf1.pointshape, pointDf2.pointshape) <= 2\" )) Spark SQL Physical plan: == Physical Plan == BroadcastIndexJoin pointshape#52: geometry, BuildRight, BuildLeft, true, 2.0 ST_Distance(pointshape#52, pointshape#415) <= 2.0 :- Project [st_point(cast(_c0#48 as decimal(24,20)), cast(_c1#49 as decimal(24,20))) AS pointshape#52] : +- FileScan csv +- SpatialIndex pointshape#415: geometry, QUADTREE, [id=#1068] +- Project [st_point(cast(_c0#48 as decimal(24,20)), cast(_c1#49 as decimal(24,20))) AS pointshape#415] +- FileScan csv Note: Ff the distance is an expression, it is only evaluated on the first argument to ST_Distance ( pointDf1 above).","title":"Broadcast join"},{"location":"api/sql/Optimizer/#predicate-pushdown","text":"Introduction: Given a join query and a predicate in the same WHERE clause, first executes the Predicate as a filter, then executes the join query* Spark SQL Example: SELECT * FROM polygondf , pointdf WHERE ST_Contains ( polygondf . polygonshape , pointdf . pointshape ) AND ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 101 . 0 , 501 . 0 , 601 . 0 ), polygondf . polygonshape ) Spark SQL Physical plan: == Physical Plan == RangeJoin polygonshape#20: geometry, pointshape#43: geometry, false :- Project [st_polygonfromenvelope(cast(_c0#0 as decimal(24,20)), cast(_c1#1 as decimal(24,20)), cast(_c2#2 as decimal(24,20)), cast(_c3#3 as decimal(24,20)), mypolygonid) AS polygonshape#20] : +- Filter **org.apache.spark.sql.sedona_sql.expressions.ST_Contains$** : +- *FileScan csv +- Project [st_point(cast(_c0#31 as decimal(24,20)), cast(_c1#32 as decimal(24,20)), myPointId) AS pointshape#43] +- *FileScan csv","title":"Predicate pushdown"},{"location":"api/sql/Overview/","text":"Introduction \u00b6 Function list \u00b6 SedonaSQL supports SQL/MM Part3 Spatial SQL Standard. It includes four kinds of SQL operators as follows. All these operators can be directly called through: var myDataFrame = sparkSession . sql ( \"YOUR_SQL\" ) Alternatively, expr and selectExpr can be used: myDataFrame . withColumn ( \"geometry\" , expr ( \"ST_*\" )). selectExpr ( \"ST_*\" ) Constructor: Construct a Geometry given an input string or coordinates Example: ST_GeomFromWKT (string). Create a Geometry from a WKT String. Documentation: Here Function: Execute a function on the given column or columns Example: ST_Distance (A, B). Given two Geometry A and B, return the Euclidean distance of A and B. Documentation: Here Aggregate function: Return the aggregated value on the given column Example: ST_Envelope_Aggr (Geometry column). Given a Geometry column, calculate the entire envelope boundary of this column. Documentation: Here Predicate: Execute a logic judgement on the given columns and return true or false Example: ST_Contains (A, B). Check if A fully contains B. Return \"True\" if yes, else return \"False\". Documentation: Here Sedona also provides an Adapter to convert SpatialRDD <-> DataFrame. Please read Adapter Scaladoc SedonaSQL supports SparkSQL query optimizer, documentation is Here Quick start \u00b6 The detailed explanation is here Write a SQL/DataFrame application . Add Sedona-core and Sedona-SQL into your project POM.xml or build.sbt Declare your Spark Session sparkSession = SparkSession . builder (). config ( \"spark.serializer\" , \"org.apache.spark.serializer.KryoSerializer\" ). config ( \"spark.kryo.registrator\" , \"org.apache.sedona.core.serde.SedonaKryoRegistrator\" ). master ( \"local[*]\" ). appName ( \"mySedonaSQLdemo\" ). getOrCreate () Add the following line after your SparkSession declaration: import org . apache . sedona . sql . utils . SedonaSQLRegistrator SedonaSQLRegistrator . registerAll ( sparkSession )","title":"Quick start"},{"location":"api/sql/Overview/#introduction","text":"","title":"Introduction"},{"location":"api/sql/Overview/#function-list","text":"SedonaSQL supports SQL/MM Part3 Spatial SQL Standard. It includes four kinds of SQL operators as follows. All these operators can be directly called through: var myDataFrame = sparkSession . sql ( \"YOUR_SQL\" ) Alternatively, expr and selectExpr can be used: myDataFrame . withColumn ( \"geometry\" , expr ( \"ST_*\" )). selectExpr ( \"ST_*\" ) Constructor: Construct a Geometry given an input string or coordinates Example: ST_GeomFromWKT (string). Create a Geometry from a WKT String. Documentation: Here Function: Execute a function on the given column or columns Example: ST_Distance (A, B). Given two Geometry A and B, return the Euclidean distance of A and B. Documentation: Here Aggregate function: Return the aggregated value on the given column Example: ST_Envelope_Aggr (Geometry column). Given a Geometry column, calculate the entire envelope boundary of this column. Documentation: Here Predicate: Execute a logic judgement on the given columns and return true or false Example: ST_Contains (A, B). Check if A fully contains B. Return \"True\" if yes, else return \"False\". Documentation: Here Sedona also provides an Adapter to convert SpatialRDD <-> DataFrame. Please read Adapter Scaladoc SedonaSQL supports SparkSQL query optimizer, documentation is Here","title":"Function list"},{"location":"api/sql/Overview/#quick-start","text":"The detailed explanation is here Write a SQL/DataFrame application . Add Sedona-core and Sedona-SQL into your project POM.xml or build.sbt Declare your Spark Session sparkSession = SparkSession . builder (). config ( \"spark.serializer\" , \"org.apache.spark.serializer.KryoSerializer\" ). config ( \"spark.kryo.registrator\" , \"org.apache.sedona.core.serde.SedonaKryoRegistrator\" ). master ( \"local[*]\" ). appName ( \"mySedonaSQLdemo\" ). getOrCreate () Add the following line after your SparkSession declaration: import org . apache . sedona . sql . utils . SedonaSQLRegistrator SedonaSQLRegistrator . registerAll ( sparkSession )","title":"Quick start"},{"location":"api/sql/Parameter/","text":"Usage \u00b6 SedonaSQL supports many parameters. To change their values, Set it through SparkConf: sparkSession = SparkSession . builder (). config ( \"spark.serializer\" , \"org.apache.spark.serializer.KryoSerializer\" ). config ( \"spark.kryo.registrator\" , \"org.apache.sedona.core.serde.SedonaKryoRegistrator\" ). config ( \"sedona.global.index\" , \"true\" ) master ( \"local[*]\" ). appName ( \"mySedonaSQLdemo\" ). getOrCreate () Check your current SedonaSQL configuration: val sedonaConf = new SedonaConf ( sparkSession . sparkContext . getConf ) println ( sedonaConf ) Explanation \u00b6 sedona.global.index Use spatial index (currently, only supports in SQL range join and SQL distance join) Default: true Possible values: true, false sedona.global.indextype Spatial index type, only valid when \"sedona.global.index\" is true Default: quadtree Possible values: rtree, quadtree sedona.join.gridtype Spatial partitioning grid type for join query Default: kdbtree Possible values: quadtree, kdbtree sedona.join.indexbuildside (Advanced users only!) The side which Sedona builds spatial indices on Default: left Possible values: left, right sedona.join.numpartition (Advanced users only!) Number of partitions for both sides in a join query Default: -1, which means use the existing partitions Possible values: any integers sedona.join.spatitionside (Advanced users only!) The dominant side in spatial partitioning stage Default: left Possible values: left, right","title":"Parameter"},{"location":"api/sql/Parameter/#usage","text":"SedonaSQL supports many parameters. To change their values, Set it through SparkConf: sparkSession = SparkSession . builder (). config ( \"spark.serializer\" , \"org.apache.spark.serializer.KryoSerializer\" ). config ( \"spark.kryo.registrator\" , \"org.apache.sedona.core.serde.SedonaKryoRegistrator\" ). config ( \"sedona.global.index\" , \"true\" ) master ( \"local[*]\" ). appName ( \"mySedonaSQLdemo\" ). getOrCreate () Check your current SedonaSQL configuration: val sedonaConf = new SedonaConf ( sparkSession . sparkContext . getConf ) println ( sedonaConf )","title":"Usage"},{"location":"api/sql/Parameter/#explanation","text":"sedona.global.index Use spatial index (currently, only supports in SQL range join and SQL distance join) Default: true Possible values: true, false sedona.global.indextype Spatial index type, only valid when \"sedona.global.index\" is true Default: quadtree Possible values: rtree, quadtree sedona.join.gridtype Spatial partitioning grid type for join query Default: kdbtree Possible values: quadtree, kdbtree sedona.join.indexbuildside (Advanced users only!) The side which Sedona builds spatial indices on Default: left Possible values: left, right sedona.join.numpartition (Advanced users only!) Number of partitions for both sides in a join query Default: -1, which means use the existing partitions Possible values: any integers sedona.join.spatitionside (Advanced users only!) The dominant side in spatial partitioning stage Default: left Possible values: left, right","title":"Explanation"},{"location":"api/sql/Predicate/","text":"ST_Contains \u00b6 Introduction: Return true if A fully contains B Format: ST_Contains (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . arealandmark ) ST_Crosses \u00b6 Introduction: Return true if A crosses B Format: ST_Crosses (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Crosses ( pointdf . arealandmark , ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 )) ST_Disjoint \u00b6 Introduction: Return true if A and B are disjoint Format: ST_Disjoint (A:geometry, B:geometry) Since: v1.2.1 Spark SQL example: SELECT * FROM geom WHERE ST_Disjoinnt ( geom . geom_a , geom . geom_b ) ST_Equals \u00b6 Introduction: Return true if A equals to B Format: ST_Equals (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Equals ( pointdf . arealandmark , ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 )) ST_Intersects \u00b6 Introduction: Return true if A intersects B Format: ST_Intersects (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Intersects ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . arealandmark ) ST_OrderingEquals \u00b6 Introduction: Returns true if the geometries are equal and the coordinates are in the same order Format: ST_OrderingEquals(A: geometry, B: geometry) Since: v1.2.1 Spark SQL example 1: SELECT ST_OrderingEquals ( ST_GeomFromWKT ( 'POLYGON((2 0, 0 2, -2 0, 2 0))' ), ST_GeomFromWKT ( 'POLYGON((2 0, 0 2, -2 0, 2 0))' )) Output: true Spark SQL example 2: SELECT ST_OrderingEquals ( ST_GeomFromWKT ( 'POLYGON((2 0, 0 2, -2 0, 2 0))' ), ST_GeomFromWKT ( 'POLYGON((0 2, -2 0, 2 0, 0 2))' )) Output: false ST_Overlaps \u00b6 Introduction: Return true if A overlaps B Format: ST_Overlaps (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM geom WHERE ST_Overlaps ( geom . geom_a , geom . geom_b ) ST_Touches \u00b6 Introduction: Return true if A touches B Format: ST_Touches (A:geometry, B:geometry) Since: v1.0.0 SELECT * FROM pointdf WHERE ST_Touches ( pointdf . arealandmark , ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 )) ST_Within \u00b6 Introduction: Return true if A is fully contained by B Format: ST_Within (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Within ( pointdf . arealandmark , ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ))","title":"Predicate"},{"location":"api/sql/Predicate/#st_contains","text":"Introduction: Return true if A fully contains B Format: ST_Contains (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . arealandmark )","title":"ST_Contains"},{"location":"api/sql/Predicate/#st_crosses","text":"Introduction: Return true if A crosses B Format: ST_Crosses (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Crosses ( pointdf . arealandmark , ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ))","title":"ST_Crosses"},{"location":"api/sql/Predicate/#st_disjoint","text":"Introduction: Return true if A and B are disjoint Format: ST_Disjoint (A:geometry, B:geometry) Since: v1.2.1 Spark SQL example: SELECT * FROM geom WHERE ST_Disjoinnt ( geom . geom_a , geom . geom_b )","title":"ST_Disjoint"},{"location":"api/sql/Predicate/#st_equals","text":"Introduction: Return true if A equals to B Format: ST_Equals (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Equals ( pointdf . arealandmark , ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ))","title":"ST_Equals"},{"location":"api/sql/Predicate/#st_intersects","text":"Introduction: Return true if A intersects B Format: ST_Intersects (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Intersects ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . arealandmark )","title":"ST_Intersects"},{"location":"api/sql/Predicate/#st_orderingequals","text":"Introduction: Returns true if the geometries are equal and the coordinates are in the same order Format: ST_OrderingEquals(A: geometry, B: geometry) Since: v1.2.1 Spark SQL example 1: SELECT ST_OrderingEquals ( ST_GeomFromWKT ( 'POLYGON((2 0, 0 2, -2 0, 2 0))' ), ST_GeomFromWKT ( 'POLYGON((2 0, 0 2, -2 0, 2 0))' )) Output: true Spark SQL example 2: SELECT ST_OrderingEquals ( ST_GeomFromWKT ( 'POLYGON((2 0, 0 2, -2 0, 2 0))' ), ST_GeomFromWKT ( 'POLYGON((0 2, -2 0, 2 0, 0 2))' )) Output: false","title":"ST_OrderingEquals"},{"location":"api/sql/Predicate/#st_overlaps","text":"Introduction: Return true if A overlaps B Format: ST_Overlaps (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM geom WHERE ST_Overlaps ( geom . geom_a , geom . geom_b )","title":"ST_Overlaps"},{"location":"api/sql/Predicate/#st_touches","text":"Introduction: Return true if A touches B Format: ST_Touches (A:geometry, B:geometry) Since: v1.0.0 SELECT * FROM pointdf WHERE ST_Touches ( pointdf . arealandmark , ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ))","title":"ST_Touches"},{"location":"api/sql/Predicate/#st_within","text":"Introduction: Return true if A is fully contained by B Format: ST_Within (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Within ( pointdf . arealandmark , ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ))","title":"ST_Within"},{"location":"api/sql/Raster-loader/","text":"Geotiff Dataframe Loader \u00b6 Introduction: The GeoTiff loader of Sedona is a Spark built-in data source. It can read a single geotiff image or a number of geotiff images into a DataFrame. Since: v1.1.0 Spark SQL example: The input path could be a path to a single GeoTiff image or a directory of GeoTiff images. You can optionally append an option to drop invalid images. The geometry bound of each image is automatically loaded as a Sedona geometry and is transformed to WGS84 (EPSG:4326) reference system. var geotiffDF = sparkSession . read . format ( \"geotiff\" ). option ( \"dropInvalid\" , true ). load ( \"YOUR_PATH\" ) geotiffDF . printSchema () Output: |-- image: struct (nullable = true) | |-- origin: string (nullable = true) | |-- Geometry: geometry (nullable = true) | |-- height: integer (nullable = true) | |-- width: integer (nullable = true) | |-- nBands: integer (nullable = true) | |-- data: array (nullable = true) | | |-- element: double (containsNull = true) There are three more optional parameters for reading GeoTiff: |-- readfromCRS: Coordinate reference system of the geometry coordinates representing the location of the Geotiff. An example value of readfromCRS is EPSG:4326. |-- readToCRS: If you want to tranform the Geotiff location geometry coordinates to a different coordinate reference system, you can define the target coordinate reference system with this option. |-- disableErrorInCRS: (Default value false) => Indicates whether to ignore errors in CRS transformation. An example with all GeoTiff read options: var geotiffDF = sparkSession . read . format ( \"geotiff\" ). option ( \"dropInvalid\" , true ). option ( \"readFromCRS\" , \"EPSG:4499\" ). option ( \"readToCRS\" , \"EPSG:4326\" ). option ( \"disableErrorInCRS\" , true ). load ( \"YOUR_PATH\" ) geotiffDF . printSchema () Output: |-- image: struct (nullable = true) | |-- origin: string (nullable = true) | |-- Geometry: geometry (nullable = true) | |-- height: integer (nullable = true) | |-- width: integer (nullable = true) | |-- nBands: integer (nullable = true) | |-- data: array (nullable = true) | | |-- element: double (containsNull = true) You can also select sub-attributes individually to construct a new DataFrame geotiffDF = geotiffDF . selectExpr ( \"image.origin as origin\" , \"ST_GeomFromWkt(image.geometry) as Geom\" , \"image.height as height\" , \"image.width as width\" , \"image.data as data\" , \"image.nBands as bands\" ) geotiffDF . createOrReplaceTempView ( \"GeotiffDataframe\" ) geotiffDF . show () Output: +--------------------+--------------------+------+-----+--------------------+-----+ | origin| Geom|height|width| data|bands| +--------------------+--------------------+------+-----+--------------------+-----+ |file:///home/hp/D...|POLYGON ((-58.699...| 32| 32|[1058.0, 1039.0, ...| 4| |file:///home/hp/D...|POLYGON ((-58.297...| 32| 32|[1258.0, 1298.0, ...| 4| +--------------------+--------------------+------+-----+--------------------+-----+ Geotiff Dataframe Writer \u00b6 Introduction: You can write a GeoTiff dataframe as GeoTiff images using the spark write feature with the format geotiff . Since: v1.2.1 Spark SQL example: The schema of the GeoTiff dataframe to be written can be one of the following two schemas: |-- image: struct (nullable = true) | |-- origin: string (nullable = true) | |-- Geometry: geometry (nullable = true) | |-- height: integer (nullable = true) | |-- width: integer (nullable = true) | |-- nBands: integer (nullable = true) | |-- data: array (nullable = true) | | |-- element: double (containsNull = true) or |-- origin: string (nullable = true) |-- Geometry: geometry (nullable = true) |-- height: integer (nullable = true) |-- width: integer (nullable = true) |-- nBands: integer (nullable = true) |-- data: array (nullable = true) | |-- element: double (containsNull = true) Field names can be renamed, but schema should exactly match with one of the above two schemas. The output path could be a path to a directory where GeoTiff images will be saved. If the directory already exists, write should be called in overwrite mode. var dfToWrite = sparkSession . read . format ( \"geotiff\" ). option ( \"dropInvalid\" , true ). option ( \"readToCRS\" , \"EPSG:4326\" ). load ( \"PATH_TO_INPUT_GEOTIFF_IMAGES\" ) dfToWrite . write . format ( \"geotiff\" ). save ( \"DESTINATION_PATH\" ) You can override an existing path with the following approach: dfToWrite . write . mode ( \"overwrite\" ). format ( \"geotiff\" ). save ( \"DESTINATION_PATH\" ) You can also extract the columns nested within image column and write the dataframe as GeoTiff image. dfToWrite = dfToWrite . selectExpr ( \"image.origin as origin\" , \"image.geometry as geometry\" , \"image.height as height\" , \"image.width as width\" , \"image.data as data\" , \"image.nBands as nBands\" ) dfToWrite . write . mode ( \"overwrite\" ). format ( \"geotiff\" ). save ( \"DESTINATION_PATH\" ) If you want the saved GeoTiff images not to be distributed into multiple partitions, you can call coalesce to merge all files in a single partition. dfToWrite . coalesce ( 1 ). write . mode ( \"overwrite\" ). format ( \"geotiff\" ). save ( \"DESTINATION_PATH\" ) In case, you rename the columns of GeoTiff dataframe, you can set the corresponding column names with the option parameter. All available optional parameters are listed below: |-- writeToCRS: (Default value \"EPSG:4326\") => Coordinate reference system of the geometry coordinates representing the location of the Geotiff. |-- fieldImage: (Default value \"image\") => Indicates the image column of GeoTiff DataFrame. |-- fieldOrigin: (Default value \"origin\") => Indicates the origin column of GeoTiff DataFrame. |-- fieldNBands: (Default value \"nBands\") => Indicates the nBands column of GeoTiff DataFrame. |-- fieldWidth: (Default value \"width\") => Indicates the width column of GeoTiff DataFrame. |-- fieldHeight: (Default value \"height\") => Indicates the height column of GeoTiff DataFrame. |-- fieldGeometry: (Default value \"geometry\") => Indicates the geometry column of GeoTiff DataFrame. |-- fieldData: (Default value \"data\") => Indicates the data column of GeoTiff DataFrame. An example: dfToWrite = sparkSession . read . format ( \"geotiff\" ). option ( \"dropInvalid\" , true ). option ( \"readToCRS\" , \"EPSG:4326\" ). load ( \"PATH_TO_INPUT_GEOTIFF_IMAGES\" ) dfToWrite = dfToWrite . selectExpr ( \"image.origin as source\" , \"ST_GeomFromWkt(image.geometry) as geom\" , \"image.height as height\" , \"image.width as width\" , \"image.data as data\" , \"image.nBands as bands\" ) dfToWrite . write . mode ( \"overwrite\" ). format ( \"geotiff\" ). option ( \"writeToCRS\" , \"EPSG:4326\" ). option ( \"fieldOrigin\" , \"source\" ). option ( \"fieldGeometry\" , \"geom\" ). option ( \"fieldNBands\" , \"bands\" ). save ( \"DESTINATION_PATH\" ) RS_Array \u00b6 Introduction: Create an array that is filled by the given value Format: RS_Array(length:Int, value: Decimal) Since: v1.1.0 Spark SQL example: SELECT RS_Array ( height * width , 0.0 ) RS_Base64 \u00b6 Introduction: Return a Base64 String from a geotiff image Format: RS_Base64 (height:Int, width:Int, redBand: Array[Double], greenBand: Array[Double], blackBand: Array[Double], optional: alphaBand: Array[Double]) Since: v1.1.0 Spark SQL example: val BandDF = spark . sql ( \"select RS_Base64(h, w, band1, band2, RS_Array(h*w, 0)) as baseString from dataframe\" ) BandDF . show () Output: +--------------------+ | baseString| +--------------------+ |QJCIAAAAAABAkDwAA...| |QJOoAAAAAABAlEgAA...| +--------------------+ Note Although the 3 RGB bands are mandatory, you can use RS_Array(h*w, 0.0) to create an array (zeroed out, size = h * w) as input. RS_GetBand \u00b6 Introduction: Return a particular band from Geotiff Dataframe The number of total bands can be obtained from the GeoTiff loader Format: RS_GetBand (allBandValues: Array[Double], targetBand:Int, totalBands:Int) Since: v1.1.0 Note Index of targetBand starts from 1 (instead of 0). Index of the first band is 1. Spark SQL example: val BandDF = spark . sql ( \"select RS_GetBand(data, 2, Band) as targetBand from GeotiffDataframe\" ) BandDF . show () Output: +--------------------+ | targetBand| +--------------------+ |[1058.0, 1039.0, ...| |[1258.0, 1298.0, ...| +--------------------+ RS_HTML \u00b6 Introduction: Return a html img tag with the base64 string embedded Format: RS_HTML(base64:String, optional: width_in_px:String) Spark SQL example: df . selectExpr ( \"RS_HTML(encodedstring, '300') as htmlstring\" ). show () Output: +--------------------+ | htmlstring| +--------------------+ | < img src = \"data:im...| |<img src=\" data:im ...| + -------------------- +","title":"Raster input and output"},{"location":"api/sql/Raster-loader/#geotiff-dataframe-loader","text":"Introduction: The GeoTiff loader of Sedona is a Spark built-in data source. It can read a single geotiff image or a number of geotiff images into a DataFrame. Since: v1.1.0 Spark SQL example: The input path could be a path to a single GeoTiff image or a directory of GeoTiff images. You can optionally append an option to drop invalid images. The geometry bound of each image is automatically loaded as a Sedona geometry and is transformed to WGS84 (EPSG:4326) reference system. var geotiffDF = sparkSession . read . format ( \"geotiff\" ). option ( \"dropInvalid\" , true ). load ( \"YOUR_PATH\" ) geotiffDF . printSchema () Output: |-- image: struct (nullable = true) | |-- origin: string (nullable = true) | |-- Geometry: geometry (nullable = true) | |-- height: integer (nullable = true) | |-- width: integer (nullable = true) | |-- nBands: integer (nullable = true) | |-- data: array (nullable = true) | | |-- element: double (containsNull = true) There are three more optional parameters for reading GeoTiff: |-- readfromCRS: Coordinate reference system of the geometry coordinates representing the location of the Geotiff. An example value of readfromCRS is EPSG:4326. |-- readToCRS: If you want to tranform the Geotiff location geometry coordinates to a different coordinate reference system, you can define the target coordinate reference system with this option. |-- disableErrorInCRS: (Default value false) => Indicates whether to ignore errors in CRS transformation. An example with all GeoTiff read options: var geotiffDF = sparkSession . read . format ( \"geotiff\" ). option ( \"dropInvalid\" , true ). option ( \"readFromCRS\" , \"EPSG:4499\" ). option ( \"readToCRS\" , \"EPSG:4326\" ). option ( \"disableErrorInCRS\" , true ). load ( \"YOUR_PATH\" ) geotiffDF . printSchema () Output: |-- image: struct (nullable = true) | |-- origin: string (nullable = true) | |-- Geometry: geometry (nullable = true) | |-- height: integer (nullable = true) | |-- width: integer (nullable = true) | |-- nBands: integer (nullable = true) | |-- data: array (nullable = true) | | |-- element: double (containsNull = true) You can also select sub-attributes individually to construct a new DataFrame geotiffDF = geotiffDF . selectExpr ( \"image.origin as origin\" , \"ST_GeomFromWkt(image.geometry) as Geom\" , \"image.height as height\" , \"image.width as width\" , \"image.data as data\" , \"image.nBands as bands\" ) geotiffDF . createOrReplaceTempView ( \"GeotiffDataframe\" ) geotiffDF . show () Output: +--------------------+--------------------+------+-----+--------------------+-----+ | origin| Geom|height|width| data|bands| +--------------------+--------------------+------+-----+--------------------+-----+ |file:///home/hp/D...|POLYGON ((-58.699...| 32| 32|[1058.0, 1039.0, ...| 4| |file:///home/hp/D...|POLYGON ((-58.297...| 32| 32|[1258.0, 1298.0, ...| 4| +--------------------+--------------------+------+-----+--------------------+-----+","title":"Geotiff Dataframe Loader"},{"location":"api/sql/Raster-loader/#geotiff-dataframe-writer","text":"Introduction: You can write a GeoTiff dataframe as GeoTiff images using the spark write feature with the format geotiff . Since: v1.2.1 Spark SQL example: The schema of the GeoTiff dataframe to be written can be one of the following two schemas: |-- image: struct (nullable = true) | |-- origin: string (nullable = true) | |-- Geometry: geometry (nullable = true) | |-- height: integer (nullable = true) | |-- width: integer (nullable = true) | |-- nBands: integer (nullable = true) | |-- data: array (nullable = true) | | |-- element: double (containsNull = true) or |-- origin: string (nullable = true) |-- Geometry: geometry (nullable = true) |-- height: integer (nullable = true) |-- width: integer (nullable = true) |-- nBands: integer (nullable = true) |-- data: array (nullable = true) | |-- element: double (containsNull = true) Field names can be renamed, but schema should exactly match with one of the above two schemas. The output path could be a path to a directory where GeoTiff images will be saved. If the directory already exists, write should be called in overwrite mode. var dfToWrite = sparkSession . read . format ( \"geotiff\" ). option ( \"dropInvalid\" , true ). option ( \"readToCRS\" , \"EPSG:4326\" ). load ( \"PATH_TO_INPUT_GEOTIFF_IMAGES\" ) dfToWrite . write . format ( \"geotiff\" ). save ( \"DESTINATION_PATH\" ) You can override an existing path with the following approach: dfToWrite . write . mode ( \"overwrite\" ). format ( \"geotiff\" ). save ( \"DESTINATION_PATH\" ) You can also extract the columns nested within image column and write the dataframe as GeoTiff image. dfToWrite = dfToWrite . selectExpr ( \"image.origin as origin\" , \"image.geometry as geometry\" , \"image.height as height\" , \"image.width as width\" , \"image.data as data\" , \"image.nBands as nBands\" ) dfToWrite . write . mode ( \"overwrite\" ). format ( \"geotiff\" ). save ( \"DESTINATION_PATH\" ) If you want the saved GeoTiff images not to be distributed into multiple partitions, you can call coalesce to merge all files in a single partition. dfToWrite . coalesce ( 1 ). write . mode ( \"overwrite\" ). format ( \"geotiff\" ). save ( \"DESTINATION_PATH\" ) In case, you rename the columns of GeoTiff dataframe, you can set the corresponding column names with the option parameter. All available optional parameters are listed below: |-- writeToCRS: (Default value \"EPSG:4326\") => Coordinate reference system of the geometry coordinates representing the location of the Geotiff. |-- fieldImage: (Default value \"image\") => Indicates the image column of GeoTiff DataFrame. |-- fieldOrigin: (Default value \"origin\") => Indicates the origin column of GeoTiff DataFrame. |-- fieldNBands: (Default value \"nBands\") => Indicates the nBands column of GeoTiff DataFrame. |-- fieldWidth: (Default value \"width\") => Indicates the width column of GeoTiff DataFrame. |-- fieldHeight: (Default value \"height\") => Indicates the height column of GeoTiff DataFrame. |-- fieldGeometry: (Default value \"geometry\") => Indicates the geometry column of GeoTiff DataFrame. |-- fieldData: (Default value \"data\") => Indicates the data column of GeoTiff DataFrame. An example: dfToWrite = sparkSession . read . format ( \"geotiff\" ). option ( \"dropInvalid\" , true ). option ( \"readToCRS\" , \"EPSG:4326\" ). load ( \"PATH_TO_INPUT_GEOTIFF_IMAGES\" ) dfToWrite = dfToWrite . selectExpr ( \"image.origin as source\" , \"ST_GeomFromWkt(image.geometry) as geom\" , \"image.height as height\" , \"image.width as width\" , \"image.data as data\" , \"image.nBands as bands\" ) dfToWrite . write . mode ( \"overwrite\" ). format ( \"geotiff\" ). option ( \"writeToCRS\" , \"EPSG:4326\" ). option ( \"fieldOrigin\" , \"source\" ). option ( \"fieldGeometry\" , \"geom\" ). option ( \"fieldNBands\" , \"bands\" ). save ( \"DESTINATION_PATH\" )","title":"Geotiff Dataframe Writer"},{"location":"api/sql/Raster-loader/#rs_array","text":"Introduction: Create an array that is filled by the given value Format: RS_Array(length:Int, value: Decimal) Since: v1.1.0 Spark SQL example: SELECT RS_Array ( height * width , 0.0 )","title":"RS_Array"},{"location":"api/sql/Raster-loader/#rs_base64","text":"Introduction: Return a Base64 String from a geotiff image Format: RS_Base64 (height:Int, width:Int, redBand: Array[Double], greenBand: Array[Double], blackBand: Array[Double], optional: alphaBand: Array[Double]) Since: v1.1.0 Spark SQL example: val BandDF = spark . sql ( \"select RS_Base64(h, w, band1, band2, RS_Array(h*w, 0)) as baseString from dataframe\" ) BandDF . show () Output: +--------------------+ | baseString| +--------------------+ |QJCIAAAAAABAkDwAA...| |QJOoAAAAAABAlEgAA...| +--------------------+ Note Although the 3 RGB bands are mandatory, you can use RS_Array(h*w, 0.0) to create an array (zeroed out, size = h * w) as input.","title":"RS_Base64"},{"location":"api/sql/Raster-loader/#rs_getband","text":"Introduction: Return a particular band from Geotiff Dataframe The number of total bands can be obtained from the GeoTiff loader Format: RS_GetBand (allBandValues: Array[Double], targetBand:Int, totalBands:Int) Since: v1.1.0 Note Index of targetBand starts from 1 (instead of 0). Index of the first band is 1. Spark SQL example: val BandDF = spark . sql ( \"select RS_GetBand(data, 2, Band) as targetBand from GeotiffDataframe\" ) BandDF . show () Output: +--------------------+ | targetBand| +--------------------+ |[1058.0, 1039.0, ...| |[1258.0, 1298.0, ...| +--------------------+","title":"RS_GetBand"},{"location":"api/sql/Raster-loader/#rs_html","text":"Introduction: Return a html img tag with the base64 string embedded Format: RS_HTML(base64:String, optional: width_in_px:String) Spark SQL example: df . selectExpr ( \"RS_HTML(encodedstring, '300') as htmlstring\" ). show () Output: +--------------------+ | htmlstring| +--------------------+ | < img src = \"data:im...| |<img src=\" data:im ...| + -------------------- +","title":"RS_HTML"},{"location":"api/sql/Raster-operators/","text":"RS_Add \u00b6 Introduction: Add two spectral bands in a Geotiff image Format: RS_Add (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val sumDF = spark . sql ( \"select RS_Add(band1, band2) as sumOfBands from dataframe\" ) RS_Append \u00b6 Introduction: Appends a new band to the end of Geotiff image data and returns the new data. The new band to be appended can be a normalized difference index between two bands (example: NBR, NDBI). Normalized difference index between two bands can be calculated with RS_NormalizedDifference operator described earlier in this page. Specific bands can be retrieved using RS_GetBand operator described here . Format: RS_Append(data: Array[Double], newBand: Array[Double], nBands: Int) Since: v1.2.1 Spark SQL example: val dfAppended = spark . sql ( \"select RS_Append(data, normalizedDifference, nBands) as dataEdited from dataframe\" ) RS_BitwiseAND \u00b6 Introduction: Find Bitwise AND between two bands of Geotiff image Format: RS_BitwiseAND (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val biwiseandDF = spark . sql ( \"select RS_BitwiseAND(band1, band2) as andvalue from dataframe\" ) RS_BitwiseOR \u00b6 Introduction: Find Bitwise OR between two bands of Geotiff image Format: RS_BitwiseOR (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val biwiseorDF = spark . sql ( \"select RS_BitwiseOR(band1, band2) as or from dataframe\" ) RS_Count \u00b6 Introduction: Returns count of a particular value from a spectral band in a raster image Format: RS_Count (Band1: Array[Double], Target: Double) Since: v1.1.0 Spark SQL example: val countDF = spark . sql ( \"select RS_Count(band1, target) as count from dataframe\" ) RS_Divide \u00b6 Introduction: Divide band1 with band2 from a geotiff image Format: RS_Divide (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val multiplyDF = spark . sql ( \"select RS_Divide(band1, band2) as divideBands from dataframe\" ) RS_FetchRegion \u00b6 Introduction: Fetch a subset of region from given Geotiff image based on minimumX, minimumY, maximumX and maximumY index as well original height and width of image Format: RS_FetchRegion (Band: Array[Double], coordinates: Array[Int], dimenstions: Array[Int]) Since: v1.1.0 Spark SQL example: val region = spark . sql ( \"select RS_FetchRegion(Band,Array(0, 0, 1, 2),Array(3, 3)) as Region from dataframe\" ) RS_GreaterThan \u00b6 Introduction: Mask all the values with 1 which are greater than a particular target value Format: RS_GreaterThan (Band: Array[Double], Target: Double) Since: v1.1.0 Spark SQL example: val greaterDF = spark . sql ( \"select RS_GreaterThan(band, target) as maskedvalues from dataframe\" ) RS_GreaterThanEqual \u00b6 Introduction: Mask all the values with 1 which are greater than equal to a particular target value Format: RS_GreaterThanEqual (Band: Array[Double], Target: Double) Since: v1.1.0 Spark SQL example: val greaterEqualDF = spark . sql ( \"select RS_GreaterThanEqual(band, target) as maskedvalues from dataframe\" ) RS_LessThan \u00b6 Introduction: Mask all the values with 1 which are less than a particular target value Format: RS_LessThan (Band: Array[Double], Target: Double) Since: v1.1.0 Spark SQL example: val lessDF = spark . sql ( \"select RS_LessThan(band, target) as maskedvalues from dataframe\" ) RS_LessThanEqual \u00b6 Introduction: Mask all the values with 1 which are less than equal to a particular target value Format: RS_LessThanEqual (Band: Array[Double], Target: Double) Since: v1.1.0 Spark SQL example: val lessEqualDF = spark . sql ( \"select RS_LessThanEqual(band, target) as maskedvalues from dataframe\" ) RS_LogicalDifference \u00b6 Introduction: Return value from band 1 if a value in band1 and band2 are different, else return 0 Format: RS_LogicalDifference (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val logicalDifference = spark . sql ( \"select RS_LogicalDifference(band1, band2) as logdifference from dataframe\" ) RS_LogicalOver \u00b6 Introduction: Return value from band1 if it's not equal to 0, else return band2 value Format: RS_LogicalOver (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val logicalOver = spark . sql ( \"select RS_LogicalOver(band1, band2) as logover from dataframe\" ) RS_Mean \u00b6 Introduction: Returns Mean value for a spectral band in a Geotiff image Format: RS_Mean (Band: Array[Double]) Since: v1.1.0 Spark SQL example: val meanDF = spark . sql ( \"select RS_Mean(band) as mean from dataframe\" ) RS_Mode \u00b6 Introduction: Returns Mode from a spectral band in a Geotiff image in form of an array Format: RS_Mode (Band: Array[Double]) Since: v1.1.0 Spark SQL example: val modeDF = spark . sql ( \"select RS_Mode(band) as mode from dataframe\" ) RS_Modulo \u00b6 Introduction: Find modulo of pixels with respect to a particular value Format: RS_Modulo (Band: Array[Double], Target: Double) Since: v1.1.0 Spark SQL example: val moduloDF = spark . sql ( \"select RS_Modulo(band, target) as modulo from dataframe\" ) RS_Multiply \u00b6 Introduction: Multiply two spectral bands in a Geotiff image Format: RS_Multiply (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val multiplyDF = spark . sql ( \"select RS_Multiply(band1, band2) as multiplyBands from dataframe\" ) RS_MultiplyFactor \u00b6 Introduction: Multiply a factor to a spectral band in a geotiff image Format: RS_MultiplyFactor (Band1: Array[Double], Factor: Int) Since: v1.1.0 Spark SQL example: val multiplyFactorDF = spark . sql ( \"select RS_MultiplyFactor(band1, 2) as multiplyfactor from dataframe\" ) RS_Normalize \u00b6 Introduction: Normalize the value in the array to [0, 255] Since: v1.1.0 Spark SQL example SELECT RS_Normalize ( band ) RS_NormalizedDifference \u00b6 Introduction: Returns Normalized Difference between two bands(band2 and band1) in a Geotiff image(example: NDVI, NDBI) Format: RS_NormalizedDifference (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val normalizedDF = spark . sql ( \"select RS_NormalizedDifference(band1, band2) as normdifference from dataframe\" ) RS_SquareRoot \u00b6 Introduction: Find Square root of band values in a geotiff image Format: RS_SquareRoot (Band: Array[Double]) Since: v1.1.0 Spark SQL example: val rootDF = spark . sql ( \"select RS_SquareRoot(band) as squareroot from dataframe\" ) RS_Subtract \u00b6 Introduction: Subtract two spectral bands in a Geotiff image(band2 - band1) Format: RS_Subtract (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val subtractDF = spark . sql ( \"select RS_Subtract(band1, band2) as differenceOfOfBands from dataframe\" )","title":"Raster operators"},{"location":"api/sql/Raster-operators/#rs_add","text":"Introduction: Add two spectral bands in a Geotiff image Format: RS_Add (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val sumDF = spark . sql ( \"select RS_Add(band1, band2) as sumOfBands from dataframe\" )","title":"RS_Add"},{"location":"api/sql/Raster-operators/#rs_append","text":"Introduction: Appends a new band to the end of Geotiff image data and returns the new data. The new band to be appended can be a normalized difference index between two bands (example: NBR, NDBI). Normalized difference index between two bands can be calculated with RS_NormalizedDifference operator described earlier in this page. Specific bands can be retrieved using RS_GetBand operator described here . Format: RS_Append(data: Array[Double], newBand: Array[Double], nBands: Int) Since: v1.2.1 Spark SQL example: val dfAppended = spark . sql ( \"select RS_Append(data, normalizedDifference, nBands) as dataEdited from dataframe\" )","title":"RS_Append"},{"location":"api/sql/Raster-operators/#rs_bitwiseand","text":"Introduction: Find Bitwise AND between two bands of Geotiff image Format: RS_BitwiseAND (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val biwiseandDF = spark . sql ( \"select RS_BitwiseAND(band1, band2) as andvalue from dataframe\" )","title":"RS_BitwiseAND"},{"location":"api/sql/Raster-operators/#rs_bitwiseor","text":"Introduction: Find Bitwise OR between two bands of Geotiff image Format: RS_BitwiseOR (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val biwiseorDF = spark . sql ( \"select RS_BitwiseOR(band1, band2) as or from dataframe\" )","title":"RS_BitwiseOR"},{"location":"api/sql/Raster-operators/#rs_count","text":"Introduction: Returns count of a particular value from a spectral band in a raster image Format: RS_Count (Band1: Array[Double], Target: Double) Since: v1.1.0 Spark SQL example: val countDF = spark . sql ( \"select RS_Count(band1, target) as count from dataframe\" )","title":"RS_Count"},{"location":"api/sql/Raster-operators/#rs_divide","text":"Introduction: Divide band1 with band2 from a geotiff image Format: RS_Divide (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val multiplyDF = spark . sql ( \"select RS_Divide(band1, band2) as divideBands from dataframe\" )","title":"RS_Divide"},{"location":"api/sql/Raster-operators/#rs_fetchregion","text":"Introduction: Fetch a subset of region from given Geotiff image based on minimumX, minimumY, maximumX and maximumY index as well original height and width of image Format: RS_FetchRegion (Band: Array[Double], coordinates: Array[Int], dimenstions: Array[Int]) Since: v1.1.0 Spark SQL example: val region = spark . sql ( \"select RS_FetchRegion(Band,Array(0, 0, 1, 2),Array(3, 3)) as Region from dataframe\" )","title":"RS_FetchRegion"},{"location":"api/sql/Raster-operators/#rs_greaterthan","text":"Introduction: Mask all the values with 1 which are greater than a particular target value Format: RS_GreaterThan (Band: Array[Double], Target: Double) Since: v1.1.0 Spark SQL example: val greaterDF = spark . sql ( \"select RS_GreaterThan(band, target) as maskedvalues from dataframe\" )","title":"RS_GreaterThan"},{"location":"api/sql/Raster-operators/#rs_greaterthanequal","text":"Introduction: Mask all the values with 1 which are greater than equal to a particular target value Format: RS_GreaterThanEqual (Band: Array[Double], Target: Double) Since: v1.1.0 Spark SQL example: val greaterEqualDF = spark . sql ( \"select RS_GreaterThanEqual(band, target) as maskedvalues from dataframe\" )","title":"RS_GreaterThanEqual"},{"location":"api/sql/Raster-operators/#rs_lessthan","text":"Introduction: Mask all the values with 1 which are less than a particular target value Format: RS_LessThan (Band: Array[Double], Target: Double) Since: v1.1.0 Spark SQL example: val lessDF = spark . sql ( \"select RS_LessThan(band, target) as maskedvalues from dataframe\" )","title":"RS_LessThan"},{"location":"api/sql/Raster-operators/#rs_lessthanequal","text":"Introduction: Mask all the values with 1 which are less than equal to a particular target value Format: RS_LessThanEqual (Band: Array[Double], Target: Double) Since: v1.1.0 Spark SQL example: val lessEqualDF = spark . sql ( \"select RS_LessThanEqual(band, target) as maskedvalues from dataframe\" )","title":"RS_LessThanEqual"},{"location":"api/sql/Raster-operators/#rs_logicaldifference","text":"Introduction: Return value from band 1 if a value in band1 and band2 are different, else return 0 Format: RS_LogicalDifference (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val logicalDifference = spark . sql ( \"select RS_LogicalDifference(band1, band2) as logdifference from dataframe\" )","title":"RS_LogicalDifference"},{"location":"api/sql/Raster-operators/#rs_logicalover","text":"Introduction: Return value from band1 if it's not equal to 0, else return band2 value Format: RS_LogicalOver (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val logicalOver = spark . sql ( \"select RS_LogicalOver(band1, band2) as logover from dataframe\" )","title":"RS_LogicalOver"},{"location":"api/sql/Raster-operators/#rs_mean","text":"Introduction: Returns Mean value for a spectral band in a Geotiff image Format: RS_Mean (Band: Array[Double]) Since: v1.1.0 Spark SQL example: val meanDF = spark . sql ( \"select RS_Mean(band) as mean from dataframe\" )","title":"RS_Mean"},{"location":"api/sql/Raster-operators/#rs_mode","text":"Introduction: Returns Mode from a spectral band in a Geotiff image in form of an array Format: RS_Mode (Band: Array[Double]) Since: v1.1.0 Spark SQL example: val modeDF = spark . sql ( \"select RS_Mode(band) as mode from dataframe\" )","title":"RS_Mode"},{"location":"api/sql/Raster-operators/#rs_modulo","text":"Introduction: Find modulo of pixels with respect to a particular value Format: RS_Modulo (Band: Array[Double], Target: Double) Since: v1.1.0 Spark SQL example: val moduloDF = spark . sql ( \"select RS_Modulo(band, target) as modulo from dataframe\" )","title":"RS_Modulo"},{"location":"api/sql/Raster-operators/#rs_multiply","text":"Introduction: Multiply two spectral bands in a Geotiff image Format: RS_Multiply (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val multiplyDF = spark . sql ( \"select RS_Multiply(band1, band2) as multiplyBands from dataframe\" )","title":"RS_Multiply"},{"location":"api/sql/Raster-operators/#rs_multiplyfactor","text":"Introduction: Multiply a factor to a spectral band in a geotiff image Format: RS_MultiplyFactor (Band1: Array[Double], Factor: Int) Since: v1.1.0 Spark SQL example: val multiplyFactorDF = spark . sql ( \"select RS_MultiplyFactor(band1, 2) as multiplyfactor from dataframe\" )","title":"RS_MultiplyFactor"},{"location":"api/sql/Raster-operators/#rs_normalize","text":"Introduction: Normalize the value in the array to [0, 255] Since: v1.1.0 Spark SQL example SELECT RS_Normalize ( band )","title":"RS_Normalize"},{"location":"api/sql/Raster-operators/#rs_normalizeddifference","text":"Introduction: Returns Normalized Difference between two bands(band2 and band1) in a Geotiff image(example: NDVI, NDBI) Format: RS_NormalizedDifference (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val normalizedDF = spark . sql ( \"select RS_NormalizedDifference(band1, band2) as normdifference from dataframe\" )","title":"RS_NormalizedDifference"},{"location":"api/sql/Raster-operators/#rs_squareroot","text":"Introduction: Find Square root of band values in a geotiff image Format: RS_SquareRoot (Band: Array[Double]) Since: v1.1.0 Spark SQL example: val rootDF = spark . sql ( \"select RS_SquareRoot(band) as squareroot from dataframe\" )","title":"RS_SquareRoot"},{"location":"api/sql/Raster-operators/#rs_subtract","text":"Introduction: Subtract two spectral bands in a Geotiff image(band2 - band1) Format: RS_Subtract (Band1: Array[Double], Band2: Array[Double]) Since: v1.1.0 Spark SQL example: val subtractDF = spark . sql ( \"select RS_Subtract(band1, band2) as differenceOfOfBands from dataframe\" )","title":"RS_Subtract"},{"location":"api/viz/java-api/","text":"Please read Javadoc Note: Scala can call Java APIs seamlessly. That means Scala users use the same APIs with Java users","title":"RDD"},{"location":"api/viz/sql/","text":"Quick start \u00b6 The detailed explanation is here: Visualize Spatial DataFrame/RDD . Add Sedona-core, Sedona-SQL,Sedona-Viz into your project POM.xml or build.sbt Declare your Spark Session sparkSession = SparkSession . builder (). config ( \"spark.serializer\" , \"org.apache.spark.serializer.KryoSerializer\" ). config ( \"spark.kryo.registrator\" , \"org.apache.sedona.viz.core.Serde.SedonaVizKryoRegistrator\" ). master ( \"local[*]\" ). appName ( \"mySedonaVizDemo\" ). getOrCreate () Add the following lines after your SparkSession declaration: SedonaSQLRegistrator . registerAll ( sparkSession ) SedonaVizRegistrator . registerAll ( sparkSession ) Regular functions \u00b6 ST_Colorize \u00b6 Introduction: Given the weight of a pixel, return the corresponding color. The weight can be the spatial aggregation of spatial objects or spatial observations such as temperature and humidity. Note The color is encoded to an Integer type value in DataFrame. When you print it, it will show some nonsense values. You can just treat them as colors in GeoSparkViz. Format: ST_Colorize (weight:Double, maxWeight:Double, mandatory color: string (Optional)) Since: v1.0.0 Produce various colors - heat map \u00b6 This function will normalize the weight according to the max weight among all pixels. Different pixel obtains different color. Spark SQL example: SELECT pixels . px , ST_Colorize ( pixels . weight , 999 ) AS color FROM pixels Produce uniform colors - scatter plot \u00b6 If a mandatory color name is put as the third input argument, this function will directly ouput this color, without considering the weights. In this case, every pixel will possess the same color. Spark SQL example: SELECT pixels . px , ST_Colorize ( pixels . weight , 999 , 'red' ) AS color FROM pixels Here are some example color names can be entered: \"firebrick\" \"#aa38e0\" \"0x40A8CC\" \"rgba(112,36,228,0.9)\" Please refer to AWT Colors for a list of pre-defined colors. ST_EncodeImage \u00b6 Introduction: Return the base64 string representation of a Java PNG BufferedImage. This is specific for the server-client environment. For example, transfer the base64 string from GeoSparkViz to Apache Zeppelin. Format: ST_EncodeImage (A:image) Since: v1.0.0 Spark SQL example: SELECT ST_EncodeImage ( images . img ) FROM images ST_Pixelize \u00b6 Introduction: Convert a geometry to an array of pixels given a resolution You should use it together with Lateral View and Explode Format: ST_Pixelize (A:geometry, ResolutionX:int, ResolutionY:int, Boundary:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Pixelize ( shape , 256 , 256 , ( ST_Envelope_Aggr ( shape ) FROM pointtable )) FROM polygondf ST_TileName \u00b6 Introduction: Return the map tile name for a given zoom level. Please refer to OpenStreetMap ZoomLevel and OpenStreetMap tile name . Note Tile name is formatted as a \"Z-X-Y\" string. Z is zoom level. X is tile coordinate on X axis. Y is tile coordinate on Y axis. Format: ST_TileName (A:pixel, ZoomLevel:int) Since: v1.0.0 Spark SQL example: SELECT ST_TileName ( pixels . px , 3 ) FROM pixels Aggregate functions \u00b6 ST_Render \u00b6 Introduction: Given a group of pixels and their colors, return a single Java PNG BufferedImage. The 3 rd parameter is optional and it is the zoom level. You should use zoom level when you want to render tiles, instead of a single image. Format: ST_Render (A:pixel, B:color, C:Integer - optional zoom level) Since: v1.0.0 Spark SQL example: SELECT tilename , ST_Render ( pixels . px , pixels . color ) AS tileimg FROM pixels GROUP BY tilename","title":"DataFrame/SQL"},{"location":"api/viz/sql/#quick-start","text":"The detailed explanation is here: Visualize Spatial DataFrame/RDD . Add Sedona-core, Sedona-SQL,Sedona-Viz into your project POM.xml or build.sbt Declare your Spark Session sparkSession = SparkSession . builder (). config ( \"spark.serializer\" , \"org.apache.spark.serializer.KryoSerializer\" ). config ( \"spark.kryo.registrator\" , \"org.apache.sedona.viz.core.Serde.SedonaVizKryoRegistrator\" ). master ( \"local[*]\" ). appName ( \"mySedonaVizDemo\" ). getOrCreate () Add the following lines after your SparkSession declaration: SedonaSQLRegistrator . registerAll ( sparkSession ) SedonaVizRegistrator . registerAll ( sparkSession )","title":"Quick start"},{"location":"api/viz/sql/#regular-functions","text":"","title":"Regular functions"},{"location":"api/viz/sql/#st_colorize","text":"Introduction: Given the weight of a pixel, return the corresponding color. The weight can be the spatial aggregation of spatial objects or spatial observations such as temperature and humidity. Note The color is encoded to an Integer type value in DataFrame. When you print it, it will show some nonsense values. You can just treat them as colors in GeoSparkViz. Format: ST_Colorize (weight:Double, maxWeight:Double, mandatory color: string (Optional)) Since: v1.0.0","title":"ST_Colorize"},{"location":"api/viz/sql/#st_encodeimage","text":"Introduction: Return the base64 string representation of a Java PNG BufferedImage. This is specific for the server-client environment. For example, transfer the base64 string from GeoSparkViz to Apache Zeppelin. Format: ST_EncodeImage (A:image) Since: v1.0.0 Spark SQL example: SELECT ST_EncodeImage ( images . img ) FROM images","title":"ST_EncodeImage"},{"location":"api/viz/sql/#st_pixelize","text":"Introduction: Convert a geometry to an array of pixels given a resolution You should use it together with Lateral View and Explode Format: ST_Pixelize (A:geometry, ResolutionX:int, ResolutionY:int, Boundary:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Pixelize ( shape , 256 , 256 , ( ST_Envelope_Aggr ( shape ) FROM pointtable )) FROM polygondf","title":"ST_Pixelize"},{"location":"api/viz/sql/#st_tilename","text":"Introduction: Return the map tile name for a given zoom level. Please refer to OpenStreetMap ZoomLevel and OpenStreetMap tile name . Note Tile name is formatted as a \"Z-X-Y\" string. Z is zoom level. X is tile coordinate on X axis. Y is tile coordinate on Y axis. Format: ST_TileName (A:pixel, ZoomLevel:int) Since: v1.0.0 Spark SQL example: SELECT ST_TileName ( pixels . px , 3 ) FROM pixels","title":"ST_TileName"},{"location":"api/viz/sql/#aggregate-functions","text":"","title":"Aggregate functions"},{"location":"api/viz/sql/#st_render","text":"Introduction: Given a group of pixels and their colors, return a single Java PNG BufferedImage. The 3 rd parameter is optional and it is the zoom level. You should use zoom level when you want to render tiles, instead of a single image. Format: ST_Render (A:pixel, B:color, C:Integer - optional zoom level) Since: v1.0.0 Spark SQL example: SELECT tilename , ST_Render ( pixels . px , pixels . color ) AS tileimg FROM pixels GROUP BY tilename","title":"ST_Render"},{"location":"archive/api/GeoSpark-Python-API/","text":"Will be available soon.","title":"Python doc"},{"location":"archive/api/GeoSpark-Scala-and-Java-API/","text":"Scala and Java API \u00b6 GeoSpark Scala and Java API: http://www.public.asu.edu/~jiayu2/geospark/javadoc/ The \"SNAPSHOT\" folder has the API for the latest GeoSpark SNAPSHOT version. Note: Scala can call Java APIs seamlessly. That means GeoSpark Scala users use the same APIs with GeoSpark Java users.","title":"Scala/Java doc"},{"location":"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api","text":"GeoSpark Scala and Java API: http://www.public.asu.edu/~jiayu2/geospark/javadoc/ The \"SNAPSHOT\" folder has the API for the latest GeoSpark SNAPSHOT version. Note: Scala can call Java APIs seamlessly. That means GeoSpark Scala users use the same APIs with GeoSpark Java users.","title":"Scala and Java API"},{"location":"archive/api/sql/GeoSparkSQL-AggregateFunction/","text":"ST_Envelope_Aggr \u00b6 Introduction: Return the entire envelope boundary of all geometries in A Format: ST_Envelope_Aggr (A:geometryColumn) Since: v1.0.0 Spark SQL example: SELECT ST_Envelope_Aggr ( pointdf . arealandmark ) FROM pointdf ST_Union_Aggr \u00b6 Introduction: Return the polygon union of all polygons in A Format: ST_Union_Aggr (A:geometryColumn) Since: v1.0.0 Spark SQL example: SELECT ST_Union_Aggr ( polygondf . polygonshape ) FROM polygondf ST_Intersection_Aggr \u00b6 Introduction: Return the polygon intersection of all polygons in A Format: ST_Intersection_Aggr (A:geometryColumn) Since: v1.2.1 Spark SQL example: SELECT ST_Intersection_Aggr ( polygondf . polygonshape ) FROM polygondf","title":"Aggregate function"},{"location":"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr","text":"Introduction: Return the entire envelope boundary of all geometries in A Format: ST_Envelope_Aggr (A:geometryColumn) Since: v1.0.0 Spark SQL example: SELECT ST_Envelope_Aggr ( pointdf . arealandmark ) FROM pointdf","title":"ST_Envelope_Aggr"},{"location":"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr","text":"Introduction: Return the polygon union of all polygons in A Format: ST_Union_Aggr (A:geometryColumn) Since: v1.0.0 Spark SQL example: SELECT ST_Union_Aggr ( polygondf . polygonshape ) FROM polygondf","title":"ST_Union_Aggr"},{"location":"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr","text":"Introduction: Return the polygon intersection of all polygons in A Format: ST_Intersection_Aggr (A:geometryColumn) Since: v1.2.1 Spark SQL example: SELECT ST_Intersection_Aggr ( polygondf . polygonshape ) FROM polygondf","title":"ST_Intersection_Aggr"},{"location":"archive/api/sql/GeoSparkSQL-Constructor/","text":"Note UUIDs ensure the shape uniqueness of a geometry. It can be any strings. This is only needed when you want to convert an Spatial DataFrame to an Spatial RDD and let each geometry carry some non-spatial attributes (e.g., price, age, ...). ST_GeomFromWKT \u00b6 Introduction: Construct a Geometry from Wkt. Unlimited UUID strings can be appended. Format: ST_GeomFromWKT (Wkt:string, UUID1, UUID2, ...) Since: v1.0.0 Spark SQL example: SELECT ST_GeomFromWKT ( polygontable . _c0 ) AS polygonshape FROM polygontable SELECT ST_GeomFromWKT ( 'POINT(40.7128,-74.0060)' ) AS geometry ST_GeomFromWKB \u00b6 Introduction: Construct a Geometry from WKB string. Unlimited UUID strings can be appended. Format: ST_GeomFromWKB (Wkb:string, UUID1, UUID2, ...) Since: v1.2.0 Spark SQL example: SELECT ST_GeomFromWKB ( polygontable . _c0 ) AS polygonshape FROM polygontable ST_GeomFromGeoJSON \u00b6 Introduction: Construct a Geometry from GeoJson. Unlimited UUID strings can be appended. Format: ST_GeomFromGeoJSON (GeoJson:string, UUID1, UUID2, ...) Since: v1.0.0 Spark SQL example: var polygonJsonDf = sparkSession . read . format ( \"csv\" ). option ( \"delimiter\" , \"\\t\" ). option ( \"header\" , \"false\" ). load ( geoJsonGeomInputLocation ) polygonJsonDf . createOrReplaceTempView ( \"polygontable\" ) polygonJsonDf . show () var polygonDf = sparkSession . sql ( \"\"\" | SELECT ST_GeomFromGeoJSON(polygontable._c0) AS countyshape | FROM polygontable \"\"\" . stripMargin ) polygonDf . show () Warning The way that GeoSparkSQL reads GeoJSON is different from that in SparkSQL Read ESRI Shapefile \u00b6 Introduction: Construct a DataFrame from a Shapefile Since: v1.0.0 SparkSQL example: var spatialRDD = new SpatialRDD [ Geometry ] spatialRDD . rawSpatialRDD = ShapefileReader . readToGeometryRDD ( sparkSession . sparkContext , shapefileInputLocation ) var rawSpatialDf = Adapter . toDf ( spatialRDD , sparkSession ) rawSpatialDf . createOrReplaceTempView ( \"rawSpatialDf\" ) var spatialDf = sparkSession . sql ( \"\"\" | ST_GeomFromWKT(rddshape), _c1, _c2 | FROM rawSpatialDf \"\"\" . stripMargin ) spatialDf . show () spatialDf . printSchema () Note The file extensions of .shp, .shx, .dbf must be in lowercase. Assume you have a shape file called myShapefile , the file structure should be like this: - shapefile1 - shapefile2 - myshapefile - myshapefile.shp - myshapefile.shx - myshapefile.dbf - myshapefile... - ... Warning Please make sure you use ST_GeomFromWKT to create Geometry type column otherwise that column cannot be used in GeoSparkSQL. If the file you are reading contains non-ASCII characters you'll need to explicitly set the encoding via geospark.global.charset system property before the call to ShapefileReader.readToGeometryRDD . Example: System . setProperty ( \"geospark.global.charset\" , \"utf8\" ) ST_Point \u00b6 Introduction: Construct a Point from X and Y. Unlimited UUID strings can be appended. Format: ST_Point (X:decimal, Y:decimal, UUID1, UUID2, ...) Since: v1.0.0 Spark SQL example: SELECT ST_Point ( CAST ( pointtable . _c0 AS Decimal ( 24 , 20 )), CAST ( pointtable . _c1 AS Decimal ( 24 , 20 ))) AS pointshape FROM pointtable ST_PointFromText \u00b6 Introduction: Construct a Point from Text, delimited by Delimiter. Unlimited UUID strings can be appended. Format: ST_PointFromText (Text:string, Delimiter:char, UUID1, UUID2, ...) Since: v1.0.0 Spark SQL example: SELECT ST_PointFromText ( pointtable . _c0 , ',' ) AS pointshape FROM pointtable SELECT ST_PointFromText ( '40.7128,-74.0060' , ',' ) AS pointshape ST_PolygonFromText \u00b6 Introduction: Construct a Polygon from Text, delimited by Delimiter. Path must be closed. Unlimited UUID strings can be appended. Format: ST_PolygonFromText (Text:string, Delimiter:char, UUID1, UUID2, ...) Since: v1.0.0 Spark SQL example: SELECT ST_PolygonFromText ( polygontable . _c0 , ',' ) AS polygonshape FROM polygontable SELECT ST_PolygonFromText ( '-74.0428197,40.6867969,-74.0421975,40.6921336,-74.0508020,40.6912794,-74.0428197,40.6867969' , ',' ) AS polygonshape ST_LineStringFromText \u00b6 Introduction: Construct a LineString from Text, delimited by Delimiter. Unlimited UUID strings can be appended. Format: ST_LineStringFromText (Text:string, Delimiter:char, UUID1, UUID2, ...) Since: v1.0.0 Spark SQL example: SELECT ST_LineStringFromText ( linestringtable . _c0 , ',' ) AS linestringshape FROM linestringtable SELECT ST_LineStringFromText ( '-74.0428197,40.6867969,-74.0421975,40.6921336,-74.0508020,40.6912794' , ',' ) AS linestringshape ST_PolygonFromEnvelope \u00b6 Introduction: Construct a Polygon from MinX, MinY, MaxX, MaxY. Unlimited UUID strings can be appended. Format: ST_PolygonFromEnvelope (MinX:decimal, MinY:decimal, MaxX:decimal, MaxY:decimal, UUID1, UUID2, ...) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . pointshape ) ST_Circle \u00b6 Introduction: Construct a Circle from A with a Radius. Format: ST_Circle (A:Geometry, Radius:decimal) Since: v1.0.0 - v1.1.3 Spark SQL example: SELECT ST_Circle ( pointdf . pointshape , 1 . 0 ) FROM pointdf Note GeoSpark doesn't control the radius's unit (degree or meter). It is same with the geometry. To change the geometry's unit, please transform the coordinate reference system. See ST_Transform .","title":"Constructor"},{"location":"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt","text":"Introduction: Construct a Geometry from Wkt. Unlimited UUID strings can be appended. Format: ST_GeomFromWKT (Wkt:string, UUID1, UUID2, ...) Since: v1.0.0 Spark SQL example: SELECT ST_GeomFromWKT ( polygontable . _c0 ) AS polygonshape FROM polygontable SELECT ST_GeomFromWKT ( 'POINT(40.7128,-74.0060)' ) AS geometry","title":"ST_GeomFromWKT"},{"location":"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb","text":"Introduction: Construct a Geometry from WKB string. Unlimited UUID strings can be appended. Format: ST_GeomFromWKB (Wkb:string, UUID1, UUID2, ...) Since: v1.2.0 Spark SQL example: SELECT ST_GeomFromWKB ( polygontable . _c0 ) AS polygonshape FROM polygontable","title":"ST_GeomFromWKB"},{"location":"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson","text":"Introduction: Construct a Geometry from GeoJson. Unlimited UUID strings can be appended. Format: ST_GeomFromGeoJSON (GeoJson:string, UUID1, UUID2, ...) Since: v1.0.0 Spark SQL example: var polygonJsonDf = sparkSession . read . format ( \"csv\" ). option ( \"delimiter\" , \"\\t\" ). option ( \"header\" , \"false\" ). load ( geoJsonGeomInputLocation ) polygonJsonDf . createOrReplaceTempView ( \"polygontable\" ) polygonJsonDf . show () var polygonDf = sparkSession . sql ( \"\"\" | SELECT ST_GeomFromGeoJSON(polygontable._c0) AS countyshape | FROM polygontable \"\"\" . stripMargin ) polygonDf . show () Warning The way that GeoSparkSQL reads GeoJSON is different from that in SparkSQL","title":"ST_GeomFromGeoJSON"},{"location":"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile","text":"Introduction: Construct a DataFrame from a Shapefile Since: v1.0.0 SparkSQL example: var spatialRDD = new SpatialRDD [ Geometry ] spatialRDD . rawSpatialRDD = ShapefileReader . readToGeometryRDD ( sparkSession . sparkContext , shapefileInputLocation ) var rawSpatialDf = Adapter . toDf ( spatialRDD , sparkSession ) rawSpatialDf . createOrReplaceTempView ( \"rawSpatialDf\" ) var spatialDf = sparkSession . sql ( \"\"\" | ST_GeomFromWKT(rddshape), _c1, _c2 | FROM rawSpatialDf \"\"\" . stripMargin ) spatialDf . show () spatialDf . printSchema () Note The file extensions of .shp, .shx, .dbf must be in lowercase. Assume you have a shape file called myShapefile , the file structure should be like this: - shapefile1 - shapefile2 - myshapefile - myshapefile.shp - myshapefile.shx - myshapefile.dbf - myshapefile... - ... Warning Please make sure you use ST_GeomFromWKT to create Geometry type column otherwise that column cannot be used in GeoSparkSQL. If the file you are reading contains non-ASCII characters you'll need to explicitly set the encoding via geospark.global.charset system property before the call to ShapefileReader.readToGeometryRDD . Example: System . setProperty ( \"geospark.global.charset\" , \"utf8\" )","title":"Read ESRI Shapefile"},{"location":"archive/api/sql/GeoSparkSQL-Constructor/#st_point","text":"Introduction: Construct a Point from X and Y. Unlimited UUID strings can be appended. Format: ST_Point (X:decimal, Y:decimal, UUID1, UUID2, ...) Since: v1.0.0 Spark SQL example: SELECT ST_Point ( CAST ( pointtable . _c0 AS Decimal ( 24 , 20 )), CAST ( pointtable . _c1 AS Decimal ( 24 , 20 ))) AS pointshape FROM pointtable","title":"ST_Point"},{"location":"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext","text":"Introduction: Construct a Point from Text, delimited by Delimiter. Unlimited UUID strings can be appended. Format: ST_PointFromText (Text:string, Delimiter:char, UUID1, UUID2, ...) Since: v1.0.0 Spark SQL example: SELECT ST_PointFromText ( pointtable . _c0 , ',' ) AS pointshape FROM pointtable SELECT ST_PointFromText ( '40.7128,-74.0060' , ',' ) AS pointshape","title":"ST_PointFromText"},{"location":"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext","text":"Introduction: Construct a Polygon from Text, delimited by Delimiter. Path must be closed. Unlimited UUID strings can be appended. Format: ST_PolygonFromText (Text:string, Delimiter:char, UUID1, UUID2, ...) Since: v1.0.0 Spark SQL example: SELECT ST_PolygonFromText ( polygontable . _c0 , ',' ) AS polygonshape FROM polygontable SELECT ST_PolygonFromText ( '-74.0428197,40.6867969,-74.0421975,40.6921336,-74.0508020,40.6912794,-74.0428197,40.6867969' , ',' ) AS polygonshape","title":"ST_PolygonFromText"},{"location":"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext","text":"Introduction: Construct a LineString from Text, delimited by Delimiter. Unlimited UUID strings can be appended. Format: ST_LineStringFromText (Text:string, Delimiter:char, UUID1, UUID2, ...) Since: v1.0.0 Spark SQL example: SELECT ST_LineStringFromText ( linestringtable . _c0 , ',' ) AS linestringshape FROM linestringtable SELECT ST_LineStringFromText ( '-74.0428197,40.6867969,-74.0421975,40.6921336,-74.0508020,40.6912794' , ',' ) AS linestringshape","title":"ST_LineStringFromText"},{"location":"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope","text":"Introduction: Construct a Polygon from MinX, MinY, MaxX, MaxY. Unlimited UUID strings can be appended. Format: ST_PolygonFromEnvelope (MinX:decimal, MinY:decimal, MaxX:decimal, MaxY:decimal, UUID1, UUID2, ...) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . pointshape )","title":"ST_PolygonFromEnvelope"},{"location":"archive/api/sql/GeoSparkSQL-Constructor/#st_circle","text":"Introduction: Construct a Circle from A with a Radius. Format: ST_Circle (A:Geometry, Radius:decimal) Since: v1.0.0 - v1.1.3 Spark SQL example: SELECT ST_Circle ( pointdf . pointshape , 1 . 0 ) FROM pointdf Note GeoSpark doesn't control the radius's unit (degree or meter). It is same with the geometry. To change the geometry's unit, please transform the coordinate reference system. See ST_Transform .","title":"ST_Circle"},{"location":"archive/api/sql/GeoSparkSQL-Function/","text":"ST_Distance \u00b6 Introduction: Return the Euclidean distance between A and B Format: ST_Distance (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Distance ( polygondf . countyshape , polygondf . countyshape ) FROM polygondf ST_ConvexHull \u00b6 Introduction: Return the Convex Hull of polgyon A Format: ST_ConvexHull (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_ConvexHull ( polygondf . countyshape ) FROM polygondf ST_Envelope \u00b6 Introduction: Return the envelop boundary of A Format: ST_Envelope (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Envelope ( polygondf . countyshape ) FROM polygondf ST_Length \u00b6 Introduction: Return the perimeter of A Format: ST_Length (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Length ( polygondf . countyshape ) FROM polygondf ST_Area \u00b6 Introduction: Return the area of A Format: ST_Area (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Area ( polygondf . countyshape ) FROM polygondf ST_Centroid \u00b6 Introduction: Return the centroid point of A Format: ST_Centroid (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Centroid ( polygondf . countyshape ) FROM polygondf ST_Transform \u00b6 Introduction: Transform the Spatial Reference System / Coordinate Reference System of A, from SourceCRS to TargetCRS Note By default, ST_Transform assumes Longitude/Latitude is your coordinate X/Y. If this is not the case, set UseLongitudeLatitudeOrder as \"false\". Note If ST_Transform throws an Exception called \"Bursa wolf parameters required\", you need to disable the error notification in ST_Transform. You can append a boolean value at the end. Format: ST_Transform (A:geometry, SourceCRS:string, TargetCRS:string, [Optional] UseLongitudeLatitudeOrder:Boolean, [Optional] DisableError) Since: v1.0.0 Spark SQL example (simple): SELECT ST_Transform ( polygondf . countyshape , 'epsg:4326' , 'epsg:3857' ) FROM polygondf Spark SQL example (with optional parameters): SELECT ST_Transform ( polygondf . countyshape , 'epsg:4326' , 'epsg:3857' , true , false ) FROM polygondf Note The detailed EPSG information can be searched on EPSG.io . ST_Intersection \u00b6 Introduction: Return the intersection geometry of A and B Format: ST_Intersection (A:geometry, B:geometry) Since: v1.1.0 Spark SQL example: SELECT ST_Intersection ( polygondf . countyshape , polygondf . countyshape ) FROM polygondf ST_IsValid \u00b6 Introduction: Test if a geometry is well formed Format: ST_IsValid (A:geometry) Since: v1.2.0 Spark SQL example: SELECT ST_IsValid ( polygondf . countyshape ) FROM polygondf ST_MakeValid \u00b6 Introduction: Given an invalid polygon or multipolygon and removeHoles boolean flag, create a valid representation of the geometry. Format: ST_MakeValid (A:geometry, removeHoles:Boolean) Since: v1.2.0 Spark SQL example: SELECT geometryValid . polygon FROM table LATERAL VIEW ST_MakeValid ( polygon , false ) geometryValid AS polygon Note Might return multiple polygons from a only one invalid polygon That's the reason why we need to use the LATERAL VIEW expression Note Throws an exception if the geometry isn't polygon or multipolygon ST_PrecisionReduce \u00b6 Introduction: Reduce the decimals places in the coordinates of the geometry to the given number of decimal places. The last decimal place will be rounded. Format: ST_PrecisionReduce (A:geometry, B:int) Since: v1.2.0 Spark SQL example: SELECT ST_PrecisionReduce ( polygondf . countyshape , 9 ) FROM polygondf The new coordinates will only have 9 decimal places. ST_IsSimple \u00b6 Introduction: Test if geometry's only self-intersections are at boundary points. Format: ST_IsSimple (A:geometry) Since: v1.2.0 Spark SQL example: SELECT ST_IsSimple ( polygondf . countyshape ) FROM polygondf ST_Buffer \u00b6 Introduction: Returns a geometry/geography that represents all points whose distance from this Geometry/geography is less than or equal to distance. Format: ST_Buffer (A:geometry, buffer: Double) Since: v1.2.0 Spark SQL example: SELECT ST_Buffer ( polygondf . countyshape , 1 ) FROM polygondf ST_AsText \u00b6 Introduction: Return the Well-Known Text string representation of a geometry Format: ST_AsText (A:geometry) Since: v1.2.0 Spark SQL example: SELECT ST_AsText ( polygondf . countyshape ) FROM polygondf ST_AsGeoJSON \u00b6 Introduction: Return the GeoJSON string representation of a geometry Format: ST_AsGeoJSON (A:geometry) Since: v1.3.2 Spark SQL example: SELECT ST_AsGeoJSON ( polygondf . countyshape ) FROM polygondf ST_NPoints \u00b6 Introduction: Return points of the geometry Since: v1.2.1 Format: ST_NPoints (A:geometry) SELECT ST_NPoints ( polygondf . countyshape ) FROM polygondf ST_SimplifyPreserveTopology \u00b6 Introduction: Simplifies a geometry and ensures that the result is a valid geometry having the same dimension and number of components as the input, and with the components having the same topological relationship. Since: v1.2.1 Format: ST_SimplifyPreserveTopology (A:geometry, distanceTolerance: Double) SELECT ST_SimplifyPreserveTopology ( polygondf . countyshape , 10 . 0 ) FROM polygondf ST_GeometryType \u00b6 Introduction: Returns the type of the geometry as a string. EG: 'ST_Linestring', 'ST_Polygon' etc. Format: ST_GeometryType (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_GeometryType ( polygondf . countyshape ) FROM polygondf ST_LineMerge \u00b6 Introduction: Returns a LineString formed by sewing together the constituent line work of a MULTILINESTRING. Note Only works for MULTILINESTRING. Using other geometry will return a GEOMETRYCOLLECTION EMPTY. If the MultiLineString can't be merged, the original MULTILINESTRING is returned. Format: ST_LineMerge (A:geometry) Since: v1.3.2 SELECT ST_LineMerge ( geometry ) FROM df ST_Azimuth \u00b6 Introduction: Returns Azimuth for two given points in radians null otherwise. Format: ST_Azimuth(pointA: Point, pointB: Point) Since: v1.3.2 Spark SQL example: SELECT ST_Azimuth ( ST_POINT ( 0 . 0 25 . 0 ), ST_POINT ( 0 . 0 0 . 0 )) Output: 3.141592653589793 ST_X \u00b6 Introduction: Returns X Coordinate of given Point null otherwise. Format: ST_X(pointA: Point) Since: v1.3.2 Spark SQL example: SELECT ST_X ( ST_POINT ( 0 . 0 25 . 0 )) Output: 0.0 ST_Y \u00b6 Introduction: Returns Y Coordinate of given Point, null otherwise. Format: ST_Y(pointA: Point) Since: v1.3.2 Spark SQL example: SELECT ST_Y ( ST_POINT ( 0 . 0 25 . 0 )) Output: 25.0 ST_StartPoint \u00b6 Introduction: Returns first point of given linestring. Format: ST_StartPoint(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_StartPoint ( ST_GeomFromText ( 'LINESTRING(100 150,50 60, 70 80, 160 170)' )) Output: POINT(100 150) ST_EndPoint \u00b6 Introduction: Returns last point of given linestring. Format: ST_EndPoint(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_EndPoint ( ST_GeomFromText ( 'LINESTRING(100 150,50 60, 70 80, 160 170)' )) Output: POINT(160 170) ST_Boundary \u00b6 Introduction: Returns the closure of the combinatorial boundary of this Geometry. Format: ST_Boundary(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_Boundary ( ST_GeomFromText ( 'POLYGON((1 1,0 0, -1 1, 1 1))' )) Output: LINESTRING (1 1, 0 0, -1 1, 1 1) ST_ExteriorRing \u00b6 Introduction: Returns a line string representing the exterior ring of the POLYGON geometry. Return NULL if the geometry is not a polygon. Format: ST_ExteriorRing(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_ExteriorRing ( ST_GeomFromText ( 'POLYGON((0 0 1, 1 1 1, 1 2 1, 1 1 1, 0 0 1))' )) Output: LINESTRING (0 0, 1 1, 1 2, 1 1, 0 0) ST_GeometryN \u00b6 Introduction: Return the 1-based Nth geometry if the geometry is a GEOMETRYCOLLECTION, (MULTI)POINT, (MULTI)LINESTRING, MULTICURVE or (MULTI)POLYGON Otherwise, return null Format: ST_GeometryN(geom: geometry, n: Int) Since: v1.3.2 Spark SQL example: SELECT ST_GeometryN ( ST_GeomFromText ( 'MULTIPOINT((1 2), (3 4), (5 6), (8 9))' ), 1 ) Output: POINT (3 4) ST_InteriorRingN \u00b6 Introduction: Returns the Nth interior linestring ring of the polygon geometry. Returns NULL if the geometry is not a polygon or the given N is out of range Format: ST_InteriorRingN(geom: geometry, n: Int) Since: v1.3.2 Spark SQL example: SELECT ST_InteriorRingN ( ST_GeomFromText ( 'POLYGON((0 0, 0 5, 5 5, 5 0, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1), (1 3, 2 3, 2 4, 1 4, 1 3), (3 3, 4 3, 4 4, 3 4, 3 3))' ), 0 ) Output: LINESTRING (1 1, 2 1, 2 2, 1 2, 1 1) ST_Dump \u00b6 Introduction: It expands the geometries. If the geometry is simple (Point, Polygon Linestring etc.) it returns the geometry itself, if the geometry is collection or multi it returns record for each of collection components. Format: ST_Dump(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_Dump ( ST_GeomFromText ( 'MULTIPOINT ((10 40), (40 30), (20 20), (30 10))' )) Output: [POINT (10 40), POINT (40 30), POINT (20 20), POINT (30 10)] ST_DumpPoints \u00b6 Introduction: Returns list of Points which geometry consists of. Format: ST_DumpPoints(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_DumpPoints ( ST_GeomFromText ( 'LINESTRING (0 0, 1 1, 1 0)' )) Output: [POINT (0 0), POINT (0 1), POINT (1 1), POINT (1 0), POINT (0 0)] ST_IsClosed \u00b6 Introduction: RETURNS true if the LINESTRING start and end point are the same. Format: ST_IsClosed(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_IsClosed ( ST_GeomFromText ( 'LINESTRING(0 0, 1 1, 1 0)' )) Output: false ST_NumInteriorRings \u00b6 Introduction: RETURNS number of interior rings of polygon geometries. Format: ST_NumInteriorRings(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_NumInteriorRings ( ST_GeomFromText ( 'POLYGON ((0 0, 0 5, 5 5, 5 0, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1))' )) Output: 1 ST_AddPoint \u00b6 Introduction: RETURN Linestring with additional point at the given index, if position is not available the point will be added at the end of line. Format: ST_AddPoint(geom: geometry, point: geometry, position: integer) Format: ST_AddPoint(geom: geometry, point: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_AddPoint ( ST_GeomFromText ( \"LINESTRING(0 0, 1 1, 1 0)\" ), ST_GeomFromText ( \"Point(21 52)\" ), 1 ) SELECT ST_AddPoint ( ST_GeomFromText ( \"Linestring(0 0, 1 1, 1 0)\" ), ST_GeomFromText ( \"Point(21 52)\" )) Output: LINESTRING(0 0, 21 52, 1 1, 1 0) LINESTRING(0 0, 1 1, 1 0, 21 52) ST_RemovePoint \u00b6 Introduction: RETURN Line with removed point at given index, position can be omitted and then last one will be removed. Format: ST_RemovePoint(geom: geometry, position: integer) Format: ST_RemovePoint(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_RemovePoint ( ST_GeomFromText ( \"LINESTRING(0 0, 1 1, 1 0)\" ), 1 ) Output: LINESTRING(0 0, 1 0) ST_IsRing \u00b6 Introduction: RETURN true if LINESTRING is ST_IsClosed and ST_IsSimple. Format: ST_IsRing(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_IsRing ( ST_GeomFromText ( \"LINESTRING(0 0, 0 1, 1 1, 1 0, 0 0)\" )) Output: true ST_NumGeometries \u00b6 Introduction: Returns the number of Geometries. If geometry is a GEOMETRYCOLLECTION (or MULTI*) return the number of geometries, for single geometries will return 1. Format: ST_NumGeometries (A:geometry) Since: v1.3.2 SELECT ST_NumGeometries ( df . geometry ) FROM df","title":"Function"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_distance","text":"Introduction: Return the Euclidean distance between A and B Format: ST_Distance (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Distance ( polygondf . countyshape , polygondf . countyshape ) FROM polygondf","title":"ST_Distance"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_convexhull","text":"Introduction: Return the Convex Hull of polgyon A Format: ST_ConvexHull (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_ConvexHull ( polygondf . countyshape ) FROM polygondf","title":"ST_ConvexHull"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_envelope","text":"Introduction: Return the envelop boundary of A Format: ST_Envelope (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Envelope ( polygondf . countyshape ) FROM polygondf","title":"ST_Envelope"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_length","text":"Introduction: Return the perimeter of A Format: ST_Length (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Length ( polygondf . countyshape ) FROM polygondf","title":"ST_Length"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_area","text":"Introduction: Return the area of A Format: ST_Area (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Area ( polygondf . countyshape ) FROM polygondf","title":"ST_Area"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_centroid","text":"Introduction: Return the centroid point of A Format: ST_Centroid (A:geometry) Since: v1.0.0 Spark SQL example: SELECT ST_Centroid ( polygondf . countyshape ) FROM polygondf","title":"ST_Centroid"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_transform","text":"Introduction: Transform the Spatial Reference System / Coordinate Reference System of A, from SourceCRS to TargetCRS Note By default, ST_Transform assumes Longitude/Latitude is your coordinate X/Y. If this is not the case, set UseLongitudeLatitudeOrder as \"false\". Note If ST_Transform throws an Exception called \"Bursa wolf parameters required\", you need to disable the error notification in ST_Transform. You can append a boolean value at the end. Format: ST_Transform (A:geometry, SourceCRS:string, TargetCRS:string, [Optional] UseLongitudeLatitudeOrder:Boolean, [Optional] DisableError) Since: v1.0.0 Spark SQL example (simple): SELECT ST_Transform ( polygondf . countyshape , 'epsg:4326' , 'epsg:3857' ) FROM polygondf Spark SQL example (with optional parameters): SELECT ST_Transform ( polygondf . countyshape , 'epsg:4326' , 'epsg:3857' , true , false ) FROM polygondf Note The detailed EPSG information can be searched on EPSG.io .","title":"ST_Transform"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_intersection","text":"Introduction: Return the intersection geometry of A and B Format: ST_Intersection (A:geometry, B:geometry) Since: v1.1.0 Spark SQL example: SELECT ST_Intersection ( polygondf . countyshape , polygondf . countyshape ) FROM polygondf","title":"ST_Intersection"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_isvalid","text":"Introduction: Test if a geometry is well formed Format: ST_IsValid (A:geometry) Since: v1.2.0 Spark SQL example: SELECT ST_IsValid ( polygondf . countyshape ) FROM polygondf","title":"ST_IsValid"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_makevalid","text":"Introduction: Given an invalid polygon or multipolygon and removeHoles boolean flag, create a valid representation of the geometry. Format: ST_MakeValid (A:geometry, removeHoles:Boolean) Since: v1.2.0 Spark SQL example: SELECT geometryValid . polygon FROM table LATERAL VIEW ST_MakeValid ( polygon , false ) geometryValid AS polygon Note Might return multiple polygons from a only one invalid polygon That's the reason why we need to use the LATERAL VIEW expression Note Throws an exception if the geometry isn't polygon or multipolygon","title":"ST_MakeValid"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce","text":"Introduction: Reduce the decimals places in the coordinates of the geometry to the given number of decimal places. The last decimal place will be rounded. Format: ST_PrecisionReduce (A:geometry, B:int) Since: v1.2.0 Spark SQL example: SELECT ST_PrecisionReduce ( polygondf . countyshape , 9 ) FROM polygondf The new coordinates will only have 9 decimal places.","title":"ST_PrecisionReduce"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_issimple","text":"Introduction: Test if geometry's only self-intersections are at boundary points. Format: ST_IsSimple (A:geometry) Since: v1.2.0 Spark SQL example: SELECT ST_IsSimple ( polygondf . countyshape ) FROM polygondf","title":"ST_IsSimple"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_buffer","text":"Introduction: Returns a geometry/geography that represents all points whose distance from this Geometry/geography is less than or equal to distance. Format: ST_Buffer (A:geometry, buffer: Double) Since: v1.2.0 Spark SQL example: SELECT ST_Buffer ( polygondf . countyshape , 1 ) FROM polygondf","title":"ST_Buffer"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_astext","text":"Introduction: Return the Well-Known Text string representation of a geometry Format: ST_AsText (A:geometry) Since: v1.2.0 Spark SQL example: SELECT ST_AsText ( polygondf . countyshape ) FROM polygondf","title":"ST_AsText"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson","text":"Introduction: Return the GeoJSON string representation of a geometry Format: ST_AsGeoJSON (A:geometry) Since: v1.3.2 Spark SQL example: SELECT ST_AsGeoJSON ( polygondf . countyshape ) FROM polygondf","title":"ST_AsGeoJSON"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_npoints","text":"Introduction: Return points of the geometry Since: v1.2.1 Format: ST_NPoints (A:geometry) SELECT ST_NPoints ( polygondf . countyshape ) FROM polygondf","title":"ST_NPoints"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology","text":"Introduction: Simplifies a geometry and ensures that the result is a valid geometry having the same dimension and number of components as the input, and with the components having the same topological relationship. Since: v1.2.1 Format: ST_SimplifyPreserveTopology (A:geometry, distanceTolerance: Double) SELECT ST_SimplifyPreserveTopology ( polygondf . countyshape , 10 . 0 ) FROM polygondf","title":"ST_SimplifyPreserveTopology"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype","text":"Introduction: Returns the type of the geometry as a string. EG: 'ST_Linestring', 'ST_Polygon' etc. Format: ST_GeometryType (A:geometry) Since: v1.2.1 Spark SQL example: SELECT ST_GeometryType ( polygondf . countyshape ) FROM polygondf","title":"ST_GeometryType"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_linemerge","text":"Introduction: Returns a LineString formed by sewing together the constituent line work of a MULTILINESTRING. Note Only works for MULTILINESTRING. Using other geometry will return a GEOMETRYCOLLECTION EMPTY. If the MultiLineString can't be merged, the original MULTILINESTRING is returned. Format: ST_LineMerge (A:geometry) Since: v1.3.2 SELECT ST_LineMerge ( geometry ) FROM df","title":"ST_LineMerge"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_azimuth","text":"Introduction: Returns Azimuth for two given points in radians null otherwise. Format: ST_Azimuth(pointA: Point, pointB: Point) Since: v1.3.2 Spark SQL example: SELECT ST_Azimuth ( ST_POINT ( 0 . 0 25 . 0 ), ST_POINT ( 0 . 0 0 . 0 )) Output: 3.141592653589793","title":"ST_Azimuth"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_x","text":"Introduction: Returns X Coordinate of given Point null otherwise. Format: ST_X(pointA: Point) Since: v1.3.2 Spark SQL example: SELECT ST_X ( ST_POINT ( 0 . 0 25 . 0 )) Output: 0.0","title":"ST_X"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_y","text":"Introduction: Returns Y Coordinate of given Point, null otherwise. Format: ST_Y(pointA: Point) Since: v1.3.2 Spark SQL example: SELECT ST_Y ( ST_POINT ( 0 . 0 25 . 0 )) Output: 25.0","title":"ST_Y"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_startpoint","text":"Introduction: Returns first point of given linestring. Format: ST_StartPoint(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_StartPoint ( ST_GeomFromText ( 'LINESTRING(100 150,50 60, 70 80, 160 170)' )) Output: POINT(100 150)","title":"ST_StartPoint"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_endpoint","text":"Introduction: Returns last point of given linestring. Format: ST_EndPoint(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_EndPoint ( ST_GeomFromText ( 'LINESTRING(100 150,50 60, 70 80, 160 170)' )) Output: POINT(160 170)","title":"ST_EndPoint"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_boundary","text":"Introduction: Returns the closure of the combinatorial boundary of this Geometry. Format: ST_Boundary(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_Boundary ( ST_GeomFromText ( 'POLYGON((1 1,0 0, -1 1, 1 1))' )) Output: LINESTRING (1 1, 0 0, -1 1, 1 1)","title":"ST_Boundary"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring","text":"Introduction: Returns a line string representing the exterior ring of the POLYGON geometry. Return NULL if the geometry is not a polygon. Format: ST_ExteriorRing(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_ExteriorRing ( ST_GeomFromText ( 'POLYGON((0 0 1, 1 1 1, 1 2 1, 1 1 1, 0 0 1))' )) Output: LINESTRING (0 0, 1 1, 1 2, 1 1, 0 0)","title":"ST_ExteriorRing"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_geometryn","text":"Introduction: Return the 1-based Nth geometry if the geometry is a GEOMETRYCOLLECTION, (MULTI)POINT, (MULTI)LINESTRING, MULTICURVE or (MULTI)POLYGON Otherwise, return null Format: ST_GeometryN(geom: geometry, n: Int) Since: v1.3.2 Spark SQL example: SELECT ST_GeometryN ( ST_GeomFromText ( 'MULTIPOINT((1 2), (3 4), (5 6), (8 9))' ), 1 ) Output: POINT (3 4)","title":"ST_GeometryN"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn","text":"Introduction: Returns the Nth interior linestring ring of the polygon geometry. Returns NULL if the geometry is not a polygon or the given N is out of range Format: ST_InteriorRingN(geom: geometry, n: Int) Since: v1.3.2 Spark SQL example: SELECT ST_InteriorRingN ( ST_GeomFromText ( 'POLYGON((0 0, 0 5, 5 5, 5 0, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1), (1 3, 2 3, 2 4, 1 4, 1 3), (3 3, 4 3, 4 4, 3 4, 3 3))' ), 0 ) Output: LINESTRING (1 1, 2 1, 2 2, 1 2, 1 1)","title":"ST_InteriorRingN"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_dump","text":"Introduction: It expands the geometries. If the geometry is simple (Point, Polygon Linestring etc.) it returns the geometry itself, if the geometry is collection or multi it returns record for each of collection components. Format: ST_Dump(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_Dump ( ST_GeomFromText ( 'MULTIPOINT ((10 40), (40 30), (20 20), (30 10))' )) Output: [POINT (10 40), POINT (40 30), POINT (20 20), POINT (30 10)]","title":"ST_Dump"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints","text":"Introduction: Returns list of Points which geometry consists of. Format: ST_DumpPoints(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_DumpPoints ( ST_GeomFromText ( 'LINESTRING (0 0, 1 1, 1 0)' )) Output: [POINT (0 0), POINT (0 1), POINT (1 1), POINT (1 0), POINT (0 0)]","title":"ST_DumpPoints"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_isclosed","text":"Introduction: RETURNS true if the LINESTRING start and end point are the same. Format: ST_IsClosed(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_IsClosed ( ST_GeomFromText ( 'LINESTRING(0 0, 1 1, 1 0)' )) Output: false","title":"ST_IsClosed"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings","text":"Introduction: RETURNS number of interior rings of polygon geometries. Format: ST_NumInteriorRings(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_NumInteriorRings ( ST_GeomFromText ( 'POLYGON ((0 0, 0 5, 5 5, 5 0, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1))' )) Output: 1","title":"ST_NumInteriorRings"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_addpoint","text":"Introduction: RETURN Linestring with additional point at the given index, if position is not available the point will be added at the end of line. Format: ST_AddPoint(geom: geometry, point: geometry, position: integer) Format: ST_AddPoint(geom: geometry, point: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_AddPoint ( ST_GeomFromText ( \"LINESTRING(0 0, 1 1, 1 0)\" ), ST_GeomFromText ( \"Point(21 52)\" ), 1 ) SELECT ST_AddPoint ( ST_GeomFromText ( \"Linestring(0 0, 1 1, 1 0)\" ), ST_GeomFromText ( \"Point(21 52)\" )) Output: LINESTRING(0 0, 21 52, 1 1, 1 0) LINESTRING(0 0, 1 1, 1 0, 21 52)","title":"ST_AddPoint"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_removepoint","text":"Introduction: RETURN Line with removed point at given index, position can be omitted and then last one will be removed. Format: ST_RemovePoint(geom: geometry, position: integer) Format: ST_RemovePoint(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_RemovePoint ( ST_GeomFromText ( \"LINESTRING(0 0, 1 1, 1 0)\" ), 1 ) Output: LINESTRING(0 0, 1 0)","title":"ST_RemovePoint"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_isring","text":"Introduction: RETURN true if LINESTRING is ST_IsClosed and ST_IsSimple. Format: ST_IsRing(geom: geometry) Since: v1.3.2 Spark SQL example: SELECT ST_IsRing ( ST_GeomFromText ( \"LINESTRING(0 0, 0 1, 1 1, 1 0, 0 0)\" )) Output: true","title":"ST_IsRing"},{"location":"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries","text":"Introduction: Returns the number of Geometries. If geometry is a GEOMETRYCOLLECTION (or MULTI*) return the number of geometries, for single geometries will return 1. Format: ST_NumGeometries (A:geometry) Since: v1.3.2 SELECT ST_NumGeometries ( df . geometry ) FROM df","title":"ST_NumGeometries"},{"location":"archive/api/sql/GeoSparkSQL-Optimizer/","text":"GeoSparkSQL query optimizer \u00b6 GeoSpark Spatial operators fully supports Apache SparkSQL query optimizer. It has the following query optimization features: Automatically optimizes range join query and distance join query. Automatically performs predicate pushdown. Range join \u00b6 Introduction: Find geometries from A and geometries from B such that each geometry pair satisfies a certain predicate. Most predicates supported by GeoSparkSQL can trigger a range join. Spark SQL Example: SELECT * FROM polygondf , pointdf WHERE ST_Contains ( polygondf . polygonshape , pointdf . pointshape ) SELECT * FROM polygondf , pointdf WHERE ST_Intersects ( polygondf . polygonshape , pointdf . pointshape ) SELECT * FROM pointdf , polygondf WHERE ST_Within ( pointdf . pointshape , polygondf . polygonshape ) Spark SQL Physical plan: == Physical Plan == RangeJoin polygonshape#20: geometry, pointshape#43: geometry, false :- Project [st_polygonfromenvelope(cast(_c0#0 as decimal(24,20)), cast(_c1#1 as decimal(24,20)), cast(_c2#2 as decimal(24,20)), cast(_c3#3 as decimal(24,20)), mypolygonid) AS polygonshape#20] : +- *FileScan csv +- Project [st_point(cast(_c0#31 as decimal(24,20)), cast(_c1#32 as decimal(24,20)), myPointId) AS pointshape#43] +- *FileScan csv Note All join queries in GeoSparkSQL are inner joins Distance join \u00b6 Introduction: Find geometries from A and geometries from B such that the internal Euclidean distance of each geometry pair is less or equal than a certain distance Spark SQL Example: Only consider fully within a certain distance SELECT * FROM pointdf1 , pointdf2 WHERE ST_Distance ( pointdf1 . pointshape1 , pointdf2 . pointshape2 ) < 2 Consider intersects within a certain distance SELECT * FROM pointdf1 , pointdf2 WHERE ST_Distance ( pointdf1 . pointshape1 , pointdf2 . pointshape2 ) <= 2 Spark SQL Physical plan: == Physical Plan == DistanceJoin pointshape1#12: geometry, pointshape2#33: geometry, 2.0, true :- Project [st_point(cast(_c0#0 as decimal(24,20)), cast(_c1#1 as decimal(24,20)), myPointId) AS pointshape1#12] : +- *FileScan csv +- Project [st_point(cast(_c0#21 as decimal(24,20)), cast(_c1#22 as decimal(24,20)), myPointId) AS pointshape2#33] +- *FileScan csv Warning GeoSpark doesn't control the distance's unit (degree or meter). It is same with the geometry. To change the geometry's unit, please transform the coordinate reference system. See ST_Transform . Predicate pushdown \u00b6 Introduction: Given a join query and a predicate in the same WHERE clause, first executes the Predicate as a filter, then executes the join query* Spark SQL Example: SELECT * FROM polygondf , pointdf WHERE ST_Contains ( polygondf . polygonshape , pointdf . pointshape ) AND ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 101 . 0 , 501 . 0 , 601 . 0 ), polygondf . polygonshape ) Spark SQL Physical plan: == Physical Plan == RangeJoin polygonshape#20: geometry, pointshape#43: geometry, false :- Project [st_polygonfromenvelope(cast(_c0#0 as decimal(24,20)), cast(_c1#1 as decimal(24,20)), cast(_c2#2 as decimal(24,20)), cast(_c3#3 as decimal(24,20)), mypolygonid) AS polygonshape#20] : +- Filter **org.apache.spark.sql.geosparksql.expressions.ST_Contains$** : +- *FileScan csv +- Project [st_point(cast(_c0#31 as decimal(24,20)), cast(_c1#32 as decimal(24,20)), myPointId) AS pointshape#43] +- *FileScan csv","title":"Join query (optimizer)"},{"location":"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer","text":"GeoSpark Spatial operators fully supports Apache SparkSQL query optimizer. It has the following query optimization features: Automatically optimizes range join query and distance join query. Automatically performs predicate pushdown.","title":"GeoSparkSQL query optimizer"},{"location":"archive/api/sql/GeoSparkSQL-Optimizer/#range-join","text":"Introduction: Find geometries from A and geometries from B such that each geometry pair satisfies a certain predicate. Most predicates supported by GeoSparkSQL can trigger a range join. Spark SQL Example: SELECT * FROM polygondf , pointdf WHERE ST_Contains ( polygondf . polygonshape , pointdf . pointshape ) SELECT * FROM polygondf , pointdf WHERE ST_Intersects ( polygondf . polygonshape , pointdf . pointshape ) SELECT * FROM pointdf , polygondf WHERE ST_Within ( pointdf . pointshape , polygondf . polygonshape ) Spark SQL Physical plan: == Physical Plan == RangeJoin polygonshape#20: geometry, pointshape#43: geometry, false :- Project [st_polygonfromenvelope(cast(_c0#0 as decimal(24,20)), cast(_c1#1 as decimal(24,20)), cast(_c2#2 as decimal(24,20)), cast(_c3#3 as decimal(24,20)), mypolygonid) AS polygonshape#20] : +- *FileScan csv +- Project [st_point(cast(_c0#31 as decimal(24,20)), cast(_c1#32 as decimal(24,20)), myPointId) AS pointshape#43] +- *FileScan csv Note All join queries in GeoSparkSQL are inner joins","title":"Range join"},{"location":"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join","text":"Introduction: Find geometries from A and geometries from B such that the internal Euclidean distance of each geometry pair is less or equal than a certain distance Spark SQL Example: Only consider fully within a certain distance SELECT * FROM pointdf1 , pointdf2 WHERE ST_Distance ( pointdf1 . pointshape1 , pointdf2 . pointshape2 ) < 2 Consider intersects within a certain distance SELECT * FROM pointdf1 , pointdf2 WHERE ST_Distance ( pointdf1 . pointshape1 , pointdf2 . pointshape2 ) <= 2 Spark SQL Physical plan: == Physical Plan == DistanceJoin pointshape1#12: geometry, pointshape2#33: geometry, 2.0, true :- Project [st_point(cast(_c0#0 as decimal(24,20)), cast(_c1#1 as decimal(24,20)), myPointId) AS pointshape1#12] : +- *FileScan csv +- Project [st_point(cast(_c0#21 as decimal(24,20)), cast(_c1#22 as decimal(24,20)), myPointId) AS pointshape2#33] +- *FileScan csv Warning GeoSpark doesn't control the distance's unit (degree or meter). It is same with the geometry. To change the geometry's unit, please transform the coordinate reference system. See ST_Transform .","title":"Distance join"},{"location":"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown","text":"Introduction: Given a join query and a predicate in the same WHERE clause, first executes the Predicate as a filter, then executes the join query* Spark SQL Example: SELECT * FROM polygondf , pointdf WHERE ST_Contains ( polygondf . polygonshape , pointdf . pointshape ) AND ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 101 . 0 , 501 . 0 , 601 . 0 ), polygondf . polygonshape ) Spark SQL Physical plan: == Physical Plan == RangeJoin polygonshape#20: geometry, pointshape#43: geometry, false :- Project [st_polygonfromenvelope(cast(_c0#0 as decimal(24,20)), cast(_c1#1 as decimal(24,20)), cast(_c2#2 as decimal(24,20)), cast(_c3#3 as decimal(24,20)), mypolygonid) AS polygonshape#20] : +- Filter **org.apache.spark.sql.geosparksql.expressions.ST_Contains$** : +- *FileScan csv +- Project [st_point(cast(_c0#31 as decimal(24,20)), cast(_c1#32 as decimal(24,20)), myPointId) AS pointshape#43] +- *FileScan csv","title":"Predicate pushdown"},{"location":"archive/api/sql/GeoSparkSQL-Overview/","text":"Introduction \u00b6 Function list \u00b6 GeoSparkSQL supports SQL/MM Part3 Spatial SQL Standard. It includes four kinds of SQL operators as follows. All these operators can be directly called through: var myDataFrame = sparkSession . sql ( \"YOUR_SQL\" ) Constructor: Construct a Geometry given an input string or coordinates Example: ST_GeomFromWKT (string). Create a Geometry from a WKT String. Documentation: Here Function: Execute a function on the given column or columns Example: ST_Distance (A, B). Given two Geometry A and B, return the Euclidean distance of A and B. Documentation: Here Aggregate function: Return the aggregated value on the given column Example: ST_Envelope_Aggr (Geometry column). Given a Geometry column, calculate the entire envelope boundary of this column. Documentation: Here Predicate: Execute a logic judgement on the given columns and return true or false Example: ST_Contains (A, B). Check if A fully contains B. Return \"True\" if yes, else return \"False\". Documentation: Here GeoSparkSQL supports SparkSQL query optimizer, documentation is Here Quick start \u00b6 The detailed explanation is here Write a SQL/DataFrame application . Add GeoSpark-core and GeoSparkSQL into your project POM.xml or build.sbt Declare your Spark Session sparkSession = SparkSession . builder (). config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ). config ( \"spark.kryo.registrator\" , classOf [ GeoSparkKryoRegistrator ]. getName ). master ( \"local[*]\" ). appName ( \"myGeoSparkSQLdemo\" ). getOrCreate () Add the following line after your SparkSession declaration: GeoSparkSQLRegistrator . registerAll ( sparkSession )","title":"Quick start"},{"location":"archive/api/sql/GeoSparkSQL-Overview/#introduction","text":"","title":"Introduction"},{"location":"archive/api/sql/GeoSparkSQL-Overview/#function-list","text":"GeoSparkSQL supports SQL/MM Part3 Spatial SQL Standard. It includes four kinds of SQL operators as follows. All these operators can be directly called through: var myDataFrame = sparkSession . sql ( \"YOUR_SQL\" ) Constructor: Construct a Geometry given an input string or coordinates Example: ST_GeomFromWKT (string). Create a Geometry from a WKT String. Documentation: Here Function: Execute a function on the given column or columns Example: ST_Distance (A, B). Given two Geometry A and B, return the Euclidean distance of A and B. Documentation: Here Aggregate function: Return the aggregated value on the given column Example: ST_Envelope_Aggr (Geometry column). Given a Geometry column, calculate the entire envelope boundary of this column. Documentation: Here Predicate: Execute a logic judgement on the given columns and return true or false Example: ST_Contains (A, B). Check if A fully contains B. Return \"True\" if yes, else return \"False\". Documentation: Here GeoSparkSQL supports SparkSQL query optimizer, documentation is Here","title":"Function list"},{"location":"archive/api/sql/GeoSparkSQL-Overview/#quick-start","text":"The detailed explanation is here Write a SQL/DataFrame application . Add GeoSpark-core and GeoSparkSQL into your project POM.xml or build.sbt Declare your Spark Session sparkSession = SparkSession . builder (). config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ). config ( \"spark.kryo.registrator\" , classOf [ GeoSparkKryoRegistrator ]. getName ). master ( \"local[*]\" ). appName ( \"myGeoSparkSQLdemo\" ). getOrCreate () Add the following line after your SparkSession declaration: GeoSparkSQLRegistrator . registerAll ( sparkSession )","title":"Quick start"},{"location":"archive/api/sql/GeoSparkSQL-Parameter/","text":"Usage \u00b6 GeoSparkSQL supports many parameters. To change their values, Set it through SparkConf: sparkSession = SparkSession . builder (). config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ). config ( \"spark.kryo.registrator\" , classOf [ GeoSparkKryoRegistrator ]. getName ). config ( \"geospark.global.index\" , \"true\" ) master ( \"local[*]\" ). appName ( \"myGeoSparkSQLdemo\" ). getOrCreate () Check your current GeoSparkSQL configuration: val geosparkConf = new GeoSparkConf ( sparkSession . sparkContext . getConf ) println ( geosparkConf ) Explanation \u00b6 geospark.global.index Use spatial index (currently, only supports in SQL range join and SQL distance join) Default: true Possible values: true, false geospark.global.indextype Spatial index type, only valid when \"geospark.global.index\" is true Default: rtree Possible values: rtree, quadtree geospark.join.gridtype Spatial partitioning grid type for join query Default: quadtree Possible values: quadtree, kdbtree, rtree, voronoi geospark.join.numpartition (Advanced users only!) Number of partitions for both sides in a join query Default: -1, which means use the existing partitions Possible values: any integers geospark.join.indexbuildside (Advanced users only!) The side which GeoSpark builds spatial indices on Default: left Possible values: left, right geospark.join.spatitionside (Advanced users only!) The dominant side in spatial partitioning stage Default: left Possible values: left, right","title":"Parameter"},{"location":"archive/api/sql/GeoSparkSQL-Parameter/#usage","text":"GeoSparkSQL supports many parameters. To change their values, Set it through SparkConf: sparkSession = SparkSession . builder (). config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ). config ( \"spark.kryo.registrator\" , classOf [ GeoSparkKryoRegistrator ]. getName ). config ( \"geospark.global.index\" , \"true\" ) master ( \"local[*]\" ). appName ( \"myGeoSparkSQLdemo\" ). getOrCreate () Check your current GeoSparkSQL configuration: val geosparkConf = new GeoSparkConf ( sparkSession . sparkContext . getConf ) println ( geosparkConf )","title":"Usage"},{"location":"archive/api/sql/GeoSparkSQL-Parameter/#explanation","text":"geospark.global.index Use spatial index (currently, only supports in SQL range join and SQL distance join) Default: true Possible values: true, false geospark.global.indextype Spatial index type, only valid when \"geospark.global.index\" is true Default: rtree Possible values: rtree, quadtree geospark.join.gridtype Spatial partitioning grid type for join query Default: quadtree Possible values: quadtree, kdbtree, rtree, voronoi geospark.join.numpartition (Advanced users only!) Number of partitions for both sides in a join query Default: -1, which means use the existing partitions Possible values: any integers geospark.join.indexbuildside (Advanced users only!) The side which GeoSpark builds spatial indices on Default: left Possible values: left, right geospark.join.spatitionside (Advanced users only!) The dominant side in spatial partitioning stage Default: left Possible values: left, right","title":"Explanation"},{"location":"archive/api/sql/GeoSparkSQL-Predicate/","text":"ST_Contains \u00b6 Introduction: Return true if A fully contains B Format: ST_Contains (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . arealandmark ) ST_Intersects \u00b6 Introduction: Return true if A intersects B Format: ST_Intersects (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Intersects ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . arealandmark ) ST_Within \u00b6 Introduction: Return true if A is fully contained by B Format: ST_Within (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Within ( pointdf . arealandmark , ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 )) ST_Equals \u00b6 Introduction: Return true if A equals to B Format: ST_Equals (A:geometry, B:geometry) Since: v1.2.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Equals ( pointdf . arealandmark , ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 )) ST_Crosses \u00b6 Introduction: Return true if A crosses B Format: ST_Crosses (A:geometry, B:geometry) Since: v1.2.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Crosses ( pointdf . arealandmark , ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 )) ST_Touches \u00b6 Introduction: Return true if A touches B Format: ST_Touches (A:geometry, B:geometry) Since: v1.2.0 SELECT * FROM pointdf WHERE ST_Touches ( pointdf . arealandmark , ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 )) ST_Overlaps \u00b6 Introduction: Return true if A overlaps B Format: ST_Overlaps (A:geometry, B:geometry) Since: v1.2.0 Spark SQL example: SELECT * FROM geom WHERE ST_Overlaps ( geom . geom_a , geom . geom_b )","title":"Predicate"},{"location":"archive/api/sql/GeoSparkSQL-Predicate/#st_contains","text":"Introduction: Return true if A fully contains B Format: ST_Contains (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . arealandmark )","title":"ST_Contains"},{"location":"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects","text":"Introduction: Return true if A intersects B Format: ST_Intersects (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Intersects ( ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ), pointdf . arealandmark )","title":"ST_Intersects"},{"location":"archive/api/sql/GeoSparkSQL-Predicate/#st_within","text":"Introduction: Return true if A is fully contained by B Format: ST_Within (A:geometry, B:geometry) Since: v1.0.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Within ( pointdf . arealandmark , ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ))","title":"ST_Within"},{"location":"archive/api/sql/GeoSparkSQL-Predicate/#st_equals","text":"Introduction: Return true if A equals to B Format: ST_Equals (A:geometry, B:geometry) Since: v1.2.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Equals ( pointdf . arealandmark , ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ))","title":"ST_Equals"},{"location":"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses","text":"Introduction: Return true if A crosses B Format: ST_Crosses (A:geometry, B:geometry) Since: v1.2.0 Spark SQL example: SELECT * FROM pointdf WHERE ST_Crosses ( pointdf . arealandmark , ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ))","title":"ST_Crosses"},{"location":"archive/api/sql/GeoSparkSQL-Predicate/#st_touches","text":"Introduction: Return true if A touches B Format: ST_Touches (A:geometry, B:geometry) Since: v1.2.0 SELECT * FROM pointdf WHERE ST_Touches ( pointdf . arealandmark , ST_PolygonFromEnvelope ( 1 . 0 , 100 . 0 , 1000 . 0 , 1100 . 0 ))","title":"ST_Touches"},{"location":"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps","text":"Introduction: Return true if A overlaps B Format: ST_Overlaps (A:geometry, B:geometry) Since: v1.2.0 Spark SQL example: SELECT * FROM geom WHERE ST_Overlaps ( geom . geom_a , geom . geom_b )","title":"ST_Overlaps"},{"location":"archive/api/sql/GeoSparkSQL-javadoc/","text":"Scala and Java API \u00b6 GeoSparkSQL Scala and Java API: http://www.public.asu.edu/~jiayu2/geosparksql/javadoc/ The \"SNAPSHOT\" folder has the API for the latest GeoSpark SNAPSHOT version. Note: Scala can call Java APIs seamlessly. That means GeoSpark Scala users use the same APIs with GeoSpark Java users.","title":"JavaDoc"},{"location":"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api","text":"GeoSparkSQL Scala and Java API: http://www.public.asu.edu/~jiayu2/geosparksql/javadoc/ The \"SNAPSHOT\" folder has the API for the latest GeoSpark SNAPSHOT version. Note: Scala can call Java APIs seamlessly. That means GeoSpark Scala users use the same APIs with GeoSpark Java users.","title":"Scala and Java API"},{"location":"archive/api/viz/Babylon-Scala-and-Java-API/","text":"Scala and Java API for RDD \u00b6 GeoSpark-Viz Scala and Java API: http://www.public.asu.edu/~jiayu2/geosparkviz/javadoc/ Note: Scala can call Java APIs seamlessly. That means GeoSparkViz Scala users use the same APIs with GeoSparkViz Java users.","title":"RDD"},{"location":"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd","text":"GeoSpark-Viz Scala and Java API: http://www.public.asu.edu/~jiayu2/geosparkviz/javadoc/ Note: Scala can call Java APIs seamlessly. That means GeoSparkViz Scala users use the same APIs with GeoSparkViz Java users.","title":"Scala and Java API for RDD"},{"location":"archive/api/viz/sql/","text":"Quick start \u00b6 The detailed explanation is here: Visualize Spatial DataFrame/RDD . Add GeoSpark-core, GeoSparkSQL, GeoSparkViz into your project POM.xml or build.sbt Declare your Spark Session sparkSession = SparkSession . builder (). config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ). config ( \"spark.kryo.registrator\" , classOf [ GeoSparkVizKryoRegistrator ]. getName ). master ( \"local[*]\" ). appName ( \"myGeoSparkVizDemo\" ). getOrCreate () Add the following lines after your SparkSession declaration: GeoSparkSQLRegistrator . registerAll ( sparkSession ) GeoSparkVizRegistrator . registerAll ( sparkSession ) Regular functions \u00b6 ST_Pixelize \u00b6 Introduction: Return a pixel for a given resolution Format: ST_Pixelize (A:geometry, ResolutionX:int, ResolutionY:int, Boundary:geometry) Since: v1.2.0 Spark SQL example: SELECT ST_Pixelize ( shape , 256 , 256 , ( ST_Envelope_Aggr ( shape ) FROM pointtable )) FROM polygondf ST_TileName \u00b6 Introduction: Return the map tile name for a given zoom level. Please refer to OpenStreetMap ZoomLevel and OpenStreetMap tile name . Note Tile name is formatted as a \"Z-X-Y\" string. Z is zoom level. X is tile coordinate on X axis. Y is tile coordinate on Y axis. Format: ST_TileName (A:pixel, ZoomLevel:int) Since: v1.2.0 Spark SQL example: SELECT ST_TileName ( pixels . px , 3 ) FROM pixels ST_Colorize \u00b6 Introduction: Given the weight of a pixel, return the corresponding color. The weight can be the spatial aggregation of spatial objects or spatial observations such as temperature and humidity. Note The color is encoded to an Integer type value in DataFrame. When you print it, it will show some nonsense values. You can just treat them as colors in GeoSparkViz. Format: ST_Colorize (weight:Double, maxWeight:Double, mandatory color: string (Optional)) Since: v1.2.0 Produce various colors - heat map \u00b6 This function will normalize the weight according to the max weight among all pixels. Different pixel obtains different color. Spark SQL example: SELECT pixels . px , ST_Colorize ( pixels . weight , 999 ) AS color FROM pixels Produce uniform colors - scatter plot \u00b6 If a mandatory color name is put as the third input argument, this function will directly ouput this color, without considering the weights. In this case, every pixel will possess the same color. Spark SQL example: SELECT pixels . px , ST_Colorize ( pixels . weight , 999 , 'red' ) AS color FROM pixels Here are some example color names can be entered: \"firebrick\" \"#aa38e0\" \"0x40A8CC\" \"rgba(112,36,228,0.9)\" Please refer to AWT Colors for a list of pre-defined colors. ST_EncodeImage \u00b6 Introduction: Return the base64 string representation of a Java PNG BufferedImage. This is specific for the server-client environment. For example, transfer the base64 string from GeoSparkViz to Apache Zeppelin. Format: ST_EncodeImage (A:image) Since: v1.2.0 Spark SQL example: SELECT ST_EncodeImage ( images . img ) FROM images Aggregate functions \u00b6 ST_Render \u00b6 Introduction: Given a group of pixels and their colors, return a single Java PNG BufferedImage Format: ST_Render (A:pixel, B:color) Since: v1.2.0 Spark SQL example: SELECT tilename , ST_Render ( pixels . px , pixels . color ) AS tileimg FROM pixels GROUP BY tilename","title":"DataFrame/SQL"},{"location":"archive/api/viz/sql/#quick-start","text":"The detailed explanation is here: Visualize Spatial DataFrame/RDD . Add GeoSpark-core, GeoSparkSQL, GeoSparkViz into your project POM.xml or build.sbt Declare your Spark Session sparkSession = SparkSession . builder (). config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ). config ( \"spark.kryo.registrator\" , classOf [ GeoSparkVizKryoRegistrator ]. getName ). master ( \"local[*]\" ). appName ( \"myGeoSparkVizDemo\" ). getOrCreate () Add the following lines after your SparkSession declaration: GeoSparkSQLRegistrator . registerAll ( sparkSession ) GeoSparkVizRegistrator . registerAll ( sparkSession )","title":"Quick start"},{"location":"archive/api/viz/sql/#regular-functions","text":"","title":"Regular functions"},{"location":"archive/api/viz/sql/#st_pixelize","text":"Introduction: Return a pixel for a given resolution Format: ST_Pixelize (A:geometry, ResolutionX:int, ResolutionY:int, Boundary:geometry) Since: v1.2.0 Spark SQL example: SELECT ST_Pixelize ( shape , 256 , 256 , ( ST_Envelope_Aggr ( shape ) FROM pointtable )) FROM polygondf","title":"ST_Pixelize"},{"location":"archive/api/viz/sql/#st_tilename","text":"Introduction: Return the map tile name for a given zoom level. Please refer to OpenStreetMap ZoomLevel and OpenStreetMap tile name . Note Tile name is formatted as a \"Z-X-Y\" string. Z is zoom level. X is tile coordinate on X axis. Y is tile coordinate on Y axis. Format: ST_TileName (A:pixel, ZoomLevel:int) Since: v1.2.0 Spark SQL example: SELECT ST_TileName ( pixels . px , 3 ) FROM pixels","title":"ST_TileName"},{"location":"archive/api/viz/sql/#st_colorize","text":"Introduction: Given the weight of a pixel, return the corresponding color. The weight can be the spatial aggregation of spatial objects or spatial observations such as temperature and humidity. Note The color is encoded to an Integer type value in DataFrame. When you print it, it will show some nonsense values. You can just treat them as colors in GeoSparkViz. Format: ST_Colorize (weight:Double, maxWeight:Double, mandatory color: string (Optional)) Since: v1.2.0","title":"ST_Colorize"},{"location":"archive/api/viz/sql/#st_encodeimage","text":"Introduction: Return the base64 string representation of a Java PNG BufferedImage. This is specific for the server-client environment. For example, transfer the base64 string from GeoSparkViz to Apache Zeppelin. Format: ST_EncodeImage (A:image) Since: v1.2.0 Spark SQL example: SELECT ST_EncodeImage ( images . img ) FROM images","title":"ST_EncodeImage"},{"location":"archive/api/viz/sql/#aggregate-functions","text":"","title":"Aggregate functions"},{"location":"archive/api/viz/sql/#st_render","text":"Introduction: Given a group of pixels and their colors, return a single Java PNG BufferedImage Format: ST_Render (A:pixel, B:color) Since: v1.2.0 Spark SQL example: SELECT tilename , ST_Render ( pixels . px , pixels . color ) AS tileimg FROM pixels GROUP BY tilename","title":"ST_Render"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/","text":"Apache Spark 2.X versions \u00b6 Please add the following dependencies into your POM.xml or build.sbt GeoSpark-Core \u00b6 groupId: org.datasyslab artifactId: geospark version: 1.3.1 GeoSpark-SQL \u00b6 For SparkSQL-2.3 \u00b6 groupId: org.datasyslab artifactId: geospark-sql_2.3 version: 1.3.1 For SparkSQL-2.2 \u00b6 groupId: org.datasyslab artifactId: geospark-sql_2.2 version: 1.3.1 For SparkSQL-2.1 \u00b6 groupId: org.datasyslab artifactId: geospark-sql_2.1 version: 1.3.1 GeoSpark-Viz 1.2.0 and later \u00b6 For SparkSQL-2.3 \u00b6 groupId: org.datasyslab artifactId: geospark-viz_2.3 version: 1.3.1 For SparkSQL-2.2 \u00b6 groupId: org.datasyslab artifactId: geospark-viz_2.2 version: 1.3.1 For SparkSQL-2.1 \u00b6 groupId: org.datasyslab artifactId: geospark-viz_2.1 version: 1.3.1 GeoSpark-Viz 1.1.3 and earlier \u00b6 groupId: org.datasyslab artifactId: geospark-viz version: 1.1.3 Apache Spark 1.X versions \u00b6 Please add the following dependencies into your POM.xml or build.sbt GeoSpark-Core \u00b6 groupId: org.datasyslab artifactId: geospark version: 0.8.2-spark-1.x GeoSpark-Viz \u00b6 groupId: org.datasyslab artifactId: babylon version: 0.2.1-spark-1.x SNAPSHOT versions \u00b6 Sometimes GeoSpark has a SNAPSHOT version for the upcoming release. \"SNAPSHOT\" is uppercase. groupId: org.datasyslab artifactId: geospark version: 1.3.2-SNAPSHOT groupId: org.datasyslab artifactId: geospark-sql_2.3 version: 1.3.2-SNAPSHOT groupId: org.datasyslab artifactId: geospark-viz version: 1.3.2-SNAPSHOT In order to download SNAPSHOTs, you need to add the following repositories in your POM.XML or build.sbt build.sbt \u00b6 resolvers += \"Sonatype OSS Snapshots\" at \" https://oss.sonatype.org/content/repositories/snapshots \" POM.XML \u00b6 <profiles> <profile> <id> allow-snapshots </id> <activation><activeByDefault> true </activeByDefault></activation> <repositories> <repository> <id> snapshots-repo </id> <url> https://oss.sonatype.org/content/repositories/snapshots </url> <releases><enabled> false </enabled></releases> <snapshots><enabled> true </enabled></snapshots> </repository> </repositories> </profile> </profiles>","title":"Maven Central coordinate"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-2x-versions","text":"Please add the following dependencies into your POM.xml or build.sbt","title":"Apache Spark 2.X versions"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core","text":"groupId: org.datasyslab artifactId: geospark version: 1.3.1","title":"GeoSpark-Core"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-sql","text":"","title":"GeoSpark-SQL"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23","text":"groupId: org.datasyslab artifactId: geospark-sql_2.3 version: 1.3.1","title":"For SparkSQL-2.3"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22","text":"groupId: org.datasyslab artifactId: geospark-sql_2.2 version: 1.3.1","title":"For SparkSQL-2.2"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21","text":"groupId: org.datasyslab artifactId: geospark-sql_2.1 version: 1.3.1","title":"For SparkSQL-2.1"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-120-and-later","text":"","title":"GeoSpark-Viz 1.2.0 and later"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23_1","text":"groupId: org.datasyslab artifactId: geospark-viz_2.3 version: 1.3.1","title":"For SparkSQL-2.3"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22_1","text":"groupId: org.datasyslab artifactId: geospark-viz_2.2 version: 1.3.1","title":"For SparkSQL-2.2"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21_1","text":"groupId: org.datasyslab artifactId: geospark-viz_2.1 version: 1.3.1","title":"For SparkSQL-2.1"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-113-and-earlier","text":"groupId: org.datasyslab artifactId: geospark-viz version: 1.1.3","title":"GeoSpark-Viz 1.1.3 and earlier"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-1x-versions","text":"Please add the following dependencies into your POM.xml or build.sbt","title":"Apache Spark 1.X versions"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core_1","text":"groupId: org.datasyslab artifactId: geospark version: 0.8.2-spark-1.x","title":"GeoSpark-Core"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz","text":"groupId: org.datasyslab artifactId: babylon version: 0.2.1-spark-1.x","title":"GeoSpark-Viz"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions","text":"Sometimes GeoSpark has a SNAPSHOT version for the upcoming release. \"SNAPSHOT\" is uppercase. groupId: org.datasyslab artifactId: geospark version: 1.3.2-SNAPSHOT groupId: org.datasyslab artifactId: geospark-sql_2.3 version: 1.3.2-SNAPSHOT groupId: org.datasyslab artifactId: geospark-viz version: 1.3.2-SNAPSHOT In order to download SNAPSHOTs, you need to add the following repositories in your POM.XML or build.sbt","title":"SNAPSHOT versions"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#buildsbt","text":"resolvers += \"Sonatype OSS Snapshots\" at \" https://oss.sonatype.org/content/repositories/snapshots \"","title":"build.sbt"},{"location":"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml","text":"<profiles> <profile> <id> allow-snapshots </id> <activation><activeByDefault> true </activeByDefault></activation> <repositories> <repository> <id> snapshots-repo </id> <url> https://oss.sonatype.org/content/repositories/snapshots </url> <releases><enabled> false </enabled></releases> <snapshots><enabled> true </enabled></snapshots> </repository> </repositories> </profile> </profiles>","title":"POM.XML"},{"location":"archive/download/GeoSpark-All-Modules-Release-notes/","text":"v1.3.1 \u00b6 This version includes the official release of GeoSpark Python wrapper. It also contains a number of bug fixes and new functions. The tutorial section provides some articles to explain the usage of GeoSpark Python wrapper. GeoSpark Core Bug fix: Issue # 344 and PR # 365 : GeoJSON reader cannot handle \"id\" Issue # 420 and PR # 421 : Cannot handle null value in geojson properties PR # 422 : Use HTTPS to resolve dependencies in Maven Build New functions: Issue # 399 and PR # 401 : saveAsWKB PR # 402 : saveAsWKT GeoSpark SQL New functions: PR # 359 : ST_NPoints PR # 373 : ST_GeometryType PR # 398 : ST_SimplifyPreserveTopology PR # 406 : ST_MakeValid PR # 416 : ST_Intersection_aggr Performance: Issue # 345 and PR # 346 : the performance issue of Adapter.toDF() function Bug fix: Issue # 395 and PR # 396 : Fix the geometry col bug in Adapter GeoSpark Viz Bug fix: Issue # 378 and PR # 379 : Classpath issue when integrating GeoSparkViz with s3 GeoSpark Python Add new GeoSpark python wrapper for RDD and SQL APIs Contributors (12) Mariano Gonzalez Pawe\u0142 Koci\u0144ski Semen Komissarov Jonathan Leitschuh Netanel Malka Keivan Shahida Sachio Wakai Hui Wang Wrussia Jia Yu Harry Zhu Ilya Zverev v1.3.0 \u00b6 This release has been skipped due to a bug in GeoSpark Python wrapper. v1.2.0 \u00b6 This version contains numerous bug fixes, new functions, and new GeoSpark module. License change From MIT to Apache License 2.0 GeoSpark Core Bug fix: Issue # 224 load GeoJSON non-spatial attributes. Issue # 228 Shapefiel Reader fails to handle UNDEFINED type. Issue # 320 Read CSV ArrayIndexOutOfBoundsException New functions: PR # 270 # 298 Add GeoJSON Reader to load GeoJSON with all attributes. See GeoSpark doc for an example. PR # 314 Add WktReader and WkbReader. Their usage is simialr to GeoJSON reader. GeoSpark SQL Bug fix: Issue # 244 JTS side location conflict Issue # 245 Drop ST_Circle in 1.2.0 Issue # 288 ST_isValid fails Issue # 321 ST_Point doesn't accept null user data PR # 284 ST_Union_Aggr bug PR # 331 Adapter doesn't handle null values New SQL functions: ST_IsValid ST_PrecisionReduce ST_Touches ST_Overlaps ST_Equals ST_Crosses ST_IsSimple ST_AsText Behavior / API change: GeoSpark Adapter will automatically carry all attributes between DataFrame and RDD. No need to use UUID in SQL ST functions to pass values. Please read GeoSpark doc . GeoSpark Viz Bug fix: Issue # 231 Pixel NullPointException Issue # 234 OutOfMemory for large images New functions Add the DataFrame support. Please read GeoSpark doc ST_Pixelize ST_TileName ST_Colorize ST_EncodeImage ST_Render Behavior / API change GeoSparkViz Maven coordinate changed. You need to specify Spark version. Please read GeoSpark Maven coordinate GeoSpark-Zeppelin New functions Add the support of connecting GeoSpark and Zeppelin Add the support of connecting GeoSparkViz and Zeppelin Contributors (13) Anton Peniaziev, Avshalom Orenstein, Jia Yu, Jordan Perr-Sauer, JulienPeloton, Sergii Mikhtoniuk, Netanel Malka, Rishabh Mishra, sagar1993, Shi-Hao Liu, Serhuela, tociek, Wrussia v1.1.3 \u00b6 This version contains a critical bug fix for GeoSpark-core RDD API. GeoSpark Core Fixed Issue # 222 : geometry toString() method has cumulative non-spatial attributes. See PR # 223 GeoSpark SQL None GeoSpark Viz None v1.1.2 \u00b6 This version contains several bug fixes and several small improvements. GeoSpark Core Added WKB input format support (Issue # 2 , 213 ): See PR # 203 , 216 . Thanks for the patch from Lucas C.! Added empty constructors for typed SpatialRDDs. This is especially useful when the users want to load a persisted RDD from disk and assemble a typed SpatialRDD by themselves. See PR # 211 Fixed Issue # 214 : duplicated geometry parts when print each Geometry in a SpatialRDD to a String using toString() method. See PR # 216 GeoSpark SQL Added ST_GeomFromWKB expression (Issue # 2 ): See PR # 203 . Thanks for the patch from Lucas C.! Fixed Issue # 193 : IllegalArgumentException in RangeJoin: Number of partitions must be >= 0. See PR # 207 Fixed Issue # 204 : Wrong ST_Intersection result. See PR # 205 [For Developer] Separate the expression catalog and the udf registrator to simplify the steps of merging patches among different Spark versions. See PR # 209 GeoSpark Viz None v1.1.1 \u00b6 This release has been skipped due to wrong Maven Central configuration. v1.1.0 \u00b6 This version adds very efficient R-Tree and Quad-Tree index serializers and supports Apache Spark and SparkSQL 2.3. See Maven Central coordinate to locate the particular version. GeoSpark Core Fixed Issue # 185 : CRStransform throws Exception for Bursa wolf parameters. See PR # 189 . Fixed Issue # 190 : Shapefile reader doesn't support Chinese characters (\u4e2d\u6587\u5b57\u7b26). See PR # 192 . Add R-Tree and Quad-Tree index serializer. GeoSpark custom index serializer has around 2 times smaller index size and faster serialization than Apache Spark kryo serializer. See PR # 177 . GeoSpark SQL Fixed Issue # 194 : doesn't support Spark 2.3. Fixed Issue # 188 :ST_ConvexHull should accept any type of geometry as an input. See PR # 189 . Add ST_Intersection function. See Issue # 110 and PR # 189 . GeoSpark Viz Fixed Issue # 154 : GeoSpark kryp serializer and GeoSparkViz conflict. See PR # 178 v1.0.1 \u00b6 GeoSpark Core Fixed Issue # 170 GeoSpark SQL Fixed Issue # 171 Added the support of SparkSQL 2.2. GeoSpark-SQL for Spark 2.1 is published separately ( Maven Coordinates ). GeoSpark Viz None v1.0.0 \u00b6 GeoSpark Core Add GeoSparkConf class to read GeoSparkConf from SparkConf GeoSpark SQL Initial release: fully supports SQL/MM-Part3 Spatial SQL standard GeoSpark Viz Republish GeoSpark Viz under \"GeoSparkViz\" folder. All \"Babylon\" strings have been replaced to \"GeoSparkViz\" v0.9.1 (GeoSpark-core) \u00b6 Bug fixes : Fixed \"Missing values when reading Shapefile\": Issue #141 Performance improvement : Solved Issue #91 , #103 , #104 , #125 , #150 . Add GeoSpark customized Kryo Serializer to significantly reduce memory footprint. This serializer which follows Shapefile compression rule takes less memory than the default Kryo. See PR 139 . Delete the duplicate removal by using Reference Point concept. This eliminates one data shuffle but still guarantees the accuracy. See PR 131 . New Functionalities added : SpatialJoinQueryFlat/DistanceJoinQueryFlat returns the join query in a flat way following database iteration model: Each row has fixed two members [Polygon, Point]. This API is more efficient for unbalanced length of join results. The left and right shapes in Range query, Distance query, Range join query, Distance join query can be switched. The index side in Range query, Distance query, Range join query, Distance join query can be switched. The generic SpatialRdd supports heterogenous geometries Add KDB-Tree spatial partitioning method which is more balanced than Quad-Tree Range query, Distance query, Range join query, Distance join query, KNN query supports heterogenous inputs. v0.8.2 (GeoSpark-core) \u00b6 Bug fixes : Fix the shapefile RDD null pointer bug when running in cluster mode. See Issue https://github.com/DataSystemsLab/GeoSpark/issues/115 New function added : Provide granular control to SpatialRDD sampling utils. SpatialRDD has a setter and getter for a parameter called \"sampleNumber\". The user can manually specify the sample size for spatial partitioning. v0.8.1 (GeoSpark-core) \u00b6 Bug fixes : (1) Fix the blank DBF attribute error when load DBF along with SHX file. (2) Allow user to call CRS transformation function at any time. Previously, it was only allowed in GeoSpark constructors v0.8.0 (GeoSpark-core) \u00b6 New input format added : GeoSpark is able to load and query ESRI ShapeFile (.shp, .shx, .dbf) from local disk and HDFS! Users first need to build a Shapefile RDD by giving Spark Context and an input path then call ShapefileRDD.getSpatialRDD to retrieve Spatial RDD. ( Scala Example , Java Example ) Join Query Performance enhancement 1 : GeoSpark provides a new Quad-Tree Spatial Partitioning method to speed up Join Query. Users need to pass GridType.QUADTREE parameter to RDD1.spatialPartitioning() function. Then users need to use RDD1.partitionTree in RDD2.spatialPartitioning() function. This Quad-Tree partitioning method (1) avoids overflowed spatial objects when partitioning spatial objects. (2) checking a spatial object against the Quad-Tree grids is completed in a log complexity tree search. ( Scala Example , Java Example ) Join Query Performance enhancement 2 : Internally, GeoSpark uses zipPartitions instead of CoGroup to join two Spatial RDD so that the incurred shuffle overhead decreases. SpatialRDD Initialization Performance enhancement : GeoSpark uses mapPartition instead of flatMapToPair to generate Spatial Objects. This will speed up the calculation. API changed : Since it chooses mapPartition API in mappers, GeoSpark no longer supports the old user supplified format mapper. However, if you are using your own format mapper for old GeoSpark version, you just need to add one more loop to fit in GeoSpark 0.8.0. Please see GeoSpark user supplied format mapper examples Alternative SpatialRDD constructor added : GeoSpark no longer forces users to provide StorageLevel parameter in their SpatialRDD constructors. This will siginicantly accelerate all Spatial RDD initialization. If he only needs Spatial Range Query and KNN query, the user can totally remove this parameter from their constructors. If he needs Spatial Join Query or Distance Join Query but he knows his dataset boundary and approximate total count, the user can also remove StorageLevel parameter and append a Envelope type dataset boundary and an approxmiate total count as additional parameters. If he needs Spatial Join Query or Distance Join Query but knows nothing about his dataset , the user still has to pass StorageLevel parameter. Bug fix : Fix bug Issue #97 and Issue #100 . v0.1 - v0.7 \u00b6 Version Summary 0.7.0 Coordinate Reference System (CRS) Transformation (aka. Coordinate projection) added: GeoSpark allows users to transform the original CRS (e.g., degree based coordinates such as EPSG:4326 and WGS84) to any other CRS (e.g., meter based coordinates such as EPSG:3857) so that it can accurately process both geographic data and geometrical data. Please specify your desired CRS in GeoSpark Spatial RDD constructor ( Example ); Unnecessary dependencies removed : NetCDF/HDF support depends on SerNetCDF . SetNetCDF becomes optional dependency to reduce fat jar size; Default JDK/JRE change to JDK/JRE 1.8 : To satisfy CRS transformation requirement, GeoSpark is compiled by JDK 1.8 by default; Bug fix : fix a small format bug when output spatial RDD to disk. 0.6.2 New input format added: Add a new input format mapper called EarthdataHDFPointMapper so that GeoSpark can load, query and save NASA Petabytes NetCDF/HDF Earth Data ( Scala Example , Java Example ); Bug fix: Print UserData attribute when output Spatial RDDs as GeoJSON or regular text file 0.6.1 Bug fixes: Fix typos LineString DistanceJoin API 0.6.0 Major updates: (1) DistanceJoin is merged into JoinQuery. GeoSpark now supports complete DistanceJoin between Points, Polygons, and LineStrings. (2) Add Refine Phase to Spatial Range and Join Query. Use real polygon coordinates instead of its MBR to filter the final results. API changes: All spatial range and join queries now take a parameter called ConsiderBoundaryIntersection . This will tell GeoSpark whether returns the objects intersect with windows. 0.5.3 Bug fix: Fix Issue #69 : Now, if two objects have the same coordinates but different non-spatial attributes (UserData), GeoSpark treats them as different objects. 0.5.2 Bug fix: Fix Issue #58 and Issue #60 ; Performance enhancement: (1) Deprecate all old Spatial RDD constructors. See the JavaDoc here . (2) Recommend the new SRDD constructors which take an additional RDD storage level and automatically cache rawSpatialRDD to accelerate internal SRDD analyze step 0.5.1 Bug fix: (1) GeoSpark: Fix inaccurate KNN result when K is large (2) GeoSpark: Replace incompatible Spark API call Issue #55 ; (3) Babylon: Remove JPG output format temporarily due to the lack of OpenJDK support 0.5.0 Major updates: We are pleased to announce the initial version of Babylon a large-scale in-memory geospatial visualization system extending GeoSpark. Babylon and GeoSpark are integrated together. You can just import GeoSpark and enjoy! More details are available here: Babylon GeoSpatial Visualization 0.4.0 Major updates: ( Example ) 1. Refactor constrcutor API usage. 2. Simplify Spatial Join Query API. 3. Add native support for LineStringRDD; Functionality enhancement: 1. Release the persist function back to users. 2. Add more exception explanations. 0.3.2 Functionality enhancement: 1. JTSplus Spatial Objects now carry the original input data. Each object stores \"UserData\" and provides getter and setter. 2. Add a new SpatialRDD constructor to transform a regular data RDD to a spatial partitioned SpatialRDD. 0.3.1 Bug fix: Support Apache Spark 2.X version, fix a bug which results in inaccurate results when doing join query, add more unit test cases 0.3 Major updates: Significantly shorten query time on spatial join for skewed data; Support load balanced spatial partitioning methods (also serve as the global index); Optimize code for iterative spatial data mining 0.2 Improve code structure and refactor API 0.1 Support spatial range, join and Knn GeoSpark-Viz (old) \u00b6 Version Summary 0.2.2 Add the support of new output storage : Now the user is able to output gigapixel or megapixel resolution images (image tiles or stitched single image) to HDFS and Amazon S3. Please use the new ImageGenerator not the BabylonImageGenerator class. 0.2.1 Performance enhancement : significantly accelerate single image generation pipeline. Bug fix :fix a bug in scatter plot parallel rendering. 0.2.0 API updates for Issue #80 : 1. Babylon now has two different OverlayOperators for raster image and vector image: RasterOverlayOperator and VectorOverlayOperator; 2. Babylon merged old SparkImageGenerator and NativeJavaGenerator into a new BabylonImageGenerator which has neat APIs; New feature: Babylon can use Scatter Plot to visualize NASA Petabytes NetCDF/HDF format Earth Data. ( Scala Example , Java Example ) 0.1.1 Major updates: Babylon supports vector image and outputs SVG image format 0.1.0 Major updates: Babylon initial version supports raster images","title":"Release notes"},{"location":"archive/download/GeoSpark-All-Modules-Release-notes/#v131","text":"This version includes the official release of GeoSpark Python wrapper. It also contains a number of bug fixes and new functions. The tutorial section provides some articles to explain the usage of GeoSpark Python wrapper. GeoSpark Core Bug fix: Issue # 344 and PR # 365 : GeoJSON reader cannot handle \"id\" Issue # 420 and PR # 421 : Cannot handle null value in geojson properties PR # 422 : Use HTTPS to resolve dependencies in Maven Build New functions: Issue # 399 and PR # 401 : saveAsWKB PR # 402 : saveAsWKT GeoSpark SQL New functions: PR # 359 : ST_NPoints PR # 373 : ST_GeometryType PR # 398 : ST_SimplifyPreserveTopology PR # 406 : ST_MakeValid PR # 416 : ST_Intersection_aggr Performance: Issue # 345 and PR # 346 : the performance issue of Adapter.toDF() function Bug fix: Issue # 395 and PR # 396 : Fix the geometry col bug in Adapter GeoSpark Viz Bug fix: Issue # 378 and PR # 379 : Classpath issue when integrating GeoSparkViz with s3 GeoSpark Python Add new GeoSpark python wrapper for RDD and SQL APIs Contributors (12) Mariano Gonzalez Pawe\u0142 Koci\u0144ski Semen Komissarov Jonathan Leitschuh Netanel Malka Keivan Shahida Sachio Wakai Hui Wang Wrussia Jia Yu Harry Zhu Ilya Zverev","title":"v1.3.1"},{"location":"archive/download/GeoSpark-All-Modules-Release-notes/#v130","text":"This release has been skipped due to a bug in GeoSpark Python wrapper.","title":"v1.3.0"},{"location":"archive/download/GeoSpark-All-Modules-Release-notes/#v120","text":"This version contains numerous bug fixes, new functions, and new GeoSpark module. License change From MIT to Apache License 2.0 GeoSpark Core Bug fix: Issue # 224 load GeoJSON non-spatial attributes. Issue # 228 Shapefiel Reader fails to handle UNDEFINED type. Issue # 320 Read CSV ArrayIndexOutOfBoundsException New functions: PR # 270 # 298 Add GeoJSON Reader to load GeoJSON with all attributes. See GeoSpark doc for an example. PR # 314 Add WktReader and WkbReader. Their usage is simialr to GeoJSON reader. GeoSpark SQL Bug fix: Issue # 244 JTS side location conflict Issue # 245 Drop ST_Circle in 1.2.0 Issue # 288 ST_isValid fails Issue # 321 ST_Point doesn't accept null user data PR # 284 ST_Union_Aggr bug PR # 331 Adapter doesn't handle null values New SQL functions: ST_IsValid ST_PrecisionReduce ST_Touches ST_Overlaps ST_Equals ST_Crosses ST_IsSimple ST_AsText Behavior / API change: GeoSpark Adapter will automatically carry all attributes between DataFrame and RDD. No need to use UUID in SQL ST functions to pass values. Please read GeoSpark doc . GeoSpark Viz Bug fix: Issue # 231 Pixel NullPointException Issue # 234 OutOfMemory for large images New functions Add the DataFrame support. Please read GeoSpark doc ST_Pixelize ST_TileName ST_Colorize ST_EncodeImage ST_Render Behavior / API change GeoSparkViz Maven coordinate changed. You need to specify Spark version. Please read GeoSpark Maven coordinate GeoSpark-Zeppelin New functions Add the support of connecting GeoSpark and Zeppelin Add the support of connecting GeoSparkViz and Zeppelin Contributors (13) Anton Peniaziev, Avshalom Orenstein, Jia Yu, Jordan Perr-Sauer, JulienPeloton, Sergii Mikhtoniuk, Netanel Malka, Rishabh Mishra, sagar1993, Shi-Hao Liu, Serhuela, tociek, Wrussia","title":"v1.2.0"},{"location":"archive/download/GeoSpark-All-Modules-Release-notes/#v113","text":"This version contains a critical bug fix for GeoSpark-core RDD API. GeoSpark Core Fixed Issue # 222 : geometry toString() method has cumulative non-spatial attributes. See PR # 223 GeoSpark SQL None GeoSpark Viz None","title":"v1.1.3"},{"location":"archive/download/GeoSpark-All-Modules-Release-notes/#v112","text":"This version contains several bug fixes and several small improvements. GeoSpark Core Added WKB input format support (Issue # 2 , 213 ): See PR # 203 , 216 . Thanks for the patch from Lucas C.! Added empty constructors for typed SpatialRDDs. This is especially useful when the users want to load a persisted RDD from disk and assemble a typed SpatialRDD by themselves. See PR # 211 Fixed Issue # 214 : duplicated geometry parts when print each Geometry in a SpatialRDD to a String using toString() method. See PR # 216 GeoSpark SQL Added ST_GeomFromWKB expression (Issue # 2 ): See PR # 203 . Thanks for the patch from Lucas C.! Fixed Issue # 193 : IllegalArgumentException in RangeJoin: Number of partitions must be >= 0. See PR # 207 Fixed Issue # 204 : Wrong ST_Intersection result. See PR # 205 [For Developer] Separate the expression catalog and the udf registrator to simplify the steps of merging patches among different Spark versions. See PR # 209 GeoSpark Viz None","title":"v1.1.2"},{"location":"archive/download/GeoSpark-All-Modules-Release-notes/#v111","text":"This release has been skipped due to wrong Maven Central configuration.","title":"v1.1.1"},{"location":"archive/download/GeoSpark-All-Modules-Release-notes/#v110","text":"This version adds very efficient R-Tree and Quad-Tree index serializers and supports Apache Spark and SparkSQL 2.3. See Maven Central coordinate to locate the particular version. GeoSpark Core Fixed Issue # 185 : CRStransform throws Exception for Bursa wolf parameters. See PR # 189 . Fixed Issue # 190 : Shapefile reader doesn't support Chinese characters (\u4e2d\u6587\u5b57\u7b26). See PR # 192 . Add R-Tree and Quad-Tree index serializer. GeoSpark custom index serializer has around 2 times smaller index size and faster serialization than Apache Spark kryo serializer. See PR # 177 . GeoSpark SQL Fixed Issue # 194 : doesn't support Spark 2.3. Fixed Issue # 188 :ST_ConvexHull should accept any type of geometry as an input. See PR # 189 . Add ST_Intersection function. See Issue # 110 and PR # 189 . GeoSpark Viz Fixed Issue # 154 : GeoSpark kryp serializer and GeoSparkViz conflict. See PR # 178","title":"v1.1.0"},{"location":"archive/download/GeoSpark-All-Modules-Release-notes/#v101","text":"GeoSpark Core Fixed Issue # 170 GeoSpark SQL Fixed Issue # 171 Added the support of SparkSQL 2.2. GeoSpark-SQL for Spark 2.1 is published separately ( Maven Coordinates ). GeoSpark Viz None","title":"v1.0.1"},{"location":"archive/download/GeoSpark-All-Modules-Release-notes/#v100","text":"GeoSpark Core Add GeoSparkConf class to read GeoSparkConf from SparkConf GeoSpark SQL Initial release: fully supports SQL/MM-Part3 Spatial SQL standard GeoSpark Viz Republish GeoSpark Viz under \"GeoSparkViz\" folder. All \"Babylon\" strings have been replaced to \"GeoSparkViz\"","title":"v1.0.0"},{"location":"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core","text":"Bug fixes : Fixed \"Missing values when reading Shapefile\": Issue #141 Performance improvement : Solved Issue #91 , #103 , #104 , #125 , #150 . Add GeoSpark customized Kryo Serializer to significantly reduce memory footprint. This serializer which follows Shapefile compression rule takes less memory than the default Kryo. See PR 139 . Delete the duplicate removal by using Reference Point concept. This eliminates one data shuffle but still guarantees the accuracy. See PR 131 . New Functionalities added : SpatialJoinQueryFlat/DistanceJoinQueryFlat returns the join query in a flat way following database iteration model: Each row has fixed two members [Polygon, Point]. This API is more efficient for unbalanced length of join results. The left and right shapes in Range query, Distance query, Range join query, Distance join query can be switched. The index side in Range query, Distance query, Range join query, Distance join query can be switched. The generic SpatialRdd supports heterogenous geometries Add KDB-Tree spatial partitioning method which is more balanced than Quad-Tree Range query, Distance query, Range join query, Distance join query, KNN query supports heterogenous inputs.","title":"v0.9.1 (GeoSpark-core)"},{"location":"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core","text":"Bug fixes : Fix the shapefile RDD null pointer bug when running in cluster mode. See Issue https://github.com/DataSystemsLab/GeoSpark/issues/115 New function added : Provide granular control to SpatialRDD sampling utils. SpatialRDD has a setter and getter for a parameter called \"sampleNumber\". The user can manually specify the sample size for spatial partitioning.","title":"v0.8.2 (GeoSpark-core)"},{"location":"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core","text":"Bug fixes : (1) Fix the blank DBF attribute error when load DBF along with SHX file. (2) Allow user to call CRS transformation function at any time. Previously, it was only allowed in GeoSpark constructors","title":"v0.8.1 (GeoSpark-core)"},{"location":"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core","text":"New input format added : GeoSpark is able to load and query ESRI ShapeFile (.shp, .shx, .dbf) from local disk and HDFS! Users first need to build a Shapefile RDD by giving Spark Context and an input path then call ShapefileRDD.getSpatialRDD to retrieve Spatial RDD. ( Scala Example , Java Example ) Join Query Performance enhancement 1 : GeoSpark provides a new Quad-Tree Spatial Partitioning method to speed up Join Query. Users need to pass GridType.QUADTREE parameter to RDD1.spatialPartitioning() function. Then users need to use RDD1.partitionTree in RDD2.spatialPartitioning() function. This Quad-Tree partitioning method (1) avoids overflowed spatial objects when partitioning spatial objects. (2) checking a spatial object against the Quad-Tree grids is completed in a log complexity tree search. ( Scala Example , Java Example ) Join Query Performance enhancement 2 : Internally, GeoSpark uses zipPartitions instead of CoGroup to join two Spatial RDD so that the incurred shuffle overhead decreases. SpatialRDD Initialization Performance enhancement : GeoSpark uses mapPartition instead of flatMapToPair to generate Spatial Objects. This will speed up the calculation. API changed : Since it chooses mapPartition API in mappers, GeoSpark no longer supports the old user supplified format mapper. However, if you are using your own format mapper for old GeoSpark version, you just need to add one more loop to fit in GeoSpark 0.8.0. Please see GeoSpark user supplied format mapper examples Alternative SpatialRDD constructor added : GeoSpark no longer forces users to provide StorageLevel parameter in their SpatialRDD constructors. This will siginicantly accelerate all Spatial RDD initialization. If he only needs Spatial Range Query and KNN query, the user can totally remove this parameter from their constructors. If he needs Spatial Join Query or Distance Join Query but he knows his dataset boundary and approximate total count, the user can also remove StorageLevel parameter and append a Envelope type dataset boundary and an approxmiate total count as additional parameters. If he needs Spatial Join Query or Distance Join Query but knows nothing about his dataset , the user still has to pass StorageLevel parameter. Bug fix : Fix bug Issue #97 and Issue #100 .","title":"v0.8.0 (GeoSpark-core)"},{"location":"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07","text":"Version Summary 0.7.0 Coordinate Reference System (CRS) Transformation (aka. Coordinate projection) added: GeoSpark allows users to transform the original CRS (e.g., degree based coordinates such as EPSG:4326 and WGS84) to any other CRS (e.g., meter based coordinates such as EPSG:3857) so that it can accurately process both geographic data and geometrical data. Please specify your desired CRS in GeoSpark Spatial RDD constructor ( Example ); Unnecessary dependencies removed : NetCDF/HDF support depends on SerNetCDF . SetNetCDF becomes optional dependency to reduce fat jar size; Default JDK/JRE change to JDK/JRE 1.8 : To satisfy CRS transformation requirement, GeoSpark is compiled by JDK 1.8 by default; Bug fix : fix a small format bug when output spatial RDD to disk. 0.6.2 New input format added: Add a new input format mapper called EarthdataHDFPointMapper so that GeoSpark can load, query and save NASA Petabytes NetCDF/HDF Earth Data ( Scala Example , Java Example ); Bug fix: Print UserData attribute when output Spatial RDDs as GeoJSON or regular text file 0.6.1 Bug fixes: Fix typos LineString DistanceJoin API 0.6.0 Major updates: (1) DistanceJoin is merged into JoinQuery. GeoSpark now supports complete DistanceJoin between Points, Polygons, and LineStrings. (2) Add Refine Phase to Spatial Range and Join Query. Use real polygon coordinates instead of its MBR to filter the final results. API changes: All spatial range and join queries now take a parameter called ConsiderBoundaryIntersection . This will tell GeoSpark whether returns the objects intersect with windows. 0.5.3 Bug fix: Fix Issue #69 : Now, if two objects have the same coordinates but different non-spatial attributes (UserData), GeoSpark treats them as different objects. 0.5.2 Bug fix: Fix Issue #58 and Issue #60 ; Performance enhancement: (1) Deprecate all old Spatial RDD constructors. See the JavaDoc here . (2) Recommend the new SRDD constructors which take an additional RDD storage level and automatically cache rawSpatialRDD to accelerate internal SRDD analyze step 0.5.1 Bug fix: (1) GeoSpark: Fix inaccurate KNN result when K is large (2) GeoSpark: Replace incompatible Spark API call Issue #55 ; (3) Babylon: Remove JPG output format temporarily due to the lack of OpenJDK support 0.5.0 Major updates: We are pleased to announce the initial version of Babylon a large-scale in-memory geospatial visualization system extending GeoSpark. Babylon and GeoSpark are integrated together. You can just import GeoSpark and enjoy! More details are available here: Babylon GeoSpatial Visualization 0.4.0 Major updates: ( Example ) 1. Refactor constrcutor API usage. 2. Simplify Spatial Join Query API. 3. Add native support for LineStringRDD; Functionality enhancement: 1. Release the persist function back to users. 2. Add more exception explanations. 0.3.2 Functionality enhancement: 1. JTSplus Spatial Objects now carry the original input data. Each object stores \"UserData\" and provides getter and setter. 2. Add a new SpatialRDD constructor to transform a regular data RDD to a spatial partitioned SpatialRDD. 0.3.1 Bug fix: Support Apache Spark 2.X version, fix a bug which results in inaccurate results when doing join query, add more unit test cases 0.3 Major updates: Significantly shorten query time on spatial join for skewed data; Support load balanced spatial partitioning methods (also serve as the global index); Optimize code for iterative spatial data mining 0.2 Improve code structure and refactor API 0.1 Support spatial range, join and Knn","title":"v0.1 - v0.7"},{"location":"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old","text":"Version Summary 0.2.2 Add the support of new output storage : Now the user is able to output gigapixel or megapixel resolution images (image tiles or stitched single image) to HDFS and Amazon S3. Please use the new ImageGenerator not the BabylonImageGenerator class. 0.2.1 Performance enhancement : significantly accelerate single image generation pipeline. Bug fix :fix a bug in scatter plot parallel rendering. 0.2.0 API updates for Issue #80 : 1. Babylon now has two different OverlayOperators for raster image and vector image: RasterOverlayOperator and VectorOverlayOperator; 2. Babylon merged old SparkImageGenerator and NativeJavaGenerator into a new BabylonImageGenerator which has neat APIs; New feature: Babylon can use Scatter Plot to visualize NASA Petabytes NetCDF/HDF format Earth Data. ( Scala Example , Java Example ) 0.1.1 Major updates: Babylon supports vector image and outputs SVG image format 0.1.0 Major updates: Babylon initial version supports raster images","title":"GeoSpark-Viz (old)"},{"location":"archive/download/cluster/","text":"Set up your Apache Spark cluster \u00b6 Download a Spark distribution from Spark download page . Preliminary \u00b6 Set up password-less SSH on your cluster. Each master-worker pair should have bi-directional password-less SSH. Make sure you have installed JRE 1.8 or later. Add the list of your workers' IP address in ./conf/slaves Besides the necessary Spark settings, you may need to add the following lines in Spark configuration files to avoid GeoSpark memory errors: In ./conf/spark-defaults.conf spark.driver.memory 10g spark.network.timeout 1000s spark.driver.maxResultSize 5g spark.driver.memory tells Spark to allocate enough memory for the driver program because GeoSpark needs to build global grid files (global index) on the driver program. If you have a large amount of data (normally, over 100 GB), set this parameter to 2~5 GB will be good. Otherwise, you may observe \"out of memory\" error. spark.network.timeout is the default timeout for all network interactions. Sometimes, spatial join query takes longer time to shuffle data. This will ensure Spark has enough patience to wait for the result. spark.driver.maxResultSize is the limit of total size of serialized results of all partitions for each Spark action. Sometimes, the result size of spatial queries is large. The \"Collect\" operation may throw errors. For more details of Spark parameters, please visit Spark Website . Start your cluster \u00b6 Go the root folder of the uncompressed Apache Spark folder. Start your spark cluster via a terminal ./sbin/start-all.sh","title":"Set up Spark cluser"},{"location":"archive/download/cluster/#set-up-your-apache-spark-cluster","text":"Download a Spark distribution from Spark download page .","title":"Set up your Apache Spark cluster"},{"location":"archive/download/cluster/#preliminary","text":"Set up password-less SSH on your cluster. Each master-worker pair should have bi-directional password-less SSH. Make sure you have installed JRE 1.8 or later. Add the list of your workers' IP address in ./conf/slaves Besides the necessary Spark settings, you may need to add the following lines in Spark configuration files to avoid GeoSpark memory errors: In ./conf/spark-defaults.conf spark.driver.memory 10g spark.network.timeout 1000s spark.driver.maxResultSize 5g spark.driver.memory tells Spark to allocate enough memory for the driver program because GeoSpark needs to build global grid files (global index) on the driver program. If you have a large amount of data (normally, over 100 GB), set this parameter to 2~5 GB will be good. Otherwise, you may observe \"out of memory\" error. spark.network.timeout is the default timeout for all network interactions. Sometimes, spatial join query takes longer time to shuffle data. This will ensure Spark has enough patience to wait for the result. spark.driver.maxResultSize is the limit of total size of serialized results of all partitions for each Spark action. Sometimes, the result size of spatial queries is large. The \"Collect\" operation may throw errors. For more details of Spark parameters, please visit Spark Website .","title":"Preliminary"},{"location":"archive/download/cluster/#start-your-cluster","text":"Go the root folder of the uncompressed Apache Spark folder. Start your spark cluster via a terminal ./sbin/start-all.sh","title":"Start your cluster"},{"location":"archive/download/compile/","text":"Compile GeoSpark \u00b6 Some GeoSpark hackers may want to change some source code to fit in their own scenarios. To compile GeoSpark source code, you first need to download GeoSpark source code: Download / Git clone GeoSpark source code from GeoSpark Github repo . Compile the source code \u00b6 GeoSpark is a a project with three modules, core, sql, and viz. Each module is a Scala/Java mixed project which is managed by Apache Maven 3. Make sure your machine has Java 1.8 and Apache Maven 3. To compile all modules, please make sure you are in the root folder of three modules. Then enter the following command in the terminal: mvn clean install -DskipTests This command will first delete the old binary files and compile all three modules. This compilation will skip the unit tests of GeoSpark. To compile a module of GeoSpark, please make sure you are in the folder of that module. Then enter the same command. To run unit tests, just simply remove -DskipTests option. The command is like this: mvn clean install Warning The unit tests of all three modules may take up to 30 minutes. Compile the documentation \u00b6 The source code of GeoSpark documentation website is written in Markdown and then compiled by MkDocs. The website is built upon Material for MkDocs template . In GeoSpark repository, MkDocs configuration file mkdocs.yml is in the root folder and all documentation source code is in docs folder. To compile the source code and test the website on your local machine, please read MkDocs Tutorial and Materials for MkDocs Tutorial . After installing MkDocs and MkDocs-Material, run the command in GeoSpark root folder: mkdocs serve","title":"Compile the source code"},{"location":"archive/download/compile/#compile-geospark","text":"Some GeoSpark hackers may want to change some source code to fit in their own scenarios. To compile GeoSpark source code, you first need to download GeoSpark source code: Download / Git clone GeoSpark source code from GeoSpark Github repo .","title":"Compile GeoSpark"},{"location":"archive/download/compile/#compile-the-source-code","text":"GeoSpark is a a project with three modules, core, sql, and viz. Each module is a Scala/Java mixed project which is managed by Apache Maven 3. Make sure your machine has Java 1.8 and Apache Maven 3. To compile all modules, please make sure you are in the root folder of three modules. Then enter the following command in the terminal: mvn clean install -DskipTests This command will first delete the old binary files and compile all three modules. This compilation will skip the unit tests of GeoSpark. To compile a module of GeoSpark, please make sure you are in the folder of that module. Then enter the same command. To run unit tests, just simply remove -DskipTests option. The command is like this: mvn clean install Warning The unit tests of all three modules may take up to 30 minutes.","title":"Compile the source code"},{"location":"archive/download/compile/#compile-the-documentation","text":"The source code of GeoSpark documentation website is written in Markdown and then compiled by MkDocs. The website is built upon Material for MkDocs template . In GeoSpark repository, MkDocs configuration file mkdocs.yml is in the root folder and all documentation source code is in docs folder. To compile the source code and test the website on your local machine, please read MkDocs Tutorial and Materials for MkDocs Tutorial . After installing MkDocs and MkDocs-Material, run the command in GeoSpark root folder: mkdocs serve","title":"Compile the documentation"},{"location":"archive/download/overview/","text":"Direct download \u00b6 GeoSpark source code is hosted on GeoSpark GitHub repository . GeoSpark pre-compiled JARs are hosted on GeoSpark GitHub Releases . GeoSpark pre-compiled JARs are hosted on Maven Central . GeoSpark release notes are here Release notes . Install GeoSpark \u00b6 Before starting the GeoSpark journey, you need to make sure your Apache Spark cluster is ready. There are two ways to use a Scala or Java library with Apache Spark. You can user either one to run GeoSpark. Spark interactive Scala shell: easy to start, good for new learners to try simple functions Self-contained Scala / Java project: a steep learning curve of package management, but good for large projects","title":"Quick start"},{"location":"archive/download/overview/#direct-download","text":"GeoSpark source code is hosted on GeoSpark GitHub repository . GeoSpark pre-compiled JARs are hosted on GeoSpark GitHub Releases . GeoSpark pre-compiled JARs are hosted on Maven Central . GeoSpark release notes are here Release notes .","title":"Direct download"},{"location":"archive/download/overview/#install-geospark","text":"Before starting the GeoSpark journey, you need to make sure your Apache Spark cluster is ready. There are two ways to use a Scala or Java library with Apache Spark. You can user either one to run GeoSpark. Spark interactive Scala shell: easy to start, good for new learners to try simple functions Self-contained Scala / Java project: a steep learning curve of package management, but good for large projects","title":"Install GeoSpark"},{"location":"archive/download/project/","text":"Self-contained Spark projects \u00b6 A self-contained project allows you to create multiple Scala / Java files and write complex logics in one place. To use GeoSpark in your self-contained Spark project, you just need to add GeoSpark as a dependency in your POM.xml or build.sbt. Quick start \u00b6 To add GeoSpark as dependencies, please read GeoSpark Maven Central coordinates Use GeoSpark Template project to start: GeoSpark Template Project Compile your project using SBT or Maven. Make sure you obtain the fat jar which packages all dependencies. Submit your compiled fat jar to Spark cluster. Make sure you are in the root folder of Spark distribution. Then run the following command: ./bin/spark-submit --master spark://YOUR-IP:7077 /Path/To/YourJar.jar Note The detailed explanation of spark-submit is available on Spark website . How to use GeoSpark in an IDE \u00b6 Select an IDE \u00b6 To develop a complex GeoSpark project, we suggest you use IntelliJ IDEA. It supports JVM languages, Scala and Java, and many dependency management systems, Maven and SBT. Eclipse is also fine if you just want to use Java and Maven. Open GeoSpark template project \u00b6 Select a proper GeoSpark project you want from GeoSpark Template Project . In this tutorial, we use GeoSparkSQL Scala project as an example. Open the folder that contains build.sbt file in your IDE. The IDE may take a while to index dependencies and source code. Try GeoSpark SQL functions \u00b6 In your IDE, run ScalaExample.scala file. You don't need to change anything in this file. The IDE will run all SQL queries in this example in local mode. Package the project \u00b6 To run this project in cluster mode, you have to package this project to a JAR and then run it using spark-submit command. Before packaging this project, you always need to check two places: Remove the hardcoded Master IP master(\"local[*]\") . This hardcoded IP is only needed when you run this project in an IDE. var sparkSession : SparkSession = SparkSession . builder () . config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) . config ( \"spark.kryo.registrator\" , classOf [ GeoSparkKryoRegistrator ]. getName ) . master ( \"local[*]\" ) . appName ( \"GeoSparkSQL-demo\" ). getOrCreate () In build.sbt (or POM.xml), set Spark dependency scope to provided instead of compile . compile is only needed when you run this project in an IDE. org.apache.spark\" %% \"spark-core\" % SparkVersion % \"compile, org.apache.spark\" %% \"spark-sql\" % SparkVersion % \"compile Warning Forgetting to change the package scope will lead to a very big fat JAR and dependency conflicts when call spark-submit . For more details, please visit Maven Dependency Scope . Make sure your downloaded Spark binary distribution is the same version with the Spark used in your build.sbt or POM.xml . Submit the compiled jar \u00b6 Go to ./target/scala-2.11 folder and find a jar called GeoSparkSQLScalaTemplate-0.1.0.jar . Note that, this JAR normally is larger than 1MB. (If you use POM.xml, the jar is under ./target folder) Submit this JAR using spark-submit . Local mode: ./bin/spark-submit /Path/To/YourJar.jar Cluster mode: ./bin/spark-submit --master spark://YOUR-IP:7077 /Path/To/YourJar.jar","title":"Self-contained project"},{"location":"archive/download/project/#self-contained-spark-projects","text":"A self-contained project allows you to create multiple Scala / Java files and write complex logics in one place. To use GeoSpark in your self-contained Spark project, you just need to add GeoSpark as a dependency in your POM.xml or build.sbt.","title":"Self-contained Spark projects"},{"location":"archive/download/project/#quick-start","text":"To add GeoSpark as dependencies, please read GeoSpark Maven Central coordinates Use GeoSpark Template project to start: GeoSpark Template Project Compile your project using SBT or Maven. Make sure you obtain the fat jar which packages all dependencies. Submit your compiled fat jar to Spark cluster. Make sure you are in the root folder of Spark distribution. Then run the following command: ./bin/spark-submit --master spark://YOUR-IP:7077 /Path/To/YourJar.jar Note The detailed explanation of spark-submit is available on Spark website .","title":"Quick start"},{"location":"archive/download/project/#how-to-use-geospark-in-an-ide","text":"","title":"How to use GeoSpark in an IDE"},{"location":"archive/download/project/#select-an-ide","text":"To develop a complex GeoSpark project, we suggest you use IntelliJ IDEA. It supports JVM languages, Scala and Java, and many dependency management systems, Maven and SBT. Eclipse is also fine if you just want to use Java and Maven.","title":"Select an IDE"},{"location":"archive/download/project/#open-geospark-template-project","text":"Select a proper GeoSpark project you want from GeoSpark Template Project . In this tutorial, we use GeoSparkSQL Scala project as an example. Open the folder that contains build.sbt file in your IDE. The IDE may take a while to index dependencies and source code.","title":"Open GeoSpark template project"},{"location":"archive/download/project/#try-geospark-sql-functions","text":"In your IDE, run ScalaExample.scala file. You don't need to change anything in this file. The IDE will run all SQL queries in this example in local mode.","title":"Try GeoSpark SQL functions"},{"location":"archive/download/project/#package-the-project","text":"To run this project in cluster mode, you have to package this project to a JAR and then run it using spark-submit command. Before packaging this project, you always need to check two places: Remove the hardcoded Master IP master(\"local[*]\") . This hardcoded IP is only needed when you run this project in an IDE. var sparkSession : SparkSession = SparkSession . builder () . config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) . config ( \"spark.kryo.registrator\" , classOf [ GeoSparkKryoRegistrator ]. getName ) . master ( \"local[*]\" ) . appName ( \"GeoSparkSQL-demo\" ). getOrCreate () In build.sbt (or POM.xml), set Spark dependency scope to provided instead of compile . compile is only needed when you run this project in an IDE. org.apache.spark\" %% \"spark-core\" % SparkVersion % \"compile, org.apache.spark\" %% \"spark-sql\" % SparkVersion % \"compile Warning Forgetting to change the package scope will lead to a very big fat JAR and dependency conflicts when call spark-submit . For more details, please visit Maven Dependency Scope . Make sure your downloaded Spark binary distribution is the same version with the Spark used in your build.sbt or POM.xml .","title":"Package the project"},{"location":"archive/download/project/#submit-the-compiled-jar","text":"Go to ./target/scala-2.11 folder and find a jar called GeoSparkSQLScalaTemplate-0.1.0.jar . Note that, this JAR normally is larger than 1MB. (If you use POM.xml, the jar is under ./target folder) Submit this JAR using spark-submit . Local mode: ./bin/spark-submit /Path/To/YourJar.jar Cluster mode: ./bin/spark-submit --master spark://YOUR-IP:7077 /Path/To/YourJar.jar","title":"Submit the compiled jar"},{"location":"archive/download/scalashell/","text":"Spark Scala shell \u00b6 Spark distribution provides an interactive Scala shell that allows a user to execute Scala code in a terminal. This mode currently works with GeoSpark-core and GeoSparkViz. Download GeoSpark jar automatically \u00b6 Have your Spark cluster ready. Run Spark shell with --packages option. This command will automatically download GeoSpark jars from Maven Central. ./bin/spark-shell --packages org.datasyslab:geospark:GEOSPARK_VERSION Local mode: test GeoSpark without setting up a cluster ./bin/spark-shell --packages org.datasyslab:geospark:1.2.0,org.datasyslab:geospark-sql_2.3:1.2.0,org.datasyslab:geospark-viz_2.3:1.2.0 Cluster mode: you need to specify Spark Master IP ./bin/spark-shell --master spark://localhost:7077 --packages org.datasyslab:geospark:1.2.0,org.datasyslab:geospark-sql_2.3:1.2.0,org.datasyslab:geospark-viz_2.3:1.2.0 Download GeoSpark jar manually \u00b6 Have your Spark cluster ready. Download GeoSpark jars: Download the pre-compiled jars from GeoSpark Releases on GitHub Download / Git clone GeoSpark source code and compile the code by yourself: mvn clean install -DskipTests Run Spark shell with --jars option. ./bin/spark-shell --jars /Path/To/GeoSparkJars.jar Local mode: test GeoSpark without setting up a cluster ./bin/spark-shell --jars geospark-1.0.1.jar,geospark-viz-1.0.1.jar Cluster mode: you need to specify Spark Master IP ./bin/spark-shell --master spark://localhost:7077 --jars geospark-1.0.1.jar,geospark-viz-1.0.1.jar","title":"Spark Scala shell"},{"location":"archive/download/scalashell/#spark-scala-shell","text":"Spark distribution provides an interactive Scala shell that allows a user to execute Scala code in a terminal. This mode currently works with GeoSpark-core and GeoSparkViz.","title":"Spark Scala shell"},{"location":"archive/download/scalashell/#download-geospark-jar-automatically","text":"Have your Spark cluster ready. Run Spark shell with --packages option. This command will automatically download GeoSpark jars from Maven Central. ./bin/spark-shell --packages org.datasyslab:geospark:GEOSPARK_VERSION Local mode: test GeoSpark without setting up a cluster ./bin/spark-shell --packages org.datasyslab:geospark:1.2.0,org.datasyslab:geospark-sql_2.3:1.2.0,org.datasyslab:geospark-viz_2.3:1.2.0 Cluster mode: you need to specify Spark Master IP ./bin/spark-shell --master spark://localhost:7077 --packages org.datasyslab:geospark:1.2.0,org.datasyslab:geospark-sql_2.3:1.2.0,org.datasyslab:geospark-viz_2.3:1.2.0","title":"Download GeoSpark jar automatically"},{"location":"archive/download/scalashell/#download-geospark-jar-manually","text":"Have your Spark cluster ready. Download GeoSpark jars: Download the pre-compiled jars from GeoSpark Releases on GitHub Download / Git clone GeoSpark source code and compile the code by yourself: mvn clean install -DskipTests Run Spark shell with --jars option. ./bin/spark-shell --jars /Path/To/GeoSparkJars.jar Local mode: test GeoSpark without setting up a cluster ./bin/spark-shell --jars geospark-1.0.1.jar,geospark-viz-1.0.1.jar Cluster mode: you need to specify Spark Master IP ./bin/spark-shell --master spark://localhost:7077 --jars geospark-1.0.1.jar,geospark-viz-1.0.1.jar","title":"Download GeoSpark jar manually"},{"location":"archive/download/zeppelin/","text":"Install GeoSpark-Zeppelin \u00b6 Warning Known issue : due to an issue in Leaflet JS, GeoSpark-core can only plot each geometry (point, line string and polygon) as a point on Zeppelin map. To enjoy the scalable and full-fleged visualization, please use GeoSparkViz to plot scatter plots and heat maps on Zeppelin map. Compatibility \u00b6 Apache Spark 2.1+ Apache Zeppelin 0.8.1+ GeoSpark 1.2.0+: GeoSpark-core, GeoSpark-SQL, GeoSpark-Viz Installation \u00b6 Note You only need to do Step 1 and 2 only if you cannot see GeoSpark-Zeppelin in Zeppelin Helium package list. Create Helium folder (optional) \u00b6 Create a folder called helium in Zeppelin root folder. Add GeoSpark-Zeppelin description (optional) \u00b6 Create a file called geospark-zeppelin.json in this folder and put the following content in this file. You need to change the artifact path! { \"type\": \"VISUALIZATION\", \"name\": \"geospark-zeppelin\", \"description\": \"Zeppelin visualization support for GeoSpark\", \"artifact\": \"/Absolute/Path/GeoSpark/geospark-zeppelin\", \"license\": \"BSD-2-Clause\", \"icon\": \"<i class='fa fa-globe'></i>\" } Enable GeoSpark-Zeppelin \u00b6 Restart Zeppelin then open Zeppelin Helium interface and enable GeoSpark-Zeppelin. Add GeoSpark dependencies in Zeppelin Spark Interpreter \u00b6 Visualize GeoSparkSQL results \u00b6 Display GeoSparkViz results \u00b6 Now, you are good to go! Please read GeoSpark-Zeppelin tutorial for a hands-on tutorial.","title":"Install GeoSpark-Zeppelin"},{"location":"archive/download/zeppelin/#install-geospark-zeppelin","text":"Warning Known issue : due to an issue in Leaflet JS, GeoSpark-core can only plot each geometry (point, line string and polygon) as a point on Zeppelin map. To enjoy the scalable and full-fleged visualization, please use GeoSparkViz to plot scatter plots and heat maps on Zeppelin map.","title":"Install GeoSpark-Zeppelin"},{"location":"archive/download/zeppelin/#compatibility","text":"Apache Spark 2.1+ Apache Zeppelin 0.8.1+ GeoSpark 1.2.0+: GeoSpark-core, GeoSpark-SQL, GeoSpark-Viz","title":"Compatibility"},{"location":"archive/download/zeppelin/#installation","text":"Note You only need to do Step 1 and 2 only if you cannot see GeoSpark-Zeppelin in Zeppelin Helium package list.","title":"Installation"},{"location":"archive/download/zeppelin/#create-helium-folder-optional","text":"Create a folder called helium in Zeppelin root folder.","title":"Create Helium folder (optional)"},{"location":"archive/download/zeppelin/#add-geospark-zeppelin-description-optional","text":"Create a file called geospark-zeppelin.json in this folder and put the following content in this file. You need to change the artifact path! { \"type\": \"VISUALIZATION\", \"name\": \"geospark-zeppelin\", \"description\": \"Zeppelin visualization support for GeoSpark\", \"artifact\": \"/Absolute/Path/GeoSpark/geospark-zeppelin\", \"license\": \"BSD-2-Clause\", \"icon\": \"<i class='fa fa-globe'></i>\" }","title":"Add GeoSpark-Zeppelin description (optional)"},{"location":"archive/download/zeppelin/#enable-geospark-zeppelin","text":"Restart Zeppelin then open Zeppelin Helium interface and enable GeoSpark-Zeppelin.","title":"Enable GeoSpark-Zeppelin"},{"location":"archive/download/zeppelin/#add-geospark-dependencies-in-zeppelin-spark-interpreter","text":"","title":"Add GeoSpark dependencies in Zeppelin Spark Interpreter"},{"location":"archive/download/zeppelin/#visualize-geosparksql-results","text":"","title":"Visualize GeoSparkSQL results"},{"location":"archive/download/zeppelin/#display-geosparkviz-results","text":"Now, you are good to go! Please read GeoSpark-Zeppelin tutorial for a hands-on tutorial.","title":"Display GeoSparkViz results"},{"location":"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/","text":"Advanced tutorial: Tune your GeoSpark RDD application \u00b6 Before getting into this advanced tutorial, please make sure that you have tried several GeoSpark functions on your local machine. Pick a proper GeoSpark version \u00b6 The versions of GeoSpark have three levels: X.X.X (i.e., 0.8.1). In addition, GeoSpark also supports Spark 1.X in Spark1.X version. The first level means that this verion contains big structure redesign which may bring big changes in APIs and performance. Hopefully, we can see these big changes in GeoSpark 1.X version. The second level (i.e., 0.8) indicates that this version contains significant performance enhancement, big new features and API changes. An old GeoSpark user who wants to pick this version needs to be careful about the API changes. Before you move to this version, please read GeoSpark version release notes and make sure you are ready to accept the API changes. The third level (i.e., 0.8.1) tells that this version only contains bug fixes, some small new features and slight performance enhancement. This version will not contain any API changes. Moving to this version is safe. We highly suggest all GeoSpark users that stay at the same level move to the latest version in this level. Choose a proper Spatial RDD constructor \u00b6 GeoSpark provides a number of constructors for each SpatialRDD (PointRDD, PolygonRDD and LineStringRDD). In general, you have two options to start with. Initialize a SpatialRDD from your data source such as HDFS and S3. A typical example is as follows: public PointRDD ( JavaSparkContext sparkContext , String InputLocation , Integer Offset , FileDataSplitter splitter , boolean carryInputData , Integer partitions , StorageLevel newLevel ) Initialize a SpatialRDD from an existing RDD. A typical example is as follows: public PointRDD ( JavaRDD < Point > rawSpatialRDD , StorageLevel newLevel ) You may notice that these constructors all take as input a \"StorageLevel\" parameter. This is to tell Apache Spark cache the \"rawSpatialRDD\", one attribute of SpatialRDD. The reason why GeoSpark does this is that GeoSpark wants to calculate the dataset boundary and approximate total count using several Apache Spark \"Action\"s. These information are useful when doing Spatial Join Query and Distance Join Query. However, in some cases, you may know well about your datasets. If so, you can manually provide these information by calling this kind of Spatial RDD constructors: public PointRDD ( JavaSparkContext sparkContext , String InputLocation , Integer Offset , FileDataSplitter splitter , boolean carryInputData , Integer partitions , Envelope datasetBoundary , Integer approximateTotalCount ) { Manually providing the dataset boundary and approxmiate total count helps GeoSpark avoiding several slow \"Action\"s during initialization. Cache the Spatial RDD that is repeatedly used \u00b6 Each SpatialRDD (PointRDD, PolygonRDD and LineStringRDD) possesses four RDD attributes. They are: rawSpatialRDD: The RDD generated by SpatialRDD constructors. spatialPartitionedRDD: The RDD generated by spatial partition a rawSpatialRDD. Note that: this RDD has replicated spatial objects. indexedRawRDD: The RDD generated by indexing a rawSpatialRDD. indexedRDD: The RDD generated by indexing a spatialPartitionedRDD. Note that: this RDD has replicated spatial objects. These four RDDs don't co-exist so you don't need to worry about the memory issue. These four RDDs are invoked in different queries: Spatial Range Query / KNN Query, no index: rawSpatialRDD is used. Spatial Range Query / KNN Query, use index: indexedRawRDD is used. Spatial Join Query / Distance Join Query, no index: spatialPartitionedRDD is used. Spatial Join Query / Distance Join Query, use index: indexed RDD is used. Therefore, if you use one of the queries above many times, you'd better cache the associated RDD into memory. There are several possible use cases: In Spatial Data Mining such as Spatial Autocorrelation and Spatial Co-location Pattern Mining, you may need to use Spatial Join / Spatial Self-join iteratively in order to calculate the adjacency matrix. If so, please cache the spatialPartitionedRDD/indexedRDD which is queries many times. In Spark RDD sharing applications such as Livy and Spark Job Server , many users may do Spatial Range Query / KNN Query on the same Spatial RDD with different query predicates. You'd better cache the rawSpatialRDD/indexedRawRDD. Be aware of Spatial RDD partitions \u00b6 Sometimes users complain that the execution time is slow in some cases. As the first step, you should always consider increasing the number of your SpatialRDD partitions (2 - 8 times more than the original number). You can do this when you initialize a SpatialRDD. This may significantly improve your performance. After that, you may consider tuning some other parameters in Apache Spark. For example, you may use Kyro serializer or change the RDD fraction that is cached into memory.","title":"Tune GeoSpark RDD application"},{"location":"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application","text":"Before getting into this advanced tutorial, please make sure that you have tried several GeoSpark functions on your local machine.","title":"Advanced tutorial: Tune your GeoSpark RDD application"},{"location":"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version","text":"The versions of GeoSpark have three levels: X.X.X (i.e., 0.8.1). In addition, GeoSpark also supports Spark 1.X in Spark1.X version. The first level means that this verion contains big structure redesign which may bring big changes in APIs and performance. Hopefully, we can see these big changes in GeoSpark 1.X version. The second level (i.e., 0.8) indicates that this version contains significant performance enhancement, big new features and API changes. An old GeoSpark user who wants to pick this version needs to be careful about the API changes. Before you move to this version, please read GeoSpark version release notes and make sure you are ready to accept the API changes. The third level (i.e., 0.8.1) tells that this version only contains bug fixes, some small new features and slight performance enhancement. This version will not contain any API changes. Moving to this version is safe. We highly suggest all GeoSpark users that stay at the same level move to the latest version in this level.","title":"Pick a proper GeoSpark version"},{"location":"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor","text":"GeoSpark provides a number of constructors for each SpatialRDD (PointRDD, PolygonRDD and LineStringRDD). In general, you have two options to start with. Initialize a SpatialRDD from your data source such as HDFS and S3. A typical example is as follows: public PointRDD ( JavaSparkContext sparkContext , String InputLocation , Integer Offset , FileDataSplitter splitter , boolean carryInputData , Integer partitions , StorageLevel newLevel ) Initialize a SpatialRDD from an existing RDD. A typical example is as follows: public PointRDD ( JavaRDD < Point > rawSpatialRDD , StorageLevel newLevel ) You may notice that these constructors all take as input a \"StorageLevel\" parameter. This is to tell Apache Spark cache the \"rawSpatialRDD\", one attribute of SpatialRDD. The reason why GeoSpark does this is that GeoSpark wants to calculate the dataset boundary and approximate total count using several Apache Spark \"Action\"s. These information are useful when doing Spatial Join Query and Distance Join Query. However, in some cases, you may know well about your datasets. If so, you can manually provide these information by calling this kind of Spatial RDD constructors: public PointRDD ( JavaSparkContext sparkContext , String InputLocation , Integer Offset , FileDataSplitter splitter , boolean carryInputData , Integer partitions , Envelope datasetBoundary , Integer approximateTotalCount ) { Manually providing the dataset boundary and approxmiate total count helps GeoSpark avoiding several slow \"Action\"s during initialization.","title":"Choose a proper Spatial RDD constructor"},{"location":"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used","text":"Each SpatialRDD (PointRDD, PolygonRDD and LineStringRDD) possesses four RDD attributes. They are: rawSpatialRDD: The RDD generated by SpatialRDD constructors. spatialPartitionedRDD: The RDD generated by spatial partition a rawSpatialRDD. Note that: this RDD has replicated spatial objects. indexedRawRDD: The RDD generated by indexing a rawSpatialRDD. indexedRDD: The RDD generated by indexing a spatialPartitionedRDD. Note that: this RDD has replicated spatial objects. These four RDDs don't co-exist so you don't need to worry about the memory issue. These four RDDs are invoked in different queries: Spatial Range Query / KNN Query, no index: rawSpatialRDD is used. Spatial Range Query / KNN Query, use index: indexedRawRDD is used. Spatial Join Query / Distance Join Query, no index: spatialPartitionedRDD is used. Spatial Join Query / Distance Join Query, use index: indexed RDD is used. Therefore, if you use one of the queries above many times, you'd better cache the associated RDD into memory. There are several possible use cases: In Spatial Data Mining such as Spatial Autocorrelation and Spatial Co-location Pattern Mining, you may need to use Spatial Join / Spatial Self-join iteratively in order to calculate the adjacency matrix. If so, please cache the spatialPartitionedRDD/indexedRDD which is queries many times. In Spark RDD sharing applications such as Livy and Spark Job Server , many users may do Spatial Range Query / KNN Query on the same Spatial RDD with different query predicates. You'd better cache the rawSpatialRDD/indexedRawRDD.","title":"Cache the Spatial RDD that is repeatedly used"},{"location":"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions","text":"Sometimes users complain that the execution time is slow in some cases. As the first step, you should always consider increasing the number of your SpatialRDD partitions (2 - 8 times more than the original number). You can do this when you initialize a SpatialRDD. This may significantly improve your performance. After that, you may consider tuning some other parameters in Apache Spark. For example, you may use Kyro serializer or change the RDD fraction that is cached into memory.","title":"Be aware of Spatial RDD partitions"},{"location":"archive/tutorial/GeoSpark-Runnable-DEMO/","text":"GeoSpark Template Project contains six template projects for GeoSpark, GeoSparkSQL and GeoSparkViz. The template projects have been configured properly. You are able to compile, package, and run the code locally without any extra coding . Scala/Java Template Project","title":"GeoSpark template project"},{"location":"archive/tutorial/benchmark/","text":"Benchmark \u00b6 We welcome people to use GeoSpark for benchmark purpose. To achieve the best performance or enjoy all features of GeoSpark, Please always use the latest version or state the version used in your benchmark so that we can trace back to the issues. Please consider using GeoSpark core instead of GeoSparkSQL. Due to the limitation of SparkSQL (for instance, not support clustered index), we are not able to expose all features to SparkSQL. Please open GeoSpark kryo serializer to reduce the memory footprint.","title":"Benchmark"},{"location":"archive/tutorial/benchmark/#benchmark","text":"We welcome people to use GeoSpark for benchmark purpose. To achieve the best performance or enjoy all features of GeoSpark, Please always use the latest version or state the version used in your benchmark so that we can trace back to the issues. Please consider using GeoSpark core instead of GeoSparkSQL. Due to the limitation of SparkSQL (for instance, not support clustered index), we are not able to expose all features to SparkSQL. Please open GeoSpark kryo serializer to reduce the memory footprint.","title":"Benchmark"},{"location":"archive/tutorial/faq/","text":"Coming soon... For now, please read GeoSpark Github FAQ Issues .","title":"Frequently Asked Questions"},{"location":"archive/tutorial/geospark-core-python/","text":"Spatial RDD Applications in Python \u00b6 Introduction \u00b6 GeoSpark provides a Python wrapper on GeoSpark core Java/Scala library. GeoSpark SpatialRDDs (and other classes when it was necessary) have implemented meta classes which allow to use overloaded functions, methods and constructors to be the most similar to Java/Scala API as possible. GeoSpark-core provides five special SpatialRDDs: PointRDD PolygonRDD LineStringRDD CircleRDD RectangleRDD All of them can be imported from geospark.core.SpatialRDD module geospark has written serializers which convert GeoSpark SpatialRDD to Python objects. Converting will produce GeoData objects which have 2 attributes: geom: shapely.geometry.BaseGeometry userData: str geom attribute holds geometry representation as shapely objects. userData is string representation of other attributes separated by \"\\t\" GeoData has one method to get user data. getUserData() -> str Installing the package \u00b6 GeoSpark extends pyspark functions which depend on Python packages and Scala libraries. To see all dependencies please look at the dependencies section. https://pypi.org/project/pyspark/ . This package needs 2 jar files to work properly: geospark.jar geo_wrapper.jar Note To enable GeoSpark Core functionality without GeoSparkSQL there is no need to copy jar files from geospark/jars location. You can use jar files from Maven repositories. Since GeoSpark 1.3.0 it is possible also to use maven jars for GeoSparkSQL instead of geospark/jars/../geospark-sql jars files. This package automatically copies the newest GeoSpark jar files using upload_jars function, please follow the example below. upload_jars from pyspark.sql import SparkSession from geospark.register import upload_jars from geospark.register import GeoSparkRegistrator upload_jars () spark = SparkSession . builder . \\ getOrCreate () GeoSparkRegistrator . registerAll ( spark ) Function upload_jars () uses findspark Python package to upload jar files to executor and nodes. To avoid copying all the time, jar files can be put in directory SPARK_HOME/jars or any other path specified in Spark config files. Installing from PyPi repositories \u00b6 Please use command below pip install geospark Installing from wheel file \u00b6 pipenv run python -m pip install dist/geospark-1.3.1-py3-none-any.whl or pip install dist/geospark-1.3.1-py3-none-any.whl Installing from source \u00b6 python3 setup.py install GeoSpark Serializers \u00b6 GeoSpark has a suite of well-written geometry and index serializers. Forgetting to enable these serializers will lead to high memory consumption. conf . set ( \"spark.serializer\" , KryoSerializer . getName ) conf . set ( \"spark.kryo.registrator\" , GeoSparkKryoRegistrator . getName ) Create a SpatialRDD \u00b6 Create a typed SpatialRDD \u00b6 GeoSpark-core provides three special SpatialRDDs: PointRDD PolygonRDD LineStringRDD CircleRDD RectangleRDD They can be loaded from CSV, TSV, WKT, WKB, Shapefiles, GeoJSON formats. To pass the format to SpatialRDD constructor please use FileDataSplitter enumeration. geospark SpatialRDDs (and other classes when it was necessary) have implemented meta classes which allow to use overloaded functions how Scala/Java GeoSpark API allows. ex. from pyspark import StorageLevel from geospark.core.SpatialRDD import PointRDD from geospark.core.enums import FileDataSplitter input_location = \"checkin.csv\" offset = 0 # The point long/lat starts from Column 0 splitter = FileDataSplitter . CSV # FileDataSplitter enumeration carry_other_attributes = True # Carry Column 2 (hotel, gas, bar...) level = StorageLevel . MEMORY_ONLY # Storage level from pyspark s_epsg = \"epsg:4326\" # Source epsg code t_epsg = \"epsg:5070\" # target epsg code point_rdd = PointRDD ( sc , input_location , offset , splitter , carry_other_attributes ) point_rdd = PointRDD ( sc , input_location , splitter , carry_other_attributes , level , s_epsg , t_epsg ) point_rdd = PointRDD ( sparkContext = sc , InputLocation = input_location , Offset = offset , splitter = splitter , carryInputData = carry_other_attributes ) From SparkSQL DataFrame \u00b6 To create spatialRDD from other formats you can use adapter between Spark DataFrame and SpatialRDD Load data in GeoSparkSQL. csv_point_input_location = \"/tests/resources/county_small.tsv\" df = spark . read . \\ format ( \"csv\" ) . \\ option ( \"delimiter\" , \" \\t \" ) . \\ option ( \"header\" , \"false\" ) . \\ load ( csv_point_input_location ) df . createOrReplaceTempView ( \"counties\" ) Create a Geometry type column in GeoSparkSQL spatial_df = spark . sql ( \"\"\" SELECT ST_GeomFromWKT(_c0) as geom, _c6 as county_name FROM counties \"\"\" ) spatial_df . printSchema () root |-- geom: geometry (nullable = false) |-- county_name: string (nullable = true) Use GeoSparkSQL DataFrame-RDD Adapter to convert a DataFrame to an SpatialRDD Note that, you have to name your column geometry from geospark.utils.adapter import Adapter spatial_rdd = Adapter . toSpatialRdd ( spatial_df ) spatial_rdd . analyze () spatial_rdd . boundaryEnvelope <geospark.core.geom_types.Envelope object at 0x7f1e5f29fe10> or pass Geometry column name as a second argument spatial_rdd = Adapter . toSpatialRdd ( spatial_df , \"geom\" ) For WKT/WKB/GeoJSON data, please use ST_GeomFromWKT / ST_GeomFromWKB / ST_GeomFromGeoJSON instead. Read other attributes in an SpatialRDD \u00b6 Each SpatialRDD can carry non-spatial attributes such as price, age and name as long as the user sets carryOtherAttributes as TRUE . The other attributes are combined together to a string and stored in UserData field of each geometry. To retrieve the UserData field, use the following code: rdd_with_other_attributes = object_rdd . rawSpatialRDD . map ( lambda x : x . getUserData ()) Write a Spatial Range Query \u00b6 from geospark.core.geom.envelope import Envelope from geospark.core.spatialOperator import RangeQuery range_query_window = Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) consider_boundary_intersection = False ## Only return gemeotries fully covered by the window using_index = False query_result = RangeQuery . SpatialRangeQuery ( spatial_rdd , range_query_window , consider_boundary_intersection , using_index ) Range query window \u00b6 Besides the rectangle (Envelope) type range query window, GeoSpark range query window can be Point Polygon LineString The code to create a point is as follows: To create shapely geometries please follow official shapely documentation Use spatial indexes \u00b6 GeoSpark provides two types of spatial indexes, Quad-Tree R-Tree Once you specify an index type, GeoSpark will build a local tree index on each of the SpatialRDD partition. To utilize a spatial index in a spatial range query, use the following code: from geospark.core.geom.envelope import Envelope from geospark.core.enums import IndexType from geospark.core.spatialOperator import RangeQuery range_query_window = Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) consider_boundary_intersection = False ## Only return gemeotries fully covered by the window build_on_spatial_partitioned_rdd = False ## Set to TRUE only if run join query spatial_rdd . buildIndex ( IndexType . QUADTREE , build_on_spatial_partitioned_rdd ) using_index = True query_result = RangeQuery . SpatialRangeQuery ( spatial_rdd , range_query_window , consider_boundary_intersection , using_index ) Output format \u00b6 The output format of the spatial range query is another RDD which consists of GeoData objects. SpatialRangeQuery result can be used as RDD with map or other spark RDD funtions. Also it can be used as Python objects when using collect method. Example: query_result . map ( lambda x : x . geom . length ) . collect () [ 1.5900840000000045, 1.5906639999999896, 1.1110299999999995, 1.1096700000000084, 1.1415619999999933, 1.1386399999999952, 1.1415619999999933, 1.1418860000000137, 1.1392780000000045, ... ] Or transformed to GeoPandas GeoDataFrame import geopandas as gpd gpd . GeoDataFrame ( query_result . map ( lambda x : [ x . geom , x . userData ]) . collect (), columns = [ \"geom\" , \"user_data\" ], geometry = \"geom\" ) Write a Spatial KNN Query \u00b6 A spatial K Nearnest Neighbor query takes as input a K, a query point and an SpatialRDD and finds the K geometries in the RDD which are the closest to he query point. Assume you now have an SpatialRDD (typed or generic). You can use the following code to issue an Spatial KNN Query on it. from geospark.core.spatialOperator import KNNQuery from shapely.geometry import Point point = Point ( - 84.01 , 34.01 ) k = 1000 ## K Nearest Neighbors using_index = False result = KNNQuery . SpatialKnnQuery ( object_rdd , point , k , using_index ) Query center geometry \u00b6 Besides the Point type, GeoSpark KNN query center can be Polygon LineString To create Polygon or Linestring object please follow Shapely official documentation Use spatial indexes \u00b6 To utilize a spatial index in a spatial KNN query, use the following code: from geospark.core.spatialOperator import KNNQuery from geospark.core.enums import IndexType from shapely.geometry import Point point = Point ( - 84.01 , 34.01 ) k = 5 ## K Nearest Neighbors build_on_spatial_partitioned_rdd = False ## Set to TRUE only if run join query spatial_rdd . buildIndex ( IndexType . RTREE , build_on_spatial_partitioned_rdd ) using_index = True result = KNNQuery . SpatialKnnQuery ( spatial_rdd , point , k , using_index ) Warning Only R-Tree index supports Spatial KNN query Output format \u00b6 The output format of the spatial KNN query is a list of GeoData objects. The list has K GeoData objects. Example: >> result [ GeoData , GeoData , GeoData , GeoData , GeoData ] Write a Spatial Join Query \u00b6 A spatial join query takes as input two Spatial RDD A and B. For each geometry in A, finds the geometries (from B) covered/intersected by it. A and B can be any geometry type and are not necessary to have the same geometry type. Assume you now have two SpatialRDDs (typed or generic). You can use the following code to issue an Spatial Join Query on them. from geospark.core.enums import GridType from geospark.core.spatialOperator import JoinQuery consider_boundary_intersection = False ## Only return geometries fully covered by each query window in queryWindowRDD using_index = False object_rdd . analyze () object_rdd . spatialPartitioning ( GridType . KDBTREE ) query_window_rdd . spatialPartitioning ( object_rdd . getPartitioner ()) result = JoinQuery . SpatialJoinQuery ( object_rdd , query_window_rdd , using_index , consider_boundary_intersection ) Result of SpatialJoinQuery is RDD which consists of GeoData instance and list of GeoData instances which spatially intersects or are covered by GeoData. result . collect ()) [ [GeoData, [GeoData, GeoData, GeoData, GeoData]], [GeoData, [GeoData, GeoData, GeoData]], [GeoData, [GeoData]], [GeoData, [GeoData, GeoData]], ... [GeoData, [GeoData, GeoData]] ] Use spatial partitioning \u00b6 GeoSpark spatial partitioning method can significantly speed up the join query. Three spatial partitioning methods are available: KDB-Tree, Quad-Tree and R-Tree. Two SpatialRDD must be partitioned by the same way. If you first partition SpatialRDD A, then you must use the partitioner of A to partition B. object_rdd . spatialPartitioning ( GridType . KDBTREE ) query_window_rdd . spatialPartitioning ( object_rdd . getPartitioner ()) Or query_window_rdd . spatialPartitioning ( GridType . KDBTREE ) object_rdd . spatialPartitioning ( query_window_rdd . getPartitioner ()) Use spatial indexes \u00b6 To utilize a spatial index in a spatial join query, use the following code: from geospark.core.enums import GridType from geospark.core.enums import IndexType from geospark.core.spatialOperator import JoinQuery object_rdd . spatialPartitioning ( GridType . KDBTREE ) query_window_rdd . spatialPartitioning ( object_rdd . getPartitioner ()) build_on_spatial_partitioned_rdd = True ## Set to TRUE only if run join query using_index = True query_window_rdd . buildIndex ( IndexType . QUADTREE , build_on_spatial_partitioned_rdd ) result = JoinQuery . SpatialJoinQueryFlat ( object_rdd , query_window_rdd , using_index , True ) The index should be built on either one of two SpatialRDDs. In general, you should build it on the larger SpatialRDD. Output format \u00b6 The output format of the spatial join query is a PairRDD. In this PairRDD, each object is a pair of two GeoData objects. The left one is the GeoData from object_rdd and the right one is the GeoData from the query_window_rdd. Point,Polygon Point,Polygon Point,Polygon Polygon,Polygon LineString,LineString Polygon,LineString ... example result . collect () [ [GeoData, GeoData], [GeoData, GeoData], [GeoData, GeoData], [GeoData, GeoData], ... [GeoData, GeoData], [GeoData, GeoData] ] Each object on the left is covered/intersected by the object on the right. Write a Distance Join Query \u00b6 A distance join query takes two spatial RDD assuming that we have two SpatialRDD's: object_rdd spatial_rdd And finds the geometries (from spatial_rdd) are within given distance to it. spatial_rdd and object_rdd can be any geometry type (point, line, polygon) and are not necessary to have the same geometry type You can use the following code to issue an Distance Join Query on them. from geospark.core.SpatialRDD import CircleRDD from geospark.core.enums import GridType from geospark.core.spatialOperator import JoinQuery object_rdd . analyze () circle_rdd = CircleRDD ( object_rdd , 0.1 ) ## Create a CircleRDD using the given distance circle_rdd . analyze () circle_rdd . spatialPartitioning ( GridType . KDBTREE ) spatial_rdd . spatialPartitioning ( circle_rdd . getPartitioner ()) consider_boundary_intersection = False ## Only return gemeotries fully covered by each query window in queryWindowRDD using_index = False result = JoinQuery . DistanceJoinQueryFlat ( spatial_rdd , circle_rdd , using_index , consider_boundary_intersection ) Output format \u00b6 Result for this query is RDD which holds two GeoData objects within list of lists. Example: result . collect () [[GeoData, GeoData], [GeoData, GeoData] ...] It is possible to do some RDD operation on result data ex. Getting polygon centroid. result . map ( lambda x : x [ 0 ] . geom . centroid ) . collect () [ <shapely.geometry.point.Point at 0x7efee2d28128>, <shapely.geometry.point.Point at 0x7efee2d280b8>, <shapely.geometry.point.Point at 0x7efee2d28fd0>, <shapely.geometry.point.Point at 0x7efee2d28080>, ... ] Save to permanent storage \u00b6 You can always save an SpatialRDD back to some permanent storage such as HDFS and Amazon S3. You can save distributed SpatialRDD to WKT, GeoJSON and object files. Note Non-spatial attributes such as price, age and name will also be stored to permanent storage. Save an SpatialRDD (not indexed) \u00b6 Typed SpatialRDD and generic SpatialRDD can be saved to permanent storage. Save to distributed WKT text file \u00b6 Use the following code to save an SpatialRDD as a distributed WKT text file: object_rdd . rawSpatialRDD . saveAsTextFile ( \"hdfs://PATH\" ) object_rdd . saveAsWKT ( \"hdfs://PATH\" ) Save to distributed WKB text file \u00b6 Use the following code to save an SpatialRDD as a distributed WKB text file: object_rdd . saveAsWKB ( \"hdfs://PATH\" ) Save to distributed GeoJSON text file \u00b6 Use the following code to save an SpatialRDD as a distributed GeoJSON text file: object_rdd . saveAsGeoJSON ( \"hdfs://PATH\" ) Save to distributed object file \u00b6 Use the following code to save an SpatialRDD as a distributed object file: object_rdd . rawJvmSpatialRDD . saveAsObjectFile ( \"hdfs://PATH\" ) Note Each object in a distributed object file is a byte array (not human-readable). This byte array is the serialized format of a Geometry or a SpatialIndex. Save an SpatialRDD (indexed) \u00b6 Indexed typed SpatialRDD and generic SpatialRDD can be saved to permanent storage. However, the indexed SpatialRDD has to be stored as a distributed object file. Save to distributed object file \u00b6 Use the following code to save an SpatialRDD as a distributed object file: object_rdd . indexedRawRDD . saveAsObjectFile ( \"hdfs://PATH\" ) Save an SpatialRDD (spatialPartitioned W/O indexed) \u00b6 A spatial partitioned RDD can be saved to permanent storage but Spark is not able to maintain the same RDD partition Id of the original RDD. This will lead to wrong join query results. We are working on some solutions. Stay tuned! Reload a saved SpatialRDD \u00b6 You can easily reload an SpatialRDD that has been saved to a distributed object file . Load to a typed SpatialRDD \u00b6 Use the following code to reload the PointRDD/PolygonRDD/LineStringRDD: from geospark.core.formatMapper.disc_utils import load_spatial_rdd_from_disc , GeoType polygon_rdd = load_spatial_rdd_from_disc ( sc , \"hdfs://PATH\" , GeoType . POLYGON ) point_rdd = load_spatial_rdd_from_disc ( sc , \"hdfs://PATH\" , GeoType . POINT ) linestring_rdd = load_spatial_rdd_from_disc ( sc , \"hdfs://PATH\" , GeoType . LINESTRING ) Load to a generic SpatialRDD \u00b6 Use the following code to reload the SpatialRDD: saved_rdd = load_spatial_rdd_from_disc ( sc , \"hdfs://PATH\" , GeoType . GEOMETRY ) Use the following code to reload the indexed SpatialRDD: saved_rdd = SpatialRDD () saved_rdd . indexedRawRDD = load_spatial_index_rdd_from_disc ( sc , \"hdfs://PATH\" ) Read from other Geometry files \u00b6 All below methods will return SpatialRDD object which can be used with Spatial functions such as Spatial Join etc. Read from WKT file \u00b6 from geospark.core.formatMapper import WktReader WktReader . readToGeometryRDD ( sc , wkt_geometries_location , 0 , True , False ) <geospark.core.SpatialRDD.spatial_rdd.SpatialRDD at 0x7f8fd2fbf250> Read from WKB file \u00b6 from geospark.core.formatMapper import WkbReader WkbReader . readToGeometryRDD ( sc , wkb_geometries_location , 0 , True , False ) <geospark.core.SpatialRDD.spatial_rdd.SpatialRDD at 0x7f8fd2eece50> Read from GeoJson file \u00b6 from geospark.core.formatMapper import GeoJsonReader GeoJsonReader . readToGeometryRDD ( sc , geo_json_file_location ) <geospark.core.SpatialRDD.spatial_rdd.SpatialRDD at 0x7f8fd2eecb90> Read from Shapefile \u00b6 from geospark.core.formatMapper.shapefileParser import ShapefileReader ShapefileReader . readToGeometryRDD ( sc , shape_file_location ) <geospark.core.SpatialRDD.spatial_rdd.SpatialRDD at 0x7f8fd2ee0710> Supported versions \u00b6 Currently this python wrapper supports the following Spark, GeoSpark and Python versions Apache Spark \u00b6 2.2 2.3 2.4 GeoSpark \u00b6 1.3.1 1.2.0 Python \u00b6 3.6 3.7 Note Other versions may also work (or partially) but were not tested yet","title":"Spatial RDD in Python"},{"location":"archive/tutorial/geospark-core-python/#spatial-rdd-applications-in-python","text":"","title":"Spatial RDD Applications in Python"},{"location":"archive/tutorial/geospark-core-python/#introduction","text":"GeoSpark provides a Python wrapper on GeoSpark core Java/Scala library. GeoSpark SpatialRDDs (and other classes when it was necessary) have implemented meta classes which allow to use overloaded functions, methods and constructors to be the most similar to Java/Scala API as possible. GeoSpark-core provides five special SpatialRDDs: PointRDD PolygonRDD LineStringRDD CircleRDD RectangleRDD All of them can be imported from geospark.core.SpatialRDD module geospark has written serializers which convert GeoSpark SpatialRDD to Python objects. Converting will produce GeoData objects which have 2 attributes: geom: shapely.geometry.BaseGeometry userData: str geom attribute holds geometry representation as shapely objects. userData is string representation of other attributes separated by \"\\t\" GeoData has one method to get user data. getUserData() -> str","title":"Introduction"},{"location":"archive/tutorial/geospark-core-python/#installing-the-package","text":"GeoSpark extends pyspark functions which depend on Python packages and Scala libraries. To see all dependencies please look at the dependencies section. https://pypi.org/project/pyspark/ . This package needs 2 jar files to work properly: geospark.jar geo_wrapper.jar Note To enable GeoSpark Core functionality without GeoSparkSQL there is no need to copy jar files from geospark/jars location. You can use jar files from Maven repositories. Since GeoSpark 1.3.0 it is possible also to use maven jars for GeoSparkSQL instead of geospark/jars/../geospark-sql jars files. This package automatically copies the newest GeoSpark jar files using upload_jars function, please follow the example below. upload_jars from pyspark.sql import SparkSession from geospark.register import upload_jars from geospark.register import GeoSparkRegistrator upload_jars () spark = SparkSession . builder . \\ getOrCreate () GeoSparkRegistrator . registerAll ( spark ) Function upload_jars () uses findspark Python package to upload jar files to executor and nodes. To avoid copying all the time, jar files can be put in directory SPARK_HOME/jars or any other path specified in Spark config files.","title":"Installing the package"},{"location":"archive/tutorial/geospark-core-python/#installing-from-pypi-repositories","text":"Please use command below pip install geospark","title":"Installing from PyPi repositories"},{"location":"archive/tutorial/geospark-core-python/#installing-from-wheel-file","text":"pipenv run python -m pip install dist/geospark-1.3.1-py3-none-any.whl or pip install dist/geospark-1.3.1-py3-none-any.whl","title":"Installing from wheel file"},{"location":"archive/tutorial/geospark-core-python/#installing-from-source","text":"python3 setup.py install","title":"Installing from source"},{"location":"archive/tutorial/geospark-core-python/#geospark-serializers","text":"GeoSpark has a suite of well-written geometry and index serializers. Forgetting to enable these serializers will lead to high memory consumption. conf . set ( \"spark.serializer\" , KryoSerializer . getName ) conf . set ( \"spark.kryo.registrator\" , GeoSparkKryoRegistrator . getName )","title":"GeoSpark Serializers"},{"location":"archive/tutorial/geospark-core-python/#create-a-spatialrdd","text":"","title":"Create a SpatialRDD"},{"location":"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd","text":"GeoSpark-core provides three special SpatialRDDs: PointRDD PolygonRDD LineStringRDD CircleRDD RectangleRDD They can be loaded from CSV, TSV, WKT, WKB, Shapefiles, GeoJSON formats. To pass the format to SpatialRDD constructor please use FileDataSplitter enumeration. geospark SpatialRDDs (and other classes when it was necessary) have implemented meta classes which allow to use overloaded functions how Scala/Java GeoSpark API allows. ex. from pyspark import StorageLevel from geospark.core.SpatialRDD import PointRDD from geospark.core.enums import FileDataSplitter input_location = \"checkin.csv\" offset = 0 # The point long/lat starts from Column 0 splitter = FileDataSplitter . CSV # FileDataSplitter enumeration carry_other_attributes = True # Carry Column 2 (hotel, gas, bar...) level = StorageLevel . MEMORY_ONLY # Storage level from pyspark s_epsg = \"epsg:4326\" # Source epsg code t_epsg = \"epsg:5070\" # target epsg code point_rdd = PointRDD ( sc , input_location , offset , splitter , carry_other_attributes ) point_rdd = PointRDD ( sc , input_location , splitter , carry_other_attributes , level , s_epsg , t_epsg ) point_rdd = PointRDD ( sparkContext = sc , InputLocation = input_location , Offset = offset , splitter = splitter , carryInputData = carry_other_attributes )","title":"Create a typed SpatialRDD"},{"location":"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd","text":"Each SpatialRDD can carry non-spatial attributes such as price, age and name as long as the user sets carryOtherAttributes as TRUE . The other attributes are combined together to a string and stored in UserData field of each geometry. To retrieve the UserData field, use the following code: rdd_with_other_attributes = object_rdd . rawSpatialRDD . map ( lambda x : x . getUserData ())","title":"Read other attributes in an SpatialRDD"},{"location":"archive/tutorial/geospark-core-python/#write-a-spatial-range-query","text":"from geospark.core.geom.envelope import Envelope from geospark.core.spatialOperator import RangeQuery range_query_window = Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) consider_boundary_intersection = False ## Only return gemeotries fully covered by the window using_index = False query_result = RangeQuery . SpatialRangeQuery ( spatial_rdd , range_query_window , consider_boundary_intersection , using_index )","title":"Write a Spatial Range Query"},{"location":"archive/tutorial/geospark-core-python/#range-query-window","text":"Besides the rectangle (Envelope) type range query window, GeoSpark range query window can be Point Polygon LineString The code to create a point is as follows: To create shapely geometries please follow official shapely documentation","title":"Range query window"},{"location":"archive/tutorial/geospark-core-python/#use-spatial-indexes","text":"GeoSpark provides two types of spatial indexes, Quad-Tree R-Tree Once you specify an index type, GeoSpark will build a local tree index on each of the SpatialRDD partition. To utilize a spatial index in a spatial range query, use the following code: from geospark.core.geom.envelope import Envelope from geospark.core.enums import IndexType from geospark.core.spatialOperator import RangeQuery range_query_window = Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) consider_boundary_intersection = False ## Only return gemeotries fully covered by the window build_on_spatial_partitioned_rdd = False ## Set to TRUE only if run join query spatial_rdd . buildIndex ( IndexType . QUADTREE , build_on_spatial_partitioned_rdd ) using_index = True query_result = RangeQuery . SpatialRangeQuery ( spatial_rdd , range_query_window , consider_boundary_intersection , using_index )","title":"Use spatial indexes"},{"location":"archive/tutorial/geospark-core-python/#output-format","text":"The output format of the spatial range query is another RDD which consists of GeoData objects. SpatialRangeQuery result can be used as RDD with map or other spark RDD funtions. Also it can be used as Python objects when using collect method. Example: query_result . map ( lambda x : x . geom . length ) . collect () [ 1.5900840000000045, 1.5906639999999896, 1.1110299999999995, 1.1096700000000084, 1.1415619999999933, 1.1386399999999952, 1.1415619999999933, 1.1418860000000137, 1.1392780000000045, ... ] Or transformed to GeoPandas GeoDataFrame import geopandas as gpd gpd . GeoDataFrame ( query_result . map ( lambda x : [ x . geom , x . userData ]) . collect (), columns = [ \"geom\" , \"user_data\" ], geometry = \"geom\" )","title":"Output format"},{"location":"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query","text":"A spatial K Nearnest Neighbor query takes as input a K, a query point and an SpatialRDD and finds the K geometries in the RDD which are the closest to he query point. Assume you now have an SpatialRDD (typed or generic). You can use the following code to issue an Spatial KNN Query on it. from geospark.core.spatialOperator import KNNQuery from shapely.geometry import Point point = Point ( - 84.01 , 34.01 ) k = 1000 ## K Nearest Neighbors using_index = False result = KNNQuery . SpatialKnnQuery ( object_rdd , point , k , using_index )","title":"Write a Spatial KNN Query"},{"location":"archive/tutorial/geospark-core-python/#query-center-geometry","text":"Besides the Point type, GeoSpark KNN query center can be Polygon LineString To create Polygon or Linestring object please follow Shapely official documentation","title":"Query center geometry"},{"location":"archive/tutorial/geospark-core-python/#use-spatial-indexes_1","text":"To utilize a spatial index in a spatial KNN query, use the following code: from geospark.core.spatialOperator import KNNQuery from geospark.core.enums import IndexType from shapely.geometry import Point point = Point ( - 84.01 , 34.01 ) k = 5 ## K Nearest Neighbors build_on_spatial_partitioned_rdd = False ## Set to TRUE only if run join query spatial_rdd . buildIndex ( IndexType . RTREE , build_on_spatial_partitioned_rdd ) using_index = True result = KNNQuery . SpatialKnnQuery ( spatial_rdd , point , k , using_index ) Warning Only R-Tree index supports Spatial KNN query","title":"Use spatial indexes"},{"location":"archive/tutorial/geospark-core-python/#output-format_1","text":"The output format of the spatial KNN query is a list of GeoData objects. The list has K GeoData objects. Example: >> result [ GeoData , GeoData , GeoData , GeoData , GeoData ]","title":"Output format"},{"location":"archive/tutorial/geospark-core-python/#write-a-spatial-join-query","text":"A spatial join query takes as input two Spatial RDD A and B. For each geometry in A, finds the geometries (from B) covered/intersected by it. A and B can be any geometry type and are not necessary to have the same geometry type. Assume you now have two SpatialRDDs (typed or generic). You can use the following code to issue an Spatial Join Query on them. from geospark.core.enums import GridType from geospark.core.spatialOperator import JoinQuery consider_boundary_intersection = False ## Only return geometries fully covered by each query window in queryWindowRDD using_index = False object_rdd . analyze () object_rdd . spatialPartitioning ( GridType . KDBTREE ) query_window_rdd . spatialPartitioning ( object_rdd . getPartitioner ()) result = JoinQuery . SpatialJoinQuery ( object_rdd , query_window_rdd , using_index , consider_boundary_intersection ) Result of SpatialJoinQuery is RDD which consists of GeoData instance and list of GeoData instances which spatially intersects or are covered by GeoData. result . collect ()) [ [GeoData, [GeoData, GeoData, GeoData, GeoData]], [GeoData, [GeoData, GeoData, GeoData]], [GeoData, [GeoData]], [GeoData, [GeoData, GeoData]], ... [GeoData, [GeoData, GeoData]] ]","title":"Write a Spatial Join Query"},{"location":"archive/tutorial/geospark-core-python/#use-spatial-partitioning","text":"GeoSpark spatial partitioning method can significantly speed up the join query. Three spatial partitioning methods are available: KDB-Tree, Quad-Tree and R-Tree. Two SpatialRDD must be partitioned by the same way. If you first partition SpatialRDD A, then you must use the partitioner of A to partition B. object_rdd . spatialPartitioning ( GridType . KDBTREE ) query_window_rdd . spatialPartitioning ( object_rdd . getPartitioner ()) Or query_window_rdd . spatialPartitioning ( GridType . KDBTREE ) object_rdd . spatialPartitioning ( query_window_rdd . getPartitioner ())","title":"Use spatial partitioning"},{"location":"archive/tutorial/geospark-core-python/#use-spatial-indexes_2","text":"To utilize a spatial index in a spatial join query, use the following code: from geospark.core.enums import GridType from geospark.core.enums import IndexType from geospark.core.spatialOperator import JoinQuery object_rdd . spatialPartitioning ( GridType . KDBTREE ) query_window_rdd . spatialPartitioning ( object_rdd . getPartitioner ()) build_on_spatial_partitioned_rdd = True ## Set to TRUE only if run join query using_index = True query_window_rdd . buildIndex ( IndexType . QUADTREE , build_on_spatial_partitioned_rdd ) result = JoinQuery . SpatialJoinQueryFlat ( object_rdd , query_window_rdd , using_index , True ) The index should be built on either one of two SpatialRDDs. In general, you should build it on the larger SpatialRDD.","title":"Use spatial indexes"},{"location":"archive/tutorial/geospark-core-python/#output-format_2","text":"The output format of the spatial join query is a PairRDD. In this PairRDD, each object is a pair of two GeoData objects. The left one is the GeoData from object_rdd and the right one is the GeoData from the query_window_rdd. Point,Polygon Point,Polygon Point,Polygon Polygon,Polygon LineString,LineString Polygon,LineString ... example result . collect () [ [GeoData, GeoData], [GeoData, GeoData], [GeoData, GeoData], [GeoData, GeoData], ... [GeoData, GeoData], [GeoData, GeoData] ] Each object on the left is covered/intersected by the object on the right.","title":"Output format"},{"location":"archive/tutorial/geospark-core-python/#write-a-distance-join-query","text":"A distance join query takes two spatial RDD assuming that we have two SpatialRDD's: object_rdd spatial_rdd And finds the geometries (from spatial_rdd) are within given distance to it. spatial_rdd and object_rdd can be any geometry type (point, line, polygon) and are not necessary to have the same geometry type You can use the following code to issue an Distance Join Query on them. from geospark.core.SpatialRDD import CircleRDD from geospark.core.enums import GridType from geospark.core.spatialOperator import JoinQuery object_rdd . analyze () circle_rdd = CircleRDD ( object_rdd , 0.1 ) ## Create a CircleRDD using the given distance circle_rdd . analyze () circle_rdd . spatialPartitioning ( GridType . KDBTREE ) spatial_rdd . spatialPartitioning ( circle_rdd . getPartitioner ()) consider_boundary_intersection = False ## Only return gemeotries fully covered by each query window in queryWindowRDD using_index = False result = JoinQuery . DistanceJoinQueryFlat ( spatial_rdd , circle_rdd , using_index , consider_boundary_intersection )","title":"Write a Distance Join Query"},{"location":"archive/tutorial/geospark-core-python/#output-format_3","text":"Result for this query is RDD which holds two GeoData objects within list of lists. Example: result . collect () [[GeoData, GeoData], [GeoData, GeoData] ...] It is possible to do some RDD operation on result data ex. Getting polygon centroid. result . map ( lambda x : x [ 0 ] . geom . centroid ) . collect () [ <shapely.geometry.point.Point at 0x7efee2d28128>, <shapely.geometry.point.Point at 0x7efee2d280b8>, <shapely.geometry.point.Point at 0x7efee2d28fd0>, <shapely.geometry.point.Point at 0x7efee2d28080>, ... ]","title":"Output format"},{"location":"archive/tutorial/geospark-core-python/#save-to-permanent-storage","text":"You can always save an SpatialRDD back to some permanent storage such as HDFS and Amazon S3. You can save distributed SpatialRDD to WKT, GeoJSON and object files. Note Non-spatial attributes such as price, age and name will also be stored to permanent storage.","title":"Save to permanent storage"},{"location":"archive/tutorial/geospark-core-python/#save-an-spatialrdd-not-indexed","text":"Typed SpatialRDD and generic SpatialRDD can be saved to permanent storage.","title":"Save an SpatialRDD (not indexed)"},{"location":"archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed","text":"Indexed typed SpatialRDD and generic SpatialRDD can be saved to permanent storage. However, the indexed SpatialRDD has to be stored as a distributed object file.","title":"Save an SpatialRDD (indexed)"},{"location":"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed","text":"A spatial partitioned RDD can be saved to permanent storage but Spark is not able to maintain the same RDD partition Id of the original RDD. This will lead to wrong join query results. We are working on some solutions. Stay tuned!","title":"Save an SpatialRDD (spatialPartitioned W/O indexed)"},{"location":"archive/tutorial/geospark-core-python/#reload-a-saved-spatialrdd","text":"You can easily reload an SpatialRDD that has been saved to a distributed object file .","title":"Reload a saved SpatialRDD"},{"location":"archive/tutorial/geospark-core-python/#read-from-other-geometry-files","text":"All below methods will return SpatialRDD object which can be used with Spatial functions such as Spatial Join etc.","title":"Read from other Geometry files"},{"location":"archive/tutorial/geospark-core-python/#read-from-wkt-file","text":"from geospark.core.formatMapper import WktReader WktReader . readToGeometryRDD ( sc , wkt_geometries_location , 0 , True , False ) <geospark.core.SpatialRDD.spatial_rdd.SpatialRDD at 0x7f8fd2fbf250>","title":"Read from WKT file"},{"location":"archive/tutorial/geospark-core-python/#read-from-wkb-file","text":"from geospark.core.formatMapper import WkbReader WkbReader . readToGeometryRDD ( sc , wkb_geometries_location , 0 , True , False ) <geospark.core.SpatialRDD.spatial_rdd.SpatialRDD at 0x7f8fd2eece50>","title":"Read from WKB file"},{"location":"archive/tutorial/geospark-core-python/#read-from-geojson-file","text":"from geospark.core.formatMapper import GeoJsonReader GeoJsonReader . readToGeometryRDD ( sc , geo_json_file_location ) <geospark.core.SpatialRDD.spatial_rdd.SpatialRDD at 0x7f8fd2eecb90>","title":"Read from GeoJson file"},{"location":"archive/tutorial/geospark-core-python/#read-from-shapefile","text":"from geospark.core.formatMapper.shapefileParser import ShapefileReader ShapefileReader . readToGeometryRDD ( sc , shape_file_location ) <geospark.core.SpatialRDD.spatial_rdd.SpatialRDD at 0x7f8fd2ee0710>","title":"Read from Shapefile"},{"location":"archive/tutorial/geospark-core-python/#supported-versions","text":"Currently this python wrapper supports the following Spark, GeoSpark and Python versions","title":"Supported versions"},{"location":"archive/tutorial/geospark-core-python/#apache-spark","text":"2.2 2.3 2.4","title":"Apache Spark"},{"location":"archive/tutorial/geospark-core-python/#geospark","text":"1.3.1 1.2.0","title":"GeoSpark"},{"location":"archive/tutorial/geospark-core-python/#python","text":"3.6 3.7 Note Other versions may also work (or partially) but were not tested yet","title":"Python"},{"location":"archive/tutorial/geospark-sql-python/","text":"Spatial SQL Application in Python \u00b6 Introduction \u00b6 GeoSPark provides a Python wrapper for its Spatial SQL / DataFrame interface. The official repository for GeoSpark can be found at https://github.com/DataSystemsLab/GeoSpark . This package allows users to use all GeoSparkSQL functions and transform it to Python Shapely geometry objects. Also it allows to create Spark DataFrame with GeoSpark UDT from Shapely geometry objects. Spark DataFrame can be converted to GeoPandas easily, in addition all fiona drivers for shape file are available to load data from files and convert them to Spark DataFrame. Please look at examples. Installation \u00b6 GeoSpark extends pyspark functions which depends on Python packages and Scala libraries. To see all dependencies please look at Dependencies section. https://pypi.org/project/pyspark/ . Package needs 2 jar files to work properly: geospark.jar geospark-sql.jar geo_wrapper.jar Note Since GeoSpark 1.3.0 it is possible also to use maven jars for GeoSparkSQL instead of geospark/jars/../geospark-sql jars files. This package automatically copies the newest GeoSpark jar files using function, please follow the example below. upload_jars from pyspark.sql import SparkSession from geospark.register import upload_jars from geospark.register import GeoSparkRegistrator upload_jars () spark = SparkSession . builder . \\ getOrCreate () GeoSparkRegistrator . registerAll ( spark ) Function upload_jars () uses findspark Python package to upload jar files to executor and nodes. To avoid copying all the time, jar files can be put in directory SPARK_HOME/jars or any other path specified in Spark config files. Installing from PyPi repositories \u00b6 Please use command below pip install geospark Installing from wheel file \u00b6 pipenv run python -m pip install dist/geospark-1.3.1-py3-none-any.whl or pip install dist/geospark-1.3.1-py3-none-any.whl Installing from source \u00b6 python3 setup.py install Core Classes and methods. \u00b6 GeoSparkRegistrator.registerAll(spark: pyspark.sql.SparkSession) -> bool This is the core of whole package. Class method registers all GeoSparkSQL functions (available for used GeoSparkSQL version). To check available functions please look at GeoSparkSQL section. :param spark: pyspark.sql.SparkSession, spark session instance upload_jars() -> NoReturn Function uses findspark Python module to upload newest GeoSpark jars to Spark executor and nodes. GeometryType() Class which handle serialization and deserialization between GeoSpark geometries and Shapely BaseGeometry types. KryoSerializer.getName -> str Class property which returns org.apache.spark.serializer.KryoSerializer string, which simplify using GeoSpark Serializers. GeoSparkKryoRegistrator.getName -> str Class property which returns org.datasyslab.geospark.serde.GeoSparkKryoRegistrator string, which simplify using GeoSpark Serializers. Writing Application \u00b6 Use KryoSerializer.getName and GeoSparkKryoRegistrator.getName class properties to reduce memory impact, reffering to GeoSpark docs . To do that use spark config as follows: . config ( \"spark.serializer\" , KryoSerializer . getName ) . config ( \"spark.kryo.registrator\" , GeoSparkKryoRegistrator . getName ) If jars was not uploaded manually please use function upload_jars() To turn on GeoSparkSQL function inside pyspark code use GeoSparkRegistrator.registerAll method on existing pyspark.sql.SparkSession instance ex. GeoSparkRegistrator.registerAll(spark) After that all the functions from GeoSparkSQL will be available, moreover using collect or toPandas methods on Spark DataFrame will return Shapely BaseGeometry objects. Based on GeoPandas DataFrame, Pandas DataFrame with shapely objects or Sequence with shapely objects, Spark DataFrame can be created using spark.createDataFrame method. To specify Schema with geometry inside please use GeometryType() instance (look at examples section to see that in practice). Examples \u00b6 GeoSparkSQL \u00b6 All GeoSparkSQL functions (list depends on GeoSparkSQL version) are available in Python API. For documentation please look at GeoSpark website For example use GeoSparkSQL for Spatial Join. counties = spark . \\ read . \\ option ( \"delimiter\" , \"|\" ) . \\ option ( \"header\" , \"true\" ) . \\ csv ( \"counties.csv\" ) counties . createOrReplaceTempView ( \"county\" ) counties_geom = spark . sql ( \"SELECT county_code, st_geomFromWKT(geom) as geometry from county\" ) counties_geom . show ( 5 ) +-----------+--------------------+ |county_code| geometry| +-----------+--------------------+ | 1815|POLYGON ((21.6942...| | 1410|POLYGON ((22.7238...| | 1418|POLYGON ((21.1100...| | 1425|POLYGON ((20.9891...| | 1427|POLYGON ((19.5087...| +-----------+--------------------+ import geopandas as gpd points = gpd . read_file ( \"gis_osm_pois_free_1.shp\" ) points_geom = spark . createDataFrame ( points [[ \"fclass\" , \"geometry\" ]] ) points_geom . show ( 5 , False ) +---------+-----------------------------+ |fclass |geometry | +---------+-----------------------------+ |camp_site|POINT (15.3393145 52.3504247)| |chalet |POINT (14.8709625 52.691693) | |motel |POINT (15.0946636 52.3130396)| |atm |POINT (15.0732014 52.3141083)| |hotel |POINT (15.0696777 52.3143013)| +---------+-----------------------------+ points_geom . createOrReplaceTempView ( \"pois\" ) counties_geom . createOrReplaceTempView ( \"counties\" ) spatial_join_result = spark . sql ( \"\"\" SELECT c.county_code, p.fclass FROM pois AS p, counties AS c WHERE ST_Intersects(p.geometry, c.geometry) \"\"\" ) spatial_join_result . explain () == Physical Plan == *(2) Project [county_code#230, fclass#239] +- RangeJoin geometry#240: geometry, geometry#236: geometry, true :- Scan ExistingRDD[fclass#239,geometry#240] +- Project [county_code#230, st_geomfromwkt(geom#232) AS geometry#236] +- *(1) FileScan csv [county_code#230,geom#232] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/projects/geospark/counties.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<county_code:string,geom:string> Calculating Number of Pois within counties per fclass. pois_per_county = spatial_join_result . groupBy ( \"county_code\" , \"fclass\" ) . \\ count () pois_per_county . show ( 5 , False ) +-----------+---------+-----+ |county_code|fclass |count| +-----------+---------+-----+ |0805 |atm |6 | |0805 |bench |75 | |0803 |museum |9 | |0802 |fast_food|5 | |0862 |atm |20 | +-----------+---------+-----+ Integration with GeoPandas and Shapely \u00b6 geospark has implemented serializers and deserializers which allows to convert GeoSpark Geometry objects into Shapely BaseGeometry objects. Based on that it is possible to load the data with geopandas from file (look at Fiona possible drivers) and create Spark DataFrame based on GeoDataFrame object. Example, loading the data from shapefile using geopandas read_file method and create Spark DataFrame based on GeoDataFrame: import geopandas as gpd from pyspark.sql import SparkSession from geospark.register import GeoSparkRegistrator spark = SparkSession . builder . \\ getOrCreate () GeoSparkRegistrator . registerAll ( spark ) gdf = gpd . read_file ( \"gis_osm_pois_free_1.shp\" ) spark . createDataFrame ( gdf ) . show () +---------+----+-----------+--------------------+--------------------+ | osm_id|code| fclass| name| geometry| +---------+----+-----------+--------------------+--------------------+ | 26860257|2422| camp_site| de Kroon|POINT (15.3393145...| | 26860294|2406| chalet| Le\u015bne Ustronie|POINT (14.8709625...| | 29947493|2402| motel| null|POINT (15.0946636...| | 29947498|2602| atm| null|POINT (15.0732014...| | 29947499|2401| hotel| null|POINT (15.0696777...| | 29947505|2401| hotel| null|POINT (15.0155749...| +---------+----+-----------+--------------------+--------------------+ Reading data with Spark and converting to GeoPandas import geopandas as gpd from pyspark.sql import SparkSession from geospark.register import GeoSparkRegistrator spark = SparkSession . builder . \\ getOrCreate () GeoSparkRegistrator . registerAll ( spark ) counties = spark . \\ read . \\ option ( \"delimiter\" , \"|\" ) . \\ option ( \"header\" , \"true\" ) . \\ csv ( \"counties.csv\" ) counties . createOrReplaceTempView ( \"county\" ) counties_geom = spark . sql ( \"SELECT *, st_geomFromWKT(geom) as geometry from county\" ) df = counties_geom . toPandas () gdf = gpd . GeoDataFrame ( df , geometry = \"geometry\" ) gdf . plot ( figsize = ( 10 , 8 ), column = \"value\" , legend = True , cmap = 'YlOrBr' , scheme = 'quantiles' , edgecolor = 'lightgray' ) Creating Spark DataFrame based on shapely objects \u00b6 Supported Shapely objects \u00b6 shapely object Available Point MultiPoint LineString MultiLinestring Polygon MultiPolygon To create Spark DataFrame based on mentioned Geometry types, please use GeometryType from geospark.sql.types module. Converting works for list or tuple with shapely objects. Schema for target table with integer id and geometry type can be defined as follow: from pyspark.sql.types import IntegerType , StructField , StructType from geospark.sql.types import GeometryType schema = StructType ( [ StructField ( \"id\" , IntegerType (), False ), StructField ( \"geom\" , GeometryType (), False ) ] ) Also Spark DataFrame with geometry type can be converted to list of shapely objects with collect method. Example usage for Shapely objects \u00b6 Point \u00b6 from shapely.geometry import Point data = [ [ 1 , Point ( 21.0 , 52.0 )], [ 1 , Point ( 23.0 , 42.0 )], [ 1 , Point ( 26.0 , 32.0 )] ] gdf = spark . createDataFrame ( data , schema ) gdf . show () +---+-------------+ | id| geom| +---+-------------+ | 1|POINT (21 52)| | 1|POINT (23 42)| | 1|POINT (26 32)| +---+-------------+ gdf . printSchema () root |-- id: integer (nullable = false) |-- geom: geometry (nullable = false) MultiPoint \u00b6 from shapely.geometry import MultiPoint data = [ [ 1 , MultiPoint ([[ 19.511463 , 51.765158 ], [ 19.446408 , 51.779752 ]])] ] gdf = spark . createDataFrame ( data , schema ) . show ( 1 , False ) +---+---------------------------------------------------------+ |id |geom | +---+---------------------------------------------------------+ |1 |MULTIPOINT ((19.511463 51.765158), (19.446408 51.779752))| +---+---------------------------------------------------------+ LineString \u00b6 from shapely.geometry import LineString line = [( 40 , 40 ), ( 30 , 30 ), ( 40 , 20 ), ( 30 , 10 )] data = [ [ 1 , LineString ( line )] ] gdf = spark . createDataFrame ( data , schema ) gdf . show ( 1 , False ) +---+--------------------------------+ |id |geom | +---+--------------------------------+ |1 |LINESTRING (10 10, 20 20, 10 40)| +---+--------------------------------+ MultiLineString \u00b6 from shapely.geometry import MultiLineString line1 = [( 10 , 10 ), ( 20 , 20 ), ( 10 , 40 )] line2 = [( 40 , 40 ), ( 30 , 30 ), ( 40 , 20 ), ( 30 , 10 )] data = [ [ 1 , MultiLineString ([ line1 , line2 ])] ] gdf = spark . createDataFrame ( data , schema ) gdf . show ( 1 , False ) +---+---------------------------------------------------------------------+ |id |geom | +---+---------------------------------------------------------------------+ |1 |MULTILINESTRING ((10 10, 20 20, 10 40), (40 40, 30 30, 40 20, 30 10))| +---+---------------------------------------------------------------------+ Polygon \u00b6 from shapely.geometry import Polygon polygon = Polygon ( [ [ 19.51121 , 51.76426 ], [ 19.51056 , 51.76583 ], [ 19.51216 , 51.76599 ], [ 19.51280 , 51.76448 ], [ 19.51121 , 51.76426 ] ] ) data = [ [ 1 , polygon ] ] gdf = spark . createDataFrame ( data , schema ) gdf . show ( 1 , False ) +---+--------------------------------------------------------------------------------------------------------+ |id |geom | +---+--------------------------------------------------------------------------------------------------------+ |1 |POLYGON ((19.51121 51.76426, 19.51056 51.76583, 19.51216 51.76599, 19.5128 51.76448, 19.51121 51.76426))| +---+--------------------------------------------------------------------------------------------------------+ MultiPolygon \u00b6 from shapely.geometry import MultiPolygon exterior_p1 = [( 0 , 0 ), ( 0 , 2 ), ( 2 , 2 ), ( 2 , 0 ), ( 0 , 0 )] interior_p1 = [( 1 , 1 ), ( 1 , 1.5 ), ( 1.5 , 1.5 ), ( 1.5 , 1 ), ( 1 , 1 )] exterior_p2 = [( 0 , 0 ), ( 1 , 0 ), ( 1 , 1 ), ( 0 , 1 ), ( 0 , 0 )] polygons = [ Polygon ( exterior_p1 , [ interior_p1 ]), Polygon ( exterior_p2 ) ] data = [ [ 1 , MultiPolygon ( polygons )] ] gdf = spark . createDataFrame ( data , schema ) gdf . show ( 1 , False ) +---+----------------------------------------------------------------------------------------------------------+ |id |geom | +---+----------------------------------------------------------------------------------------------------------+ |1 |MULTIPOLYGON (((0 0, 0 2, 2 2, 2 0, 0 0), (1 1, 1.5 1, 1.5 1.5, 1 1.5, 1 1)), ((0 0, 0 1, 1 1, 1 0, 0 0)))| +---+----------------------------------------------------------------------------------------------------------+ Supported versions \u00b6 Currently this python wrapper supports the following Spark, GeoSpark and Python versions: Apache Spark \u00b6 2.2 2.3 2.4 GeoSparkSQL \u00b6 1.3.1 1.2.0 1.1.3 Python \u00b6 3.6 3.7","title":"Spatial SQL in Python"},{"location":"archive/tutorial/geospark-sql-python/#spatial-sql-application-in-python","text":"","title":"Spatial SQL Application in Python"},{"location":"archive/tutorial/geospark-sql-python/#introduction","text":"GeoSPark provides a Python wrapper for its Spatial SQL / DataFrame interface. The official repository for GeoSpark can be found at https://github.com/DataSystemsLab/GeoSpark . This package allows users to use all GeoSparkSQL functions and transform it to Python Shapely geometry objects. Also it allows to create Spark DataFrame with GeoSpark UDT from Shapely geometry objects. Spark DataFrame can be converted to GeoPandas easily, in addition all fiona drivers for shape file are available to load data from files and convert them to Spark DataFrame. Please look at examples.","title":"Introduction"},{"location":"archive/tutorial/geospark-sql-python/#installation","text":"GeoSpark extends pyspark functions which depends on Python packages and Scala libraries. To see all dependencies please look at Dependencies section. https://pypi.org/project/pyspark/ . Package needs 2 jar files to work properly: geospark.jar geospark-sql.jar geo_wrapper.jar Note Since GeoSpark 1.3.0 it is possible also to use maven jars for GeoSparkSQL instead of geospark/jars/../geospark-sql jars files. This package automatically copies the newest GeoSpark jar files using function, please follow the example below. upload_jars from pyspark.sql import SparkSession from geospark.register import upload_jars from geospark.register import GeoSparkRegistrator upload_jars () spark = SparkSession . builder . \\ getOrCreate () GeoSparkRegistrator . registerAll ( spark ) Function upload_jars () uses findspark Python package to upload jar files to executor and nodes. To avoid copying all the time, jar files can be put in directory SPARK_HOME/jars or any other path specified in Spark config files.","title":"Installation"},{"location":"archive/tutorial/geospark-sql-python/#installing-from-pypi-repositories","text":"Please use command below pip install geospark","title":"Installing from PyPi repositories"},{"location":"archive/tutorial/geospark-sql-python/#installing-from-wheel-file","text":"pipenv run python -m pip install dist/geospark-1.3.1-py3-none-any.whl or pip install dist/geospark-1.3.1-py3-none-any.whl","title":"Installing from wheel file"},{"location":"archive/tutorial/geospark-sql-python/#installing-from-source","text":"python3 setup.py install","title":"Installing from source"},{"location":"archive/tutorial/geospark-sql-python/#core-classes-and-methods","text":"GeoSparkRegistrator.registerAll(spark: pyspark.sql.SparkSession) -> bool This is the core of whole package. Class method registers all GeoSparkSQL functions (available for used GeoSparkSQL version). To check available functions please look at GeoSparkSQL section. :param spark: pyspark.sql.SparkSession, spark session instance upload_jars() -> NoReturn Function uses findspark Python module to upload newest GeoSpark jars to Spark executor and nodes. GeometryType() Class which handle serialization and deserialization between GeoSpark geometries and Shapely BaseGeometry types. KryoSerializer.getName -> str Class property which returns org.apache.spark.serializer.KryoSerializer string, which simplify using GeoSpark Serializers. GeoSparkKryoRegistrator.getName -> str Class property which returns org.datasyslab.geospark.serde.GeoSparkKryoRegistrator string, which simplify using GeoSpark Serializers.","title":"Core Classes and methods."},{"location":"archive/tutorial/geospark-sql-python/#writing-application","text":"Use KryoSerializer.getName and GeoSparkKryoRegistrator.getName class properties to reduce memory impact, reffering to GeoSpark docs . To do that use spark config as follows: . config ( \"spark.serializer\" , KryoSerializer . getName ) . config ( \"spark.kryo.registrator\" , GeoSparkKryoRegistrator . getName ) If jars was not uploaded manually please use function upload_jars() To turn on GeoSparkSQL function inside pyspark code use GeoSparkRegistrator.registerAll method on existing pyspark.sql.SparkSession instance ex. GeoSparkRegistrator.registerAll(spark) After that all the functions from GeoSparkSQL will be available, moreover using collect or toPandas methods on Spark DataFrame will return Shapely BaseGeometry objects. Based on GeoPandas DataFrame, Pandas DataFrame with shapely objects or Sequence with shapely objects, Spark DataFrame can be created using spark.createDataFrame method. To specify Schema with geometry inside please use GeometryType() instance (look at examples section to see that in practice).","title":"Writing Application"},{"location":"archive/tutorial/geospark-sql-python/#examples","text":"","title":"Examples"},{"location":"archive/tutorial/geospark-sql-python/#geosparksql","text":"All GeoSparkSQL functions (list depends on GeoSparkSQL version) are available in Python API. For documentation please look at GeoSpark website For example use GeoSparkSQL for Spatial Join. counties = spark . \\ read . \\ option ( \"delimiter\" , \"|\" ) . \\ option ( \"header\" , \"true\" ) . \\ csv ( \"counties.csv\" ) counties . createOrReplaceTempView ( \"county\" ) counties_geom = spark . sql ( \"SELECT county_code, st_geomFromWKT(geom) as geometry from county\" ) counties_geom . show ( 5 ) +-----------+--------------------+ |county_code| geometry| +-----------+--------------------+ | 1815|POLYGON ((21.6942...| | 1410|POLYGON ((22.7238...| | 1418|POLYGON ((21.1100...| | 1425|POLYGON ((20.9891...| | 1427|POLYGON ((19.5087...| +-----------+--------------------+ import geopandas as gpd points = gpd . read_file ( \"gis_osm_pois_free_1.shp\" ) points_geom = spark . createDataFrame ( points [[ \"fclass\" , \"geometry\" ]] ) points_geom . show ( 5 , False ) +---------+-----------------------------+ |fclass |geometry | +---------+-----------------------------+ |camp_site|POINT (15.3393145 52.3504247)| |chalet |POINT (14.8709625 52.691693) | |motel |POINT (15.0946636 52.3130396)| |atm |POINT (15.0732014 52.3141083)| |hotel |POINT (15.0696777 52.3143013)| +---------+-----------------------------+ points_geom . createOrReplaceTempView ( \"pois\" ) counties_geom . createOrReplaceTempView ( \"counties\" ) spatial_join_result = spark . sql ( \"\"\" SELECT c.county_code, p.fclass FROM pois AS p, counties AS c WHERE ST_Intersects(p.geometry, c.geometry) \"\"\" ) spatial_join_result . explain () == Physical Plan == *(2) Project [county_code#230, fclass#239] +- RangeJoin geometry#240: geometry, geometry#236: geometry, true :- Scan ExistingRDD[fclass#239,geometry#240] +- Project [county_code#230, st_geomfromwkt(geom#232) AS geometry#236] +- *(1) FileScan csv [county_code#230,geom#232] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/projects/geospark/counties.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<county_code:string,geom:string> Calculating Number of Pois within counties per fclass. pois_per_county = spatial_join_result . groupBy ( \"county_code\" , \"fclass\" ) . \\ count () pois_per_county . show ( 5 , False ) +-----------+---------+-----+ |county_code|fclass |count| +-----------+---------+-----+ |0805 |atm |6 | |0805 |bench |75 | |0803 |museum |9 | |0802 |fast_food|5 | |0862 |atm |20 | +-----------+---------+-----+","title":"GeoSparkSQL"},{"location":"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely","text":"geospark has implemented serializers and deserializers which allows to convert GeoSpark Geometry objects into Shapely BaseGeometry objects. Based on that it is possible to load the data with geopandas from file (look at Fiona possible drivers) and create Spark DataFrame based on GeoDataFrame object. Example, loading the data from shapefile using geopandas read_file method and create Spark DataFrame based on GeoDataFrame: import geopandas as gpd from pyspark.sql import SparkSession from geospark.register import GeoSparkRegistrator spark = SparkSession . builder . \\ getOrCreate () GeoSparkRegistrator . registerAll ( spark ) gdf = gpd . read_file ( \"gis_osm_pois_free_1.shp\" ) spark . createDataFrame ( gdf ) . show () +---------+----+-----------+--------------------+--------------------+ | osm_id|code| fclass| name| geometry| +---------+----+-----------+--------------------+--------------------+ | 26860257|2422| camp_site| de Kroon|POINT (15.3393145...| | 26860294|2406| chalet| Le\u015bne Ustronie|POINT (14.8709625...| | 29947493|2402| motel| null|POINT (15.0946636...| | 29947498|2602| atm| null|POINT (15.0732014...| | 29947499|2401| hotel| null|POINT (15.0696777...| | 29947505|2401| hotel| null|POINT (15.0155749...| +---------+----+-----------+--------------------+--------------------+ Reading data with Spark and converting to GeoPandas import geopandas as gpd from pyspark.sql import SparkSession from geospark.register import GeoSparkRegistrator spark = SparkSession . builder . \\ getOrCreate () GeoSparkRegistrator . registerAll ( spark ) counties = spark . \\ read . \\ option ( \"delimiter\" , \"|\" ) . \\ option ( \"header\" , \"true\" ) . \\ csv ( \"counties.csv\" ) counties . createOrReplaceTempView ( \"county\" ) counties_geom = spark . sql ( \"SELECT *, st_geomFromWKT(geom) as geometry from county\" ) df = counties_geom . toPandas () gdf = gpd . GeoDataFrame ( df , geometry = \"geometry\" ) gdf . plot ( figsize = ( 10 , 8 ), column = \"value\" , legend = True , cmap = 'YlOrBr' , scheme = 'quantiles' , edgecolor = 'lightgray' )","title":"Integration with GeoPandas and Shapely"},{"location":"archive/tutorial/geospark-sql-python/#creating-spark-dataframe-based-on-shapely-objects","text":"","title":"Creating Spark DataFrame based on shapely objects"},{"location":"archive/tutorial/geospark-sql-python/#supported-shapely-objects","text":"shapely object Available Point MultiPoint LineString MultiLinestring Polygon MultiPolygon To create Spark DataFrame based on mentioned Geometry types, please use GeometryType from geospark.sql.types module. Converting works for list or tuple with shapely objects. Schema for target table with integer id and geometry type can be defined as follow: from pyspark.sql.types import IntegerType , StructField , StructType from geospark.sql.types import GeometryType schema = StructType ( [ StructField ( \"id\" , IntegerType (), False ), StructField ( \"geom\" , GeometryType (), False ) ] ) Also Spark DataFrame with geometry type can be converted to list of shapely objects with collect method.","title":"Supported Shapely objects"},{"location":"archive/tutorial/geospark-sql-python/#example-usage-for-shapely-objects","text":"","title":"Example usage for Shapely objects"},{"location":"archive/tutorial/geospark-sql-python/#point","text":"from shapely.geometry import Point data = [ [ 1 , Point ( 21.0 , 52.0 )], [ 1 , Point ( 23.0 , 42.0 )], [ 1 , Point ( 26.0 , 32.0 )] ] gdf = spark . createDataFrame ( data , schema ) gdf . show () +---+-------------+ | id| geom| +---+-------------+ | 1|POINT (21 52)| | 1|POINT (23 42)| | 1|POINT (26 32)| +---+-------------+ gdf . printSchema () root |-- id: integer (nullable = false) |-- geom: geometry (nullable = false)","title":"Point"},{"location":"archive/tutorial/geospark-sql-python/#multipoint","text":"from shapely.geometry import MultiPoint data = [ [ 1 , MultiPoint ([[ 19.511463 , 51.765158 ], [ 19.446408 , 51.779752 ]])] ] gdf = spark . createDataFrame ( data , schema ) . show ( 1 , False ) +---+---------------------------------------------------------+ |id |geom | +---+---------------------------------------------------------+ |1 |MULTIPOINT ((19.511463 51.765158), (19.446408 51.779752))| +---+---------------------------------------------------------+","title":"MultiPoint"},{"location":"archive/tutorial/geospark-sql-python/#linestring","text":"from shapely.geometry import LineString line = [( 40 , 40 ), ( 30 , 30 ), ( 40 , 20 ), ( 30 , 10 )] data = [ [ 1 , LineString ( line )] ] gdf = spark . createDataFrame ( data , schema ) gdf . show ( 1 , False ) +---+--------------------------------+ |id |geom | +---+--------------------------------+ |1 |LINESTRING (10 10, 20 20, 10 40)| +---+--------------------------------+","title":"LineString"},{"location":"archive/tutorial/geospark-sql-python/#multilinestring","text":"from shapely.geometry import MultiLineString line1 = [( 10 , 10 ), ( 20 , 20 ), ( 10 , 40 )] line2 = [( 40 , 40 ), ( 30 , 30 ), ( 40 , 20 ), ( 30 , 10 )] data = [ [ 1 , MultiLineString ([ line1 , line2 ])] ] gdf = spark . createDataFrame ( data , schema ) gdf . show ( 1 , False ) +---+---------------------------------------------------------------------+ |id |geom | +---+---------------------------------------------------------------------+ |1 |MULTILINESTRING ((10 10, 20 20, 10 40), (40 40, 30 30, 40 20, 30 10))| +---+---------------------------------------------------------------------+","title":"MultiLineString"},{"location":"archive/tutorial/geospark-sql-python/#polygon","text":"from shapely.geometry import Polygon polygon = Polygon ( [ [ 19.51121 , 51.76426 ], [ 19.51056 , 51.76583 ], [ 19.51216 , 51.76599 ], [ 19.51280 , 51.76448 ], [ 19.51121 , 51.76426 ] ] ) data = [ [ 1 , polygon ] ] gdf = spark . createDataFrame ( data , schema ) gdf . show ( 1 , False ) +---+--------------------------------------------------------------------------------------------------------+ |id |geom | +---+--------------------------------------------------------------------------------------------------------+ |1 |POLYGON ((19.51121 51.76426, 19.51056 51.76583, 19.51216 51.76599, 19.5128 51.76448, 19.51121 51.76426))| +---+--------------------------------------------------------------------------------------------------------+","title":"Polygon"},{"location":"archive/tutorial/geospark-sql-python/#multipolygon","text":"from shapely.geometry import MultiPolygon exterior_p1 = [( 0 , 0 ), ( 0 , 2 ), ( 2 , 2 ), ( 2 , 0 ), ( 0 , 0 )] interior_p1 = [( 1 , 1 ), ( 1 , 1.5 ), ( 1.5 , 1.5 ), ( 1.5 , 1 ), ( 1 , 1 )] exterior_p2 = [( 0 , 0 ), ( 1 , 0 ), ( 1 , 1 ), ( 0 , 1 ), ( 0 , 0 )] polygons = [ Polygon ( exterior_p1 , [ interior_p1 ]), Polygon ( exterior_p2 ) ] data = [ [ 1 , MultiPolygon ( polygons )] ] gdf = spark . createDataFrame ( data , schema ) gdf . show ( 1 , False ) +---+----------------------------------------------------------------------------------------------------------+ |id |geom | +---+----------------------------------------------------------------------------------------------------------+ |1 |MULTIPOLYGON (((0 0, 0 2, 2 2, 2 0, 0 0), (1 1, 1.5 1, 1.5 1.5, 1 1.5, 1 1)), ((0 0, 0 1, 1 1, 1 0, 0 0)))| +---+----------------------------------------------------------------------------------------------------------+","title":"MultiPolygon"},{"location":"archive/tutorial/geospark-sql-python/#supported-versions","text":"Currently this python wrapper supports the following Spark, GeoSpark and Python versions:","title":"Supported versions"},{"location":"archive/tutorial/geospark-sql-python/#apache-spark","text":"2.2 2.3 2.4","title":"Apache Spark"},{"location":"archive/tutorial/geospark-sql-python/#geosparksql_1","text":"1.3.1 1.2.0 1.1.3","title":"GeoSparkSQL"},{"location":"archive/tutorial/geospark-sql-python/#python","text":"3.6 3.7","title":"Python"},{"location":"archive/tutorial/rdd/","text":"The page outlines the steps to create Spatial RDDs and run spatial queries using GeoSpark-core. The example code is written in Scala but also works for Java . Set up dependencies \u00b6 Read GeoSpark Maven Central coordinates Select the minimum dependencies : Add Apache Spark (only the Spark core) and GeoSpark (core). Add the dependencies in build.sbt or pom.xml. Note To enjoy the full functions of GeoSpark, we suggest you include the full dependencies : Apache Spark core , Apache SparkSQL , GeoSpark core , GeoSparkSQL , GeoSparkViz Initiate SparkContext \u00b6 val conf = new SparkConf () conf . setAppName ( \"GeoSparkRunnableExample\" ) // Change this to a proper name conf . setMaster ( \"local[*]\" ) // Delete this if run in cluster mode // Enable GeoSpark custom Kryo serializer conf . set ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) conf . set ( \"spark.kryo.registrator\" , classOf [ GeoSparkKryoRegistrator ]. getName ) val sc = new SparkContext ( conf ) Warning GeoSpark has a suite of well-written geometry and index serializers. Forgetting to enable these serializers will lead to high memory consumption. If you add the GeoSpark full dependencies as suggested above, please use the following two lines to enable GeoSpark Kryo serializer instead: conf . set ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) conf . set ( \"spark.kryo.registrator\" , classOf [ GeoSparkVizKryoRegistrator ]. getName ) Create a SpatialRDD \u00b6 Create a typed SpatialRDD \u00b6 GeoSpark-core provides three special SpatialRDDs: PointRDD, PolygonRDD, and LineStringRDD . They can be loaded from CSV, TSV, WKT, WKB, Shapefiles, GeoJSON and NetCDF/HDF format. PointRDD from CSV/TSV \u00b6 Suppose we have a checkin.csv CSV file at Path /Download/checkin.csv as follows: -88.331492,32.324142,hotel -88.175933,32.360763,gas -88.388954,32.357073,bar -88.221102,32.35078,restaurant This file has three columns and corresponding offsets (Column IDs) are 0, 1, 2. Use the following code to create a PointRDD val pointRDDInputLocation = \"/Download/checkin.csv\" val pointRDDOffset = 0 // The point long/lat starts from Column 0 val pointRDDSplitter = FileDataSplitter . CSV val carryOtherAttributes = true // Carry Column 2 (hotel, gas, bar...) var objectRDD = new PointRDD ( sc , pointRDDInputLocation , pointRDDOffset , pointRDDSplitter , carryOtherAttributes ) If the data file is in TSV format, just simply use the following line to replace the old FileDataSplitter: val pointRDDSplitter = FileDataSplitter . TSV PolygonRDD/LineStringRDD from CSV/TSV \u00b6 In general, polygon and line string data is stored in WKT, WKB, GeoJSON and Shapefile formats instead of CSV/TSV because the geometries in a file may have different lengths. However, if all polygons / line strings in your CSV/TSV possess the same length, you can create PolygonRDD and LineStringRDD from these files. Suppose we have a checkinshape.csv CSV file at Path /Download/checkinshape.csv as follows: -88.331492,32.324142,-88.331492,32.324142,-88.331492,32.324142,-88.331492,32.324142,-88.331492,32.324142,hotel -88.175933,32.360763,-88.175933,32.360763,-88.175933,32.360763,-88.175933,32.360763,-88.175933,32.360763,gas -88.388954,32.357073,-88.388954,32.357073,-88.388954,32.357073,-88.388954,32.357073,-88.388954,32.357073,bar -88.221102,32.35078,-88.221102,32.35078,-88.221102,32.35078,-88.221102,32.35078,-88.221102,32.35078,restaurant This file has 11 columns and corresponding offsets (Column IDs) are 0 - 10. Column 0 - 9 are 5 coordinates (longitude/latitude pairs). In this file, all geometries have the same number of coordinates. The geometries can be polyons or line strings. Warning For polygon data, the last coordinate must be the same as the first coordinate because a polygon is a closed linear ring. Use the following code to create a PolygonRDD. val polygonRDDInputLocation = \"/Download/checkinshape.csv\" val polygonRDDStartOffset = 0 // The coordinates start from Column 0 val polygonRDDEndOffset = 9 // The coordinates end at Column 9 val polygonRDDSplitter = FileDataSplitter . CSV val carryOtherAttributes = true // Carry Column 10 (hotel, gas, bar...) var objectRDD = new PolygonRDD ( sc , polygonRDDInputLocation , polygonRDDStartOffset , polygonRDDEndOffset , polygonRDDSplitter , carryOtherAttributes ) If the data file is in TSV format, just simply use the following line to replace the old FileDataSplitter: val polygonRDDSplitter = FileDataSplitter . TSV The way to create a LineStringRDD is the same as PolygonRDD. Create a generic SpatialRDD (behavoir changed in v1.2.0) \u00b6 A generic SpatialRDD is not typed to a certain geometry type and open to more scenarios. It allows an input data file contains mixed types of geometries. For instance, a WKT file contains three types gemetries LineString , Polygon and MultiPolygon . From WKT/WKB \u00b6 Geometries in a WKT and WKB file always occupy a single column no matter how many coordinates they have. Therefore, creating a typed SpatialRDD is easy. Suppose we have a checkin.tsv WKT TSV file at Path /Download/checkin.tsv as follows: POINT (-88.331492 32.324142) hotel POINT (-88.175933 32.360763) gas POINT (-88.388954 32.357073) bar POINT (-88.221102 32.35078) restaurant This file has two columns and corresponding offsets (Column IDs) are 0, 1. Column 0 is the WKT string and Column 1 is the checkin business type. Use the following code to create a SpatialRDD val inputLocation = \"/Download/checkin.tsv\" val wktColumn = 0 // The WKT string starts from Column 0 val allowTopologyInvalidGeometries = true // Optional val skipSyntaxInvalidGeometries = false // Optional val spatialRDD = WktReader . readToGeometryRDD ( sparkSession . sparkContext , inputLocation , wktColumn , allowTopologyInvalidGeometries , skipSyntaxInvalidGeometries ) From GeoJSON \u00b6 Geometries in GeoJSON is similar to WKT/WKB. However, a GeoJSON file must be beaked into multiple lines. Suppose we have a polygon.json GeoJSON file at Path /Download/polygon.json as follows: { \"type\": \"Feature\", \"properties\": { \"STATEFP\": \"01\", \"COUNTYFP\": \"077\", \"TRACTCE\": \"011501\", \"BLKGRPCE\": \"5\", \"AFFGEOID\": \"1500000US010770115015\", \"GEOID\": \"010770115015\", \"NAME\": \"5\", \"LSAD\": \"BG\", \"ALAND\": 6844991, \"AWATER\": 32636 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -87.621765, 34.873444 ], [ -87.617535, 34.873369 ], [ -87.6123, 34.873337 ], [ -87.604049, 34.873303 ], [ -87.604033, 34.872316 ], [ -87.60415, 34.867502 ], [ -87.604218, 34.865687 ], [ -87.604409, 34.858537 ], [ -87.604018, 34.851336 ], [ -87.603716, 34.844829 ], [ -87.603696, 34.844307 ], [ -87.603673, 34.841884 ], [ -87.60372, 34.841003 ], [ -87.603879, 34.838423 ], [ -87.603888, 34.837682 ], [ -87.603889, 34.83763 ], [ -87.613127, 34.833938 ], [ -87.616451, 34.832699 ], [ -87.621041, 34.831431 ], [ -87.621056, 34.831526 ], [ -87.62112, 34.831925 ], [ -87.621603, 34.8352 ], [ -87.62158, 34.836087 ], [ -87.621383, 34.84329 ], [ -87.621359, 34.844438 ], [ -87.62129, 34.846387 ], [ -87.62119, 34.85053 ], [ -87.62144, 34.865379 ], [ -87.621765, 34.873444 ] ] ] } }, { \"type\": \"Feature\", \"properties\": { \"STATEFP\": \"01\", \"COUNTYFP\": \"045\", \"TRACTCE\": \"021102\", \"BLKGRPCE\": \"4\", \"AFFGEOID\": \"1500000US010450211024\", \"GEOID\": \"010450211024\", \"NAME\": \"4\", \"LSAD\": \"BG\", \"ALAND\": 11360854, \"AWATER\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -85.719017, 31.297901 ], [ -85.715626, 31.305203 ], [ -85.714271, 31.307096 ], [ -85.69999, 31.307552 ], [ -85.697419, 31.307951 ], [ -85.675603, 31.31218 ], [ -85.672733, 31.312876 ], [ -85.672275, 31.311977 ], [ -85.67145, 31.310988 ], [ -85.670622, 31.309524 ], [ -85.670729, 31.307622 ], [ -85.669876, 31.30666 ], [ -85.669796, 31.306224 ], [ -85.670356, 31.306178 ], [ -85.671664, 31.305583 ], [ -85.67177, 31.305299 ], [ -85.671878, 31.302764 ], [ -85.671344, 31.302123 ], [ -85.668276, 31.302076 ], [ -85.66566, 31.30093 ], [ -85.665687, 31.30022 ], [ -85.669183, 31.297677 ], [ -85.668703, 31.295638 ], [ -85.671985, 31.29314 ], [ -85.677177, 31.288211 ], [ -85.678452, 31.286376 ], [ -85.679236, 31.28285 ], [ -85.679195, 31.281426 ], [ -85.676865, 31.281049 ], [ -85.674661, 31.28008 ], [ -85.674377, 31.27935 ], [ -85.675714, 31.276882 ], [ -85.677938, 31.275168 ], [ -85.680348, 31.276814 ], [ -85.684032, 31.278848 ], [ -85.684387, 31.279082 ], [ -85.692398, 31.283499 ], [ -85.705032, 31.289718 ], [ -85.706755, 31.290476 ], [ -85.718102, 31.295204 ], [ -85.719132, 31.29689 ], [ -85.719017, 31.297901 ] ] ] } }, { \"type\": \"Feature\", \"properties\": { \"STATEFP\": \"01\", \"COUNTYFP\": \"055\", \"TRACTCE\": \"001300\", \"BLKGRPCE\": \"3\", \"AFFGEOID\": \"1500000US010550013003\", \"GEOID\": \"010550013003\", \"NAME\": \"3\", \"LSAD\": \"BG\", \"ALAND\": 1378742, \"AWATER\": 247387 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -86.000685, 34.00537 ], [ -85.998837, 34.009768 ], [ -85.998012, 34.010398 ], [ -85.987865, 34.005426 ], [ -85.986656, 34.004552 ], [ -85.985, 34.002659 ], [ -85.98851, 34.001502 ], [ -85.987567, 33.999488 ], [ -85.988666, 33.99913 ], [ -85.992568, 33.999131 ], [ -85.993144, 33.999714 ], [ -85.994876, 33.995153 ], [ -85.998823, 33.989548 ], [ -85.999925, 33.994237 ], [ -86.000616, 34.000028 ], [ -86.000685, 34.00537 ] ] ] } }, { \"type\": \"Feature\", \"properties\": { \"STATEFP\": \"01\", \"COUNTYFP\": \"089\", \"TRACTCE\": \"001700\", \"BLKGRPCE\": \"2\", \"AFFGEOID\": \"1500000US010890017002\", \"GEOID\": \"010890017002\", \"NAME\": \"2\", \"LSAD\": \"BG\", \"ALAND\": 1040641, \"AWATER\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -86.574172, 34.727375 ], [ -86.562684, 34.727131 ], [ -86.562797, 34.723865 ], [ -86.562957, 34.723168 ], [ -86.562336, 34.719766 ], [ -86.557381, 34.719143 ], [ -86.557352, 34.718322 ], [ -86.559921, 34.717363 ], [ -86.564827, 34.718513 ], [ -86.567582, 34.718565 ], [ -86.570572, 34.718577 ], [ -86.573618, 34.719377 ], [ -86.574172, 34.727375 ] ] ] } }, Use the following code to create a generic SpatialRDD: val inputLocation = \"/Download/polygon.json\" val allowTopologyInvalidGeometries = true // Optional val skipSyntaxInvalidGeometries = false // Optional val spatialRDD = GeoJsonReader . readToGeometryRDD ( sparkSession . sparkContext , inputLocation , allowTopologyInvalidGeometries , skipSyntaxInvalidGeometries ) Warning The way that GeoSpark reads JSON file is different from SparkSQL From Shapefile \u00b6 val shapefileInputLocation = \"/Download/myshapefile\" val spatialRDD = ShapefileReader . readToGeometryRDD ( sparkSession . sparkContext , shapefileInputLocation ) Note The file extensions of .shp, .shx, .dbf must be in lowercase. Assume you have a shape file called myShapefile , the file structure should be like this: - shapefile1 - shapefile2 - myshapefile - myshapefile.shp - myshapefile.shx - myshapefile.dbf - myshapefile... - ... If the file you are reading contains non-ASCII characters you'll need to explicitly set the encoding via geospark.global.charset system property before the call to ShapefileReader.readToGeometryRDD . Example: System . setProperty ( \"geospark.global.charset\" , \"utf8\" ) From SparkSQL DataFrame \u00b6 To create a generic SpatialRDD from CSV, TSV, WKT, WKB and GeoJSON input formats, you can use GeoSparkSQL. Make sure you include the full dependencies of GeoSpark. Read GeoSparkSQL API . We use checkin.csv CSV file as the example. You can create a generic SpatialRDD using the following steps: Load data in GeoSparkSQL. var df = sparkSession . read . format ( \"csv\" ). option ( \"header\" , \"false\" ). load ( csvPointInputLocation ) df . createOrReplaceTempView ( \"inputtable\" ) Create a Geometry type column in GeoSparkSQL var spatialDf = sparkSession . sql ( \"\"\" |SELECT ST_Point(CAST(inputtable._c0 AS Decimal(24,20)),CAST(inputtable._c1 AS Decimal(24,20))) AS checkin |FROM inputtable \"\"\" . stripMargin ) Use GeoSparkSQL DataFrame-RDD Adapter to convert a DataFrame to an SpatialRDD var spatialRDD = new SpatialRDD [ Geometry ] spatialRDD . rawSpatialRDD = Adapter . toRdd ( spatialDf ) For WKT/WKB/GeoJSON data, please use ST_GeomFromWKT / ST_GeomFromWKB / ST_GeomFromGeoJSON instead. Transform the Coordinate Reference System \u00b6 GeoSpark doesn't control the coordinate unit (degree-based or meter-based) of all geometries in an SpatialRDD. The unit of all related distances in GeoSpark is same as the unit of all geometries in an SpatialRDD. To convert Coordinate Reference System of an SpatialRDD, use the following code: val sourceCrsCode = \"epsg:4326\" // WGS84, the most common degree-based CRS val targetCrsCode = \"epsg:3857\" // The most common meter-based CRS objectRDD . CRSTransform ( sourceCrsCode , targetCrsCode ) Warning CRS transformation should be done right after creating each SpatialRDD, otherwise it will lead to wrong query results. For instace, use something like this: var objectRDD = new PointRDD ( sc , pointRDDInputLocation , pointRDDOffset , pointRDDSplitter , carryOtherAttributes ) objectRDD . CRSTransform ( \"epsg:4326\" , \"epsg:3857\" ) The details CRS information can be found on EPSG.io Read other attributes in an SpatialRDD \u00b6 Each SpatialRDD can carry non-spatial attributes such as price, age and name as long as the user sets carryOtherAttributes as TRUE . The other attributes are combined together to a string and stored in UserData field of each geometry. To retrieve the UserData field, use the following code: val rddWithOtherAttributes = objectRDD . rawSpatialRDD . rdd . map [ String ]( f => f . getUserData . asInstanceOf [ String ]) Write a Spatial Range Query \u00b6 A spatial range query takes as input a range query window and an SpatialRDD and returns all geometries that intersect / are fully covered by the query window. Assume you now have an SpatialRDD (typed or generic). You can use the following code to issue an Spatial Range Query on it. val rangeQueryWindow = new Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) val considerBoundaryIntersection = false // Only return gemeotries fully covered by the window val usingIndex = false var queryResult = RangeQuery . SpatialRangeQuery ( spatialRDD , rangeQueryWindow , considerBoundaryIntersection , usingIndex ) considerBoundaryIntersection can be set to TRUE to return all geometries intersect with query window. Note Spatial range query is equal to ST_Within and ST_Intersects in Spatial SQL. An example query is as follows: SELECT * FROM checkin WHERE ST_Intersects ( queryWindow , checkin . location ) Range query window \u00b6 Besides the rectangle (Envelope) type range query window, GeoSpark range query window can be Point/Polygon/LineString. The code to create a point is as follows: val geometryFactory = new GeometryFactory () val pointObject = geometryFactory . createPoint ( new Coordinate ( - 84.01 , 34.01 )) The code to create a polygon (with 4 vertexes) is as follows: val geometryFactory = new GeometryFactory () val coordinates = new Array [ Coordinate ]( 5 ) coordinates ( 0 ) = new Coordinate ( 0 , 0 ) coordinates ( 1 ) = new Coordinate ( 0 , 4 ) coordinates ( 2 ) = new Coordinate ( 4 , 4 ) coordinates ( 3 ) = new Coordinate ( 4 , 0 ) coordinates ( 4 ) = coordinates ( 0 ) // The last coordinate is the same as the first coordinate in order to compose a closed ring val polygonObject = geometryFactory . createPolygon ( coordinates ) The code to create a line string (with 4 vertexes) is as follows: val geometryFactory = new GeometryFactory () val coordinates = new Array [ Coordinate ]( 4 ) coordinates ( 0 ) = new Coordinate ( 0 , 0 ) coordinates ( 1 ) = new Coordinate ( 0 , 4 ) coordinates ( 2 ) = new Coordinate ( 4 , 4 ) coordinates ( 3 ) = new Coordinate ( 4 , 0 ) val linestringObject = geometryFactory . createLineString ( coordinates ) Use spatial indexes \u00b6 GeoSpark provides two types of spatial indexes, Quad-Tree and R-Tree. Once you specify an index type, GeoSpark will build a local tree index on each of the SpatialRDD partition. To utilize a spatial index in a spatial range query, use the following code: val rangeQueryWindow = new Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) val considerBoundaryIntersection = false // Only return gemeotries fully covered by the window val buildOnSpatialPartitionedRDD = false // Set to TRUE only if run join query spatialRDD . buildIndex ( IndexType . QUADTREE , buildOnSpatialPartitionedRDD ) val usingIndex = true var queryResult = RangeQuery . SpatialRangeQuery ( spatialRDD , rangeQueryWindow , considerBoundaryIntersection , usingIndex ) Tip Using an index might not be the best choice all the time because building index also takes time. A spatial index is very useful when your data is complex polygons and line strings. Output format \u00b6 The output format of the spatial range query is another SpatialRDD. Write a Spatial KNN Query \u00b6 A spatial K Nearnest Neighbor query takes as input a K, a query point and an SpatialRDD and finds the K geometries in the RDD which are the closest to he query point. Assume you now have an SpatialRDD (typed or generic). You can use the following code to issue an Spatial KNN Query on it. val geometryFactory = new GeometryFactory () val pointObject = geometryFactory . createPoint ( new Coordinate ( - 84.01 , 34.01 )) val K = 1000 // K Nearest Neighbors val usingIndex = false val result = KNNQuery . SpatialKnnQuery ( objectRDD , pointObject , K , usingIndex ) Note Spatial KNN query that returns 5 Nearest Neighbors is equal to the following statement in Spatial SQL SELECT ck . name , ck . rating , ST_Distance ( ck . location , myLocation ) AS distance FROM checkins ck ORDER BY distance DESC LIMIT 5 Query center geometry \u00b6 Besides the Point type, GeoSpark KNN query center can be Polygon and LineString. To learn how to create Polygon and LineString object, see Range query window . Use spatial indexes \u00b6 To utilize a spatial index in a spatial KNN query, use the following code: val geometryFactory = new GeometryFactory () val pointObject = geometryFactory . createPoint ( new Coordinate ( - 84.01 , 34.01 )) val K = 1000 // K Nearest Neighbors val buildOnSpatialPartitionedRDD = false // Set to TRUE only if run join query objectRDD . buildIndex ( IndexType . RTREE , buildOnSpatialPartitionedRDD ) val usingIndex = true val result = KNNQuery . SpatialKnnQuery ( objectRDD , pointObject , K , usingIndex ) Warning Only R-Tree index supports Spatial KNN query Output format \u00b6 The output format of the spatial KNN query is a list of geometries. The list has K geometry objects. Write a Spatial Join Query \u00b6 A spatial join query takes as input two Spatial RDD A and B. For each geometry in A, finds the geometries (from B) covered/intersected by it. A and B can be any geometry type and are not necessary to have the same geometry type. Assume you now have two SpatialRDDs (typed or generic). You can use the following code to issue an Spatial Join Query on them. val considerBoundaryIntersection = false // Only return gemeotries fully covered by each query window in queryWindowRDD val usingIndex = false objectRDD . analyze () objectRDD . spatialPartitioning ( GridType . KDBTREE ) queryWindowRDD . spatialPartitioning ( objectRDD . getPartitioner ) val result = JoinQuery . SpatialJoinQuery ( objectRDD , queryWindowRDD , usingIndex , considerBoundaryIntersection ) Note Spatial join query is equal to the following query in Spatial SQL: SELECT superhero . name FROM city , superhero WHERE ST_Contains ( city . geom , superhero . geom ); Find the super heros in each city Use spatial partitioning \u00b6 GeoSpark spatial partitioning method can significantly speed up the join query. Three spatial partitioning methods are available: KDB-Tree, Quad-Tree and R-Tree. Two SpatialRDD must be partitioned by the same way. If you first partition SpatialRDD A, then you must use the partitioner of A to partition B. objectRDD . spatialPartitioning ( GridType . KDBTREE ) queryWindowRDD . spatialPartitioning ( objectRDD . getPartitioner ) Or queryWindowRDD . spatialPartitioning ( GridType . KDBTREE ) objectRDD . spatialPartitioning ( queryWindowRDD . getPartitioner ) Use spatial indexes \u00b6 To utilize a spatial index in a spatial join query, use the following code: objectRDD . spatialPartitioning ( joinQueryPartitioningType ) queryWindowRDD . spatialPartitioning ( objectRDD . getPartitioner ) val buildOnSpatialPartitionedRDD = true // Set to TRUE only if run join query val usingIndex = true queryWindowRDD . buildIndex ( IndexType . QUADTREE , buildOnSpatialPartitionedRDD ) val result = JoinQuery . SpatialJoinQueryFlat ( objectRDD , queryWindowRDD , usingIndex , considerBoundaryIntersection ) The index should be built on either one of two SpatialRDDs. In general, you should build it on the larger SpatialRDD. Output format \u00b6 The output format of the spatial join query is a PairRDD. In this PairRDD, each object is a pair of two geometries. The left one is the geometry from objectRDD and the right one is the geometry from the queryWindowRDD. Point,Polygon Point,Polygon Point,Polygon Polygon,Polygon LineString,LineString Polygon,LineString ... Each object on the left is covered/intersected by the object on the right. Write a Distance Join Query \u00b6 A distance join query takes as input two Spatial RDD A and B and a distance. For each geometry in A, finds the geometries (from B) are within the given distance to it. A and B can be any geometry type and are not necessary to have the same geometry type. The unit of the distance is explained here . Assume you now have two SpatialRDDs (typed or generic). You can use the following code to issue an Distance Join Query on them. objectRddA . analyze () val circleRDD = new CircleRDD ( objectRddA , 0.1 ) // Create a CircleRDD using the given distance circleRDD . spatialPartitioning ( GridType . KDBTREE ) objectRddB . spatialPartitioning ( circleRDD . getPartitioner ) val considerBoundaryIntersection = false // Only return gemeotries fully covered by each query window in queryWindowRDD val usingIndex = false val result = JoinQuery . DistanceJoinQueryFlat ( objectRddB , circleRDD , usingIndex , considerBoundaryIntersection ) The rest part of the join query is same as the spatial join query. The details of spatial partitioning in join query is here . The details of using spatial indexes in join query is here . The output format of the distance join query is here . Note Distance join query is equal to the following query in Spatial SQL: SELECT superhero . name FROM city , superhero WHERE ST_Distance ( city . geom , superhero . geom ) <= 10 ; Find the super heros within 10 miles of each city Save to permanent storage \u00b6 You can always save an SpatialRDD back to some permanent storage such as HDFS and Amazon S3. You can save distributed SpatialRDD to WKT, GeoJSON and object files. Note Non-spatial attributes such as price, age and name will also be stored to permanent storage. Save an SpatialRDD (not indexed) \u00b6 Typed SpatialRDD and generic SpatialRDD can be saved to permanent storage. Save to distributed WKT text file \u00b6 Use the following code to save an SpatialRDD as a distributed WKT text file: objectRDD . rawSpatialRDD . saveAsTextFile ( \"hdfs://PATH\" ) objectRDD . saveAsWKT ( \"hdfs://PATH\" ) Save to distributed WKB text file \u00b6 Use the following code to save an SpatialRDD as a distributed WKB text file: objectRDD . saveAsWKB ( \"hdfs://PATH\" ) Save to distributed GeoJSON text file \u00b6 Use the following code to save an SpatialRDD as a distributed GeoJSON text file: objectRDD . saveAsGeoJSON ( \"hdfs://PATH\" ) Save to distributed object file \u00b6 Use the following code to save an SpatialRDD as a distributed object file: objectRDD . rawSpatialRDD . saveAsObjectFile ( \"hdfs://PATH\" ) Note Each object in a distributed object file is a byte array (not human-readable). This byte array is the serialized format of a Geometry or a SpatialIndex. Save an SpatialRDD (indexed) \u00b6 Indexed typed SpatialRDD and generic SpatialRDD can be saved to permanent storage. However, the indexed SpatialRDD has to be stored as a distributed object file. Save to distributed object file \u00b6 Use the following code to save an SpatialRDD as a distributed object file: objectRDD.indexedRawRDD.saveAsObjectFile(\"hdfs://PATH\") Save an SpatialRDD (spatialPartitioned W/O indexed) \u00b6 A spatial partitioned RDD can be saved to permanent storage but Spark is not able to maintain the same RDD partition Id of the original RDD. This will lead to wrong join query results. We are working on some solutions. Stay tuned! Reload a saved SpatialRDD \u00b6 You can easily reload an SpatialRDD that has been saved to a distributed object file . Load to a typed SpatialRDD \u00b6 Use the following code to reload the PointRDD/PolygonRDD/LineStringRDD: var savedRDD = new PointRDD ( sc . objectFile [ Point ]( \"hdfs://PATH\" )) var savedRDD = new PointRDD ( sc . objectFile [ Polygon ]( \"hdfs://PATH\" )) var savedRDD = new PointRDD ( sc . objectFile [ LineString ]( \"hdfs://PATH\" )) Load to a generic SpatialRDD \u00b6 Use the following code to reload the SpatialRDD: var savedRDD = new SpatialRDD [ Geometry ] savedRDD . rawSpatialRDD = sc . objectFile [ Geometry ]( \"hdfs://PATH\" ) Use the following code to reload the indexed SpatialRDD: var savedRDD = new SpatialRDD [ Geometry ] savedRDD . indexedRawRDD = sc . objectFile [ SpatialIndex ]( \"hdfs://PATH\" )","title":"Spatial RDD application"},{"location":"archive/tutorial/rdd/#set-up-dependencies","text":"Read GeoSpark Maven Central coordinates Select the minimum dependencies : Add Apache Spark (only the Spark core) and GeoSpark (core). Add the dependencies in build.sbt or pom.xml. Note To enjoy the full functions of GeoSpark, we suggest you include the full dependencies : Apache Spark core , Apache SparkSQL , GeoSpark core , GeoSparkSQL , GeoSparkViz","title":"Set up dependencies"},{"location":"archive/tutorial/rdd/#initiate-sparkcontext","text":"val conf = new SparkConf () conf . setAppName ( \"GeoSparkRunnableExample\" ) // Change this to a proper name conf . setMaster ( \"local[*]\" ) // Delete this if run in cluster mode // Enable GeoSpark custom Kryo serializer conf . set ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) conf . set ( \"spark.kryo.registrator\" , classOf [ GeoSparkKryoRegistrator ]. getName ) val sc = new SparkContext ( conf ) Warning GeoSpark has a suite of well-written geometry and index serializers. Forgetting to enable these serializers will lead to high memory consumption. If you add the GeoSpark full dependencies as suggested above, please use the following two lines to enable GeoSpark Kryo serializer instead: conf . set ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) conf . set ( \"spark.kryo.registrator\" , classOf [ GeoSparkVizKryoRegistrator ]. getName )","title":"Initiate SparkContext"},{"location":"archive/tutorial/rdd/#create-a-spatialrdd","text":"","title":"Create a SpatialRDD"},{"location":"archive/tutorial/rdd/#create-a-typed-spatialrdd","text":"GeoSpark-core provides three special SpatialRDDs: PointRDD, PolygonRDD, and LineStringRDD . They can be loaded from CSV, TSV, WKT, WKB, Shapefiles, GeoJSON and NetCDF/HDF format.","title":"Create a typed SpatialRDD"},{"location":"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120","text":"A generic SpatialRDD is not typed to a certain geometry type and open to more scenarios. It allows an input data file contains mixed types of geometries. For instance, a WKT file contains three types gemetries LineString , Polygon and MultiPolygon .","title":"Create a generic SpatialRDD (behavoir changed in v1.2.0)"},{"location":"archive/tutorial/rdd/#transform-the-coordinate-reference-system","text":"GeoSpark doesn't control the coordinate unit (degree-based or meter-based) of all geometries in an SpatialRDD. The unit of all related distances in GeoSpark is same as the unit of all geometries in an SpatialRDD. To convert Coordinate Reference System of an SpatialRDD, use the following code: val sourceCrsCode = \"epsg:4326\" // WGS84, the most common degree-based CRS val targetCrsCode = \"epsg:3857\" // The most common meter-based CRS objectRDD . CRSTransform ( sourceCrsCode , targetCrsCode ) Warning CRS transformation should be done right after creating each SpatialRDD, otherwise it will lead to wrong query results. For instace, use something like this: var objectRDD = new PointRDD ( sc , pointRDDInputLocation , pointRDDOffset , pointRDDSplitter , carryOtherAttributes ) objectRDD . CRSTransform ( \"epsg:4326\" , \"epsg:3857\" ) The details CRS information can be found on EPSG.io","title":"Transform the Coordinate Reference System"},{"location":"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd","text":"Each SpatialRDD can carry non-spatial attributes such as price, age and name as long as the user sets carryOtherAttributes as TRUE . The other attributes are combined together to a string and stored in UserData field of each geometry. To retrieve the UserData field, use the following code: val rddWithOtherAttributes = objectRDD . rawSpatialRDD . rdd . map [ String ]( f => f . getUserData . asInstanceOf [ String ])","title":"Read other attributes in an SpatialRDD"},{"location":"archive/tutorial/rdd/#write-a-spatial-range-query","text":"A spatial range query takes as input a range query window and an SpatialRDD and returns all geometries that intersect / are fully covered by the query window. Assume you now have an SpatialRDD (typed or generic). You can use the following code to issue an Spatial Range Query on it. val rangeQueryWindow = new Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) val considerBoundaryIntersection = false // Only return gemeotries fully covered by the window val usingIndex = false var queryResult = RangeQuery . SpatialRangeQuery ( spatialRDD , rangeQueryWindow , considerBoundaryIntersection , usingIndex ) considerBoundaryIntersection can be set to TRUE to return all geometries intersect with query window. Note Spatial range query is equal to ST_Within and ST_Intersects in Spatial SQL. An example query is as follows: SELECT * FROM checkin WHERE ST_Intersects ( queryWindow , checkin . location )","title":"Write a Spatial Range Query"},{"location":"archive/tutorial/rdd/#range-query-window","text":"Besides the rectangle (Envelope) type range query window, GeoSpark range query window can be Point/Polygon/LineString. The code to create a point is as follows: val geometryFactory = new GeometryFactory () val pointObject = geometryFactory . createPoint ( new Coordinate ( - 84.01 , 34.01 )) The code to create a polygon (with 4 vertexes) is as follows: val geometryFactory = new GeometryFactory () val coordinates = new Array [ Coordinate ]( 5 ) coordinates ( 0 ) = new Coordinate ( 0 , 0 ) coordinates ( 1 ) = new Coordinate ( 0 , 4 ) coordinates ( 2 ) = new Coordinate ( 4 , 4 ) coordinates ( 3 ) = new Coordinate ( 4 , 0 ) coordinates ( 4 ) = coordinates ( 0 ) // The last coordinate is the same as the first coordinate in order to compose a closed ring val polygonObject = geometryFactory . createPolygon ( coordinates ) The code to create a line string (with 4 vertexes) is as follows: val geometryFactory = new GeometryFactory () val coordinates = new Array [ Coordinate ]( 4 ) coordinates ( 0 ) = new Coordinate ( 0 , 0 ) coordinates ( 1 ) = new Coordinate ( 0 , 4 ) coordinates ( 2 ) = new Coordinate ( 4 , 4 ) coordinates ( 3 ) = new Coordinate ( 4 , 0 ) val linestringObject = geometryFactory . createLineString ( coordinates )","title":"Range query window"},{"location":"archive/tutorial/rdd/#use-spatial-indexes","text":"GeoSpark provides two types of spatial indexes, Quad-Tree and R-Tree. Once you specify an index type, GeoSpark will build a local tree index on each of the SpatialRDD partition. To utilize a spatial index in a spatial range query, use the following code: val rangeQueryWindow = new Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) val considerBoundaryIntersection = false // Only return gemeotries fully covered by the window val buildOnSpatialPartitionedRDD = false // Set to TRUE only if run join query spatialRDD . buildIndex ( IndexType . QUADTREE , buildOnSpatialPartitionedRDD ) val usingIndex = true var queryResult = RangeQuery . SpatialRangeQuery ( spatialRDD , rangeQueryWindow , considerBoundaryIntersection , usingIndex ) Tip Using an index might not be the best choice all the time because building index also takes time. A spatial index is very useful when your data is complex polygons and line strings.","title":"Use spatial indexes"},{"location":"archive/tutorial/rdd/#output-format","text":"The output format of the spatial range query is another SpatialRDD.","title":"Output format"},{"location":"archive/tutorial/rdd/#write-a-spatial-knn-query","text":"A spatial K Nearnest Neighbor query takes as input a K, a query point and an SpatialRDD and finds the K geometries in the RDD which are the closest to he query point. Assume you now have an SpatialRDD (typed or generic). You can use the following code to issue an Spatial KNN Query on it. val geometryFactory = new GeometryFactory () val pointObject = geometryFactory . createPoint ( new Coordinate ( - 84.01 , 34.01 )) val K = 1000 // K Nearest Neighbors val usingIndex = false val result = KNNQuery . SpatialKnnQuery ( objectRDD , pointObject , K , usingIndex ) Note Spatial KNN query that returns 5 Nearest Neighbors is equal to the following statement in Spatial SQL SELECT ck . name , ck . rating , ST_Distance ( ck . location , myLocation ) AS distance FROM checkins ck ORDER BY distance DESC LIMIT 5","title":"Write a Spatial KNN Query"},{"location":"archive/tutorial/rdd/#query-center-geometry","text":"Besides the Point type, GeoSpark KNN query center can be Polygon and LineString. To learn how to create Polygon and LineString object, see Range query window .","title":"Query center geometry"},{"location":"archive/tutorial/rdd/#use-spatial-indexes_1","text":"To utilize a spatial index in a spatial KNN query, use the following code: val geometryFactory = new GeometryFactory () val pointObject = geometryFactory . createPoint ( new Coordinate ( - 84.01 , 34.01 )) val K = 1000 // K Nearest Neighbors val buildOnSpatialPartitionedRDD = false // Set to TRUE only if run join query objectRDD . buildIndex ( IndexType . RTREE , buildOnSpatialPartitionedRDD ) val usingIndex = true val result = KNNQuery . SpatialKnnQuery ( objectRDD , pointObject , K , usingIndex ) Warning Only R-Tree index supports Spatial KNN query","title":"Use spatial indexes"},{"location":"archive/tutorial/rdd/#output-format_1","text":"The output format of the spatial KNN query is a list of geometries. The list has K geometry objects.","title":"Output format"},{"location":"archive/tutorial/rdd/#write-a-spatial-join-query","text":"A spatial join query takes as input two Spatial RDD A and B. For each geometry in A, finds the geometries (from B) covered/intersected by it. A and B can be any geometry type and are not necessary to have the same geometry type. Assume you now have two SpatialRDDs (typed or generic). You can use the following code to issue an Spatial Join Query on them. val considerBoundaryIntersection = false // Only return gemeotries fully covered by each query window in queryWindowRDD val usingIndex = false objectRDD . analyze () objectRDD . spatialPartitioning ( GridType . KDBTREE ) queryWindowRDD . spatialPartitioning ( objectRDD . getPartitioner ) val result = JoinQuery . SpatialJoinQuery ( objectRDD , queryWindowRDD , usingIndex , considerBoundaryIntersection ) Note Spatial join query is equal to the following query in Spatial SQL: SELECT superhero . name FROM city , superhero WHERE ST_Contains ( city . geom , superhero . geom ); Find the super heros in each city","title":"Write a Spatial Join Query"},{"location":"archive/tutorial/rdd/#use-spatial-partitioning","text":"GeoSpark spatial partitioning method can significantly speed up the join query. Three spatial partitioning methods are available: KDB-Tree, Quad-Tree and R-Tree. Two SpatialRDD must be partitioned by the same way. If you first partition SpatialRDD A, then you must use the partitioner of A to partition B. objectRDD . spatialPartitioning ( GridType . KDBTREE ) queryWindowRDD . spatialPartitioning ( objectRDD . getPartitioner ) Or queryWindowRDD . spatialPartitioning ( GridType . KDBTREE ) objectRDD . spatialPartitioning ( queryWindowRDD . getPartitioner )","title":"Use spatial partitioning"},{"location":"archive/tutorial/rdd/#use-spatial-indexes_2","text":"To utilize a spatial index in a spatial join query, use the following code: objectRDD . spatialPartitioning ( joinQueryPartitioningType ) queryWindowRDD . spatialPartitioning ( objectRDD . getPartitioner ) val buildOnSpatialPartitionedRDD = true // Set to TRUE only if run join query val usingIndex = true queryWindowRDD . buildIndex ( IndexType . QUADTREE , buildOnSpatialPartitionedRDD ) val result = JoinQuery . SpatialJoinQueryFlat ( objectRDD , queryWindowRDD , usingIndex , considerBoundaryIntersection ) The index should be built on either one of two SpatialRDDs. In general, you should build it on the larger SpatialRDD.","title":"Use spatial indexes"},{"location":"archive/tutorial/rdd/#output-format_2","text":"The output format of the spatial join query is a PairRDD. In this PairRDD, each object is a pair of two geometries. The left one is the geometry from objectRDD and the right one is the geometry from the queryWindowRDD. Point,Polygon Point,Polygon Point,Polygon Polygon,Polygon LineString,LineString Polygon,LineString ... Each object on the left is covered/intersected by the object on the right.","title":"Output format"},{"location":"archive/tutorial/rdd/#write-a-distance-join-query","text":"A distance join query takes as input two Spatial RDD A and B and a distance. For each geometry in A, finds the geometries (from B) are within the given distance to it. A and B can be any geometry type and are not necessary to have the same geometry type. The unit of the distance is explained here . Assume you now have two SpatialRDDs (typed or generic). You can use the following code to issue an Distance Join Query on them. objectRddA . analyze () val circleRDD = new CircleRDD ( objectRddA , 0.1 ) // Create a CircleRDD using the given distance circleRDD . spatialPartitioning ( GridType . KDBTREE ) objectRddB . spatialPartitioning ( circleRDD . getPartitioner ) val considerBoundaryIntersection = false // Only return gemeotries fully covered by each query window in queryWindowRDD val usingIndex = false val result = JoinQuery . DistanceJoinQueryFlat ( objectRddB , circleRDD , usingIndex , considerBoundaryIntersection ) The rest part of the join query is same as the spatial join query. The details of spatial partitioning in join query is here . The details of using spatial indexes in join query is here . The output format of the distance join query is here . Note Distance join query is equal to the following query in Spatial SQL: SELECT superhero . name FROM city , superhero WHERE ST_Distance ( city . geom , superhero . geom ) <= 10 ; Find the super heros within 10 miles of each city","title":"Write a Distance Join Query"},{"location":"archive/tutorial/rdd/#save-to-permanent-storage","text":"You can always save an SpatialRDD back to some permanent storage such as HDFS and Amazon S3. You can save distributed SpatialRDD to WKT, GeoJSON and object files. Note Non-spatial attributes such as price, age and name will also be stored to permanent storage.","title":"Save to permanent storage"},{"location":"archive/tutorial/rdd/#save-an-spatialrdd-not-indexed","text":"Typed SpatialRDD and generic SpatialRDD can be saved to permanent storage.","title":"Save an SpatialRDD (not indexed)"},{"location":"archive/tutorial/rdd/#save-an-spatialrdd-indexed","text":"Indexed typed SpatialRDD and generic SpatialRDD can be saved to permanent storage. However, the indexed SpatialRDD has to be stored as a distributed object file.","title":"Save an SpatialRDD (indexed)"},{"location":"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed","text":"A spatial partitioned RDD can be saved to permanent storage but Spark is not able to maintain the same RDD partition Id of the original RDD. This will lead to wrong join query results. We are working on some solutions. Stay tuned!","title":"Save an SpatialRDD (spatialPartitioned W/O indexed)"},{"location":"archive/tutorial/rdd/#reload-a-saved-spatialrdd","text":"You can easily reload an SpatialRDD that has been saved to a distributed object file .","title":"Reload a saved SpatialRDD"},{"location":"archive/tutorial/sql/","text":"The page outlines the steps to manage spatial data using GeoSparkSQL. The example code is written in Scala but also works for Java . GeoSparkSQL supports SQL/MM Part3 Spatial SQL Standard. It includes four kinds of SQL operators as follows. All these operators can be directly called through: var myDataFrame = sparkSession . sql ( \"YOUR_SQL\" ) Detailed GeoSparkSQL APIs are available here: GeoSparkSQL API Set up dependencies \u00b6 Read GeoSpark Maven Central coordinates Select the minimum dependencies : Add Apache Spark core , Apache SparkSQL , GeoSpark core , GeoSparkSQL Add the dependencies in build.sbt or pom.xml. Note To enjoy the full functions of GeoSpark, we suggest you include the full dependencies : Apache Spark core , Apache SparkSQL , GeoSpark core , GeoSparkSQL , GeoSparkViz Initiate SparkSession \u00b6 Use the following code to initiate your SparkSession at the beginning: var sparkSession = SparkSession . builder () . master ( \"local[*]\" ) // Delete this if run in cluster mode . appName ( \"readTestScala\" ) // Change this to a proper name // Enable GeoSpark custom Kryo serializer . config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) . config ( \"spark.kryo.registrator\" , classOf [ GeoSparkKryoRegistrator ]. getName ) . getOrCreate () Warning GeoSpark has a suite of well-written geometry and index serializers. Forgetting to enable these serializers will lead to high memory consumption. If you add the GeoSpark full dependencies as suggested above, please use the following two lines to enable GeoSpark Kryo serializer instead: . config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) . config ( \"spark.kryo.registrator\" , classOf [ GeoSparkVizKryoRegistrator ]. getName ) Register GeoSparkSQL \u00b6 Add the following line after your SparkSession declaration GeoSparkSQLRegistrator . registerAll ( sparkSession ) This function will register GeoSpark User Defined Type, User Defined Function and optimized join query strategy. Load data from files \u00b6 Assume we have a WKT file, namely usa-county.tsv , at Path /Download/usa-county.tsv as follows: POLYGON (..., ...) Cuming County POLYGON (..., ...) Wahkiakum County POLYGON (..., ...) De Baca County POLYGON (..., ...) Lancaster County The file may have many other columns. Use the following code to load the data and create a raw DataFrame: var rawDf = sparkSession . read . format ( \"csv\" ). option ( \"delimiter\" , \"\\t\" ). option ( \"header\" , \"false\" ). load ( \"/Download/usa-county.tsv\" ) rawDf . createOrReplaceTempView ( \"rawdf\" ) rawDf . show () The output will be like this: | _c0|_c1|_c2| _c3| _c4| _c5| _c6|_c7|_c8| _c9|_c10| _c11|_c12|_c13| _c14| _c15| _c16| _c17| +--------------------+---+---+--------+-----+-----------+--------------------+---+---+-----+----+-----+----+----+----------+--------+-----------+------------+ |POLYGON ((-97.019...| 31|039|00835841|31039| Cuming| Cuming County| 06| H1|G4020|null| null|null| A|1477895811|10447360|+41.9158651|-096.7885168| |POLYGON ((-123.43...| 53|069|01513275|53069| Wahkiakum| Wahkiakum County| 06| H1|G4020|null| null|null| A| 682138871|61658258|+46.2946377|-123.4244583| |POLYGON ((-104.56...| 35|011|00933054|35011| De Baca| De Baca County| 06| H1|G4020|null| null|null| A|6015539696|29159492|+34.3592729|-104.3686961| |POLYGON ((-96.910...| 31|109|00835876|31109| Lancaster| Lancaster County| 06| H1|G4020| 339|30700|null| A|2169240202|22877180|+40.7835474|-096.6886584| Create a Geometry type column \u00b6 All geometrical operations in GeoSparkSQL are on Geometry type objects. Therefore, before any kind of queries, you need to create a Geometry type column on a DataFrame. var spatialDf = sparkSession . sql ( \"\"\" |SELECT ST_GeomFromWKT(_c0) AS countyshape, _c1, _c2 |FROM rawdf \"\"\" . stripMargin ) spatialDf . createOrReplaceTempView ( \"spatialdf\" ) spatialDf . show () You can select many other attributes to compose this spatialdDf . The output will be something like this: | countyshape|_c1|_c2| _c3| _c4| _c5| _c6|_c7|_c8| _c9|_c10| _c11|_c12|_c13| _c14| _c15| _c16| _c17| +--------------------+---+---+--------+-----+-----------+--------------------+---+---+-----+----+-----+----+----+----------+--------+-----------+------------+ |POLYGON ((-97.019...| 31|039|00835841|31039| Cuming| Cuming County| 06| H1|G4020|null| null|null| A|1477895811|10447360|+41.9158651|-096.7885168| |POLYGON ((-123.43...| 53|069|01513275|53069| Wahkiakum| Wahkiakum County| 06| H1|G4020|null| null|null| A| 682138871|61658258|+46.2946377|-123.4244583| |POLYGON ((-104.56...| 35|011|00933054|35011| De Baca| De Baca County| 06| H1|G4020|null| null|null| A|6015539696|29159492|+34.3592729|-104.3686961| |POLYGON ((-96.910...| 31|109|00835876|31109| Lancaster| Lancaster County| 06| H1|G4020| 339|30700|null| A|2169240202|22877180|+40.7835474|-096.6886584| Although it looks same with the input, but actually the type of column countyshape has been changed to Geometry type. To verify this, use the following code to print the schema of the DataFrame: spatialDf . printSchema () The output will be like this: root |-- countyshape: geometry (nullable = false) |-- _c1: string (nullable = true) |-- _c2: string (nullable = true) |-- _c3: string (nullable = true) |-- _c4: string (nullable = true) |-- _c5: string (nullable = true) |-- _c6: string (nullable = true) |-- _c7: string (nullable = true) Note GeoSparkSQL provides more than 10 different functions to create a Geometry column, please read GeoSparkSQL constructor API . Load Shapefile and GeoJSON \u00b6 Shapefile and GeoJSON must be loaded by SpatialRDD and converted to DataFrame using Adapter. Please read Load SpatialRDD and DataFrame <-> RDD . Transform the Coordinate Reference System \u00b6 GeoSpark doesn't control the coordinate unit (degree-based or meter-based) of all geometries in a Geometry column. The unit of all related distances in GeoSparkSQL is same as the unit of all geometries in a Geometry column. To convert Coordinate Reference System of the Geometry column created before, use the following code: spatialDf = sparkSession . sql ( \"\"\" |SELECT ST_Transform(countyshape, \"epsg:4326\", \"epsg:3857\") AS newcountyshape, _c1, _c2, _c3, _c4, _c5, _c6, _c7 |FROM spatialdf \"\"\" . stripMargin ) spatialDf . createOrReplaceTempView ( \"spatialdf\" ) spatialDf . show () The first EPSG code EPSG:4326 in ST_Transform is the source CRS of the geometries. It is WGS84, the most common degree-based CRS. The second EPSG code EPSG:3857 in ST_Transform is the target CRS of the geometries. It is the most common meter-based CRS. This ST_Transform transform the CRS of these geomtries from EPSG:4326 to EPSG:3857. The details CRS information can be found on EPSG.io The coordinates of polygons have been changed. The output will be like this: +--------------------+---+---+--------+-----+-----------+--------------------+---+ | newcountyshape|_c1|_c2| _c3| _c4| _c5| _c6|_c7| +--------------------+---+---+--------+-----+-----------+--------------------+---+ |POLYGON ((-108001...| 31|039|00835841|31039| Cuming| Cuming County| 06| |POLYGON ((-137408...| 53|069|01513275|53069| Wahkiakum| Wahkiakum County| 06| |POLYGON ((-116403...| 35|011|00933054|35011| De Baca| De Baca County| 06| |POLYGON ((-107880...| 31|109|00835876|31109| Lancaster| Lancaster County| 06| Run spatial queries \u00b6 After creating a Geometry type column, you are able to run spatial queries. Range query \u00b6 Use ST_Contains , ST_Intersects , ST_Within to run a range query over a single column. The following example finds all counties that are within the given polygon: spatialDf = sparkSession . sql ( \"\"\" |SELECT * |FROM spatialdf |WHERE ST_Contains (ST_PolygonFromEnvelope(1.0,100.0,1000.0,1100.0), newcountyshape) \"\"\" . stripMargin ) spatialDf . createOrReplaceTempView ( \"spatialdf\" ) spatialDf . show () Note Read GeoSparkSQL constructor API to learn how to create a Geometry type query window KNN query \u00b6 Use ST_Distance to calculate the distance and rank the distance. The following code returns the 5 nearest neighbor of the given polygon. spatialDf = sparkSession . sql ( \"\"\" |SELECT countyname, ST_Distance(ST_PolygonFromEnvelope(1.0,100.0,1000.0,1100.0), newcountyshape) AS distance |FROM spatialdf |ORDER BY distance DESC |LIMIT 5 \"\"\" . stripMargin ) spatialDf . createOrReplaceTempView ( \"spatialdf\" ) spatialDf . show () Join query \u00b6 The details of a join query is available here Join query . Other queries \u00b6 There are lots of other functions can be combined with these queries. Please read GeoSparkSQL functions and GeoSparkSQL aggregate functions . Save to permanent storage \u00b6 To save a Spatial DataFrame to some permanent storage such as Hive tables and HDFS, you can simply convert each geometry in the Geometry type column back to a plain String and save the plain DataFrame to wherever you want. Use the following code to convert the Geometry column in a DataFrame back to a WKT string column: sparkSession . udf . register ( \"ST_SaveAsWKT\" , ( geometry : Geometry ) => ( geometry . toText )) var stringDf = sparkSession . sql ( \"\"\" |SELECT ST_SaveAsWKT(countyshape) |FROM polygondf \"\"\" . stripMargin ) Note We are working on providing more user-friendly output functions such as ST_SaveAsWKT and ST_SaveAsWKB . Stay tuned! To load the DataFrame back, you first use the regular method to load the saved string DataFrame from the permanent storage and use ST_GeomFromWKT to re-build the Geometry type column. Convert between DataFrame and SpatialRDD \u00b6 DataFrame to SpatialRDD \u00b6 Use GeoSparkSQL DataFrame-RDD Adapter to convert a DataFrame to an SpatialRDD GeoSpark 1.2.0+ var spatialRDD = Adapter . toSpatialRdd ( spatialDf , \"usacounty\" ) \"usacounty\" is the name of the geometry column Before GeoSpark 1.2.0 var spatialRDD = new SpatialRDD [ Geometry ] spatialRDD . rawSpatialRDD = Adapter . toRdd ( spatialDf ) Geometry must be the first column in the DataFrame Warning Only one Geometry type column is allowed per DataFrame. Note Before GeoSpark 1.2.0, other non-spatial columns need be brought to SpatialRDD using the UUIDs. Please read GeoSparkSQL constructor API . In GeoSpark 1.2.0+, all other non-spatial columns are automatically kept in SpatialRDD. SpatialRDD to DataFrame \u00b6 Use GeoSparkSQL DataFrame-RDD Adapter to convert a DataFrame to an SpatialRDD var spatialDf = Adapter . toDf ( spatialRDD , sparkSession ) All other attributes such as price and age will be also brought to the DataFrame as long as you specify carryOtherAttributes (see Read other attributes in an SpatialRDD ). SpatialPairRDD to DataFrame \u00b6 PairRDD is the result of a spatial join query or distance join query. GeoSparkSQL DataFrame-RDD Adapter can convert the result to a DataFrame: var joinResultDf = Adapter . toDf ( joinResultPairRDD , sparkSession ) All other attributes such as price and age will be also brought to the DataFrame as long as you specify carryOtherAttributes (see Read other attributes in an SpatialRDD ).","title":"Spatial SQL application"},{"location":"archive/tutorial/sql/#set-up-dependencies","text":"Read GeoSpark Maven Central coordinates Select the minimum dependencies : Add Apache Spark core , Apache SparkSQL , GeoSpark core , GeoSparkSQL Add the dependencies in build.sbt or pom.xml. Note To enjoy the full functions of GeoSpark, we suggest you include the full dependencies : Apache Spark core , Apache SparkSQL , GeoSpark core , GeoSparkSQL , GeoSparkViz","title":"Set up dependencies"},{"location":"archive/tutorial/sql/#initiate-sparksession","text":"Use the following code to initiate your SparkSession at the beginning: var sparkSession = SparkSession . builder () . master ( \"local[*]\" ) // Delete this if run in cluster mode . appName ( \"readTestScala\" ) // Change this to a proper name // Enable GeoSpark custom Kryo serializer . config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) . config ( \"spark.kryo.registrator\" , classOf [ GeoSparkKryoRegistrator ]. getName ) . getOrCreate () Warning GeoSpark has a suite of well-written geometry and index serializers. Forgetting to enable these serializers will lead to high memory consumption. If you add the GeoSpark full dependencies as suggested above, please use the following two lines to enable GeoSpark Kryo serializer instead: . config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) . config ( \"spark.kryo.registrator\" , classOf [ GeoSparkVizKryoRegistrator ]. getName )","title":"Initiate SparkSession"},{"location":"archive/tutorial/sql/#register-geosparksql","text":"Add the following line after your SparkSession declaration GeoSparkSQLRegistrator . registerAll ( sparkSession ) This function will register GeoSpark User Defined Type, User Defined Function and optimized join query strategy.","title":"Register GeoSparkSQL"},{"location":"archive/tutorial/sql/#load-data-from-files","text":"Assume we have a WKT file, namely usa-county.tsv , at Path /Download/usa-county.tsv as follows: POLYGON (..., ...) Cuming County POLYGON (..., ...) Wahkiakum County POLYGON (..., ...) De Baca County POLYGON (..., ...) Lancaster County The file may have many other columns. Use the following code to load the data and create a raw DataFrame: var rawDf = sparkSession . read . format ( \"csv\" ). option ( \"delimiter\" , \"\\t\" ). option ( \"header\" , \"false\" ). load ( \"/Download/usa-county.tsv\" ) rawDf . createOrReplaceTempView ( \"rawdf\" ) rawDf . show () The output will be like this: | _c0|_c1|_c2| _c3| _c4| _c5| _c6|_c7|_c8| _c9|_c10| _c11|_c12|_c13| _c14| _c15| _c16| _c17| +--------------------+---+---+--------+-----+-----------+--------------------+---+---+-----+----+-----+----+----+----------+--------+-----------+------------+ |POLYGON ((-97.019...| 31|039|00835841|31039| Cuming| Cuming County| 06| H1|G4020|null| null|null| A|1477895811|10447360|+41.9158651|-096.7885168| |POLYGON ((-123.43...| 53|069|01513275|53069| Wahkiakum| Wahkiakum County| 06| H1|G4020|null| null|null| A| 682138871|61658258|+46.2946377|-123.4244583| |POLYGON ((-104.56...| 35|011|00933054|35011| De Baca| De Baca County| 06| H1|G4020|null| null|null| A|6015539696|29159492|+34.3592729|-104.3686961| |POLYGON ((-96.910...| 31|109|00835876|31109| Lancaster| Lancaster County| 06| H1|G4020| 339|30700|null| A|2169240202|22877180|+40.7835474|-096.6886584|","title":"Load data from files"},{"location":"archive/tutorial/sql/#create-a-geometry-type-column","text":"All geometrical operations in GeoSparkSQL are on Geometry type objects. Therefore, before any kind of queries, you need to create a Geometry type column on a DataFrame. var spatialDf = sparkSession . sql ( \"\"\" |SELECT ST_GeomFromWKT(_c0) AS countyshape, _c1, _c2 |FROM rawdf \"\"\" . stripMargin ) spatialDf . createOrReplaceTempView ( \"spatialdf\" ) spatialDf . show () You can select many other attributes to compose this spatialdDf . The output will be something like this: | countyshape|_c1|_c2| _c3| _c4| _c5| _c6|_c7|_c8| _c9|_c10| _c11|_c12|_c13| _c14| _c15| _c16| _c17| +--------------------+---+---+--------+-----+-----------+--------------------+---+---+-----+----+-----+----+----+----------+--------+-----------+------------+ |POLYGON ((-97.019...| 31|039|00835841|31039| Cuming| Cuming County| 06| H1|G4020|null| null|null| A|1477895811|10447360|+41.9158651|-096.7885168| |POLYGON ((-123.43...| 53|069|01513275|53069| Wahkiakum| Wahkiakum County| 06| H1|G4020|null| null|null| A| 682138871|61658258|+46.2946377|-123.4244583| |POLYGON ((-104.56...| 35|011|00933054|35011| De Baca| De Baca County| 06| H1|G4020|null| null|null| A|6015539696|29159492|+34.3592729|-104.3686961| |POLYGON ((-96.910...| 31|109|00835876|31109| Lancaster| Lancaster County| 06| H1|G4020| 339|30700|null| A|2169240202|22877180|+40.7835474|-096.6886584| Although it looks same with the input, but actually the type of column countyshape has been changed to Geometry type. To verify this, use the following code to print the schema of the DataFrame: spatialDf . printSchema () The output will be like this: root |-- countyshape: geometry (nullable = false) |-- _c1: string (nullable = true) |-- _c2: string (nullable = true) |-- _c3: string (nullable = true) |-- _c4: string (nullable = true) |-- _c5: string (nullable = true) |-- _c6: string (nullable = true) |-- _c7: string (nullable = true) Note GeoSparkSQL provides more than 10 different functions to create a Geometry column, please read GeoSparkSQL constructor API .","title":"Create a Geometry type column"},{"location":"archive/tutorial/sql/#load-shapefile-and-geojson","text":"Shapefile and GeoJSON must be loaded by SpatialRDD and converted to DataFrame using Adapter. Please read Load SpatialRDD and DataFrame <-> RDD .","title":"Load Shapefile and GeoJSON"},{"location":"archive/tutorial/sql/#transform-the-coordinate-reference-system","text":"GeoSpark doesn't control the coordinate unit (degree-based or meter-based) of all geometries in a Geometry column. The unit of all related distances in GeoSparkSQL is same as the unit of all geometries in a Geometry column. To convert Coordinate Reference System of the Geometry column created before, use the following code: spatialDf = sparkSession . sql ( \"\"\" |SELECT ST_Transform(countyshape, \"epsg:4326\", \"epsg:3857\") AS newcountyshape, _c1, _c2, _c3, _c4, _c5, _c6, _c7 |FROM spatialdf \"\"\" . stripMargin ) spatialDf . createOrReplaceTempView ( \"spatialdf\" ) spatialDf . show () The first EPSG code EPSG:4326 in ST_Transform is the source CRS of the geometries. It is WGS84, the most common degree-based CRS. The second EPSG code EPSG:3857 in ST_Transform is the target CRS of the geometries. It is the most common meter-based CRS. This ST_Transform transform the CRS of these geomtries from EPSG:4326 to EPSG:3857. The details CRS information can be found on EPSG.io The coordinates of polygons have been changed. The output will be like this: +--------------------+---+---+--------+-----+-----------+--------------------+---+ | newcountyshape|_c1|_c2| _c3| _c4| _c5| _c6|_c7| +--------------------+---+---+--------+-----+-----------+--------------------+---+ |POLYGON ((-108001...| 31|039|00835841|31039| Cuming| Cuming County| 06| |POLYGON ((-137408...| 53|069|01513275|53069| Wahkiakum| Wahkiakum County| 06| |POLYGON ((-116403...| 35|011|00933054|35011| De Baca| De Baca County| 06| |POLYGON ((-107880...| 31|109|00835876|31109| Lancaster| Lancaster County| 06|","title":"Transform the Coordinate Reference System"},{"location":"archive/tutorial/sql/#run-spatial-queries","text":"After creating a Geometry type column, you are able to run spatial queries.","title":"Run spatial queries"},{"location":"archive/tutorial/sql/#range-query","text":"Use ST_Contains , ST_Intersects , ST_Within to run a range query over a single column. The following example finds all counties that are within the given polygon: spatialDf = sparkSession . sql ( \"\"\" |SELECT * |FROM spatialdf |WHERE ST_Contains (ST_PolygonFromEnvelope(1.0,100.0,1000.0,1100.0), newcountyshape) \"\"\" . stripMargin ) spatialDf . createOrReplaceTempView ( \"spatialdf\" ) spatialDf . show () Note Read GeoSparkSQL constructor API to learn how to create a Geometry type query window","title":"Range query"},{"location":"archive/tutorial/sql/#knn-query","text":"Use ST_Distance to calculate the distance and rank the distance. The following code returns the 5 nearest neighbor of the given polygon. spatialDf = sparkSession . sql ( \"\"\" |SELECT countyname, ST_Distance(ST_PolygonFromEnvelope(1.0,100.0,1000.0,1100.0), newcountyshape) AS distance |FROM spatialdf |ORDER BY distance DESC |LIMIT 5 \"\"\" . stripMargin ) spatialDf . createOrReplaceTempView ( \"spatialdf\" ) spatialDf . show ()","title":"KNN query"},{"location":"archive/tutorial/sql/#join-query","text":"The details of a join query is available here Join query .","title":"Join query"},{"location":"archive/tutorial/sql/#other-queries","text":"There are lots of other functions can be combined with these queries. Please read GeoSparkSQL functions and GeoSparkSQL aggregate functions .","title":"Other queries"},{"location":"archive/tutorial/sql/#save-to-permanent-storage","text":"To save a Spatial DataFrame to some permanent storage such as Hive tables and HDFS, you can simply convert each geometry in the Geometry type column back to a plain String and save the plain DataFrame to wherever you want. Use the following code to convert the Geometry column in a DataFrame back to a WKT string column: sparkSession . udf . register ( \"ST_SaveAsWKT\" , ( geometry : Geometry ) => ( geometry . toText )) var stringDf = sparkSession . sql ( \"\"\" |SELECT ST_SaveAsWKT(countyshape) |FROM polygondf \"\"\" . stripMargin ) Note We are working on providing more user-friendly output functions such as ST_SaveAsWKT and ST_SaveAsWKB . Stay tuned! To load the DataFrame back, you first use the regular method to load the saved string DataFrame from the permanent storage and use ST_GeomFromWKT to re-build the Geometry type column.","title":"Save to permanent storage"},{"location":"archive/tutorial/sql/#convert-between-dataframe-and-spatialrdd","text":"","title":"Convert between DataFrame and SpatialRDD"},{"location":"archive/tutorial/sql/#dataframe-to-spatialrdd","text":"Use GeoSparkSQL DataFrame-RDD Adapter to convert a DataFrame to an SpatialRDD GeoSpark 1.2.0+ var spatialRDD = Adapter . toSpatialRdd ( spatialDf , \"usacounty\" ) \"usacounty\" is the name of the geometry column Before GeoSpark 1.2.0 var spatialRDD = new SpatialRDD [ Geometry ] spatialRDD . rawSpatialRDD = Adapter . toRdd ( spatialDf ) Geometry must be the first column in the DataFrame Warning Only one Geometry type column is allowed per DataFrame. Note Before GeoSpark 1.2.0, other non-spatial columns need be brought to SpatialRDD using the UUIDs. Please read GeoSparkSQL constructor API . In GeoSpark 1.2.0+, all other non-spatial columns are automatically kept in SpatialRDD.","title":"DataFrame to SpatialRDD"},{"location":"archive/tutorial/sql/#spatialrdd-to-dataframe","text":"Use GeoSparkSQL DataFrame-RDD Adapter to convert a DataFrame to an SpatialRDD var spatialDf = Adapter . toDf ( spatialRDD , sparkSession ) All other attributes such as price and age will be also brought to the DataFrame as long as you specify carryOtherAttributes (see Read other attributes in an SpatialRDD ).","title":"SpatialRDD to DataFrame"},{"location":"archive/tutorial/sql/#spatialpairrdd-to-dataframe","text":"PairRDD is the result of a spatial join query or distance join query. GeoSparkSQL DataFrame-RDD Adapter can convert the result to a DataFrame: var joinResultDf = Adapter . toDf ( joinResultPairRDD , sparkSession ) All other attributes such as price and age will be also brought to the DataFrame as long as you specify carryOtherAttributes (see Read other attributes in an SpatialRDD ).","title":"SpatialPairRDD to DataFrame"},{"location":"archive/tutorial/viz/","text":"The page outlines the steps to visualize spatial data using GeoSparkViz. The example code is written in Scala but also works for Java . Starting from 1.2.0, GeoSparkViz provides the DataFrame support. This offers users a more flexible way to design beautiful map visualization effects including scatter plots and heat maps. In the meantime, GeoSparkViz RDD API remains the same. Note All GeoSparkViz SQL/DataFrame APIs are explained in GeoSparkViz API . Why scalable map visualization? \u00b6 Data visualization allows users to summarize, analyze and reason about data. Guaranteeing detailed and accurate geospatial map visualization (e.g., at multiple zoom levels) requires extremely high-resolution maps. Classic visualization solutions such as Google Maps, MapBox and ArcGIS suffer from limited computation resources and hence take a tremendous amount of time to generate maps for large-scale geospatial data. In big spatial data scenarios, these tools just crash or run forever. GeoSparkViz encapsulates the main steps of map visualization process, e.g., pixelize, aggregate, and render, into a set of massively parallelized GeoViz operators and the user can assemble any customized styles. Visualize SpatialRDD \u00b6 This tutorial mainly focuses on explaining SQL/DataFrame API. GeoSparkViz RDD example can be found in GeoSpark template project . Set up dependencies \u00b6 Read GeoSpark Maven Central coordinates Add Apache Spark core , Apache SparkSQL , GeoSpark core , GeoSparkSQL , GeoSparkViz Initiate SparkSession \u00b6 Use the following code to initiate your SparkSession at the beginning: This will register GeoSparkVizKryo serializer. var sparkSession = SparkSession . builder () . master ( \"local[*]\" ) // Delete this if run in cluster mode . appName ( \"readTestScala\" ) // Change this to a proper name // Enable GeoSpark custom Kryo serializer . config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) . config ( \"spark.kryo.registrator\" , classOf [ GeoSparkVizKryoRegistrator ]. getName ) . getOrCreate () Register GeoSparkSQL and GeoSparkViz \u00b6 Add the following line after your SparkSession declaration GeoSparkSQLRegistrator . registerAll ( sparkSession ) GeoSparkVizRegistrator . registerAll ( sparkSession ) This will register all User Defined Tyeps, functions and optimizations in GeoSparkSQL and GeoSparkViz. Create Spatial DataFrame \u00b6 There is a DataFrame as follows: +----------+---------+ | _c0| _c1| +----------+---------+ |-88.331492|32.324142| |-88.175933|32.360763| |-88.388954|32.357073| |-88.221102| 32.35078| You first need to create a Geometry type column. CREATE OR REPLACE TEMP VIEW pointtable AS SELECT ST_Point ( cast ( pointtable . _c0 as Decimal ( 24 , 20 )), cast ( pointtable . _c1 as Decimal ( 24 , 20 ))) as shape FROM pointtable As you know, GeoSpark provides many different methods to load various spatial data formats. Please read Write an Spatial DataFrame application . Generate a single image \u00b6 In most cases, you just want to see a single image out of your spatial dataset. Pixelize spatial objects \u00b6 To put spatial objects on a map image, you first need to convert them to pixels. First, compute the spatial boundary of this column. CREATE OR REPLACE TEMP VIEW boundtable AS SELECT ST_Envelope_Aggr ( shape ) as bound FROM pointtable Then use ST_Pixelize to conver them to pixels. CREATE OR REPLACE TEMP VIEW pixels AS SELECT pixel , shape FROM pointtable LATERAL VIEW ST_Pixelize ( ST_Transform ( shape , 'epsg:4326' , 'epsg:3857' ), 256 , 256 , ( SELECT ST_Transform ( bound , 'epsg:4326' , 'epsg:3857' ) FROM boundtable )) AS pixel This will give you a 256*256 resolution image after you run ST_Render at the end of this tutorial. Warning We highly suggest that you should use ST_Transform to transfrom coordiantes to a visualization-specific coordinate sysmte such as epsg:3857. Otherwise you map may look distorted. Aggregate pixels \u00b6 Many objects may be pixelized to the same pixel locations. You now need to aggregate them based on either their spatial aggregation or spatial observations such as temperature or humidity. CREATE OR REPLACE TEMP VIEW pixelaggregates AS SELECT pixel , count ( * ) as weight FROM pixels GROUP BY pixel The weight indicates the degree of spatial aggregation or spatial observations. Later on, it will determine the color of this pixel. Colorize pixels \u00b6 Run the following command to assign colors for pixels based on their weights. CREATE OR REPLACE TEMP VIEW pixelaggregates AS SELECT pixel , ST_Colorize ( weight , ( SELECT max ( weight ) FROM pixelaggregates )) as color FROM pixelaggregates Please read ST_Colorize for a detailed API description. Render the image \u00b6 Use ST_Render to plot all pixels on a single image. CREATE OR REPLACE TEMP VIEW images AS SELECT ST_Render ( pixel , color ) AS image , ( SELECT ST_AsText ( bound ) FROM boundtable ) AS boundary FROM pixelaggregates This DataFrame will contain a Image type column which has only one image. Store the image on disk \u00b6 Fetch the image from the previous DataFrame var image = sparkSession.table(\"images\").take(1)(0)(0).asInstanceOf[ImageSerializableWrapper].getImage Use GeoSparkViz ImageGenerator to store this image on disk. var imageGenerator = new ImageGenerator imageGenerator . SaveRasterImageAsLocalFile ( image , System . getProperty ( \"user.dir\" ) + \"/target/points\" , ImageType . PNG ) Generate map tiles \u00b6 If you are a map tile professional, you may need to generate map tiles for different zoom levels and eventually create the map tile layer. Pixelization and pixel aggregation \u00b6 Please first do pixelization and pixel aggregation using the same commands in single image generation. In ST_Pixelize, you need specify a very high resolution. Create tile name \u00b6 Run the following command to compute the tile name for every pixels CREATE OR REPLACE TEMP VIEW pixelaggregates AS SELECT pixel , weight , ST_TileName ( pixel , 3 ) AS pid FROM pixelaggregates \"3\" is the zoom level for these map tiles. Colorize pixels \u00b6 Use the same command explained in single image generation to assign colors. Render map tiles \u00b6 You now need to group pixels by tiles and then render map tile images in parallel. CREATE OR REPLACE TEMP VIEW images AS SELECT ST_Render ( pixel , color ) AS image FROM pixelaggregates GROUP BY pid Store map tiles on disk \u00b6 You can use the same commands in single image generation to fetch all map tiles and store them one by one.","title":"Visualize Spatial DataFrame"},{"location":"archive/tutorial/viz/#why-scalable-map-visualization","text":"Data visualization allows users to summarize, analyze and reason about data. Guaranteeing detailed and accurate geospatial map visualization (e.g., at multiple zoom levels) requires extremely high-resolution maps. Classic visualization solutions such as Google Maps, MapBox and ArcGIS suffer from limited computation resources and hence take a tremendous amount of time to generate maps for large-scale geospatial data. In big spatial data scenarios, these tools just crash or run forever. GeoSparkViz encapsulates the main steps of map visualization process, e.g., pixelize, aggregate, and render, into a set of massively parallelized GeoViz operators and the user can assemble any customized styles.","title":"Why scalable map visualization?"},{"location":"archive/tutorial/viz/#visualize-spatialrdd","text":"This tutorial mainly focuses on explaining SQL/DataFrame API. GeoSparkViz RDD example can be found in GeoSpark template project .","title":"Visualize SpatialRDD"},{"location":"archive/tutorial/viz/#set-up-dependencies","text":"Read GeoSpark Maven Central coordinates Add Apache Spark core , Apache SparkSQL , GeoSpark core , GeoSparkSQL , GeoSparkViz","title":"Set up dependencies"},{"location":"archive/tutorial/viz/#initiate-sparksession","text":"Use the following code to initiate your SparkSession at the beginning: This will register GeoSparkVizKryo serializer. var sparkSession = SparkSession . builder () . master ( \"local[*]\" ) // Delete this if run in cluster mode . appName ( \"readTestScala\" ) // Change this to a proper name // Enable GeoSpark custom Kryo serializer . config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) . config ( \"spark.kryo.registrator\" , classOf [ GeoSparkVizKryoRegistrator ]. getName ) . getOrCreate ()","title":"Initiate SparkSession"},{"location":"archive/tutorial/viz/#register-geosparksql-and-geosparkviz","text":"Add the following line after your SparkSession declaration GeoSparkSQLRegistrator . registerAll ( sparkSession ) GeoSparkVizRegistrator . registerAll ( sparkSession ) This will register all User Defined Tyeps, functions and optimizations in GeoSparkSQL and GeoSparkViz.","title":"Register GeoSparkSQL and GeoSparkViz"},{"location":"archive/tutorial/viz/#create-spatial-dataframe","text":"There is a DataFrame as follows: +----------+---------+ | _c0| _c1| +----------+---------+ |-88.331492|32.324142| |-88.175933|32.360763| |-88.388954|32.357073| |-88.221102| 32.35078| You first need to create a Geometry type column. CREATE OR REPLACE TEMP VIEW pointtable AS SELECT ST_Point ( cast ( pointtable . _c0 as Decimal ( 24 , 20 )), cast ( pointtable . _c1 as Decimal ( 24 , 20 ))) as shape FROM pointtable As you know, GeoSpark provides many different methods to load various spatial data formats. Please read Write an Spatial DataFrame application .","title":"Create Spatial DataFrame"},{"location":"archive/tutorial/viz/#generate-a-single-image","text":"In most cases, you just want to see a single image out of your spatial dataset.","title":"Generate a single image"},{"location":"archive/tutorial/viz/#pixelize-spatial-objects","text":"To put spatial objects on a map image, you first need to convert them to pixels. First, compute the spatial boundary of this column. CREATE OR REPLACE TEMP VIEW boundtable AS SELECT ST_Envelope_Aggr ( shape ) as bound FROM pointtable Then use ST_Pixelize to conver them to pixels. CREATE OR REPLACE TEMP VIEW pixels AS SELECT pixel , shape FROM pointtable LATERAL VIEW ST_Pixelize ( ST_Transform ( shape , 'epsg:4326' , 'epsg:3857' ), 256 , 256 , ( SELECT ST_Transform ( bound , 'epsg:4326' , 'epsg:3857' ) FROM boundtable )) AS pixel This will give you a 256*256 resolution image after you run ST_Render at the end of this tutorial. Warning We highly suggest that you should use ST_Transform to transfrom coordiantes to a visualization-specific coordinate sysmte such as epsg:3857. Otherwise you map may look distorted.","title":"Pixelize spatial objects"},{"location":"archive/tutorial/viz/#aggregate-pixels","text":"Many objects may be pixelized to the same pixel locations. You now need to aggregate them based on either their spatial aggregation or spatial observations such as temperature or humidity. CREATE OR REPLACE TEMP VIEW pixelaggregates AS SELECT pixel , count ( * ) as weight FROM pixels GROUP BY pixel The weight indicates the degree of spatial aggregation or spatial observations. Later on, it will determine the color of this pixel.","title":"Aggregate pixels"},{"location":"archive/tutorial/viz/#colorize-pixels","text":"Run the following command to assign colors for pixels based on their weights. CREATE OR REPLACE TEMP VIEW pixelaggregates AS SELECT pixel , ST_Colorize ( weight , ( SELECT max ( weight ) FROM pixelaggregates )) as color FROM pixelaggregates Please read ST_Colorize for a detailed API description.","title":"Colorize pixels"},{"location":"archive/tutorial/viz/#render-the-image","text":"Use ST_Render to plot all pixels on a single image. CREATE OR REPLACE TEMP VIEW images AS SELECT ST_Render ( pixel , color ) AS image , ( SELECT ST_AsText ( bound ) FROM boundtable ) AS boundary FROM pixelaggregates This DataFrame will contain a Image type column which has only one image.","title":"Render the image"},{"location":"archive/tutorial/viz/#store-the-image-on-disk","text":"Fetch the image from the previous DataFrame var image = sparkSession.table(\"images\").take(1)(0)(0).asInstanceOf[ImageSerializableWrapper].getImage Use GeoSparkViz ImageGenerator to store this image on disk. var imageGenerator = new ImageGenerator imageGenerator . SaveRasterImageAsLocalFile ( image , System . getProperty ( \"user.dir\" ) + \"/target/points\" , ImageType . PNG )","title":"Store the image on disk"},{"location":"archive/tutorial/viz/#generate-map-tiles","text":"If you are a map tile professional, you may need to generate map tiles for different zoom levels and eventually create the map tile layer.","title":"Generate map tiles"},{"location":"archive/tutorial/viz/#pixelization-and-pixel-aggregation","text":"Please first do pixelization and pixel aggregation using the same commands in single image generation. In ST_Pixelize, you need specify a very high resolution.","title":"Pixelization and pixel aggregation"},{"location":"archive/tutorial/viz/#create-tile-name","text":"Run the following command to compute the tile name for every pixels CREATE OR REPLACE TEMP VIEW pixelaggregates AS SELECT pixel , weight , ST_TileName ( pixel , 3 ) AS pid FROM pixelaggregates \"3\" is the zoom level for these map tiles.","title":"Create tile name"},{"location":"archive/tutorial/viz/#colorize-pixels_1","text":"Use the same command explained in single image generation to assign colors.","title":"Colorize pixels"},{"location":"archive/tutorial/viz/#render-map-tiles","text":"You now need to group pixels by tiles and then render map tile images in parallel. CREATE OR REPLACE TEMP VIEW images AS SELECT ST_Render ( pixel , color ) AS image FROM pixelaggregates GROUP BY pid","title":"Render map tiles"},{"location":"archive/tutorial/viz/#store-map-tiles-on-disk","text":"You can use the same commands in single image generation to fetch all map tiles and store them one by one.","title":"Store map tiles on disk"},{"location":"archive/tutorial/zeppelin/","text":"Starting from 1.2.0, GeoSpark provides a Helium visualization plugin tailored for Apache Zeppelin . This finally bridges the gap between GeoSpark and Zeppelin. Please read Install GeoSpark-Zeppelin to learn how to install this plugin in Zeppelin. GeoSpark-Zeppelin equips two approaches to visualize spatial data in Zeppelin. The first approach uses Zeppelin to plot all spatial objects on the map. The second one leverages GeoSparkViz to generate map images and overlay them on maps. Small-scale without GeoSparkViz \u00b6 Danger Zeppelin is just a front-end visualization framework. This approach is not scalable and will fail at large-scale geospatial data. Please scroll down to read GeoSparkViz solution. You can use Apache Zeppelin to plot a small number of spatial objects, such as 1000 points. Assume you already have a Spatial DataFrame, you need to convert the geometry column to WKT string column use the following command in your Zeppelin Spark notebook Scala paragraph: spark . sql ( \"\"\" |CREATE OR REPLACE TEMP VIEW wktpoint AS |SELECT ST_AsText(shape) as geom |FROM pointtable \"\"\" . stripMargin ) Then create an SQL paragraph to fetch the data % sql SELECT * FROM wktpoint Select the geometry column to visualize: Large-scale with GeoSparkViz \u00b6 GeoSparkViz is a distributed visualization system that allows you to visualize big spatial data at scale. Please read How to use GeoSparkViz . You can use GeoSpark-Zeppelin to ask Zeppelin to overlay GeoSparkViz images on a map background. This way, you can easily visualize 1 billion spatial objects or more (depends on your cluster size). First, encode images of GeoSparkViz DataFrame in Zeppelin Spark notebook Scala paragraph, spark.sql( \"\"\" |CREATE OR REPLACE TEMP VIEW images AS |SELECT ST_EncodeImage(image) AS image, (SELECT ST_AsText(bound) FROM boundtable) AS boundary |FROM images \"\"\".stripMargin) Then create an SQL paragraph to fetch the data % sql SELECT * , 'I am the map center!' FROM images Select the image and its geospatial boundary: Zeppelin Spark notebook demo \u00b6 We provide a full Zeppelin Spark notebook which demonstrates al functions. Please download GeoSpark-Zeppelin notebook template and test data - arealm.csv . You need to use Zeppelin to import this notebook JSON file and modify the input data path in the notebook.","title":"Run GeoSpark via Zeppelin"},{"location":"archive/tutorial/zeppelin/#small-scale-without-geosparkviz","text":"Danger Zeppelin is just a front-end visualization framework. This approach is not scalable and will fail at large-scale geospatial data. Please scroll down to read GeoSparkViz solution. You can use Apache Zeppelin to plot a small number of spatial objects, such as 1000 points. Assume you already have a Spatial DataFrame, you need to convert the geometry column to WKT string column use the following command in your Zeppelin Spark notebook Scala paragraph: spark . sql ( \"\"\" |CREATE OR REPLACE TEMP VIEW wktpoint AS |SELECT ST_AsText(shape) as geom |FROM pointtable \"\"\" . stripMargin ) Then create an SQL paragraph to fetch the data % sql SELECT * FROM wktpoint Select the geometry column to visualize:","title":"Small-scale without GeoSparkViz"},{"location":"archive/tutorial/zeppelin/#large-scale-with-geosparkviz","text":"GeoSparkViz is a distributed visualization system that allows you to visualize big spatial data at scale. Please read How to use GeoSparkViz . You can use GeoSpark-Zeppelin to ask Zeppelin to overlay GeoSparkViz images on a map background. This way, you can easily visualize 1 billion spatial objects or more (depends on your cluster size). First, encode images of GeoSparkViz DataFrame in Zeppelin Spark notebook Scala paragraph, spark.sql( \"\"\" |CREATE OR REPLACE TEMP VIEW images AS |SELECT ST_EncodeImage(image) AS image, (SELECT ST_AsText(bound) FROM boundtable) AS boundary |FROM images \"\"\".stripMargin) Then create an SQL paragraph to fetch the data % sql SELECT * , 'I am the map center!' FROM images Select the image and its geospatial boundary:","title":"Large-scale with GeoSparkViz"},{"location":"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo","text":"We provide a full Zeppelin Spark notebook which demonstrates al functions. Please download GeoSpark-Zeppelin notebook template and test data - arealm.csv . You need to use Zeppelin to import this notebook JSON file and modify the input data path in the notebook.","title":"Zeppelin Spark notebook demo"},{"location":"asf/asf/","text":"Apache Software Foundation \u00b6 Apache Sedona, Apache Incubator, Apache, the Apache feather logo, and the Apache Incubator project logo are trademarks or registered trademarks of The Apache Software Foundation (ASF) .","title":"Foundation"},{"location":"asf/asf/#apache-software-foundation","text":"Apache Sedona, Apache Incubator, Apache, the Apache feather logo, and the Apache Incubator project logo are trademarks or registered trademarks of The Apache Software Foundation (ASF) .","title":"Apache Software Foundation"},{"location":"asf/disclaimer/","text":"Disclaimer \u00b6 Apache Sedona is an effort undergoing incubation at The Apache Software Foundation (ASF) , sponsored by the Apache Incubator. Incubation is required of all newly accepted projects until a further review indicates that the infrastructure, communications, and decision making process have stabilized in a manner consistent with other successful ASF projects. While incubation status is not necessarily a reflection of the completeness or stability of the code, it does indicate that the project has yet to be fully endorsed by the ASF.","title":"Disclaimer"},{"location":"asf/disclaimer/#disclaimer","text":"Apache Sedona is an effort undergoing incubation at The Apache Software Foundation (ASF) , sponsored by the Apache Incubator. Incubation is required of all newly accepted projects until a further review indicates that the infrastructure, communications, and decision making process have stabilized in a manner consistent with other successful ASF projects. While incubation status is not necessarily a reflection of the completeness or stability of the code, it does indicate that the project has yet to be fully endorsed by the ASF.","title":"Disclaimer"},{"location":"community/contact/","text":"Community \u00b6 Every volunteer project obtains its strength from the people involved in it. We invite you to participate as much or as little as you choose. You can participate in the community as follows: Use our project and provide a feedback. Provide us with the use-cases. Report bugs and submit patches. Contribute code and documentation. Feedback \u00b6 Feedback to improve Apache Sedona: Google Form Twitter \u00b6 Apache Sedona@Twitter Gitter chat \u00b6 Mailing list \u00b6 Get help using Sedona or contribute to the project on our mailing lists Sedona Mailing Lists : dev@sedona.apache.org : project development and general questions Issue tracker \u00b6 Bug Reports \u00b6 Found bug? Enter an issue in the Sedona JIRA Before submitting an issue, please: Verify that the bug does in fact exist. Search the issue tracker to verify there is no existing issue reporting the bug you\u2019ve found. Consider tracking down the bug yourself in the Wink\u2019s source and submitting a patch along with your bug report. This is a great time saver for the Wink developers and helps ensure the bug will be fixed quickly. Feature Requests \u00b6 Enhancement requests for new features are also welcome. The more concrete and rationale the request is, the greater the chance it will incorporated into future releases. Enter an issue in the Sedona JIRA or send an email to dev@sedona.apache.org","title":"Community"},{"location":"community/contact/#community","text":"Every volunteer project obtains its strength from the people involved in it. We invite you to participate as much or as little as you choose. You can participate in the community as follows: Use our project and provide a feedback. Provide us with the use-cases. Report bugs and submit patches. Contribute code and documentation.","title":"Community"},{"location":"community/contact/#feedback","text":"Feedback to improve Apache Sedona: Google Form","title":"Feedback"},{"location":"community/contact/#twitter","text":"Apache Sedona@Twitter","title":"Twitter"},{"location":"community/contact/#gitter-chat","text":"","title":"Gitter chat"},{"location":"community/contact/#mailing-list","text":"Get help using Sedona or contribute to the project on our mailing lists Sedona Mailing Lists : dev@sedona.apache.org : project development and general questions","title":"Mailing list"},{"location":"community/contact/#issue-tracker","text":"","title":"Issue tracker"},{"location":"community/contact/#bug-reports","text":"Found bug? Enter an issue in the Sedona JIRA Before submitting an issue, please: Verify that the bug does in fact exist. Search the issue tracker to verify there is no existing issue reporting the bug you\u2019ve found. Consider tracking down the bug yourself in the Wink\u2019s source and submitting a patch along with your bug report. This is a great time saver for the Wink developers and helps ensure the bug will be fixed quickly.","title":"Bug Reports"},{"location":"community/contact/#feature-requests","text":"Enhancement requests for new features are also welcome. The more concrete and rationale the request is, the greater the chance it will incorporated into future releases. Enter an issue in the Sedona JIRA or send an email to dev@sedona.apache.org","title":"Feature Requests"},{"location":"community/contributor/","text":"Sedona has received numerous help from the community. This page lists the contributors and committers of Apache Sedona. People on this page are ordered by their last name. Committers \u00b6 A contributor who contributes enough code to Sedona will be promoted to a committer. A committer has the write access to Sedona main repository Project Management Committee (PMC) \u00b6 A committer will be promoted to a PMC member when the community thinks he/she is able to be in charge at least a major component of this project. Current Sedona PMC members are as follows: Name Affiliation Apache id Adam Binford Maxar kimahriman@apache.org Kanchan Chowdhury Arizona State University kanchanchy@apache.org Pawe\u0142 Koci\u0144ski GetInData imbruced@apache.org Yitao Li SafeGraph yitaoli@apache.org Netanel Malka Upstream Security malka@apache.org Mohamed Sarwat Wherobots Inc. mosarwat@apache.org Sachio Wakai KDDI swakai@apache.org Jinxuan Wu Bloomberg LP jinxuanw@apache.org Jia Yu Wherobots Inc. jiayu@apache.org Zongsi Zhang GrabTaxi zongsizhang@apache.org Mentors \u00b6 Mentors from Apache Incubator help the project to turn into a good shape following the \"Apache\" way. Thank you, mentors! Name Apache id Felix Cheung felixcheung@apache.org Von Gosling vongosling@apache.org Jean-Baptiste Onofr\u00e9 jbonofre@apache.org George Percivall percivall@apache.org Become a committer \u00b6 To get started contributing to Sedona, learn how to contribute \u2013 anyone can submit patches, documentation and examples to the project. The PMC regularly adds new committers from the active contributors, based on their contributions to Sedona. The qualifications for new committers include: Sustained contributions to Spark: Committers should have a history of major contributions to Sedona. Quality of contributions: Committers more than any other community member should submit simple, well-tested, and well-designed patches. In addition, they should show sufficient expertise to be able to review patches. Community involvement: Committers should have a constructive and friendly attitude in all community interactions. They should also be active on the dev mailing list & Gitter, and help mentor newer contributors and users. The PMC also adds new PMC members. PMC members are expected to carry out PMC responsibilities as described in Apache Guidance, including helping vote on releases, enforce Apache project trademarks, take responsibility for legal and license issues, and ensure the project follows Apache project mechanics. The PMC periodically adds committers to the PMC who have shown they understand and can help with these activities. Currently, Sedona makes committers PMC members automatically. Nominate a committer or PMC member \u00b6 Steps are as follows: 1. Call a vote (templates/committerVote.txt) 2. Close the vote. If the result is positive, invite the new committer. Call for a vote \u00b6 We do the vote and discussion on the private@sedona.apache.org to enable a frank discussion. Please read ASF Incubator New committer Discussion for notable items. Let the Vote thread run for one week. A positive result is achieved by Consensus Approval: at least 3 +1 votes and no vetoes. PMC vote template \u00b6 This is the email to commence a vote for a new PMC candidate. New PMC members need to be voted for by the existing PMC members and subsequently approved by the Board (or Incubator PMC for incubating projects). To: private@sedona.apache.org Subject: [VOTE] New PMC candidate: [New PMC NAME] [ add the reasons behind your nomination here ] Voting ends one week from today, or until at least 3 +1 votes are cast. See voting guidelines at https://incubator.apache.org/guides/ppmc.html Close a vote \u00b6 This email ends the vote and reports the result to the project. To: private@sedona.apache.org Subject: [VOTE][RESULT] New PMC candidate: [New PMC NAME] The vote has now closed: [paste the vote thread on https://lists.apache.org/list.html?private@sedona.apache.org]. The results are: Binding Votes: +1 [TOTAL BINDING +1 VOTES] 0 [TOTAL BINDING +0/-0 VOTES] -1 [TOTAL BINDING -1 VOTES] The vote is ***successful/not successful*** Send a notice to IPMC \u00b6 The nominating PPMC member should send a message to the IPMC ( private@incubator.apache.org ) with a reference to the vote result in the following form: To: private at incubator.apache.org CC: private at sedona.apache.org Subject: [NOTICE] New PMC NAME for Apache Sedona PPMC Body: New PMC NAME has been voted as a new member of the Apache Sedona PPMC. the vote thread is at: *link to the vote result thread* Note that there is a grace period of 72 hours from when the PPMC sends the NOTICE to the IPMC to when the PPMC should formally invite the proposed member. This is an important part of the overall process. Failure to do this can result in an embarassing situation for people involved. Send the invitation \u00b6 To: New PMC Email address CC: private@sedona.apache.org Dear NEW PMC NAME, In recognition of your demonstrated commitment to, and alignment with, the goals of the Apache Sedona project, the Sedona PPMC has voted to offer you membership in the Sedona PPMC (\"Podling Project Management Committee\"). Please let us know if you accept by replying to this email (including private@sedona.apache.org). The PPMC is the Incubator podling version of a project PMC (\"Project Management Committee\") that for every top-level project is tasked by the Apache Board of Directors with official oversight and binding votes in that project. When Sedona graduates from the Incubator to a top-level project, the project PMC is usually formed from the membership of the PPMC. Note that while participation in the PMC after graduation is not guaranteed, simply continuing your constructive and active participation is usually sufficient. As a PPMC member, and later as a PMC member, you are responsible for continuing the general project, code, and community oversight that you have exhibited so far. The votes of the PPMC are not legally binding; votes of the Incubator PMC are. However, many of the PPMC members are also Incubator PMC members, so they implicitly cast binding votes when we vote on PPMC issues. While this is an important legal distinction, it shouldn't enter your thinking when working on the PPMC - members should treat every decision as if it were legally binding for the ASF. Also, in day-to-day activities, the Incubator PMC member vs PPMC member distinction should be invisible -- we are peers. Finally, the PPMC (and assuming graduation, the PMC) is not meant to create a hierarchy within the committership or the community. In fact, a goal is to add all committers over time to the PPMC/PMC, as our belief is that those who do the work should get a binding vote. Therefore, in our day-to-day interactions with the rest of the community, we continue to interact as peers, where every reasonable opinion is considered, and all community members are invited to participate in our public voting. If there ever is a situation where the PMC/PPMC's view differs significantly from that of the rest of the community, this is a symptom of a problem that needs to be addressed. With the expectation of your acceptance, welcome! The Apache Sedona PPMC PMC Accept and ICLA instruction \u00b6 To: New PMC Email address Cc: private@sedona.apache.org Subject: Re: invitation to become Apache Sedona PMC Welcome. Here are the next steps in becoming a project committer. After that we will make an announcement to the dev@sedona.apache.org 1. You need to send a Contributor License Agreement to the ASF. Normally you would send an Individual CLA. If you also make contributions done in work time or using work resources, see the Corporate CLA. Ask us if you have any issues. https://www.apache.org/licenses/#clas. You need to choose a preferred ASF user name and alternatives. In order to ensure it is available you can view a list of taken IDs at https://people.apache.org/committer-index.html Please notify us when you have submitted the CLA and by what means you did so. This will enable us to monitor its progress. We will arrange for your Apache user account when the CLA has been recorded. 2. After that is done, please use your ASF email to subscribe to the dev@sedona.apache.org and private@sedona.apache.org by sending an email to dev-subscribe@sedona.apache.org and private-subscribe@sedona.apache.org. We generally discuss everything on the dev list and keep the private@sedona.apache.org list for occasional matters which must be private. The developer section of the website describes roles within the ASF and provides other resources: https://www.apache.org/foundation/how-it-works.html https://www.apache.org/dev/ The incubator also has some useful information for new committers in incubating projects: https://incubator.apache.org/guides/committer.html https://incubator.apache.org/guides/ppmc.html Just as before you became a committer, participation in any ASF community requires adherence to the ASF Code of Conduct: https://www.apache.org/foundation/policies/conduct.html Yours, The Apache Sedona PMC Create ASF account \u00b6 Once the ICLA has been filed, use the ASF New Account Request form to generate the request. Sedona mentors will request the account. Once Sedona graduates, the PMC chair will make the request. PMC annoucement \u00b6 This is the email to announce the new committer to sedona-dev once the account has been created. To: dev@sedona.apache.org Subject: new committer: ###New PMC NAME The Podling Project Management Committee (PPMC) for Apache Sedona has invited New PMC NAME to become a committer and we are pleased to announce that they have accepted. ### add specific details here ### Being a committer enables easier contribution to the project since there is no need to go via the patch submission process. This should enable better productivity. A PMC member helps manage and guide the direction of the project. Committer Done Template \u00b6 After the committer account is established. To: New PMC Email CC: private@sedona.apache.org Subject: account request: New PMC NAME New PMC NAME, as you know, the ASF Infrastructure has set up your committer account with the username '####'. You have commit access to specific sections of the ASF repository, as follows: https://github.com/apache/incubator-sedona You need to link your ASF Account with your GitHub account. Here are the steps 1. Verify you have a Github ID enabled with 2FA * https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/ 2. Enter your Github ID into your Apache ID profile https://id.apache.org/ 3. Merge your Apache and GitHub accounts using * GitBox (Apache Account Linking utility) https://gitbox.apache.org/setup/ * You should see 3 green checks in GitBox. * Wait at least 30 minutes for an email inviting you to Apache GitHub Organization and accept invitation 4. After accepting the Github Invitation verify that you are a member of the team https://github.com/orgs/apache/teams/sedona-committers Optionally, if you want, please follow the instructions to set up your GitHub, SSH, svn password, svn configuration, email forwarding, etc. https://www.apache.org/dev/#committers Additionally, if you have been elected to the Sedona Podling Project Mgmt. Committee (PPMC): Verify you are part of the LDAP sedona ppmc https://whimsy.apache.org/roster/ppmc/sedona","title":"PMC List"},{"location":"community/contributor/#committers","text":"A contributor who contributes enough code to Sedona will be promoted to a committer. A committer has the write access to Sedona main repository","title":"Committers"},{"location":"community/contributor/#project-management-committee-pmc","text":"A committer will be promoted to a PMC member when the community thinks he/she is able to be in charge at least a major component of this project. Current Sedona PMC members are as follows: Name Affiliation Apache id Adam Binford Maxar kimahriman@apache.org Kanchan Chowdhury Arizona State University kanchanchy@apache.org Pawe\u0142 Koci\u0144ski GetInData imbruced@apache.org Yitao Li SafeGraph yitaoli@apache.org Netanel Malka Upstream Security malka@apache.org Mohamed Sarwat Wherobots Inc. mosarwat@apache.org Sachio Wakai KDDI swakai@apache.org Jinxuan Wu Bloomberg LP jinxuanw@apache.org Jia Yu Wherobots Inc. jiayu@apache.org Zongsi Zhang GrabTaxi zongsizhang@apache.org","title":"Project Management Committee (PMC)"},{"location":"community/contributor/#mentors","text":"Mentors from Apache Incubator help the project to turn into a good shape following the \"Apache\" way. Thank you, mentors! Name Apache id Felix Cheung felixcheung@apache.org Von Gosling vongosling@apache.org Jean-Baptiste Onofr\u00e9 jbonofre@apache.org George Percivall percivall@apache.org","title":"Mentors"},{"location":"community/contributor/#become-a-committer","text":"To get started contributing to Sedona, learn how to contribute \u2013 anyone can submit patches, documentation and examples to the project. The PMC regularly adds new committers from the active contributors, based on their contributions to Sedona. The qualifications for new committers include: Sustained contributions to Spark: Committers should have a history of major contributions to Sedona. Quality of contributions: Committers more than any other community member should submit simple, well-tested, and well-designed patches. In addition, they should show sufficient expertise to be able to review patches. Community involvement: Committers should have a constructive and friendly attitude in all community interactions. They should also be active on the dev mailing list & Gitter, and help mentor newer contributors and users. The PMC also adds new PMC members. PMC members are expected to carry out PMC responsibilities as described in Apache Guidance, including helping vote on releases, enforce Apache project trademarks, take responsibility for legal and license issues, and ensure the project follows Apache project mechanics. The PMC periodically adds committers to the PMC who have shown they understand and can help with these activities. Currently, Sedona makes committers PMC members automatically.","title":"Become a committer"},{"location":"community/contributor/#nominate-a-committer-or-pmc-member","text":"Steps are as follows: 1. Call a vote (templates/committerVote.txt) 2. Close the vote. If the result is positive, invite the new committer.","title":"Nominate a committer or PMC member"},{"location":"community/contributor/#call-for-a-vote","text":"We do the vote and discussion on the private@sedona.apache.org to enable a frank discussion. Please read ASF Incubator New committer Discussion for notable items. Let the Vote thread run for one week. A positive result is achieved by Consensus Approval: at least 3 +1 votes and no vetoes.","title":"Call for a vote"},{"location":"community/contributor/#close-a-vote","text":"This email ends the vote and reports the result to the project. To: private@sedona.apache.org Subject: [VOTE][RESULT] New PMC candidate: [New PMC NAME] The vote has now closed: [paste the vote thread on https://lists.apache.org/list.html?private@sedona.apache.org]. The results are: Binding Votes: +1 [TOTAL BINDING +1 VOTES] 0 [TOTAL BINDING +0/-0 VOTES] -1 [TOTAL BINDING -1 VOTES] The vote is ***successful/not successful***","title":"Close a vote"},{"location":"community/contributor/#send-a-notice-to-ipmc","text":"The nominating PPMC member should send a message to the IPMC ( private@incubator.apache.org ) with a reference to the vote result in the following form: To: private at incubator.apache.org CC: private at sedona.apache.org Subject: [NOTICE] New PMC NAME for Apache Sedona PPMC Body: New PMC NAME has been voted as a new member of the Apache Sedona PPMC. the vote thread is at: *link to the vote result thread* Note that there is a grace period of 72 hours from when the PPMC sends the NOTICE to the IPMC to when the PPMC should formally invite the proposed member. This is an important part of the overall process. Failure to do this can result in an embarassing situation for people involved.","title":"Send a notice to IPMC"},{"location":"community/contributor/#send-the-invitation","text":"To: New PMC Email address CC: private@sedona.apache.org Dear NEW PMC NAME, In recognition of your demonstrated commitment to, and alignment with, the goals of the Apache Sedona project, the Sedona PPMC has voted to offer you membership in the Sedona PPMC (\"Podling Project Management Committee\"). Please let us know if you accept by replying to this email (including private@sedona.apache.org). The PPMC is the Incubator podling version of a project PMC (\"Project Management Committee\") that for every top-level project is tasked by the Apache Board of Directors with official oversight and binding votes in that project. When Sedona graduates from the Incubator to a top-level project, the project PMC is usually formed from the membership of the PPMC. Note that while participation in the PMC after graduation is not guaranteed, simply continuing your constructive and active participation is usually sufficient. As a PPMC member, and later as a PMC member, you are responsible for continuing the general project, code, and community oversight that you have exhibited so far. The votes of the PPMC are not legally binding; votes of the Incubator PMC are. However, many of the PPMC members are also Incubator PMC members, so they implicitly cast binding votes when we vote on PPMC issues. While this is an important legal distinction, it shouldn't enter your thinking when working on the PPMC - members should treat every decision as if it were legally binding for the ASF. Also, in day-to-day activities, the Incubator PMC member vs PPMC member distinction should be invisible -- we are peers. Finally, the PPMC (and assuming graduation, the PMC) is not meant to create a hierarchy within the committership or the community. In fact, a goal is to add all committers over time to the PPMC/PMC, as our belief is that those who do the work should get a binding vote. Therefore, in our day-to-day interactions with the rest of the community, we continue to interact as peers, where every reasonable opinion is considered, and all community members are invited to participate in our public voting. If there ever is a situation where the PMC/PPMC's view differs significantly from that of the rest of the community, this is a symptom of a problem that needs to be addressed. With the expectation of your acceptance, welcome! The Apache Sedona PPMC","title":"Send the invitation"},{"location":"community/contributor/#pmc-accept-and-icla-instruction","text":"To: New PMC Email address Cc: private@sedona.apache.org Subject: Re: invitation to become Apache Sedona PMC Welcome. Here are the next steps in becoming a project committer. After that we will make an announcement to the dev@sedona.apache.org 1. You need to send a Contributor License Agreement to the ASF. Normally you would send an Individual CLA. If you also make contributions done in work time or using work resources, see the Corporate CLA. Ask us if you have any issues. https://www.apache.org/licenses/#clas. You need to choose a preferred ASF user name and alternatives. In order to ensure it is available you can view a list of taken IDs at https://people.apache.org/committer-index.html Please notify us when you have submitted the CLA and by what means you did so. This will enable us to monitor its progress. We will arrange for your Apache user account when the CLA has been recorded. 2. After that is done, please use your ASF email to subscribe to the dev@sedona.apache.org and private@sedona.apache.org by sending an email to dev-subscribe@sedona.apache.org and private-subscribe@sedona.apache.org. We generally discuss everything on the dev list and keep the private@sedona.apache.org list for occasional matters which must be private. The developer section of the website describes roles within the ASF and provides other resources: https://www.apache.org/foundation/how-it-works.html https://www.apache.org/dev/ The incubator also has some useful information for new committers in incubating projects: https://incubator.apache.org/guides/committer.html https://incubator.apache.org/guides/ppmc.html Just as before you became a committer, participation in any ASF community requires adherence to the ASF Code of Conduct: https://www.apache.org/foundation/policies/conduct.html Yours, The Apache Sedona PMC","title":"PMC Accept and ICLA instruction"},{"location":"community/contributor/#create-asf-account","text":"Once the ICLA has been filed, use the ASF New Account Request form to generate the request. Sedona mentors will request the account. Once Sedona graduates, the PMC chair will make the request.","title":"Create ASF account"},{"location":"community/contributor/#pmc-annoucement","text":"This is the email to announce the new committer to sedona-dev once the account has been created. To: dev@sedona.apache.org Subject: new committer: ###New PMC NAME The Podling Project Management Committee (PPMC) for Apache Sedona has invited New PMC NAME to become a committer and we are pleased to announce that they have accepted. ### add specific details here ### Being a committer enables easier contribution to the project since there is no need to go via the patch submission process. This should enable better productivity. A PMC member helps manage and guide the direction of the project.","title":"PMC annoucement"},{"location":"community/contributor/#committer-done-template","text":"After the committer account is established. To: New PMC Email CC: private@sedona.apache.org Subject: account request: New PMC NAME New PMC NAME, as you know, the ASF Infrastructure has set up your committer account with the username '####'. You have commit access to specific sections of the ASF repository, as follows: https://github.com/apache/incubator-sedona You need to link your ASF Account with your GitHub account. Here are the steps 1. Verify you have a Github ID enabled with 2FA * https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/ 2. Enter your Github ID into your Apache ID profile https://id.apache.org/ 3. Merge your Apache and GitHub accounts using * GitBox (Apache Account Linking utility) https://gitbox.apache.org/setup/ * You should see 3 green checks in GitBox. * Wait at least 30 minutes for an email inviting you to Apache GitHub Organization and accept invitation 4. After accepting the Github Invitation verify that you are a member of the team https://github.com/orgs/apache/teams/sedona-committers Optionally, if you want, please follow the instructions to set up your GitHub, SSH, svn password, svn configuration, email forwarding, etc. https://www.apache.org/dev/#committers Additionally, if you have been elected to the Sedona Podling Project Mgmt. Committee (PPMC): Verify you are part of the LDAP sedona ppmc https://whimsy.apache.org/roster/ppmc/sedona","title":"Committer Done Template"},{"location":"community/develop/","text":"Develop Sedona \u00b6 Scala/Java developers \u00b6 IDE \u00b6 We recommend Intellij IDEA with Scala plugin installed. Import the project \u00b6 Choose Open \u00b6 Go to the Sedona root folder (not a submodule folder) and choose open \u00b6 The IDE might show errors \u00b6 The IDE usually has trouble understanding the complex project structure in Sedona. Fix errors by changing POM.xml \u00b6 You need to comment out the following lines in pom.xml at the root folder, as follows. Remember that you should NOT submit this change to Sedona. <!-- <parent>--> <!-- <groupId>org.apache</groupId>--> <!-- <artifactId>apache</artifactId>--> <!-- <version>23</version>--> <!-- <relativePath />--> <!-- </parent>--> Reload POM.xml \u00b6 Make sure you reload the POM.xml or reload the maven project. The IDE will ask you to remove some modules. Please select yes . The final project structure should be like this: \u00b6 Run unit tests \u00b6 Run all unit tests \u00b6 In a terminal, go to the Sedona root folder. Run mvn clean install . All tests will take more than 15 minutes. To only build the project jars, run mvn clean install -DskipTests . More details can be found on Compile Sedona Run a single unit test \u00b6 In the IDE, right-click a test case and run this test case. The IDE might tell you that the PATH does not exist as follows: Go to Edit Configuration Append the submodule folder to Working Directory . For example, incubator-sedona/sql . Re-run the test case. Do NOT right click the test case to re-run. Instead, click the button as shown in the figure below. Python developers \u00b6 More details to come. IDE \u00b6 We recommend PyCharm Import the project \u00b6 R developers \u00b6 More details to come. IDE \u00b6 We recommend RStudio Import the project \u00b6","title":"Develop"},{"location":"community/develop/#develop-sedona","text":"","title":"Develop Sedona"},{"location":"community/develop/#scalajava-developers","text":"","title":"Scala/Java developers"},{"location":"community/develop/#ide","text":"We recommend Intellij IDEA with Scala plugin installed.","title":"IDE"},{"location":"community/develop/#import-the-project","text":"","title":"Import the project"},{"location":"community/develop/#run-unit-tests","text":"","title":"Run unit tests"},{"location":"community/develop/#python-developers","text":"More details to come.","title":"Python developers"},{"location":"community/develop/#ide_1","text":"We recommend PyCharm","title":"IDE"},{"location":"community/develop/#import-the-project_1","text":"","title":"Import the project"},{"location":"community/develop/#r-developers","text":"More details to come.","title":"R developers"},{"location":"community/develop/#ide_2","text":"We recommend RStudio","title":"IDE"},{"location":"community/develop/#import-the-project_2","text":"","title":"Import the project"},{"location":"community/publication/","text":"Publication \u00b6 Apache Sedona was formerly called GeoSpark, initiated by Arizona State University Data Systems Lab . Key publications \u00b6 \"Spatial Data Management in Apache Spark: The GeoSpark Perspective and Beyond\" is the full research paper that talks about the entire GeoSpark ecosystem. Please cite this paper if your work mentions GeoSpark core system. \"GeoSparkViz: A Scalable Geospatial Data Visualization Framework in the Apache Spark Ecosystem\" is the full research paper that talks about map visualization system in GeoSpark. Please cite this paper if your work mentions GeoSpark visualization system. \"Building A Microscopic Road Network Traffic Simulator in Apache Spark\" is the full research paper that talks about the traffic simulator in GeoSpark. Please cite this paper if your work mentions GeoSparkSim traffic simulator. Third-party evaluation \u00b6 GeoSpark were evaluated by papers published on database top venues. It is worth noting that we do not have any collaboration with the authors. SIGMOD 2020 paper \"Architecting a Query Compiler for Spatial Workloads\" Ruby Y. Tahboub, Tiark Rompf (Purdue University). In Figure 16a, GeoSpark distance join query runs around 7x - 9x faster than Simba, a spatial extension on Spark, on 1 - 24 core machines. PVLDB 2018 paper \"How Good Are Modern Spatial Analytics Systems?\" Varun Pandey, Andreas Kipf, Thomas Neumann, Alfons Kemper (Technical University of Munich), quoted as follows: GeoSpark comes close to a complete spatial analytics system. It also exhibits the best performance in most cases. Full publications \u00b6 GeoSpark Ecosystem \u00b6 \"Spatial Data Management in Apache Spark: The GeoSpark Perspective and Beyond\" (research paper). Jia Yu, Zongsi Zhang, Mohamed Sarwat. Geoinformatica Journal 2019. \"A Demonstration of GeoSpark: A Cluster Computing Framework for Processing Big Spatial Data\" (demo paper). Jia Yu, Jinxuan Wu, Mohamed Sarwat. In Proceeding of IEEE International Conference on Data Engineering ICDE 2016, Helsinki, FI, May 2016 \"GeoSpark: A Cluster Computing Framework for Processing Large-Scale Spatial Data\" (short paper). Jia Yu, Jinxuan Wu, Mohamed Sarwat. In Proceeding of the ACM International Conference on Advances in Geographic Information Systems ACM SIGSPATIAL GIS 2015, Seattle, WA, USA November 2015 GeoSparkViz Visualization System \u00b6 \"GeoSparkViz in Action: A Data System with built-in support for Geospatial Visualization\" (demo paper) Jia Yu, Anique Tahir, and Mohamed Sarwat. In Proceedings of the International Conference on Data Engineering, ICDE, 2019 \"GeoSparkViz: A Scalable Geospatial Data Visualization Framework in the Apache Spark Ecosystem\" (research paper). Jia Yu, Zongsi Zhang, Mohamed Sarwat. In Proceedings of the International Conference on Scientific and Statistical Database Management, SSDBM 2018, Bolzano-Bozen, Italy July 2018 GeoSparkSim Traffic Simulator \u00b6 \"Dissecting GeoSparkSim: a scalable microscopic road network traffic simulator in Apache Spark\" (journal paper) Jia Yu, Zishan Fu, Mohamed Sarwat. Distributed Parallel Databases 38(4): 963-994 (2020) \"Demonstrating GeoSparkSim: A Scalable Microscopic Road Network Traffic Simulator Based on Apache Spark\" . Zishan Fu, Jia Yu, Mohamed Sarwat. International Symposium on Spatial and Temporal Databases, SSTD, 2019 \"Building A Microscopic Road Network Traffic Simulator in Apache Spark\" (research paper) Zishan Fu, Jia Yu, and Mohamed Sarwat. In Proceedings of the International Conference on Mobile Data Management, MDM, 2019 A Tutorial about Geospatial Data Management in Spark \u00b6 \"Geospatial Data Management in Apache Spark: A Tutorial\" (Tutorial) Jia Yu and Mohamed Sarwat. In Proceedings of the International Conference on Data Engineering, ICDE, 2019","title":"Publications"},{"location":"community/publication/#publication","text":"Apache Sedona was formerly called GeoSpark, initiated by Arizona State University Data Systems Lab .","title":"Publication"},{"location":"community/publication/#key-publications","text":"\"Spatial Data Management in Apache Spark: The GeoSpark Perspective and Beyond\" is the full research paper that talks about the entire GeoSpark ecosystem. Please cite this paper if your work mentions GeoSpark core system. \"GeoSparkViz: A Scalable Geospatial Data Visualization Framework in the Apache Spark Ecosystem\" is the full research paper that talks about map visualization system in GeoSpark. Please cite this paper if your work mentions GeoSpark visualization system. \"Building A Microscopic Road Network Traffic Simulator in Apache Spark\" is the full research paper that talks about the traffic simulator in GeoSpark. Please cite this paper if your work mentions GeoSparkSim traffic simulator.","title":"Key publications"},{"location":"community/publication/#third-party-evaluation","text":"GeoSpark were evaluated by papers published on database top venues. It is worth noting that we do not have any collaboration with the authors. SIGMOD 2020 paper \"Architecting a Query Compiler for Spatial Workloads\" Ruby Y. Tahboub, Tiark Rompf (Purdue University). In Figure 16a, GeoSpark distance join query runs around 7x - 9x faster than Simba, a spatial extension on Spark, on 1 - 24 core machines. PVLDB 2018 paper \"How Good Are Modern Spatial Analytics Systems?\" Varun Pandey, Andreas Kipf, Thomas Neumann, Alfons Kemper (Technical University of Munich), quoted as follows: GeoSpark comes close to a complete spatial analytics system. It also exhibits the best performance in most cases.","title":"Third-party evaluation"},{"location":"community/publication/#full-publications","text":"","title":"Full publications"},{"location":"community/publication/#geospark-ecosystem","text":"\"Spatial Data Management in Apache Spark: The GeoSpark Perspective and Beyond\" (research paper). Jia Yu, Zongsi Zhang, Mohamed Sarwat. Geoinformatica Journal 2019. \"A Demonstration of GeoSpark: A Cluster Computing Framework for Processing Big Spatial Data\" (demo paper). Jia Yu, Jinxuan Wu, Mohamed Sarwat. In Proceeding of IEEE International Conference on Data Engineering ICDE 2016, Helsinki, FI, May 2016 \"GeoSpark: A Cluster Computing Framework for Processing Large-Scale Spatial Data\" (short paper). Jia Yu, Jinxuan Wu, Mohamed Sarwat. In Proceeding of the ACM International Conference on Advances in Geographic Information Systems ACM SIGSPATIAL GIS 2015, Seattle, WA, USA November 2015","title":"GeoSpark Ecosystem"},{"location":"community/publication/#geosparkviz-visualization-system","text":"\"GeoSparkViz in Action: A Data System with built-in support for Geospatial Visualization\" (demo paper) Jia Yu, Anique Tahir, and Mohamed Sarwat. In Proceedings of the International Conference on Data Engineering, ICDE, 2019 \"GeoSparkViz: A Scalable Geospatial Data Visualization Framework in the Apache Spark Ecosystem\" (research paper). Jia Yu, Zongsi Zhang, Mohamed Sarwat. In Proceedings of the International Conference on Scientific and Statistical Database Management, SSDBM 2018, Bolzano-Bozen, Italy July 2018","title":"GeoSparkViz Visualization System"},{"location":"community/publication/#geosparksim-traffic-simulator","text":"\"Dissecting GeoSparkSim: a scalable microscopic road network traffic simulator in Apache Spark\" (journal paper) Jia Yu, Zishan Fu, Mohamed Sarwat. Distributed Parallel Databases 38(4): 963-994 (2020) \"Demonstrating GeoSparkSim: A Scalable Microscopic Road Network Traffic Simulator Based on Apache Spark\" . Zishan Fu, Jia Yu, Mohamed Sarwat. International Symposium on Spatial and Temporal Databases, SSTD, 2019 \"Building A Microscopic Road Network Traffic Simulator in Apache Spark\" (research paper) Zishan Fu, Jia Yu, and Mohamed Sarwat. In Proceedings of the International Conference on Mobile Data Management, MDM, 2019","title":"GeoSparkSim Traffic Simulator"},{"location":"community/publication/#a-tutorial-about-geospatial-data-management-in-spark","text":"\"Geospatial Data Management in Apache Spark: A Tutorial\" (Tutorial) Jia Yu and Mohamed Sarwat. In Proceedings of the International Conference on Data Engineering, ICDE, 2019","title":"A Tutorial about Geospatial Data Management in Spark"},{"location":"community/publish/","text":"Publish Sedona \u00b6 This page is for Sedona PPMC to publish Sedona releases. Obtain Write Access to Sedona GitHub repo \u00b6 Verify you have a Github ID enabled with 2FA https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/ Enter your Github ID into your Apache ID profile https://id.apache.org/ Merge your Apache and GitHub accounts using GitBox (Apache Account Linking utility): https://gitbox.apache.org/setup/ You should see 3 green checks in GitBox Wait at least 30 minutes for an email inviting you to Apache GitHub Organization and accept invitation After accepting the Github Invitation, verify that you are a member of the team https://github.com/orgs/apache/teams/sedona-committers Additionally, if you have been elected to the Sedona PPMC, verify you are part of the LDAP Sedona PPMC https://whimsy.apache.org/roster/ppmc/sedona Prepare Secret GPG key \u00b6 Install GNUGPG if it was not installed before. On Mac: brew install gnupg gnupg2 Generate a secret key. It must be RSA4096 (4096 bits long). Please follow Step 1 - 13 as listed here: https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key#generating-a-gpg-key Set up ASF username for Maven \u00b6 In your ~/.m2/settings.xml file, add the following content. Please create one if it does not exist. Please replace ASF_ID and ASF_PASSWORD with your own ASF ID and password. <settings> <servers> <server> <id>apache.snapshots.https</id> <username>YOUR_ASF_ID</username> <password>YOUR_ASF_PASSWORD</password> </server> <server> <id>apache.releases.https</id> <username>YOUR_ASF_ID</username> <password>YOUR_ASF_PASSWORD</password> </server> </servers> </settings> Publish SNAPSHOTs \u00b6 Publish Maven SNAPSHOTs \u00b6 This step is to publish the SNAPSHOTs to https://repository.apache.org The detailed requirement is on ASF Infra website Prepare for Spark 3.0 and Scala 2.12 \u00b6 Prepare the SNAPSHOTs mvn clean -Darguments=\"-DskipTests\" release:prepare -DdryRun=true -DautoVersionSubmodules=true -Dresume=false Deploy the SNAPSHOTs mvn deploy -DskipTests Prepare for Spark 2.4 and Scala 2.11 \u00b6 Prepare the SNAPSHOTs mvn clean release:prepare -DdryRun=true -DautoVersionSubmodules=true -Dresume=false -DcheckModificationExcludeList=sql/src/main/scala/org/apache/sedona/sql/UDF/UdfRegistrator.scala,sql/src/main/scala/org/apache/spark/sql/sedona_sql/strategy/join/JoinQueryDetector.scala,sql/src/main/scala/org/apache/spark/sql/sedona_sql/strategy/join/TraitJoinQueryExec.scala -Darguments=\"-DskipTests -Dscala=2.11 -Dspark=2.4\" Deploy the SNAPSHOTs mvn deploy -DskipTests -Dscala=2.11 -Dspark=2.4 Prepare for Spark 2.4 and Scala 2.12 \u00b6 Prepare the SNAPSHOTs mvn clean release:prepare -DdryRun=true -DautoVersionSubmodules=true -Dresume=false -DcheckModificationExcludeList=sql/src/main/scala/org/apache/sedona/sql/UDF/UdfRegistrator.scala,sql/src/main/scala/org/apache/spark/sql/sedona_sql/strategy/join/JoinQueryDetector.scala,sql/src/main/scala/org/apache/spark/sql/sedona_sql/strategy/join/TraitJoinQueryExec.scala -Darguments=\"-DskipTests -Dscala=2.12 -Dspark=2.4\" Deploy the SNAPSHOTs mvn deploy -DskipTests -Dscala=2.12 -Dspark=2.4 Check ASF copyright in all file headers \u00b6 Download Apache Rat binary (.jar file) . Run the following terminal script: #!/bin/bash git clone --shared --branch master https://github.com/apache/incubator-sedona.git sedona-src java -jar apache-rat-0.14.jar -d sedona-src > report.txt Read the generated report.txt file and make sure all source code files have ASF header. Delete the generated report and cloned files rm -rf sedona-src rm report.txt Note Please read the following guidelines first: 1. ASF Incubator Distribution Guidelines: https://incubator.apache.org/guides/distribution.html 2. ASF Release Guidelines: https://infra.apache.org/release-publishing.html 3. ASF Incubator Release Votes Guidelines: https://issues.apache.org/jira/browse/LEGAL-469 Publish releases \u00b6 Update mkdocs.yml \u00b6 Please change the sedona.current_version , sedona.current_rc , sedona.current_git_tag and sedona.current_snapshot in mkdocs.yml to the version you want to publish. Do NOT change sedona.next_version at this moment. Then compile the website by mkdocs serve . This will generate the scripts listed on this page in your local browser. Update Sedona Python, R and Zeppelin versions \u00b6 Make sure the Sedona version in the following files are 1.2.1-incubating. Note that: Python and R versions cannot have \"incubating\" postfix. https://github.com/apache/incubator-sedona/blob/master/python/sedona/version.py https://github.com/apache/incubator-sedona/blob/master/R/DESCRIPTION https://github.com/apache/incubator-sedona/blob/master/zeppelin/package.json Stage the Release Candidate \u00b6 This step is to stage the release to https://repository.apache.org For Spark 3.0 and Scala 2.12 \u00b6 Prepare a release. Manually enter the following variables in the terminal: release id: 1.2.1-incubating , scm tag id: sedona-1.2.1-incubating-rc1 . You also need to provide GitHub username and password three times. mvn clean release:prepare -DautoVersionSubmodules = true -Dresume = false -Darguments = \"-DskipTests\" Stage a release mvn clean release:perform -DautoVersionSubmodules = true -Dresume = false -Darguments = \"-DskipTests\" Now the releases are staged. A tag and two commits will be created on Sedona GitHub repo. Now let's repeat the process to other Sedona modules. Make sure you use the correct SCM Git tag id sedona-1.2.1-incubating-rc1 (see below). For Spark 2.4 and Scala 2.11 \u00b6 mvn org.apache.maven.plugins:maven-release-plugin:2.3.2:perform -DconnectionUrl=scm:git:https://github.com/apache/incubator-sedona.git -Dtag=sedona-1.2.1-incubating-rc1 -DautoVersionSubmodules=true -Dresume=false -Darguments=\"-DskipTests -Dscala=2.11 -Dspark=2.4\" For Spark 2.4 and Scala 2.12 \u00b6 mvn org.apache.maven.plugins:maven-release-plugin:2.3.2:perform -DconnectionUrl=scm:git:https://github.com/apache/incubator-sedona.git -Dtag=sedona-1.2.1-incubating-rc1 -DautoVersionSubmodules=true -Dresume=false -Darguments=\"-DskipTests -Dscala=2.12 -Dspark=2.4\" Upload Release Candidate \u00b6 All release candidates must be first placed in ASF Dist Dev SVN before vote: https://dist.apache.org/repos/dist/dev/incubator/sedona Make sure your armored PGP public key (must be encrypted by RSA-4096) is included in the KEYS file: https://dist.apache.org/repos/dist/dev/incubator/sedona/KEYS , and publish in major key servers: https://pgp.mit.edu/ , https://keyserver.ubuntu.com/ Create a folder on SVN, such as sedona-1.2.1-incubating-rc1 #!/bin/bash svn mkdir -m \"Adding folder\" https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1 In a folder other than the Sedona git repo, run the following script to create six files and two folders. #!/bin/bash git clone --shared --branch sedona-1.2.1-incubating-rc1 https://github.com/apache/incubator-sedona.git apache-sedona-1.2.1-incubating-src rm -rf apache-sedona-1.2.1-incubating-src/.git tar czf apache-sedona-1.2.1-incubating-src.tar.gz apache-sedona-1.2.1-incubating-src mkdir apache-sedona-1.2.1-incubating-bin cd apache-sedona-1.2.1-incubating-src && mvn clean install -DskipTests -Dscala = 2 .12 -Dspark = 3 .0 && cd .. cp apache-sedona-1.2.1-incubating-src/core/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/sql/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/viz/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/python-adapter/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/flink/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cd apache-sedona-1.2.1-incubating-src && mvn clean install -DskipTests -Dscala = 2 .11 -Dspark = 2 .4 && cd .. cp apache-sedona-1.2.1-incubating-src/core/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/sql/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/viz/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/python-adapter/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/flink/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cd apache-sedona-1.2.1-incubating-src && mvn clean install -DskipTests -Dscala = 2 .12 -Dspark = 2 .4 && cd .. cp apache-sedona-1.2.1-incubating-src/core/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/sql/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/viz/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/python-adapter/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ tar czf apache-sedona-1.2.1-incubating-bin.tar.gz apache-sedona-1.2.1-incubating-bin shasum -a 512 apache-sedona-1.2.1-incubating-src.tar.gz > apache-sedona-1.2.1-incubating-src.tar.gz.sha512 shasum -a 512 apache-sedona-1.2.1-incubating-bin.tar.gz > apache-sedona-1.2.1-incubating-bin.tar.gz.sha512 gpg -ab apache-sedona-1.2.1-incubating-src.tar.gz gpg -ab apache-sedona-1.2.1-incubating-bin.tar.gz Upload six files to SVN and delete all created files using the following script #!/bin/bash svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-src.tar.gz https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-src.tar.gz svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-src.tar.gz.asc https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-src.tar.gz.asc svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-src.tar.gz.sha512 https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-src.tar.gz.sha512 svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-bin.tar.gz https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-bin.tar.gz svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-bin.tar.gz.asc https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-bin.tar.gz.asc svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-bin.tar.gz.sha512 https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-bin.tar.gz.sha512 rm apache-sedona-1.2.1-incubating-src.tar.gz rm apache-sedona-1.2.1-incubating-src.tar.gz.asc rm apache-sedona-1.2.1-incubating-src.tar.gz.sha512 rm apache-sedona-1.2.1-incubating-bin.tar.gz rm apache-sedona-1.2.1-incubating-bin.tar.gz.asc rm apache-sedona-1.2.1-incubating-bin.tar.gz.sha512 rm -rf apache-sedona-1.2.1-incubating-src rm -rf apache-sedona-1.2.1-incubating-bin Vote in dev sedona.apache.org \u00b6 Check the status of the staging repo: Locate and Examine Your Staging Repository . You should see 12 Sedona modules in total. Call for a vote in Sedona community and Apache incubator. Then close the staging repo. The vote will be open for at least 72 hours or until at least 3 \"+1\" PMC votes are cast Here is a generated vote email. Please add changes at the end if needed: Subject: [VOTE] Release Apache Sedona 1.2.1-incubating-rc1 Hi all, This is a call for vote on Apache Sedona 1.2.1-incubating-rc1. Please refer to the changes listed at the bottom of this email. Release notes: https://github.com/apache/incubator-sedona/blob/sedona-1.2.1-incubating-rc1/docs/setup/release-notes.md Build instructions: https://github.com/apache/incubator-sedona/blob/sedona-1.2.1-incubating-rc1/docs/setup/compile.md GitHub tag: https://github.com/apache/incubator-sedona/releases/tag/sedona-1.2.1-incubating-rc1 GPG public key to verify the Release: https://downloads.apache.org/incubator/sedona/KEYS Source code and binaries: https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/ The vote will be open for at least 72 hours or until at least 3 \"+1\" PMC votes are cast Please vote accordingly: [ ] +1 approve [ ] +0 no opinion [ ] -1 disapprove with the reason Checklist for reference (because of DISCLAIMER-WIP, other checklist items are not blockers): [ ] Download links are valid. [ ] Checksums and PGP signatures are valid. [ ] DISCLAIMER is included. [ ] Source code artifacts have correct names matching the current release. For a detailed checklist please refer to: https://cwiki.apache.org/confluence/display/INCUBATOR/Incubator+Release+Checklist ------------ Changes according to the comments on the previous release Original comment (Permalink from https://lists.apache.org/list.html): Here is a generated \"pass\" email: Subject: [RESULT][VOTE] Release Apache Sedona 1.2.1-incubating-rc1 Dear all, The vote closes now as 72hr have passed. The vote PASSES with +? (binding): NAME1, NAME2, NAME3 +? (non-binding): NAME4 No -1 votes The vote thread (Permalink from https://lists.apache.org/list.html): I will now bring the vote to general@incubator.apache.org to get approval by the IPMC. If this vote passes too, the release is accepted and will be published. Vote in general incubator.apache.org \u00b6 Here is a generated vote email. Please add changes at the end if needed. The vote will be open for at least 72 hours or until at least 3 \"+1\" PMC votes are cast. Subject: [VOTE] Release Apache Sedona 1.2.1-incubating-rc1 Hi all, This is a call for vote on Apache Sedona 1.2.1-incubating-rc1. Please refer to the changes listed at the bottom of this email. Sedona Community vote thread (Permalink from https://lists.apache.org/list.html): Sedona community vote result thread (Permalink from https://lists.apache.org/list.html): Release notes: https://github.com/apache/incubator-sedona/blob/sedona-1.2.1-incubating-rc1/docs/setup/release-notes.md Build instructions: https://github.com/apache/incubator-sedona/blob/sedona-1.2.1-incubating-rc1/docs/setup/compile.md GitHub tag: https://github.com/apache/incubator-sedona/releases/tag/sedona-1.2.1-incubating-rc1 GPG public key to verify the Release: https://downloads.apache.org/incubator/sedona/KEYS Source code and binaries: https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/ The vote will be open for at least 72 hours or until at least 3 \"+1\" PMC votes are cast Please vote accordingly: [ ] +1 approve [ ] +0 no opinion [ ] -1 disapprove with the reason Checklist for reference (because of DISCLAIMER-WIP, other checklist items are not blockers): [ ] Download links are valid. [ ] Checksums and PGP signatures are valid. [ ] DISCLAIMER is included. [ ] Source code artifacts have correct names matching the current release. For a detailed checklist please refer to: https://cwiki.apache.org/confluence/display/INCUBATOR/Incubator+Release+Checklist ------------ Changes according to the comments on the previous release Original comment (Permalink from https://lists.apache.org/list.html): Here is a generated \"pass\" email: Subject: [RESULT][VOTE] Release Apache Sedona 1.2.1-incubating-rc1 Dear all, The vote closes now as 72hr have passed. The vote PASSES with +? (binding): NAME1, NAME2, NAME3 +? (non-binding): NAME4 No -1 votes The vote thread (Permalink from https://lists.apache.org/list.html): I will publish the release and make an annoucement once it is done. Here is a generated \"announce\" email. This email should be CCed to dev@sedona.apache.org : Subject: [ANNOUNCE] Apache Sedona 1.2.1-incubating released Dear all, We are happy to report that we have released Apache Sedona (incubating) 1.2.1-incubating. Thank you again for your help. Apache Sedona (incubating) is a cluster computing system for processing large-scale spatial data. Vote thread (Permalink from https://lists.apache.org/list.html): Vote result thread (Permalink from https://lists.apache.org/list.html): Website: http://sedona.apache.org/ Release notes: https://github.com/apache/incubator-sedona/blob/sedona-1.2.1-incubating/docs/setup/release-notes.md Download links: https://github.com/apache/incubator-sedona/releases/tag/sedona-1.2.1-incubating Additional resources: Get started: http://sedona.apache.org/setup/overview/ Tutorials: http://sedona.apache.org/tutorial/rdd/ Mailing list: dev@sedona.apache.org Twitter: https://twitter.com/ApacheSedona Gitter: https://gitter.im/apache/sedona Regards, Apache Sedona (incubating) Team Failed vote \u00b6 If a vote failed, please first drop the staging repo on repository.apache.org . Then redo all the steps above. Make sure you use a new scm tag for the new release candidate when use maven-release-plugin (i.e., 1.2.1-incubating-rc2 ). You can change the sedona.current_rc and sedona.current_git_tag in mkdocs.yml to generate the script listed on this webpage. Release the package \u00b6 Move all files in https://dist.apache.org/repos/dist/dev/incubator/sedona to https://dist.apache.org/repos/dist/release/incubator/sedona , using svn #!/bin/bash svn mkdir -m \"Adding folder\" https://dist.apache.org/repos/dist/release/incubator/sedona/1.2.1-incubating wget https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-src.tar.gz wget https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-src.tar.gz.asc wget https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-src.tar.gz.sha512 wget https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-bin.tar.gz wget https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-bin.tar.gz.asc wget https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-bin.tar.gz.sha512 svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-src.tar.gz https://dist.apache.org/repos/dist/release/incubator/sedona/1.2.1-incubating/apache-sedona-1.2.1-incubating-src.tar.gz svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-src.tar.gz.asc https://dist.apache.org/repos/dist/release/incubator/sedona/1.2.1-incubating/apache-sedona-1.2.1-incubating-src.tar.gz.asc svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-src.tar.gz.sha512 https://dist.apache.org/repos/dist/release/incubator/sedona/1.2.1-incubating/apache-sedona-1.2.1-incubating-src.tar.gz.sha512 svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-bin.tar.gz https://dist.apache.org/repos/dist/release/incubator/sedona/1.2.1-incubating/apache-sedona-1.2.1-incubating-bin.tar.gz svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-bin.tar.gz.asc https://dist.apache.org/repos/dist/release/incubator/sedona/1.2.1-incubating/apache-sedona-1.2.1-incubating-bin.tar.gz.asc svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-bin.tar.gz.sha512 https://dist.apache.org/repos/dist/release/incubator/sedona/1.2.1-incubating/apache-sedona-1.2.1-incubating-bin.tar.gz.sha512 rm apache-sedona-1.2.1-incubating-src.tar.gz rm apache-sedona-1.2.1-incubating-src.tar.gz.asc rm apache-sedona-1.2.1-incubating-src.tar.gz.sha512 rm apache-sedona-1.2.1-incubating-bin.tar.gz rm apache-sedona-1.2.1-incubating-bin.tar.gz.asc rm apache-sedona-1.2.1-incubating-bin.tar.gz.sha512 Add the download link to Download page and create a GitHub release. (1) Publish Python project to PyPi using twine. You must have the maintainer priviledge of https://pypi.org/project/apache-sedona/ . (2) Publish Zeppelin plugin to NPM #!/bin/bash git clone --shared --branch sedona-1.2.1-incubating-rc1 https://github.com/apache/incubator-sedona.git apache-sedona-1.2.1-incubating-src cd apache-sedona-1.2.1-incubating-src/python && python3 setup.py sdist bdist_wheel && twine upload dist/* && cd .. cd zeppelin && npm publish && cd .. rm -rf apache-sedona-1.2.1-incubating-src Publish Sedona R to CRAN. More details to be added. #!/bin/bash R CMD build . R CMD check --as-cran apache.sedona_*.tar.gz Instructions on how to submit a R package to CRAN are at the bottom of the CRAN front page , \u201cSubmitting to CRAN.\u201d Submission is now via a web form . Close the staging repo on https://repository.apache.org . If the staging repo has been automatically closed by the system, please read below. Use Maven Release Plugin directly from an existing tag \u00b6 The staging repo on repository.apache.org is usually automatically closed before the voting is closed. If so, you need to do mvn release:perform from an existing tag. Note that: you have to use org.apache.maven.plugins:maven-release-plugin:2.3.2:perform due to a bug in maven release plugin from v2.4 ( https://issues.apache.org/jira/browse/SCM-729 ). Make sure you use the correct scm tag (i.e., sedona-1.2.1-incubating-rc1 ). For Spark 3.0 and Scala 2.12 \u00b6 mvn org.apache.maven.plugins:maven-release-plugin:2.3.2:perform -DconnectionUrl=scm:git:https://github.com/apache/incubator-sedona.git -Dtag=sedona-1.2.1-incubating-rc1 -DautoVersionSubmodules=true -Dresume=false -Darguments=\"-DskipTests\" For Spark 2.4 and Scala 2.11 \u00b6 mvn org.apache.maven.plugins:maven-release-plugin:2.3.2:perform -DconnectionUrl=scm:git:https://github.com/apache/incubator-sedona.git -Dtag=sedona-1.2.1-incubating-rc1 -DautoVersionSubmodules=true -Dresume=false -Darguments=\"-DskipTests -Dscala=2.11 -Dspark=2.4\" For Spark 2.4 and Scala 2.12 \u00b6 mvn org.apache.maven.plugins:maven-release-plugin:2.3.2:perform -DconnectionUrl=scm:git:https://github.com/apache/incubator-sedona.git -Dtag=sedona-1.2.1-incubating-rc1 -DautoVersionSubmodules=true -Dresume=false -Darguments=\"-DskipTests -Dscala=2.12 -Dspark=2.4\" Fix the error when close the staged repo \u00b6 In the last step, you may see 6 errors similar to the following: typeId signature-staging failureMessage Invalid Signature: '/org/apache/sedona/sedona-python-adapter-2.4_2.12/1.2.1-incubating/sedona-python-adapter-2.4_2.12-1.2.1-incubating.pom.asc' is not a valid signature for 'sedona-python-adapter-2.4_2.12-1.2.1-incubating.pom'. failureMessage Invalid Signature: '/org/apache/sedona/sedona-python-adapter-2.4_2.11/1.2.1-incubating/sedona-python-adapter-2.4_2.11-1.2.1-incubating.pom.asc' is not a valid signature for 'sedona-python-adapter-2.4_2.11-1.2.1-incubating.pom'. failureMessage Invalid Signature: '/org/apache/sedona/sedona-python-adapter-3.0_2.12/1.2.1-incubating/sedona-python-adapter-3.0_2.12-1.2.1-incubating.pom.asc' is not a valid signature for 'sedona-python-adapter-3.0_2.12-1.2.1-incubating.pom'. failureMessage Invalid Signature: '/org/apache/sedona/sedona-viz-2.4_2.12/1.2.1-incubating/sedona-viz-2.4_2.12-1.2.1-incubating.pom.asc' is not a valid signature for 'sedona-viz-2.4_2.12-1.2.1-incubating.pom'. failureMessage Invalid Signature: '/org/apache/sedona/sedona-viz-3.0_2.12/1.2.1-incubating/sedona-viz-3.0_2.12-1.2.1-incubating.pom.asc' is not a valid signature for 'sedona-viz-3.0_2.12-1.2.1-incubating.pom'. failureMessage Invalid Signature: '/org/apache/sedona/sedona-viz-2.4_2.11/1.2.1-incubating/sedona-viz-2.4_2.11-1.2.1-incubating.pom.asc' is not a valid signature for 'sedona-viz-2.4_2.11-1.2.1-incubating.pom'. This is caused by a bug in the resolved-pom-maven-plugin in POM.xml. You will have to upload the signatures of the POM files mannualy. Please run the following script to reupload ASC files to the staging repo. Please make sure you use the correct Sedona staging repo ID, ASF username and password. #!/bin/bash username = admin password = admin123 stagingid = 1016 wget https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-core-2.4_2.11/1.2.1-incubating/sedona-core-2.4_2.11-1.2.1-incubating.pom wget https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-core-2.4_2.12/1.2.1-incubating/sedona-core-2.4_2.12-1.2.1-incubating.pom wget https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-core-3.0_2.12/1.2.1-incubating/sedona-core-3.0_2.12-1.2.1-incubating.pom wget https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-sql-2.4_2.11/1.2.1-incubating/sedona-sql-2.4_2.11-1.2.1-incubating.pom wget https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-sql-2.4_2.12/1.2.1-incubating/sedona-sql-2.4_2.12-1.2.1-incubating.pom wget https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-sql-3.0_2.12/1.2.1-incubating/sedona-sql-3.0_2.12-1.2.1-incubating.pom wget https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-viz-2.4_2.11/1.2.1-incubating/sedona-viz-2.4_2.11-1.2.1-incubating.pom wget https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-viz-2.4_2.12/1.2.1-incubating/sedona-viz-2.4_2.12-1.2.1-incubating.pom wget https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-viz-3.0_2.12/1.2.1-incubating/sedona-viz-3.0_2.12-1.2.1-incubating.pom wget https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-python-adapter-2.4_2.11/1.2.1-incubating/sedona-python-adapter-2.4_2.11-1.2.1-incubating.pom wget https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-python-adapter-2.4_2.12/1.2.1-incubating/sedona-python-adapter-2.4_2.12-1.2.1-incubating.pom wget https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-python-adapter-3.0_2.12/1.2.1-incubating/sedona-python-adapter-3.0_2.12-1.2.1-incubating.pom wget https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-flink_2.12/1.2.1-incubating/sedona-flink_2.12-1.2.1-incubating.pom wget https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-flink_2.11/1.2.1-incubating/sedona-flink_2.11-1.2.1-incubating.pom gpg -ab sedona-core-2.4_2.11-1.2.1-incubating.pom gpg -ab sedona-core-2.4_2.12-1.2.1-incubating.pom gpg -ab sedona-core-3.0_2.12-1.2.1-incubating.pom gpg -ab sedona-sql-2.4_2.11-1.2.1-incubating.pom gpg -ab sedona-sql-2.4_2.12-1.2.1-incubating.pom gpg -ab sedona-sql-3.0_2.12-1.2.1-incubating.pom gpg -ab sedona-viz-2.4_2.11-1.2.1-incubating.pom gpg -ab sedona-viz-2.4_2.12-1.2.1-incubating.pom gpg -ab sedona-viz-3.0_2.12-1.2.1-incubating.pom gpg -ab sedona-python-adapter-2.4_2.11-1.2.1-incubating.pom gpg -ab sedona-python-adapter-2.4_2.12-1.2.1-incubating.pom gpg -ab sedona-python-adapter-3.0_2.12-1.2.1-incubating.pom gpg -ab sedona-flink_2.12-1.2.1-incubating.pom gpg -ab sedona-flink_2.11-1.2.1-incubating.pom curl -v -u $username : $password --upload-file sedona-python-adapter-2.4_2.11-1.2.1-incubating.pom.asc https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-python-adapter-2.4_2.11/1.2.1-incubating/sedona-python-adapter-2.4_2.11-1.2.1-incubating.pom.asc curl -v -u $username : $password --upload-file sedona-python-adapter-2.4_2.12-1.2.1-incubating.pom.asc https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-python-adapter-2.4_2.12/1.2.1-incubating/sedona-python-adapter-2.4_2.12-1.2.1-incubating.pom.asc curl -v -u $username : $password --upload-file sedona-python-adapter-3.0_2.12-1.2.1-incubating.pom.asc https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-python-adapter-3.0_2.12/1.2.1-incubating/sedona-python-adapter-3.0_2.12-1.2.1-incubating.pom.asc curl -v -u $username : $password --upload-file sedona-viz-2.4_2.11-1.2.1-incubating.pom.asc https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-viz-2.4_2.11/1.2.1-incubating/sedona-viz-2.4_2.11-1.2.1-incubating.pom.asc curl -v -u $username : $password --upload-file sedona-viz-2.4_2.12-1.2.1-incubating.pom.asc https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-viz-2.4_2.12/1.2.1-incubating/sedona-viz-2.4_2.12-1.2.1-incubating.pom.asc curl -v -u $username : $password --upload-file sedona-viz-3.0_2.12-1.2.1-incubating.pom.asc https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-viz-3.0_2.12/1.2.1-incubating/sedona-viz-3.0_2.12-1.2.1-incubating.pom.asc curl -v -u $username : $password --upload-file sedona-core-2.4_2.11-1.2.1-incubating.pom.asc https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-core-2.4_2.11/1.2.1-incubating/sedona-core-2.4_2.11-1.2.1-incubating.pom.asc curl -v -u $username : $password --upload-file sedona-core-2.4_2.12-1.2.1-incubating.pom.asc https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-core-2.4_2.12/1.2.1-incubating/sedona-core-2.4_2.12-1.2.1-incubating.pom.asc curl -v -u $username : $password --upload-file sedona-core-3.0_2.12-1.2.1-incubating.pom.asc https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-core-3.0_2.12/1.2.1-incubating/sedona-core-3.0_2.12-1.2.1-incubating.pom.asc curl -v -u $username : $password --upload-file sedona-sql-2.4_2.11-1.2.1-incubating.pom.asc https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-sql-2.4_2.11/1.2.1-incubating/sedona-sql-2.4_2.11-1.2.1-incubating.pom.asc curl -v -u $username : $password --upload-file sedona-sql-2.4_2.12-1.2.1-incubating.pom.asc https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-sql-2.4_2.12/1.2.1-incubating/sedona-sql-2.4_2.12-1.2.1-incubating.pom.asc curl -v -u $username : $password --upload-file sedona-sql-3.0_2.12-1.2.1-incubating.pom.asc https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-sql-3.0_2.12/1.2.1-incubating/sedona-sql-3.0_2.12-1.2.1-incubating.pom.asc curl -v -u $username : $password --upload-file sedona-flink_2.12-1.2.1-incubating.pom.asc https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-flink_2.12/1.2.1-incubating/sedona-flink_2.12-1.2.1-incubating.pom.asc curl -v -u $username : $password --upload-file sedona-flink_2.11-1.2.1-incubating.pom.asc https://repository.apache.org/service/local/repositories/orgapachesedona- $stagingid /content/org/apache/sedona/sedona-flink_2.11/1.2.1-incubating/sedona-flink_2.11-1.2.1-incubating.pom.asc rm sedona-core-2.4_2.11-1.2.1-incubating.pom.asc rm sedona-core-2.4_2.12-1.2.1-incubating.pom.asc rm sedona-core-3.0_2.12-1.2.1-incubating.pom.asc rm sedona-sql-2.4_2.11-1.2.1-incubating.pom.asc rm sedona-sql-2.4_2.12-1.2.1-incubating.pom.asc rm sedona-sql-3.0_2.12-1.2.1-incubating.pom.asc rm sedona-viz-2.4_2.11-1.2.1-incubating.pom.asc rm sedona-viz-2.4_2.12-1.2.1-incubating.pom.asc rm sedona-viz-3.0_2.12-1.2.1-incubating.pom.asc rm sedona-python-adapter-2.4_2.11-1.2.1-incubating.pom.asc rm sedona-python-adapter-2.4_2.12-1.2.1-incubating.pom.asc rm sedona-python-adapter-3.0_2.12-1.2.1-incubating.pom.asc rm sedona-flink_2.12-1.2.1-incubating.pom.asc rm sedona-flink_2.11-1.2.1-incubating.pom.asc admin is your Apache ID username and admin123 is your Apache ID password. You can find the correct upload path from the web interface. Once the staging repo is closed, click \"Release\" on the web interface. Publish the doc website \u00b6 Update sedona.next_version in mkdocs.yml to the next version. Note that: the next version means the version after the version you want to release. Run mkdocs build in Sedona root directory. Copy all content in the site folder. Check out GitHub incubator-sedona-website asf-site branch Use the copied content to replace all content in asf-site branch and upload to GitHub. Then sedona.apache.org will be automatically updated. You can also push the content to asf-staging branch. The staging website will be then updated: sedona.staged.apache.org Javadoc and Scaladoc \u00b6 Compile \u00b6 You should first compile the entire docs using mkdocs build to get the site folder. Javadoc: Use Intelij IDEA to generate Javadoc for core and viz module Scaladoc: Run scaladoc -d site/api/javadoc/sql/ sql/src/main/scala/org/apache/sedona/sql/utils/*.scala Copy \u00b6 Copy the generated Javadoc (Scaladoc should already be there) to the corresponding folders in site/api/javadoc Deploy Javadoc and Scaladoc with the project website Compile R html docs \u00b6 Make sure you install R, tree and curl on your Ubuntu machine. On Mac, just do brew install tree sudo apt install littler tree libcurl4-openssl-dev In the Sedona root directory, run the script below. This will create rdocs folder in Sedona /docs/api/rdocs #!/bin/bash Rscript generate-docs.R cd ./docs/api/rdocs && tree -H '.' -L 1 --noreport --charset utf-8 -o index.html && cd ../../../","title":"Publish the code"},{"location":"community/publish/#publish-sedona","text":"This page is for Sedona PPMC to publish Sedona releases.","title":"Publish Sedona"},{"location":"community/publish/#obtain-write-access-to-sedona-github-repo","text":"Verify you have a Github ID enabled with 2FA https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/ Enter your Github ID into your Apache ID profile https://id.apache.org/ Merge your Apache and GitHub accounts using GitBox (Apache Account Linking utility): https://gitbox.apache.org/setup/ You should see 3 green checks in GitBox Wait at least 30 minutes for an email inviting you to Apache GitHub Organization and accept invitation After accepting the Github Invitation, verify that you are a member of the team https://github.com/orgs/apache/teams/sedona-committers Additionally, if you have been elected to the Sedona PPMC, verify you are part of the LDAP Sedona PPMC https://whimsy.apache.org/roster/ppmc/sedona","title":"Obtain Write Access to Sedona GitHub repo"},{"location":"community/publish/#prepare-secret-gpg-key","text":"Install GNUGPG if it was not installed before. On Mac: brew install gnupg gnupg2 Generate a secret key. It must be RSA4096 (4096 bits long). Please follow Step 1 - 13 as listed here: https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key#generating-a-gpg-key","title":"Prepare Secret GPG key"},{"location":"community/publish/#set-up-asf-username-for-maven","text":"In your ~/.m2/settings.xml file, add the following content. Please create one if it does not exist. Please replace ASF_ID and ASF_PASSWORD with your own ASF ID and password. <settings> <servers> <server> <id>apache.snapshots.https</id> <username>YOUR_ASF_ID</username> <password>YOUR_ASF_PASSWORD</password> </server> <server> <id>apache.releases.https</id> <username>YOUR_ASF_ID</username> <password>YOUR_ASF_PASSWORD</password> </server> </servers> </settings>","title":"Set up ASF username for Maven"},{"location":"community/publish/#publish-snapshots","text":"","title":"Publish SNAPSHOTs"},{"location":"community/publish/#publish-maven-snapshots","text":"This step is to publish the SNAPSHOTs to https://repository.apache.org The detailed requirement is on ASF Infra website","title":"Publish Maven SNAPSHOTs"},{"location":"community/publish/#check-asf-copyright-in-all-file-headers","text":"Download Apache Rat binary (.jar file) . Run the following terminal script: #!/bin/bash git clone --shared --branch master https://github.com/apache/incubator-sedona.git sedona-src java -jar apache-rat-0.14.jar -d sedona-src > report.txt Read the generated report.txt file and make sure all source code files have ASF header. Delete the generated report and cloned files rm -rf sedona-src rm report.txt Note Please read the following guidelines first: 1. ASF Incubator Distribution Guidelines: https://incubator.apache.org/guides/distribution.html 2. ASF Release Guidelines: https://infra.apache.org/release-publishing.html 3. ASF Incubator Release Votes Guidelines: https://issues.apache.org/jira/browse/LEGAL-469","title":"Check ASF copyright in all file headers"},{"location":"community/publish/#publish-releases","text":"","title":"Publish releases"},{"location":"community/publish/#update-mkdocsyml","text":"Please change the sedona.current_version , sedona.current_rc , sedona.current_git_tag and sedona.current_snapshot in mkdocs.yml to the version you want to publish. Do NOT change sedona.next_version at this moment. Then compile the website by mkdocs serve . This will generate the scripts listed on this page in your local browser.","title":"Update mkdocs.yml"},{"location":"community/publish/#update-sedona-python-r-and-zeppelin-versions","text":"Make sure the Sedona version in the following files are 1.2.1-incubating. Note that: Python and R versions cannot have \"incubating\" postfix. https://github.com/apache/incubator-sedona/blob/master/python/sedona/version.py https://github.com/apache/incubator-sedona/blob/master/R/DESCRIPTION https://github.com/apache/incubator-sedona/blob/master/zeppelin/package.json","title":"Update Sedona Python, R and Zeppelin versions"},{"location":"community/publish/#stage-the-release-candidate","text":"This step is to stage the release to https://repository.apache.org","title":"Stage the Release Candidate"},{"location":"community/publish/#upload-release-candidate","text":"All release candidates must be first placed in ASF Dist Dev SVN before vote: https://dist.apache.org/repos/dist/dev/incubator/sedona Make sure your armored PGP public key (must be encrypted by RSA-4096) is included in the KEYS file: https://dist.apache.org/repos/dist/dev/incubator/sedona/KEYS , and publish in major key servers: https://pgp.mit.edu/ , https://keyserver.ubuntu.com/ Create a folder on SVN, such as sedona-1.2.1-incubating-rc1 #!/bin/bash svn mkdir -m \"Adding folder\" https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1 In a folder other than the Sedona git repo, run the following script to create six files and two folders. #!/bin/bash git clone --shared --branch sedona-1.2.1-incubating-rc1 https://github.com/apache/incubator-sedona.git apache-sedona-1.2.1-incubating-src rm -rf apache-sedona-1.2.1-incubating-src/.git tar czf apache-sedona-1.2.1-incubating-src.tar.gz apache-sedona-1.2.1-incubating-src mkdir apache-sedona-1.2.1-incubating-bin cd apache-sedona-1.2.1-incubating-src && mvn clean install -DskipTests -Dscala = 2 .12 -Dspark = 3 .0 && cd .. cp apache-sedona-1.2.1-incubating-src/core/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/sql/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/viz/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/python-adapter/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/flink/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cd apache-sedona-1.2.1-incubating-src && mvn clean install -DskipTests -Dscala = 2 .11 -Dspark = 2 .4 && cd .. cp apache-sedona-1.2.1-incubating-src/core/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/sql/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/viz/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/python-adapter/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/flink/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cd apache-sedona-1.2.1-incubating-src && mvn clean install -DskipTests -Dscala = 2 .12 -Dspark = 2 .4 && cd .. cp apache-sedona-1.2.1-incubating-src/core/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/sql/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/viz/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ cp apache-sedona-1.2.1-incubating-src/python-adapter/target/sedona-*1.2.1-incubating.jar apache-sedona-1.2.1-incubating-bin/ tar czf apache-sedona-1.2.1-incubating-bin.tar.gz apache-sedona-1.2.1-incubating-bin shasum -a 512 apache-sedona-1.2.1-incubating-src.tar.gz > apache-sedona-1.2.1-incubating-src.tar.gz.sha512 shasum -a 512 apache-sedona-1.2.1-incubating-bin.tar.gz > apache-sedona-1.2.1-incubating-bin.tar.gz.sha512 gpg -ab apache-sedona-1.2.1-incubating-src.tar.gz gpg -ab apache-sedona-1.2.1-incubating-bin.tar.gz Upload six files to SVN and delete all created files using the following script #!/bin/bash svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-src.tar.gz https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-src.tar.gz svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-src.tar.gz.asc https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-src.tar.gz.asc svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-src.tar.gz.sha512 https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-src.tar.gz.sha512 svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-bin.tar.gz https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-bin.tar.gz svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-bin.tar.gz.asc https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-bin.tar.gz.asc svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-bin.tar.gz.sha512 https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-bin.tar.gz.sha512 rm apache-sedona-1.2.1-incubating-src.tar.gz rm apache-sedona-1.2.1-incubating-src.tar.gz.asc rm apache-sedona-1.2.1-incubating-src.tar.gz.sha512 rm apache-sedona-1.2.1-incubating-bin.tar.gz rm apache-sedona-1.2.1-incubating-bin.tar.gz.asc rm apache-sedona-1.2.1-incubating-bin.tar.gz.sha512 rm -rf apache-sedona-1.2.1-incubating-src rm -rf apache-sedona-1.2.1-incubating-bin","title":"Upload Release Candidate"},{"location":"community/publish/#vote-in-dev-sedonaapacheorg","text":"Check the status of the staging repo: Locate and Examine Your Staging Repository . You should see 12 Sedona modules in total. Call for a vote in Sedona community and Apache incubator. Then close the staging repo. The vote will be open for at least 72 hours or until at least 3 \"+1\" PMC votes are cast Here is a generated vote email. Please add changes at the end if needed: Subject: [VOTE] Release Apache Sedona 1.2.1-incubating-rc1 Hi all, This is a call for vote on Apache Sedona 1.2.1-incubating-rc1. Please refer to the changes listed at the bottom of this email. Release notes: https://github.com/apache/incubator-sedona/blob/sedona-1.2.1-incubating-rc1/docs/setup/release-notes.md Build instructions: https://github.com/apache/incubator-sedona/blob/sedona-1.2.1-incubating-rc1/docs/setup/compile.md GitHub tag: https://github.com/apache/incubator-sedona/releases/tag/sedona-1.2.1-incubating-rc1 GPG public key to verify the Release: https://downloads.apache.org/incubator/sedona/KEYS Source code and binaries: https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/ The vote will be open for at least 72 hours or until at least 3 \"+1\" PMC votes are cast Please vote accordingly: [ ] +1 approve [ ] +0 no opinion [ ] -1 disapprove with the reason Checklist for reference (because of DISCLAIMER-WIP, other checklist items are not blockers): [ ] Download links are valid. [ ] Checksums and PGP signatures are valid. [ ] DISCLAIMER is included. [ ] Source code artifacts have correct names matching the current release. For a detailed checklist please refer to: https://cwiki.apache.org/confluence/display/INCUBATOR/Incubator+Release+Checklist ------------ Changes according to the comments on the previous release Original comment (Permalink from https://lists.apache.org/list.html): Here is a generated \"pass\" email: Subject: [RESULT][VOTE] Release Apache Sedona 1.2.1-incubating-rc1 Dear all, The vote closes now as 72hr have passed. The vote PASSES with +? (binding): NAME1, NAME2, NAME3 +? (non-binding): NAME4 No -1 votes The vote thread (Permalink from https://lists.apache.org/list.html): I will now bring the vote to general@incubator.apache.org to get approval by the IPMC. If this vote passes too, the release is accepted and will be published.","title":"Vote in dev sedona.apache.org"},{"location":"community/publish/#vote-in-general-incubatorapacheorg","text":"Here is a generated vote email. Please add changes at the end if needed. The vote will be open for at least 72 hours or until at least 3 \"+1\" PMC votes are cast. Subject: [VOTE] Release Apache Sedona 1.2.1-incubating-rc1 Hi all, This is a call for vote on Apache Sedona 1.2.1-incubating-rc1. Please refer to the changes listed at the bottom of this email. Sedona Community vote thread (Permalink from https://lists.apache.org/list.html): Sedona community vote result thread (Permalink from https://lists.apache.org/list.html): Release notes: https://github.com/apache/incubator-sedona/blob/sedona-1.2.1-incubating-rc1/docs/setup/release-notes.md Build instructions: https://github.com/apache/incubator-sedona/blob/sedona-1.2.1-incubating-rc1/docs/setup/compile.md GitHub tag: https://github.com/apache/incubator-sedona/releases/tag/sedona-1.2.1-incubating-rc1 GPG public key to verify the Release: https://downloads.apache.org/incubator/sedona/KEYS Source code and binaries: https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/ The vote will be open for at least 72 hours or until at least 3 \"+1\" PMC votes are cast Please vote accordingly: [ ] +1 approve [ ] +0 no opinion [ ] -1 disapprove with the reason Checklist for reference (because of DISCLAIMER-WIP, other checklist items are not blockers): [ ] Download links are valid. [ ] Checksums and PGP signatures are valid. [ ] DISCLAIMER is included. [ ] Source code artifacts have correct names matching the current release. For a detailed checklist please refer to: https://cwiki.apache.org/confluence/display/INCUBATOR/Incubator+Release+Checklist ------------ Changes according to the comments on the previous release Original comment (Permalink from https://lists.apache.org/list.html): Here is a generated \"pass\" email: Subject: [RESULT][VOTE] Release Apache Sedona 1.2.1-incubating-rc1 Dear all, The vote closes now as 72hr have passed. The vote PASSES with +? (binding): NAME1, NAME2, NAME3 +? (non-binding): NAME4 No -1 votes The vote thread (Permalink from https://lists.apache.org/list.html): I will publish the release and make an annoucement once it is done. Here is a generated \"announce\" email. This email should be CCed to dev@sedona.apache.org : Subject: [ANNOUNCE] Apache Sedona 1.2.1-incubating released Dear all, We are happy to report that we have released Apache Sedona (incubating) 1.2.1-incubating. Thank you again for your help. Apache Sedona (incubating) is a cluster computing system for processing large-scale spatial data. Vote thread (Permalink from https://lists.apache.org/list.html): Vote result thread (Permalink from https://lists.apache.org/list.html): Website: http://sedona.apache.org/ Release notes: https://github.com/apache/incubator-sedona/blob/sedona-1.2.1-incubating/docs/setup/release-notes.md Download links: https://github.com/apache/incubator-sedona/releases/tag/sedona-1.2.1-incubating Additional resources: Get started: http://sedona.apache.org/setup/overview/ Tutorials: http://sedona.apache.org/tutorial/rdd/ Mailing list: dev@sedona.apache.org Twitter: https://twitter.com/ApacheSedona Gitter: https://gitter.im/apache/sedona Regards, Apache Sedona (incubating) Team","title":"Vote in general incubator.apache.org"},{"location":"community/publish/#failed-vote","text":"If a vote failed, please first drop the staging repo on repository.apache.org . Then redo all the steps above. Make sure you use a new scm tag for the new release candidate when use maven-release-plugin (i.e., 1.2.1-incubating-rc2 ). You can change the sedona.current_rc and sedona.current_git_tag in mkdocs.yml to generate the script listed on this webpage.","title":"Failed vote"},{"location":"community/publish/#release-the-package","text":"Move all files in https://dist.apache.org/repos/dist/dev/incubator/sedona to https://dist.apache.org/repos/dist/release/incubator/sedona , using svn #!/bin/bash svn mkdir -m \"Adding folder\" https://dist.apache.org/repos/dist/release/incubator/sedona/1.2.1-incubating wget https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-src.tar.gz wget https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-src.tar.gz.asc wget https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-src.tar.gz.sha512 wget https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-bin.tar.gz wget https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-bin.tar.gz.asc wget https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1-incubating-rc1/apache-sedona-1.2.1-incubating-bin.tar.gz.sha512 svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-src.tar.gz https://dist.apache.org/repos/dist/release/incubator/sedona/1.2.1-incubating/apache-sedona-1.2.1-incubating-src.tar.gz svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-src.tar.gz.asc https://dist.apache.org/repos/dist/release/incubator/sedona/1.2.1-incubating/apache-sedona-1.2.1-incubating-src.tar.gz.asc svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-src.tar.gz.sha512 https://dist.apache.org/repos/dist/release/incubator/sedona/1.2.1-incubating/apache-sedona-1.2.1-incubating-src.tar.gz.sha512 svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-bin.tar.gz https://dist.apache.org/repos/dist/release/incubator/sedona/1.2.1-incubating/apache-sedona-1.2.1-incubating-bin.tar.gz svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-bin.tar.gz.asc https://dist.apache.org/repos/dist/release/incubator/sedona/1.2.1-incubating/apache-sedona-1.2.1-incubating-bin.tar.gz.asc svn import -m \"Adding file\" apache-sedona-1.2.1-incubating-bin.tar.gz.sha512 https://dist.apache.org/repos/dist/release/incubator/sedona/1.2.1-incubating/apache-sedona-1.2.1-incubating-bin.tar.gz.sha512 rm apache-sedona-1.2.1-incubating-src.tar.gz rm apache-sedona-1.2.1-incubating-src.tar.gz.asc rm apache-sedona-1.2.1-incubating-src.tar.gz.sha512 rm apache-sedona-1.2.1-incubating-bin.tar.gz rm apache-sedona-1.2.1-incubating-bin.tar.gz.asc rm apache-sedona-1.2.1-incubating-bin.tar.gz.sha512 Add the download link to Download page and create a GitHub release. (1) Publish Python project to PyPi using twine. You must have the maintainer priviledge of https://pypi.org/project/apache-sedona/ . (2) Publish Zeppelin plugin to NPM #!/bin/bash git clone --shared --branch sedona-1.2.1-incubating-rc1 https://github.com/apache/incubator-sedona.git apache-sedona-1.2.1-incubating-src cd apache-sedona-1.2.1-incubating-src/python && python3 setup.py sdist bdist_wheel && twine upload dist/* && cd .. cd zeppelin && npm publish && cd .. rm -rf apache-sedona-1.2.1-incubating-src Publish Sedona R to CRAN. More details to be added. #!/bin/bash R CMD build . R CMD check --as-cran apache.sedona_*.tar.gz Instructions on how to submit a R package to CRAN are at the bottom of the CRAN front page , \u201cSubmitting to CRAN.\u201d Submission is now via a web form . Close the staging repo on https://repository.apache.org . If the staging repo has been automatically closed by the system, please read below.","title":"Release the package"},{"location":"community/publish/#publish-the-doc-website","text":"Update sedona.next_version in mkdocs.yml to the next version. Note that: the next version means the version after the version you want to release. Run mkdocs build in Sedona root directory. Copy all content in the site folder. Check out GitHub incubator-sedona-website asf-site branch Use the copied content to replace all content in asf-site branch and upload to GitHub. Then sedona.apache.org will be automatically updated. You can also push the content to asf-staging branch. The staging website will be then updated: sedona.staged.apache.org","title":"Publish the doc website"},{"location":"community/publish/#javadoc-and-scaladoc","text":"","title":"Javadoc and Scaladoc"},{"location":"community/publish/#compile-r-html-docs","text":"Make sure you install R, tree and curl on your Ubuntu machine. On Mac, just do brew install tree sudo apt install littler tree libcurl4-openssl-dev In the Sedona root directory, run the script below. This will create rdocs folder in Sedona /docs/api/rdocs #!/bin/bash Rscript generate-docs.R cd ./docs/api/rdocs && tree -H '.' -L 1 --noreport --charset utf-8 -o index.html && cd ../../../","title":"Compile R html docs"},{"location":"community/rule/","text":"Contributing to Apache Sedona \u00b6 The project welcomes contributions. You can contribute to Sedona code or documentation by making Pull Requests on Sedona GitHub Repo . The following sections brief the workflow of how to complete a contribution. Pick / Annouce a task using JIRA \u00b6 It is important to confirm that your contribution is acceptable. You should create a JIRA ticket or pick an existing ticket. A new JIRA ticket will be automatically sent to dev@sedona.apache.org Develop a code contribution \u00b6 Code contributions should include the following: Detailed documentations on classes and methods. Unit Tests to demonstrate code correctness and allow this to be maintained going forward. In the case of bug fixes the unit test should demonstrate the bug in the absence of the fix (if any). Unit Tests can be JUnit test or Scala test. Some Sedona functions need to be tested in both Scala and Java. Updates on corresponding Sedona documentation if necessary. Code contributions must include a Apache 2.0 license header at the top of each file. Develop a document contribution \u00b6 Documentation contributions should satisfy the following requirements: Detailed explanation with examples. Place a newly added document in a proper folder Change the mkdocs.yml if necessary Note Please read Compile the source code to learn how to compile Sedona website. Make a Pull Request \u00b6 After developing a contribution, the easiest and most visible way to submit a Pull Request (PR) to the GitHub repo . Please use the JIRA ticket ID in the PR name, such as \"[SEDONA-1] my subject\". When creating a PR, please answser the questions in the PR template. When a PR is submitted, GitHub Action will check the build correctness. Please check the PR status, and fix any reported problems. Review a Pull Request \u00b6 Every PR requires (1) at least 1 approval from a committer and (2) no disapproval from a committer. Everyone is welcome to review a PR but only the committer can make the final decision. Other reviewers, including community members and committers, may comment on the changes and suggest modifications. Changes can be added by simply pushing more commits to the same branch. Lively, polite, rapid technical debate is encouraged from everyone in the community even if the outcome may be a rejection of the entire change. Keep in mind that changes to more critical parts of Sedona, like Sedona core and spatial join algorithms, will be subjected to more review, and may require more testing and proof of its correctness than other changes. Sometimes, other changes will be merged which conflict with your pull request\u2019s changes. The PR can\u2019t be merged until the conflict is resolved. This can be resolved by resolving the conflicts by hand, then pushing the result to your branch. Code of Conduct \u00b6 Please read Apache Software Foundation Code of Conduct . We expect everyone who participates in the Apache community formally or informally, or claims any affiliation with the Foundation, in any Foundation-related activities and especially when representing the ASF in any role to honor this code of conduct.","title":"Rules"},{"location":"community/rule/#contributing-to-apache-sedona","text":"The project welcomes contributions. You can contribute to Sedona code or documentation by making Pull Requests on Sedona GitHub Repo . The following sections brief the workflow of how to complete a contribution.","title":"Contributing to Apache Sedona"},{"location":"community/rule/#pick-annouce-a-task-using-jira","text":"It is important to confirm that your contribution is acceptable. You should create a JIRA ticket or pick an existing ticket. A new JIRA ticket will be automatically sent to dev@sedona.apache.org","title":"Pick / Annouce a task using JIRA"},{"location":"community/rule/#develop-a-code-contribution","text":"Code contributions should include the following: Detailed documentations on classes and methods. Unit Tests to demonstrate code correctness and allow this to be maintained going forward. In the case of bug fixes the unit test should demonstrate the bug in the absence of the fix (if any). Unit Tests can be JUnit test or Scala test. Some Sedona functions need to be tested in both Scala and Java. Updates on corresponding Sedona documentation if necessary. Code contributions must include a Apache 2.0 license header at the top of each file.","title":"Develop a code contribution"},{"location":"community/rule/#develop-a-document-contribution","text":"Documentation contributions should satisfy the following requirements: Detailed explanation with examples. Place a newly added document in a proper folder Change the mkdocs.yml if necessary Note Please read Compile the source code to learn how to compile Sedona website.","title":"Develop a document contribution"},{"location":"community/rule/#make-a-pull-request","text":"After developing a contribution, the easiest and most visible way to submit a Pull Request (PR) to the GitHub repo . Please use the JIRA ticket ID in the PR name, such as \"[SEDONA-1] my subject\". When creating a PR, please answser the questions in the PR template. When a PR is submitted, GitHub Action will check the build correctness. Please check the PR status, and fix any reported problems.","title":"Make a Pull Request"},{"location":"community/rule/#review-a-pull-request","text":"Every PR requires (1) at least 1 approval from a committer and (2) no disapproval from a committer. Everyone is welcome to review a PR but only the committer can make the final decision. Other reviewers, including community members and committers, may comment on the changes and suggest modifications. Changes can be added by simply pushing more commits to the same branch. Lively, polite, rapid technical debate is encouraged from everyone in the community even if the outcome may be a rejection of the entire change. Keep in mind that changes to more critical parts of Sedona, like Sedona core and spatial join algorithms, will be subjected to more review, and may require more testing and proof of its correctness than other changes. Sometimes, other changes will be merged which conflict with your pull request\u2019s changes. The PR can\u2019t be merged until the conflict is resolved. This can be resolved by resolving the conflicts by hand, then pushing the result to your branch.","title":"Review a Pull Request"},{"location":"community/rule/#code-of-conduct","text":"Please read Apache Software Foundation Code of Conduct . We expect everyone who participates in the Apache community formally or informally, or claims any affiliation with the Foundation, in any Foundation-related activities and especially when representing the ASF in any role to honor this code of conduct.","title":"Code of Conduct"},{"location":"community/vote/","text":"Vote a Sedona release \u00b6 This page is for Sedona community to vote a Sedona release. The script below is tested on MacOS. In order to vote a Sedona release, you must provide your checklist inlcuding the following minimum requirement: Download links are valid Checksums and PGP signatures are valid DISCLAIMER and NOTICE are included Source code artifacts have correct names matching the current release The project can compile from the source code If you can successfully finish the steps below, you will pass the items mentioned above. Then you can vote +1 in the vote email and provide your checklist. Install necessary software \u00b6 GPG: On Mac brew install gnupg gnupg2 . You can check in a terminal gpg --version . JDK 1.8 or 1.11. Your Mac might have many different Java versions installed. You can try to use it but not sure if it can pass. You can check in a terminal java --version . Apache Maven 3.3.1+. On Mac brew install maven . You can check it in a terminal mvn -version . Python3 installed on your machine. MacOS comes with Python3 by default. You can check in a terminal python3 --version . You can skip this step if you installed these software before. Run the verify script \u00b6 Please replace SEDONA_CURRENT_RC and SEDONA_CURRENT_VERSION with the correct versions. Then paste the content in a script called verify.sh and re-direct the output to a file. To run a script, do the following: #!/bin/bash ## Change the permission of the script to executable chmod 777 verify.sh ## Run and redirect the output to a file ./verify.sh & > verify.out The content of the verify.sh script is as follows. If you copy the following content, a line break is automatically added to a long line of code. Please remove it in your local script. #!/bin/bash SEDONA_CURRENT_RC = 1 .2.1-incubating-rc1 SEDONA_CURRENT_VERSION = 1 .3.0-incubating ## Download a Sedona release wget -q https://downloads.apache.org/incubator/sedona/KEYS wget -q https://dist.apache.org/repos/dist/dev/incubator/sedona/ $SEDONA_CURRENT_RC /apache-sedona- $SEDONA_CURRENT_VERSION -src.tar.gz wget -q https://dist.apache.org/repos/dist/dev/incubator/sedona/ $SEDONA_CURRENT_RC /apache-sedona- $SEDONA_CURRENT_VERSION -src.tar.gz.asc wget -q https://dist.apache.org/repos/dist/dev/incubator/sedona/ $SEDONA_CURRENT_RC /apache-sedona- $SEDONA_CURRENT_VERSION -src.tar.gz.sha512 wget -q https://dist.apache.org/repos/dist/dev/incubator/sedona/ $SEDONA_CURRENT_RC /apache-sedona- $SEDONA_CURRENT_VERSION -bin.tar.gz wget -q https://dist.apache.org/repos/dist/dev/incubator/sedona/ $SEDONA_CURRENT_RC /apache-sedona- $SEDONA_CURRENT_VERSION -bin.tar.gz.asc wget -q https://dist.apache.org/repos/dist/dev/incubator/sedona/ $SEDONA_CURRENT_RC /apache-sedona- $SEDONA_CURRENT_VERSION -bin.tar.gz.sha512 ## Verify the signature and checksum gpg --import KEYS gpg --verify apache-sedona- $SEDONA_CURRENT_VERSION -src.tar.gz.asc gpg --verify apache-sedona- $SEDONA_CURRENT_VERSION -bin.tar.gz.asc shasum -a 512 apache-sedona- $SEDONA_CURRENT_VERSION -src.tar.gz cat apache-sedona- $SEDONA_CURRENT_VERSION -src.tar.gz.sha512 shasum -a 512 apache-sedona- $SEDONA_CURRENT_VERSION -bin.tar.gz cat apache-sedona- $SEDONA_CURRENT_VERSION -bin.tar.gz.sha512 ## Uncompress the source code folder tar -xvf apache-sedona- $SEDONA_CURRENT_VERSION -src.tar.gz ## Compile the project from source ( cd apache-sedona- $SEDONA_CURRENT_VERSION -src ; mvn clean install -DskipTests ) If successful, in the output file, you should be able to see something similar to the following text. It should include Good signature from and the final 4 lines should be two pairs of checksum matching each other. gpg: key 3A79A47AC26FF4CD: \"Jia Yu <jiayu@apache.org>\" not changed gpg: key 6C883CA80E7FD299: \"PawelKocinski <imbruced@apache.org>\" not changed gpg: Total number processed: 2 gpg: unchanged: 2 gpg: assuming signed data in 'apache-sedona-1.2.0-incubating-src.tar.gz' gpg: Signature made Mon Apr 4 11:48:31 2022 PDT gpg: using RSA key 949DD6275C69AB954B1872FC6C883CA80E7FD299 gpg: issuer \"imbruced@apache.org\" gpg: Good signature from \"PawelKocinski <imbruced@apache.org>\" [unknown] gpg: WARNING: The key's User ID is not certified with a trusted signature! gpg: There is no indication that the signature belongs to the owner. Primary key fingerprint: 949D D627 5C69 AB95 4B18 72FC 6C88 3CA8 0E7F D299 gpg: assuming signed data in 'apache-sedona-1.2.0-incubating-bin.tar.gz' gpg: Signature made Mon Apr 4 11:48:42 2022 PDT gpg: using RSA key 949DD6275C69AB954B1872FC6C883CA80E7FD299 gpg: issuer \"imbruced@apache.org\" gpg: Good signature from \"PawelKocinski <imbruced@apache.org>\" [unknown] gpg: WARNING: The key's User ID is not certified with a trusted signature! gpg: There is no indication that the signature belongs to the owner. Primary key fingerprint: 949D D627 5C69 AB95 4B18 72FC 6C88 3CA8 0E7F D299 d3bdfd4d870838ebe63f21cb93634d2421ec1ac1b8184636206a5dc0d89a78a88257798b1f17371ad3cfcc3b1eb79c69e1410afdefeb4d9b52fc8bb5ea18dd2e apache-sedona-1.2.0-incubating-src.tar.gz d3bdfd4d870838ebe63f21cb93634d2421ec1ac1b8184636206a5dc0d89a78a88257798b1f17371ad3cfcc3b1eb79c69e1410afdefeb4d9b52fc8bb5ea18dd2e apache-sedona-1.2.0-incubating-src.tar.gz 64cea38dd3ca171ee4e2a7365dbce999773862f2a11599bd0f27e9551d740659a519a9b976b3e7b0826088010967093e6acc9462f7073e9737c24b007a2df846 apache-sedona-1.2.0-incubating-bin.tar.gz 64cea38dd3ca171ee4e2a7365dbce999773862f2a11599bd0f27e9551d740659a519a9b976b3e7b0826088010967093e6acc9462f7073e9737c24b007a2df846 apache-sedona-1.2.0-incubating-bin.tar.gz At the end of the output, you should also see the BUILD SUCCESS if you can compile the source code. If this step fails, you can contact Sedona PPMC and see if this is just because of your environment. Check files manually \u00b6 Check if the downloaded files have the correct version. In the unzipped source code folder, and check if DISCLAIMER and NOTICE files and included and up to date.","title":"Vote the release"},{"location":"community/vote/#vote-a-sedona-release","text":"This page is for Sedona community to vote a Sedona release. The script below is tested on MacOS. In order to vote a Sedona release, you must provide your checklist inlcuding the following minimum requirement: Download links are valid Checksums and PGP signatures are valid DISCLAIMER and NOTICE are included Source code artifacts have correct names matching the current release The project can compile from the source code If you can successfully finish the steps below, you will pass the items mentioned above. Then you can vote +1 in the vote email and provide your checklist.","title":"Vote a Sedona release"},{"location":"community/vote/#install-necessary-software","text":"GPG: On Mac brew install gnupg gnupg2 . You can check in a terminal gpg --version . JDK 1.8 or 1.11. Your Mac might have many different Java versions installed. You can try to use it but not sure if it can pass. You can check in a terminal java --version . Apache Maven 3.3.1+. On Mac brew install maven . You can check it in a terminal mvn -version . Python3 installed on your machine. MacOS comes with Python3 by default. You can check in a terminal python3 --version . You can skip this step if you installed these software before.","title":"Install necessary software"},{"location":"community/vote/#run-the-verify-script","text":"Please replace SEDONA_CURRENT_RC and SEDONA_CURRENT_VERSION with the correct versions. Then paste the content in a script called verify.sh and re-direct the output to a file. To run a script, do the following: #!/bin/bash ## Change the permission of the script to executable chmod 777 verify.sh ## Run and redirect the output to a file ./verify.sh & > verify.out The content of the verify.sh script is as follows. If you copy the following content, a line break is automatically added to a long line of code. Please remove it in your local script. #!/bin/bash SEDONA_CURRENT_RC = 1 .2.1-incubating-rc1 SEDONA_CURRENT_VERSION = 1 .3.0-incubating ## Download a Sedona release wget -q https://downloads.apache.org/incubator/sedona/KEYS wget -q https://dist.apache.org/repos/dist/dev/incubator/sedona/ $SEDONA_CURRENT_RC /apache-sedona- $SEDONA_CURRENT_VERSION -src.tar.gz wget -q https://dist.apache.org/repos/dist/dev/incubator/sedona/ $SEDONA_CURRENT_RC /apache-sedona- $SEDONA_CURRENT_VERSION -src.tar.gz.asc wget -q https://dist.apache.org/repos/dist/dev/incubator/sedona/ $SEDONA_CURRENT_RC /apache-sedona- $SEDONA_CURRENT_VERSION -src.tar.gz.sha512 wget -q https://dist.apache.org/repos/dist/dev/incubator/sedona/ $SEDONA_CURRENT_RC /apache-sedona- $SEDONA_CURRENT_VERSION -bin.tar.gz wget -q https://dist.apache.org/repos/dist/dev/incubator/sedona/ $SEDONA_CURRENT_RC /apache-sedona- $SEDONA_CURRENT_VERSION -bin.tar.gz.asc wget -q https://dist.apache.org/repos/dist/dev/incubator/sedona/ $SEDONA_CURRENT_RC /apache-sedona- $SEDONA_CURRENT_VERSION -bin.tar.gz.sha512 ## Verify the signature and checksum gpg --import KEYS gpg --verify apache-sedona- $SEDONA_CURRENT_VERSION -src.tar.gz.asc gpg --verify apache-sedona- $SEDONA_CURRENT_VERSION -bin.tar.gz.asc shasum -a 512 apache-sedona- $SEDONA_CURRENT_VERSION -src.tar.gz cat apache-sedona- $SEDONA_CURRENT_VERSION -src.tar.gz.sha512 shasum -a 512 apache-sedona- $SEDONA_CURRENT_VERSION -bin.tar.gz cat apache-sedona- $SEDONA_CURRENT_VERSION -bin.tar.gz.sha512 ## Uncompress the source code folder tar -xvf apache-sedona- $SEDONA_CURRENT_VERSION -src.tar.gz ## Compile the project from source ( cd apache-sedona- $SEDONA_CURRENT_VERSION -src ; mvn clean install -DskipTests ) If successful, in the output file, you should be able to see something similar to the following text. It should include Good signature from and the final 4 lines should be two pairs of checksum matching each other. gpg: key 3A79A47AC26FF4CD: \"Jia Yu <jiayu@apache.org>\" not changed gpg: key 6C883CA80E7FD299: \"PawelKocinski <imbruced@apache.org>\" not changed gpg: Total number processed: 2 gpg: unchanged: 2 gpg: assuming signed data in 'apache-sedona-1.2.0-incubating-src.tar.gz' gpg: Signature made Mon Apr 4 11:48:31 2022 PDT gpg: using RSA key 949DD6275C69AB954B1872FC6C883CA80E7FD299 gpg: issuer \"imbruced@apache.org\" gpg: Good signature from \"PawelKocinski <imbruced@apache.org>\" [unknown] gpg: WARNING: The key's User ID is not certified with a trusted signature! gpg: There is no indication that the signature belongs to the owner. Primary key fingerprint: 949D D627 5C69 AB95 4B18 72FC 6C88 3CA8 0E7F D299 gpg: assuming signed data in 'apache-sedona-1.2.0-incubating-bin.tar.gz' gpg: Signature made Mon Apr 4 11:48:42 2022 PDT gpg: using RSA key 949DD6275C69AB954B1872FC6C883CA80E7FD299 gpg: issuer \"imbruced@apache.org\" gpg: Good signature from \"PawelKocinski <imbruced@apache.org>\" [unknown] gpg: WARNING: The key's User ID is not certified with a trusted signature! gpg: There is no indication that the signature belongs to the owner. Primary key fingerprint: 949D D627 5C69 AB95 4B18 72FC 6C88 3CA8 0E7F D299 d3bdfd4d870838ebe63f21cb93634d2421ec1ac1b8184636206a5dc0d89a78a88257798b1f17371ad3cfcc3b1eb79c69e1410afdefeb4d9b52fc8bb5ea18dd2e apache-sedona-1.2.0-incubating-src.tar.gz d3bdfd4d870838ebe63f21cb93634d2421ec1ac1b8184636206a5dc0d89a78a88257798b1f17371ad3cfcc3b1eb79c69e1410afdefeb4d9b52fc8bb5ea18dd2e apache-sedona-1.2.0-incubating-src.tar.gz 64cea38dd3ca171ee4e2a7365dbce999773862f2a11599bd0f27e9551d740659a519a9b976b3e7b0826088010967093e6acc9462f7073e9737c24b007a2df846 apache-sedona-1.2.0-incubating-bin.tar.gz 64cea38dd3ca171ee4e2a7365dbce999773862f2a11599bd0f27e9551d740659a519a9b976b3e7b0826088010967093e6acc9462f7073e9737c24b007a2df846 apache-sedona-1.2.0-incubating-bin.tar.gz At the end of the output, you should also see the BUILD SUCCESS if you can compile the source code. If this step fails, you can contact Sedona PPMC and see if this is just because of your environment.","title":"Run the verify script"},{"location":"community/vote/#check-files-manually","text":"Check if the downloaded files have the correct version. In the unzipped source code folder, and check if DISCLAIMER and NOTICE files and included and up to date.","title":"Check files manually"},{"location":"setup/cluster/","text":"Set up your Apache Spark cluster \u00b6 Download a Spark distribution from Spark download page . Preliminary \u00b6 Set up password-less SSH on your cluster. Each master-worker pair should have bi-directional password-less SSH. Make sure you have installed JRE 1.8 or later. Add the list of your workers' IP address in ./conf/slaves Besides the necessary Spark settings, you may need to add the following lines in Spark configuration files to avoid Sedona memory errors: In ./conf/spark-defaults.conf spark.driver.memory 10g spark.network.timeout 1000s spark.driver.maxResultSize 5g spark.driver.memory tells Spark to allocate enough memory for the driver program because Sedona needs to build global grid files (global index) on the driver program. If you have a large amount of data (normally, over 100 GB), set this parameter to 2~5 GB will be good. Otherwise, you may observe \"out of memory\" error. spark.network.timeout is the default timeout for all network interactions. Sometimes, spatial join query takes longer time to shuffle data. This will ensure Spark has enough patience to wait for the result. spark.driver.maxResultSize is the limit of total size of serialized results of all partitions for each Spark action. Sometimes, the result size of spatial queries is large. The \"Collect\" operation may throw errors. For more details of Spark parameters, please visit Spark Website . Start your cluster \u00b6 Go the root folder of the uncompressed Apache Spark folder. Start your spark cluster via a terminal ./sbin/start-all.sh","title":"Set up Spark cluser"},{"location":"setup/cluster/#set-up-your-apache-spark-cluster","text":"Download a Spark distribution from Spark download page .","title":"Set up your Apache Spark cluster"},{"location":"setup/cluster/#preliminary","text":"Set up password-less SSH on your cluster. Each master-worker pair should have bi-directional password-less SSH. Make sure you have installed JRE 1.8 or later. Add the list of your workers' IP address in ./conf/slaves Besides the necessary Spark settings, you may need to add the following lines in Spark configuration files to avoid Sedona memory errors: In ./conf/spark-defaults.conf spark.driver.memory 10g spark.network.timeout 1000s spark.driver.maxResultSize 5g spark.driver.memory tells Spark to allocate enough memory for the driver program because Sedona needs to build global grid files (global index) on the driver program. If you have a large amount of data (normally, over 100 GB), set this parameter to 2~5 GB will be good. Otherwise, you may observe \"out of memory\" error. spark.network.timeout is the default timeout for all network interactions. Sometimes, spatial join query takes longer time to shuffle data. This will ensure Spark has enough patience to wait for the result. spark.driver.maxResultSize is the limit of total size of serialized results of all partitions for each Spark action. Sometimes, the result size of spatial queries is large. The \"Collect\" operation may throw errors. For more details of Spark parameters, please visit Spark Website .","title":"Preliminary"},{"location":"setup/cluster/#start-your-cluster","text":"Go the root folder of the uncompressed Apache Spark folder. Start your spark cluster via a terminal ./sbin/start-all.sh","title":"Start your cluster"},{"location":"setup/compile/","text":"Compile Sedona source code \u00b6 Compile Scala / Java source code \u00b6 Sedona Scala/Java code is a project with four modules, core, sql, viz and python adapter. Each module is a Scala/Java mixed project which is managed by Apache Maven 3. Make sure your Linux/Mac machine has Java 1.8, Apache Maven 3.3.1+, and Python3. The compilation of Sedona is not tested on Windows machine. To compile all modules, please make sure you are in the root folder of all modules. Then enter the following command in the terminal: Without unit tests With unit tests With Geotools jars packaged mvn clean install -DskipTests This command will first delete the old binary files and compile all modules. This compilation will skip the unit tests. To compile a single module, please make sure you are in the folder of that module. Then enter the same command. mvn clean install The maven unit tests of all modules may take up to 30 minutes. mvn clean install -DskipTests -Dgeotools Geotools jars will be packaged into the produced fat jars. Note By default, this command will compile Sedona with Spark 3.0 and Scala 2.12 Compile with different targets \u00b6 Spark 3.0 + Scala 2.12 Spark 2.4 + Scala 2.11 Spark 2.4 + Scala 2.12 mvn clean install -DskipTests -Dscala=2.12 -Dspark=3.0 mvn clean install -DskipTests -Dscala=2.11 -Dspark=2.4 mvn clean install -DskipTests -Dscala=2.12 -Dspark=2.4 Tip To get the Sedona Python-adapter jar with all GeoTools jars included, simply append -Dgeotools option. The command is like this: mvn clean install -DskipTests -Dscala=2.12 -Dspark=3.0 -Dgeotools Download staged jars \u00b6 Sedona uses GitHub action to automatically generate jars per commit. You can go here and download the jars by clicking the commit's Artifacts tag. Run Python test \u00b6 Set up the environment variable SPARK_HOME and PYTHONPATH For example, export SPARK_HOME=$PWD/spark-3.0.1-bin-hadoop2.7 export PYTHONPATH=$SPARK_HOME/python 2. Compile the Sedona Scala and Java code with -Dgeotools and then copy the sedona-python-adapter-1.2.1-incubating.jar to SPARK_HOME/jars/ folder. cp python-adapter/target/sedona-python-adapter-xxx.jar SPARK_HOME/jars/ 3. Install the following libraries sudo apt-get -y install python3-pip python-dev libgeos-dev sudo pip3 install -U setuptools sudo pip3 install -U wheel sudo pip3 install -U virtualenvwrapper sudo pip3 install -U pipenv 4. Set up pipenv to the desired Python version: 3.7, 3.8, or 3.9 cd python pipenv --python 3.7 5. Install the PySpark version and other dependency cd python pipenv install pyspark==3.0.1 pipenv install --dev 6. Run the Python tests cd python pipenv run pytest tests Compile the documentation \u00b6 The website is automatically built after each commit. The built website can be downloaded here: MkDocs website \u00b6 The source code of the documentation website is written in Markdown and then compiled by MkDocs. The website is built upon Material for MkDocs template . In the Sedona repository, MkDocs configuration file mkdocs.yml is in the root folder and all documentation source code is in docs folder. To compile the source code and test the website on your local machine, please read MkDocs Tutorial and Materials for MkDocs Tutorial . In short, you need to run: pip install mkdocs pip install mkdocs-material pip install mkdocs-macros-plugin pip install mkdocs-git-revision-date-localized-plugin After installing MkDocs and MkDocs-Material, run the command in Sedona root folder: mkdocs serve","title":"Compile the code"},{"location":"setup/compile/#compile-sedona-source-code","text":"","title":"Compile Sedona source code"},{"location":"setup/compile/#compile-scala-java-source-code","text":"Sedona Scala/Java code is a project with four modules, core, sql, viz and python adapter. Each module is a Scala/Java mixed project which is managed by Apache Maven 3. Make sure your Linux/Mac machine has Java 1.8, Apache Maven 3.3.1+, and Python3. The compilation of Sedona is not tested on Windows machine. To compile all modules, please make sure you are in the root folder of all modules. Then enter the following command in the terminal: Without unit tests With unit tests With Geotools jars packaged mvn clean install -DskipTests This command will first delete the old binary files and compile all modules. This compilation will skip the unit tests. To compile a single module, please make sure you are in the folder of that module. Then enter the same command. mvn clean install The maven unit tests of all modules may take up to 30 minutes. mvn clean install -DskipTests -Dgeotools Geotools jars will be packaged into the produced fat jars. Note By default, this command will compile Sedona with Spark 3.0 and Scala 2.12","title":"Compile Scala / Java source code"},{"location":"setup/compile/#compile-with-different-targets","text":"Spark 3.0 + Scala 2.12 Spark 2.4 + Scala 2.11 Spark 2.4 + Scala 2.12 mvn clean install -DskipTests -Dscala=2.12 -Dspark=3.0 mvn clean install -DskipTests -Dscala=2.11 -Dspark=2.4 mvn clean install -DskipTests -Dscala=2.12 -Dspark=2.4 Tip To get the Sedona Python-adapter jar with all GeoTools jars included, simply append -Dgeotools option. The command is like this: mvn clean install -DskipTests -Dscala=2.12 -Dspark=3.0 -Dgeotools","title":"Compile with different targets"},{"location":"setup/compile/#download-staged-jars","text":"Sedona uses GitHub action to automatically generate jars per commit. You can go here and download the jars by clicking the commit's Artifacts tag.","title":"Download staged jars"},{"location":"setup/compile/#run-python-test","text":"Set up the environment variable SPARK_HOME and PYTHONPATH For example, export SPARK_HOME=$PWD/spark-3.0.1-bin-hadoop2.7 export PYTHONPATH=$SPARK_HOME/python 2. Compile the Sedona Scala and Java code with -Dgeotools and then copy the sedona-python-adapter-1.2.1-incubating.jar to SPARK_HOME/jars/ folder. cp python-adapter/target/sedona-python-adapter-xxx.jar SPARK_HOME/jars/ 3. Install the following libraries sudo apt-get -y install python3-pip python-dev libgeos-dev sudo pip3 install -U setuptools sudo pip3 install -U wheel sudo pip3 install -U virtualenvwrapper sudo pip3 install -U pipenv 4. Set up pipenv to the desired Python version: 3.7, 3.8, or 3.9 cd python pipenv --python 3.7 5. Install the PySpark version and other dependency cd python pipenv install pyspark==3.0.1 pipenv install --dev 6. Run the Python tests cd python pipenv run pytest tests","title":"Run Python test"},{"location":"setup/compile/#compile-the-documentation","text":"The website is automatically built after each commit. The built website can be downloaded here:","title":"Compile the documentation"},{"location":"setup/compile/#mkdocs-website","text":"The source code of the documentation website is written in Markdown and then compiled by MkDocs. The website is built upon Material for MkDocs template . In the Sedona repository, MkDocs configuration file mkdocs.yml is in the root folder and all documentation source code is in docs folder. To compile the source code and test the website on your local machine, please read MkDocs Tutorial and Materials for MkDocs Tutorial . In short, you need to run: pip install mkdocs pip install mkdocs-material pip install mkdocs-macros-plugin pip install mkdocs-git-revision-date-localized-plugin After installing MkDocs and MkDocs-Material, run the command in Sedona root folder: mkdocs serve","title":"MkDocs website"},{"location":"setup/databricks/","text":"Community edition (free-tier) \u00b6 You just need to install the Sedona jars and Sedona Python on Databricks using Databricks default web UI. Then everything will work. Advanced editions \u00b6 Sedona 1.0.1 & 1.1.0 is compiled against Spark 3.1 (~ Databricks DBR 9 LTS, DBR 7 is Spark 3.0) Sedona 1.1.1 is compiled against Spark 3.2 (~ DBR 10 & 11) In Spark 3.2, org.apache.spark.sql.catalyst.expressions.Generator class added a field nodePatterns . Any SQL functions that rely on Generator class may have issues if compiled for a runtime with a differing spark version. For Sedona, those functions are: * ST_MakeValid * ST_SubDivideExplode Sedona 1.1.1-incubating is overall the recommended version to use. It is generally backwards compatible with earlier Spark releases but you should be aware of what Spark version Sedona was compiled against versus which is being executed in case you hit issues. Databricks 10.x+ (Recommended) \u00b6 You need to use Sedona version 1.1.1-incubating or higher. In order to activate the Kryo serializer (this speeds up the serialization and deserialization of geometry types) you need to install the libraries via init script as described below. Databricks DBR 7.x - 9.x \u00b6 If you are using the commercial version of Databricks you can install the Sedona jars and Sedona Python using the Databricks default web UI. DBR 7 matches with Sedona 1.1.0-incubating and DBR 9 matches better with Sedona 1.1.1-incubating due to Databricks cherry-picking some Spark 3.2 private APIs. Install Sedona from the web UI \u00b6 1) From the Libraries tab install from Maven Coordinates org.apache.sedona:sedona-python-adapter-3.0_2.12:1.2.1-incubating org.datasyslab:geotools-wrapper:1.1.0-25.2 2) For enabling python support, from the Libraries tab install from PyPI apache-sedona 3) (Only for DBR up to 7.3 LTS) You can speed up the serialization of geometry types by adding to your spark configurations ( Cluster -> Edit -> Configuration -> Advanced options ) the following lines: spark.serializer org.apache.spark.serializer.KryoSerializer spark.kryo.registrator org.apache.sedona.core.serde.SedonaKryoRegistrator > For DBRs after 7.3, use the Init Script method described further down. Initialise \u00b6 After you have installed the libraries and started the cluster, you can initialize the Sedona ST_* functions and types by running from your code: (scala) import org . apache . sedona . sql . utils . SedonaSQLRegistrator SedonaSQLRegistrator . registerAll ( spark ) (or python) from sedona.register.geo_registrator import SedonaRegistrator SedonaRegistrator . registerAll ( spark ) Pure SQL environment \u00b6 In order to use the Sedona ST_* functions from SQL without having to register the Sedona functions from a python/scala cell, you need to install the Sedona libraries from the cluster init-scripts as follows. Install Sedona via init script (for DBRs > 7.3) \u00b6 Download the Sedona jars to a DBFS location. You can do that manually via UI or from a notebook by executing this code in a cell: %sh # Create JAR directory for Sedona mkdir -p /dbfs/FileStore/jars/sedona/1.2.1-incubating # Download the dependencies from Maven into DBFS curl -o /dbfs/FileStore/jars/sedona/1.2.1-incubating/geotools-wrapper-1.1.0-25.2.jar \"https://repo1.maven.org/maven2/org/datasyslab/geotools-wrapper/1.1.0-25.2/geotools-wrapper-1.1.0-25.2.jar\" curl -o /dbfs/FileStore/jars/sedona/1.2.1-incubating/sedona-python-adapter-3.0_2.12-1.2.1-incubating.jar \"https://repo1.maven.org/maven2/org/apache/sedona/sedona-python-adapter-3.0_2.12/1.2.1-incubating/sedona-python-adapter-3.0_2.12-1.2.1-incubating.jar\" curl -o /dbfs/FileStore/jars/sedona/1.2.1-incubating/sedona-viz-3.0_2.12-1.2.1-incubating.jar \"https://repo1.maven.org/maven2/org/apache/sedona/sedona-viz-3.0_2.12/1.2.1-incubating/sedona-viz-3.0_2.12-1.2.1-incubating.jar\" Create an init script in DBFS that loads the Sedona jars into the cluster's default jar directory. You can create that from any notebook by running: %sh # Create init script directory for Sedona mkdir -p /dbfs/FileStore/sedona/ # Create init script cat > /dbfs/FileStore/sedona/sedona-init.sh <<'EOF' #!/bin/bash # # File: sedona-init.sh # Author: Erni Durdevic # Created: 2021-11-01 # # On cluster startup, this script will copy the Sedona jars to the cluster's default jar directory. # In order to activate Sedona functions, remember to add to your spark configuration the Sedona extensions: \"spark.sql.extensions org.apache.sedona.viz.sql.SedonaVizExtensions,org.apache.sedona.sql.SedonaSqlExtensions\" cp /dbfs/FileStore/jars/sedona/1.2.1-incubating/*.jar /databricks/jars EOF From your cluster configuration ( Cluster -> Edit -> Configuration -> Advanced options -> Spark ) activate the Sedona functions and the kryo serializer by adding to the Spark Config spark.sql.extensions org.apache.sedona.viz.sql.SedonaVizExtensions,org.apache.sedona.sql.SedonaSqlExtensions spark.serializer org.apache.spark.serializer.KryoSerializer spark.kryo.registrator org.apache.sedona.core.serde.SedonaKryoRegistrator From your cluster configuration ( Cluster -> Edit -> Configuration -> Advanced options -> Init Scripts ) add the newly created init script dbfs:/FileStore/sedona/sedona-init.sh For enabling python support, from the Libraries tab install from PyPI apache-sedona Note: You need to install the Sedona libraries via init script because the libraries installed via UI are installed after the cluster has already started, and therefore the classes specified by the config spark.sql.extensions , spark.serializer , and spark.kryo.registrator are not available at startup time.","title":"Install on Databricks"},{"location":"setup/databricks/#community-edition-free-tier","text":"You just need to install the Sedona jars and Sedona Python on Databricks using Databricks default web UI. Then everything will work.","title":"Community edition (free-tier)"},{"location":"setup/databricks/#advanced-editions","text":"Sedona 1.0.1 & 1.1.0 is compiled against Spark 3.1 (~ Databricks DBR 9 LTS, DBR 7 is Spark 3.0) Sedona 1.1.1 is compiled against Spark 3.2 (~ DBR 10 & 11) In Spark 3.2, org.apache.spark.sql.catalyst.expressions.Generator class added a field nodePatterns . Any SQL functions that rely on Generator class may have issues if compiled for a runtime with a differing spark version. For Sedona, those functions are: * ST_MakeValid * ST_SubDivideExplode Sedona 1.1.1-incubating is overall the recommended version to use. It is generally backwards compatible with earlier Spark releases but you should be aware of what Spark version Sedona was compiled against versus which is being executed in case you hit issues.","title":"Advanced editions"},{"location":"setup/databricks/#install-sedona-from-the-web-ui","text":"1) From the Libraries tab install from Maven Coordinates org.apache.sedona:sedona-python-adapter-3.0_2.12:1.2.1-incubating org.datasyslab:geotools-wrapper:1.1.0-25.2 2) For enabling python support, from the Libraries tab install from PyPI apache-sedona 3) (Only for DBR up to 7.3 LTS) You can speed up the serialization of geometry types by adding to your spark configurations ( Cluster -> Edit -> Configuration -> Advanced options ) the following lines: spark.serializer org.apache.spark.serializer.KryoSerializer spark.kryo.registrator org.apache.sedona.core.serde.SedonaKryoRegistrator > For DBRs after 7.3, use the Init Script method described further down.","title":"Install Sedona from the web UI"},{"location":"setup/databricks/#initialise","text":"After you have installed the libraries and started the cluster, you can initialize the Sedona ST_* functions and types by running from your code: (scala) import org . apache . sedona . sql . utils . SedonaSQLRegistrator SedonaSQLRegistrator . registerAll ( spark ) (or python) from sedona.register.geo_registrator import SedonaRegistrator SedonaRegistrator . registerAll ( spark )","title":"Initialise"},{"location":"setup/databricks/#pure-sql-environment","text":"In order to use the Sedona ST_* functions from SQL without having to register the Sedona functions from a python/scala cell, you need to install the Sedona libraries from the cluster init-scripts as follows.","title":"Pure SQL environment"},{"location":"setup/databricks/#install-sedona-via-init-script-for-dbrs-73","text":"Download the Sedona jars to a DBFS location. You can do that manually via UI or from a notebook by executing this code in a cell: %sh # Create JAR directory for Sedona mkdir -p /dbfs/FileStore/jars/sedona/1.2.1-incubating # Download the dependencies from Maven into DBFS curl -o /dbfs/FileStore/jars/sedona/1.2.1-incubating/geotools-wrapper-1.1.0-25.2.jar \"https://repo1.maven.org/maven2/org/datasyslab/geotools-wrapper/1.1.0-25.2/geotools-wrapper-1.1.0-25.2.jar\" curl -o /dbfs/FileStore/jars/sedona/1.2.1-incubating/sedona-python-adapter-3.0_2.12-1.2.1-incubating.jar \"https://repo1.maven.org/maven2/org/apache/sedona/sedona-python-adapter-3.0_2.12/1.2.1-incubating/sedona-python-adapter-3.0_2.12-1.2.1-incubating.jar\" curl -o /dbfs/FileStore/jars/sedona/1.2.1-incubating/sedona-viz-3.0_2.12-1.2.1-incubating.jar \"https://repo1.maven.org/maven2/org/apache/sedona/sedona-viz-3.0_2.12/1.2.1-incubating/sedona-viz-3.0_2.12-1.2.1-incubating.jar\" Create an init script in DBFS that loads the Sedona jars into the cluster's default jar directory. You can create that from any notebook by running: %sh # Create init script directory for Sedona mkdir -p /dbfs/FileStore/sedona/ # Create init script cat > /dbfs/FileStore/sedona/sedona-init.sh <<'EOF' #!/bin/bash # # File: sedona-init.sh # Author: Erni Durdevic # Created: 2021-11-01 # # On cluster startup, this script will copy the Sedona jars to the cluster's default jar directory. # In order to activate Sedona functions, remember to add to your spark configuration the Sedona extensions: \"spark.sql.extensions org.apache.sedona.viz.sql.SedonaVizExtensions,org.apache.sedona.sql.SedonaSqlExtensions\" cp /dbfs/FileStore/jars/sedona/1.2.1-incubating/*.jar /databricks/jars EOF From your cluster configuration ( Cluster -> Edit -> Configuration -> Advanced options -> Spark ) activate the Sedona functions and the kryo serializer by adding to the Spark Config spark.sql.extensions org.apache.sedona.viz.sql.SedonaVizExtensions,org.apache.sedona.sql.SedonaSqlExtensions spark.serializer org.apache.spark.serializer.KryoSerializer spark.kryo.registrator org.apache.sedona.core.serde.SedonaKryoRegistrator From your cluster configuration ( Cluster -> Edit -> Configuration -> Advanced options -> Init Scripts ) add the newly created init script dbfs:/FileStore/sedona/sedona-init.sh For enabling python support, from the Libraries tab install from PyPI apache-sedona Note: You need to install the Sedona libraries via init script because the libraries installed via UI are installed after the cluster has already started, and therefore the classes specified by the config spark.sql.extensions , spark.serializer , and spark.kryo.registrator are not available at startup time.","title":"Install Sedona via init script (for DBRs &gt; 7.3)"},{"location":"setup/install-python/","text":"Click and play the interactive Sedona Python Jupyter Notebook immediately! Apache Sedona extends pyspark functions which depends on libraries: pyspark shapely attrs You need to install necessary packages if your system does not have them installed. See \"packages\" in our Pipfile . Install sedona \u00b6 Installing from PyPi repositories. You can find the latest Sedona Python on PyPi . There is an known issue in Sedona v1.0.1 and earlier versions . pip install apache-sedona Since Sedona v1.1.0, pyspark is an optional dependency of Sedona Python because spark comes pre-installed on many spark platforms. To install pyspark along with Sedona Python in one go, use the spark extra: pip install apache-sedona [ spark ] Installing from Sedona Python source Clone Sedona GitHub source code and run the following command cd python python3 setup.py install Prepare python-adapter jar \u00b6 Sedona Python needs one additional jar file called sedona-python-adapter to work properly. Please make sure you use the correct version for Spark and Scala. For Spark 3.0 + Scala 2.12, it is called sedona-python-adapter-3.0_2.12-1.2.1-incubating.jar You can get it using one of the following methods: Compile from the source within main project directory and copy it (in python-adapter/target folder) to SPARK_HOME/jars/ folder ( more details ) Download from GitHub release and copy it to SPARK_HOME/jars/ folder Call the Maven Central coordinate in your python program. For example, in PySparkSQL spark = SparkSession . \\ builder . \\ appName ( 'appName' ) . \\ config ( \"spark.serializer\" , KryoSerializer . getName ) . \\ config ( \"spark.kryo.registrator\" , SedonaKryoRegistrator . getName ) . \\ config ( 'spark.jars.packages' , 'org.apache.sedona:sedona-python-adapter-3.0_2.12:1.2.1-incubating,' 'org.datasyslab:geotools-wrapper:1.1.0-25.2' ) . \\ getOrCreate () Warning If you are going to use Sedona CRS transformation and ShapefileReader functions, you have to use Method 1 or 3. Because these functions internally use GeoTools libraries which are under LGPL license, Apache Sedona binary release cannot include them. Setup environment variables \u00b6 If you manually copy the python-adapter jar to SPARK_HOME/jars/ folder, you need to setup two environment variables SPARK_HOME. For example, run the command in your terminal export SPARK_HOME = ~/Downloads/spark-3.0.1-bin-hadoop2.7 PYTHONPATH. For example, run the command in your terminal export PYTHONPATH = $SPARK_HOME /python You can then play with Sedona Python Jupyter notebook .","title":"Install Sedona Python"},{"location":"setup/install-python/#install-sedona","text":"Installing from PyPi repositories. You can find the latest Sedona Python on PyPi . There is an known issue in Sedona v1.0.1 and earlier versions . pip install apache-sedona Since Sedona v1.1.0, pyspark is an optional dependency of Sedona Python because spark comes pre-installed on many spark platforms. To install pyspark along with Sedona Python in one go, use the spark extra: pip install apache-sedona [ spark ] Installing from Sedona Python source Clone Sedona GitHub source code and run the following command cd python python3 setup.py install","title":"Install sedona"},{"location":"setup/install-python/#prepare-python-adapter-jar","text":"Sedona Python needs one additional jar file called sedona-python-adapter to work properly. Please make sure you use the correct version for Spark and Scala. For Spark 3.0 + Scala 2.12, it is called sedona-python-adapter-3.0_2.12-1.2.1-incubating.jar You can get it using one of the following methods: Compile from the source within main project directory and copy it (in python-adapter/target folder) to SPARK_HOME/jars/ folder ( more details ) Download from GitHub release and copy it to SPARK_HOME/jars/ folder Call the Maven Central coordinate in your python program. For example, in PySparkSQL spark = SparkSession . \\ builder . \\ appName ( 'appName' ) . \\ config ( \"spark.serializer\" , KryoSerializer . getName ) . \\ config ( \"spark.kryo.registrator\" , SedonaKryoRegistrator . getName ) . \\ config ( 'spark.jars.packages' , 'org.apache.sedona:sedona-python-adapter-3.0_2.12:1.2.1-incubating,' 'org.datasyslab:geotools-wrapper:1.1.0-25.2' ) . \\ getOrCreate () Warning If you are going to use Sedona CRS transformation and ShapefileReader functions, you have to use Method 1 or 3. Because these functions internally use GeoTools libraries which are under LGPL license, Apache Sedona binary release cannot include them.","title":"Prepare python-adapter jar"},{"location":"setup/install-python/#setup-environment-variables","text":"If you manually copy the python-adapter jar to SPARK_HOME/jars/ folder, you need to setup two environment variables SPARK_HOME. For example, run the command in your terminal export SPARK_HOME = ~/Downloads/spark-3.0.1-bin-hadoop2.7 PYTHONPATH. For example, run the command in your terminal export PYTHONPATH = $SPARK_HOME /python You can then play with Sedona Python Jupyter notebook .","title":"Setup environment variables"},{"location":"setup/install-r/","text":"Introduction \u00b6 apache.sedona ( cran.r-project.org/package=apache.sedona ) is a sparklyr -based R interface for Apache Sedona . It presents what Apache Sedona has to offer through idiomatic frameworks and constructs in R (e.g., one can build spatial Spark SQL queries using Sedona UDFs in conjunction with a wide range of dplyr expressions), hence making Apache Sedona highly friendly for R users. Generally speaking, when working with Apache Sedona, one choose between the following two modes: Manipulating Sedona Spatial Resilient Distributed Datasets with spatial-RDD-related routines Querying geometric columns within Spatial dataframes with Sedona spatial UDFs While the former option enables more fine-grained control over low-level implementation details (e.g., which index to build for spatial queries, which data structure to use for spatial partitioning, etc), the latter is simpler and leads to a straightforward integration with dplyr , sparklyr , and other sparklyr extensions (e.g., one can build ML feature extractors with Sedona UDFs and connect them with ML pipelines using ml_*() family of functions in sparklyr , hence creating ML workflows capable of understanding spatial data). Because data from spatial RDDs can be imported into Spark dataframes as geometry columns and vice versa, one can switch between the abovementioned two modes fairly easily. At the moment apache.sedona consists of the following components: R interface for Spatial-RDD-related functionalities Reading/writing spatial data in WKT, WKB, and GeoJSON formats Shapefile reader Spatial partition, index, join, KNN query, and range query operations Visualization routines dplyr -integration for Sedona spatial UDTs and UDFs See SQL APIs for the list of available UDFs Functions importing data from spatial RDDs to Spark dataframes and vice versa Connect to Spark \u00b6 To ensure Sedona serialization routines, UDTs, and UDFs are properly registered when creating a Spark session, one simply needs to attach apache.sedona before instantiating a Spark conneciton. apache.sedona will take care of the rest. For example, library ( sparklyr ) library ( apache.sedona ) spark_home <- \"/usr/lib/spark\" # NOTE: replace this with your $SPARK_HOME directory sc <- spark_connect ( master = \"yarn\" , spark_home = spark_home ) will create a Sedona-capable Spark connection in YARN client mode, and library ( sparklyr ) library ( apache.sedona ) sc <- spark_connect ( master = \"local\" ) will create a Sedona-capable Spark connection to an Apache Spark instance running locally. In sparklyr , one can easily inspect the Spark connection object to sanity-check it has been properly initialized with all Sedona-related dependencies, e.g., print ( sc $ extensions $ packages ) ## [1] \"org.apache.sedona:sedona-core-3.0_2.12:1.2.1-incubating\" ## [2] \"org.apache.sedona:sedona-sql-3.0_2.12:1.2.1-incubating\" ## [3] \"org.apache.sedona:sedona-viz-3.0_2.12:1.2.1-incubating\" ## [4] \"org.datasyslab:geotools-wrapper:1.1.0-25.2\" ## [5] \"org.datasyslab:sernetcdf:0.1.0\" ## [6] \"org.locationtech.jts:jts-core:1.18.0\" ## [7] \"org.wololo:jts2geojson:0.14.3\" and spark_session ( sc ) %>% invoke ( \"%>%\" , list ( \"conf\" ), list ( \"get\" , \"spark.kryo.registrator\" )) %>% print () ## [1] \"org.apache.sedona.viz.core.Serde.SedonaVizKryoRegistrator\" For more information about connecting to Spark with sparklyr , see https://therinspark.com/connections.html and ?sparklyr::spark_connect . Also see Initiate Spark Context and Initiate Spark Session for minimum and recommended dependencies for Apache Sedona.","title":"Install Sedona R"},{"location":"setup/install-r/#introduction","text":"apache.sedona ( cran.r-project.org/package=apache.sedona ) is a sparklyr -based R interface for Apache Sedona . It presents what Apache Sedona has to offer through idiomatic frameworks and constructs in R (e.g., one can build spatial Spark SQL queries using Sedona UDFs in conjunction with a wide range of dplyr expressions), hence making Apache Sedona highly friendly for R users. Generally speaking, when working with Apache Sedona, one choose between the following two modes: Manipulating Sedona Spatial Resilient Distributed Datasets with spatial-RDD-related routines Querying geometric columns within Spatial dataframes with Sedona spatial UDFs While the former option enables more fine-grained control over low-level implementation details (e.g., which index to build for spatial queries, which data structure to use for spatial partitioning, etc), the latter is simpler and leads to a straightforward integration with dplyr , sparklyr , and other sparklyr extensions (e.g., one can build ML feature extractors with Sedona UDFs and connect them with ML pipelines using ml_*() family of functions in sparklyr , hence creating ML workflows capable of understanding spatial data). Because data from spatial RDDs can be imported into Spark dataframes as geometry columns and vice versa, one can switch between the abovementioned two modes fairly easily. At the moment apache.sedona consists of the following components: R interface for Spatial-RDD-related functionalities Reading/writing spatial data in WKT, WKB, and GeoJSON formats Shapefile reader Spatial partition, index, join, KNN query, and range query operations Visualization routines dplyr -integration for Sedona spatial UDTs and UDFs See SQL APIs for the list of available UDFs Functions importing data from spatial RDDs to Spark dataframes and vice versa","title":"Introduction"},{"location":"setup/install-r/#connect-to-spark","text":"To ensure Sedona serialization routines, UDTs, and UDFs are properly registered when creating a Spark session, one simply needs to attach apache.sedona before instantiating a Spark conneciton. apache.sedona will take care of the rest. For example, library ( sparklyr ) library ( apache.sedona ) spark_home <- \"/usr/lib/spark\" # NOTE: replace this with your $SPARK_HOME directory sc <- spark_connect ( master = \"yarn\" , spark_home = spark_home ) will create a Sedona-capable Spark connection in YARN client mode, and library ( sparklyr ) library ( apache.sedona ) sc <- spark_connect ( master = \"local\" ) will create a Sedona-capable Spark connection to an Apache Spark instance running locally. In sparklyr , one can easily inspect the Spark connection object to sanity-check it has been properly initialized with all Sedona-related dependencies, e.g., print ( sc $ extensions $ packages ) ## [1] \"org.apache.sedona:sedona-core-3.0_2.12:1.2.1-incubating\" ## [2] \"org.apache.sedona:sedona-sql-3.0_2.12:1.2.1-incubating\" ## [3] \"org.apache.sedona:sedona-viz-3.0_2.12:1.2.1-incubating\" ## [4] \"org.datasyslab:geotools-wrapper:1.1.0-25.2\" ## [5] \"org.datasyslab:sernetcdf:0.1.0\" ## [6] \"org.locationtech.jts:jts-core:1.18.0\" ## [7] \"org.wololo:jts2geojson:0.14.3\" and spark_session ( sc ) %>% invoke ( \"%>%\" , list ( \"conf\" ), list ( \"get\" , \"spark.kryo.registrator\" )) %>% print () ## [1] \"org.apache.sedona.viz.core.Serde.SedonaVizKryoRegistrator\" For more information about connecting to Spark with sparklyr , see https://therinspark.com/connections.html and ?sparklyr::spark_connect . Also see Initiate Spark Context and Initiate Spark Session for minimum and recommended dependencies for Apache Sedona.","title":"Connect to Spark"},{"location":"setup/install-scala/","text":"Before starting the Sedona journey, you need to make sure your Apache Spark cluster is ready. There are two ways to use a Scala or Java library with Apache Spark. You can user either one to run Sedona. Spark interactive Scala or SQL shell: easy to start, good for new learners to try simple functions Self-contained Scala / Java project: a steep learning curve of package management, but good for large projects Spark Scala shell \u00b6 Download Sedona jar automatically \u00b6 Have your Spark cluster ready. Run Spark shell with --packages option. This command will automatically download Sedona jars from Maven Central. ./bin/spark-shell --packages MavenCoordiantes Local mode: test Sedona without setting up a cluster ./bin/spark-shell --packages org.apache.sedona:sedona-python-adapter-3.0_2.12:1.2.1-incubating,org.apache.sedona:sedona-viz-3.0_2.12:1.2.1-incubating,org.datasyslab:geotools-wrapper:1.1.0-25.2 Cluster mode: you need to specify Spark Master IP ./bin/spark-shell --master spark://localhost:7077 --packages org.apache.sedona:sedona-python-adapter-3.0_2.12:1.2.1-incubating,org.apache.sedona:sedona-viz-3.0_2.12:1.2.1-incubating,org.datasyslab:geotools-wrapper:1.1.0-25.2 Download Sedona jar manually \u00b6 Have your Spark cluster ready. Download Sedona jars: Download the pre-compiled jars from Sedona Releases Download / Git clone Sedona source code and compile the code by yourself (see Compile Sedona ) Run Spark shell with --jars option. ./bin/spark-shell --jars /Path/To/SedonaJars.jar Local mode: test Sedona without setting up a cluster ./bin/spark-shell --jars org.apache.sedona:sedona-python-adapter-3.0_2.12:1.2.1-incubating,org.apache.sedona:sedona-viz-3.0_2.12:1.2.1-incubating,org.datasyslab:geotools-wrapper:1.1.0-25.2 Cluster mode: you need to specify Spark Master IP ./bin/spark-shell --master spark://localhost:7077 --jars org.apache.sedona:sedona-python-adapter-3.0_2.12:1.2.1-incubating,org.apache.sedona:sedona-viz-3.0_2.12:1.2.1-incubating,org.datasyslab:geotools-wrapper:1.1.0-25.2 Spark SQL shell \u00b6 Please see Use Sedona in a pure SQL environment Self-contained Spark projects \u00b6 A self-contained project allows you to create multiple Scala / Java files and write complex logics in one place. To use Sedona in your self-contained Spark project, you just need to add Sedona as a dependency in your POM.xml or build.sbt. To add Sedona as dependencies, please read Sedona Maven Central coordinates Use Sedona Template project to start: Sedona Template Project Compile your project using SBT. Make sure you obtain the fat jar which packages all dependencies. Submit your compiled fat jar to Spark cluster. Make sure you are in the root folder of Spark distribution. Then run the following command: ./bin/spark-submit --master spark://YOUR-IP:7077 /Path/To/YourJar.jar Note The detailed explanation of spark-submit is available on Spark website .","title":"Install Sedona Scala/Java"},{"location":"setup/install-scala/#spark-scala-shell","text":"","title":"Spark Scala shell"},{"location":"setup/install-scala/#download-sedona-jar-automatically","text":"Have your Spark cluster ready. Run Spark shell with --packages option. This command will automatically download Sedona jars from Maven Central. ./bin/spark-shell --packages MavenCoordiantes Local mode: test Sedona without setting up a cluster ./bin/spark-shell --packages org.apache.sedona:sedona-python-adapter-3.0_2.12:1.2.1-incubating,org.apache.sedona:sedona-viz-3.0_2.12:1.2.1-incubating,org.datasyslab:geotools-wrapper:1.1.0-25.2 Cluster mode: you need to specify Spark Master IP ./bin/spark-shell --master spark://localhost:7077 --packages org.apache.sedona:sedona-python-adapter-3.0_2.12:1.2.1-incubating,org.apache.sedona:sedona-viz-3.0_2.12:1.2.1-incubating,org.datasyslab:geotools-wrapper:1.1.0-25.2","title":"Download Sedona jar automatically"},{"location":"setup/install-scala/#download-sedona-jar-manually","text":"Have your Spark cluster ready. Download Sedona jars: Download the pre-compiled jars from Sedona Releases Download / Git clone Sedona source code and compile the code by yourself (see Compile Sedona ) Run Spark shell with --jars option. ./bin/spark-shell --jars /Path/To/SedonaJars.jar Local mode: test Sedona without setting up a cluster ./bin/spark-shell --jars org.apache.sedona:sedona-python-adapter-3.0_2.12:1.2.1-incubating,org.apache.sedona:sedona-viz-3.0_2.12:1.2.1-incubating,org.datasyslab:geotools-wrapper:1.1.0-25.2 Cluster mode: you need to specify Spark Master IP ./bin/spark-shell --master spark://localhost:7077 --jars org.apache.sedona:sedona-python-adapter-3.0_2.12:1.2.1-incubating,org.apache.sedona:sedona-viz-3.0_2.12:1.2.1-incubating,org.datasyslab:geotools-wrapper:1.1.0-25.2","title":"Download Sedona jar manually"},{"location":"setup/install-scala/#spark-sql-shell","text":"Please see Use Sedona in a pure SQL environment","title":"Spark SQL shell"},{"location":"setup/install-scala/#self-contained-spark-projects","text":"A self-contained project allows you to create multiple Scala / Java files and write complex logics in one place. To use Sedona in your self-contained Spark project, you just need to add Sedona as a dependency in your POM.xml or build.sbt. To add Sedona as dependencies, please read Sedona Maven Central coordinates Use Sedona Template project to start: Sedona Template Project Compile your project using SBT. Make sure you obtain the fat jar which packages all dependencies. Submit your compiled fat jar to Spark cluster. Make sure you are in the root folder of Spark distribution. Then run the following command: ./bin/spark-submit --master spark://YOUR-IP:7077 /Path/To/YourJar.jar Note The detailed explanation of spark-submit is available on Spark website .","title":"Self-contained Spark projects"},{"location":"setup/maven-coordinates/","text":"Maven Coordinates \u00b6 Sedona Spark has four modules: sedona-core, sedona-sql, sedona-viz, sedona-python-adapter . sedona-python-adapter is a fat jar of sedona-core, sedona-sql and python adapter code. If you want to use SedonaViz, you will include one more jar: sedona-viz . Sedona Flink has four modules : sedona-core, sedona-sql, sedona-python-adapter, sedona-flink . sedona-python-adapter is a fat jar of sedona-core, sedona-sql . Use Sedona fat jars \u00b6 Warning For Scala/Java/Python/R users, this is the most common way to use Sedona in your environment. Do not use separate Sedona jars othwerwise you will get dependency conflicts. sedona-python-adapter already contains all you need. The optional GeoTools library is required only if you want to use CRS transformation and ShapefileReader. This wrapper library is a re-distriution of GeoTools official jars. The only purpose of this library is to bring GeoTools jars from OSGEO repository to Maven Central. This libary is under GNU Lesser General Public License (LGPL) license so we cannot package it in Sedona official release. Sedona with Apache Spark Spark 3.0+ and Scala 2.12 Spark 2.4 and Scala 2.11 Spark 2.4 and Scala 2.12 <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-python-adapter-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-viz-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <!-- Optional: https://mvnrepository.com/artifact/org.datasyslab/geotools-wrapper --> <dependency> <groupId> org.datasyslab </groupId> <artifactId> geotools-wrapper </artifactId> <version> 1.1.0-25.2 </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-python-adapter-2.4_2.11 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-viz-2.4_2.11 </artifactId> <version> 1.2.1-incubating </version> </dependency> <!-- Optional: https://mvnrepository.com/artifact/org.datasyslab/geotools-wrapper --> <dependency> <groupId> org.datasyslab </groupId> <artifactId> geotools-wrapper </artifactId> <version> 1.1.0-25.2 </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-python-adapter-2.4_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-viz-2.4_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <!-- Optional: https://mvnrepository.com/artifact/org.datasyslab/geotools-wrapper --> <dependency> <groupId> org.datasyslab </groupId> <artifactId> geotools-wrapper </artifactId> <version> 1.1.0-25.2 </version> </dependency> Sedona with Apache Flink Flink 1.12+ and Scala 2.12 Flink 1.12+ and Scala 2.11 <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-python-adapter-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-flink_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <!-- Optional: https://mvnrepository.com/artifact/org.datasyslab/geotools-wrapper --> <dependency> <groupId> org.datasyslab </groupId> <artifactId> geotools-wrapper </artifactId> <version> 1.1.0-25.2 </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-python-adapter-3.0_2.11 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-flink_2.11 </artifactId> <version> 1.2.1-incubating </version> </dependency> <!-- Optional: https://mvnrepository.com/artifact/org.datasyslab/geotools-wrapper --> <dependency> <groupId> org.datasyslab </groupId> <artifactId> geotools-wrapper </artifactId> <version> 1.1.0-25.2 </version> </dependency> SernetCDF 0.1.0 \u00b6 For Scala / Java API, it is required only if you want to read HDF/NetCDF files. HDF/NetCDF function is currently not supported in Sedona Python. Under Apache License 2.0. <!-- https://mvnrepository.com/artifact/org.datasyslab/sernetcdf --> <dependency> <groupId> org.datasyslab </groupId> <artifactId> sernetcdf </artifactId> <version> 0.1.0 </version> </dependency> Use Sedona and third-party jars separately \u00b6 For Scala and Java users , if by any chance you don't want to use an uber jar that includes every dependency, you can use the following jars instead. Otherwise, please do not continue reading this section. Sedona with Apache Spark Spark 3.0+ and Scala 2.12 Spark 2.4 and Scala 2.11 Spark 2.4 and Scala 2.12 <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-core-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-sql-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-viz-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-core-2.4_2.11 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-sql-2.4_2.11 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-viz-2.4_2.11 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-core-2.4_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-sql-2.4_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-viz-2.4_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> Sedona with Apache Flink Flink 1.12+ and Scala 2.12 <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-core-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-sql-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-flink-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> LocationTech JTS-core 1.18.0+ \u00b6 Under Eclipse Public License 2.0 (\"EPL\") or the Eclipse Distribution License 1.0 (a BSD Style License) <!-- https://mvnrepository.com/artifact/org.locationtech.jts/jts-core --> <dependency> <groupId> org.locationtech.jts </groupId> <artifactId> jts-core </artifactId> <version> 1.18.0 </version> </dependency> jts2geojson 0.16.1+ \u00b6 Under MIT License. Please make sure you exclude jts and jackson from this library. <!-- https://mvnrepository.com/artifact/org.wololo/jts2geojson --> <dependency> <groupId> org.wololo </groupId> <artifactId> jts2geojson </artifactId> <version> 0.16.1 </version> <exclusions> <exclusion> <groupId> org.locationtech.jts </groupId> <artifactId> jts-core </artifactId> </exclusion> <exclusion> <groupId> com.fasterxml.jackson.core </groupId> <artifactId> * </artifactId> </exclusion> </exclusions> </dependency> GeoTools 24.0+ \u00b6 GeoTools library is required only if you want to use CRS transformation and ShapefileReader. This wrapper library is a re-distriution of GeoTools official jars. The only purpose of this library is to bring GeoTools jars from OSGEO repository to Maven Central. This libary is under GNU Lesser General Public License (LGPL) license so we cannot package it in Sedona official release. <!-- https://mvnrepository.com/artifact/org.datasyslab/geotools-wrapper --> <dependency> <groupId> org.datasyslab </groupId> <artifactId> geotools-wrapper </artifactId> <version> 1.1.0-25.2 </version> </dependency> SernetCDF 0.1.0 \u00b6 For Scala / Java API: required if you want to read HDF files. Under Apache License 2.0. <!-- https://mvnrepository.com/artifact/org.datasyslab/sernetcdf --> <dependency> <groupId> org.datasyslab </groupId> <artifactId> sernetcdf </artifactId> <version> 0.1.0 </version> </dependency> SNAPSHOT versions \u00b6 Sometimes Sedona has a SNAPSHOT version for the upcoming release. It follows the same naming conversion but has \"SNAPSHOT\" as suffix in the version. For example, 1.2.1-incubating-SNAPSHOT In order to download SNAPSHOTs, you need to add the following repositories in your POM.XML or build.sbt build.sbt \u00b6 resolvers += \"Apache Software Foundation Snapshots\" at \" https://repository.apache.org/content/groups/snapshots \" POM.XML \u00b6 <repositories> <repository> <id> snapshots-repo </id> <url> https://repository.apache.org/content/groups/snapshots </url> <releases><enabled> false </enabled></releases> <snapshots><enabled> true </enabled></snapshots> </repository> </repositories>","title":"Maven Central coordinate"},{"location":"setup/maven-coordinates/#maven-coordinates","text":"Sedona Spark has four modules: sedona-core, sedona-sql, sedona-viz, sedona-python-adapter . sedona-python-adapter is a fat jar of sedona-core, sedona-sql and python adapter code. If you want to use SedonaViz, you will include one more jar: sedona-viz . Sedona Flink has four modules : sedona-core, sedona-sql, sedona-python-adapter, sedona-flink . sedona-python-adapter is a fat jar of sedona-core, sedona-sql .","title":"Maven Coordinates"},{"location":"setup/maven-coordinates/#use-sedona-fat-jars","text":"Warning For Scala/Java/Python/R users, this is the most common way to use Sedona in your environment. Do not use separate Sedona jars othwerwise you will get dependency conflicts. sedona-python-adapter already contains all you need. The optional GeoTools library is required only if you want to use CRS transformation and ShapefileReader. This wrapper library is a re-distriution of GeoTools official jars. The only purpose of this library is to bring GeoTools jars from OSGEO repository to Maven Central. This libary is under GNU Lesser General Public License (LGPL) license so we cannot package it in Sedona official release. Sedona with Apache Spark Spark 3.0+ and Scala 2.12 Spark 2.4 and Scala 2.11 Spark 2.4 and Scala 2.12 <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-python-adapter-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-viz-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <!-- Optional: https://mvnrepository.com/artifact/org.datasyslab/geotools-wrapper --> <dependency> <groupId> org.datasyslab </groupId> <artifactId> geotools-wrapper </artifactId> <version> 1.1.0-25.2 </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-python-adapter-2.4_2.11 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-viz-2.4_2.11 </artifactId> <version> 1.2.1-incubating </version> </dependency> <!-- Optional: https://mvnrepository.com/artifact/org.datasyslab/geotools-wrapper --> <dependency> <groupId> org.datasyslab </groupId> <artifactId> geotools-wrapper </artifactId> <version> 1.1.0-25.2 </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-python-adapter-2.4_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-viz-2.4_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <!-- Optional: https://mvnrepository.com/artifact/org.datasyslab/geotools-wrapper --> <dependency> <groupId> org.datasyslab </groupId> <artifactId> geotools-wrapper </artifactId> <version> 1.1.0-25.2 </version> </dependency> Sedona with Apache Flink Flink 1.12+ and Scala 2.12 Flink 1.12+ and Scala 2.11 <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-python-adapter-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-flink_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <!-- Optional: https://mvnrepository.com/artifact/org.datasyslab/geotools-wrapper --> <dependency> <groupId> org.datasyslab </groupId> <artifactId> geotools-wrapper </artifactId> <version> 1.1.0-25.2 </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-python-adapter-3.0_2.11 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-flink_2.11 </artifactId> <version> 1.2.1-incubating </version> </dependency> <!-- Optional: https://mvnrepository.com/artifact/org.datasyslab/geotools-wrapper --> <dependency> <groupId> org.datasyslab </groupId> <artifactId> geotools-wrapper </artifactId> <version> 1.1.0-25.2 </version> </dependency>","title":"Use Sedona fat jars"},{"location":"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately","text":"For Scala and Java users , if by any chance you don't want to use an uber jar that includes every dependency, you can use the following jars instead. Otherwise, please do not continue reading this section. Sedona with Apache Spark Spark 3.0+ and Scala 2.12 Spark 2.4 and Scala 2.11 Spark 2.4 and Scala 2.12 <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-core-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-sql-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-viz-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-core-2.4_2.11 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-sql-2.4_2.11 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-viz-2.4_2.11 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-core-2.4_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-sql-2.4_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-viz-2.4_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> Sedona with Apache Flink Flink 1.12+ and Scala 2.12 <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-core-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-sql-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency> <dependency> <groupId> org.apache.sedona </groupId> <artifactId> sedona-flink-3.0_2.12 </artifactId> <version> 1.2.1-incubating </version> </dependency>","title":"Use Sedona and third-party jars separately"},{"location":"setup/maven-coordinates/#locationtech-jts-core-1180","text":"Under Eclipse Public License 2.0 (\"EPL\") or the Eclipse Distribution License 1.0 (a BSD Style License) <!-- https://mvnrepository.com/artifact/org.locationtech.jts/jts-core --> <dependency> <groupId> org.locationtech.jts </groupId> <artifactId> jts-core </artifactId> <version> 1.18.0 </version> </dependency>","title":"LocationTech JTS-core 1.18.0+"},{"location":"setup/maven-coordinates/#jts2geojson-0161","text":"Under MIT License. Please make sure you exclude jts and jackson from this library. <!-- https://mvnrepository.com/artifact/org.wololo/jts2geojson --> <dependency> <groupId> org.wololo </groupId> <artifactId> jts2geojson </artifactId> <version> 0.16.1 </version> <exclusions> <exclusion> <groupId> org.locationtech.jts </groupId> <artifactId> jts-core </artifactId> </exclusion> <exclusion> <groupId> com.fasterxml.jackson.core </groupId> <artifactId> * </artifactId> </exclusion> </exclusions> </dependency>","title":"jts2geojson 0.16.1+"},{"location":"setup/maven-coordinates/#geotools-240","text":"GeoTools library is required only if you want to use CRS transformation and ShapefileReader. This wrapper library is a re-distriution of GeoTools official jars. The only purpose of this library is to bring GeoTools jars from OSGEO repository to Maven Central. This libary is under GNU Lesser General Public License (LGPL) license so we cannot package it in Sedona official release. <!-- https://mvnrepository.com/artifact/org.datasyslab/geotools-wrapper --> <dependency> <groupId> org.datasyslab </groupId> <artifactId> geotools-wrapper </artifactId> <version> 1.1.0-25.2 </version> </dependency>","title":"GeoTools 24.0+"},{"location":"setup/maven-coordinates/#sernetcdf-010_1","text":"For Scala / Java API: required if you want to read HDF files. Under Apache License 2.0. <!-- https://mvnrepository.com/artifact/org.datasyslab/sernetcdf --> <dependency> <groupId> org.datasyslab </groupId> <artifactId> sernetcdf </artifactId> <version> 0.1.0 </version> </dependency>","title":"SernetCDF 0.1.0"},{"location":"setup/maven-coordinates/#snapshot-versions","text":"Sometimes Sedona has a SNAPSHOT version for the upcoming release. It follows the same naming conversion but has \"SNAPSHOT\" as suffix in the version. For example, 1.2.1-incubating-SNAPSHOT In order to download SNAPSHOTs, you need to add the following repositories in your POM.XML or build.sbt","title":"SNAPSHOT versions"},{"location":"setup/maven-coordinates/#buildsbt","text":"resolvers += \"Apache Software Foundation Snapshots\" at \" https://repository.apache.org/content/groups/snapshots \"","title":"build.sbt"},{"location":"setup/maven-coordinates/#pomxml","text":"<repositories> <repository> <id> snapshots-repo </id> <url> https://repository.apache.org/content/groups/snapshots </url> <releases><enabled> false </enabled></releases> <snapshots><enabled> true </enabled></snapshots> </repository> </repositories>","title":"POM.XML"},{"location":"setup/modules/","text":"Sedona modules for Apache Spark \u00b6 Name API Introduction Core RDD SpatialRDDs and Query Operators. SQL SQL/DataFrame SQL interfaces for Sedona core. Viz RDD, SQL/DataFrame Visualization for Spatial RDD and DataFrame Zeppelin Apache Zeppelin Plugin for Apache Zeppelin 0.8.1+ API availability \u00b6 Core/RDD DataFrame/SQL Viz RDD/SQL Scala/Java \u2705 \u2705 \u2705 Python \u2705 \u2705 SQL only R \u2705 \u2705 \u2705","title":"Modules"},{"location":"setup/modules/#sedona-modules-for-apache-spark","text":"Name API Introduction Core RDD SpatialRDDs and Query Operators. SQL SQL/DataFrame SQL interfaces for Sedona core. Viz RDD, SQL/DataFrame Visualization for Spatial RDD and DataFrame Zeppelin Apache Zeppelin Plugin for Apache Zeppelin 0.8.1+","title":"Sedona modules for Apache Spark"},{"location":"setup/modules/#api-availability","text":"Core/RDD DataFrame/SQL Viz RDD/SQL Scala/Java \u2705 \u2705 \u2705 Python \u2705 \u2705 SQL only R \u2705 \u2705 \u2705","title":"API availability"},{"location":"setup/overview/","text":"Download statistics \u00b6 Maven PyPI CRAN Apache Sedona 80k/month Archived GeoSpark releases 300k/month What can Sedona do? \u00b6 Distributed spatial datasets \u00b6 Spatial RDD on Spark Spatial DataFrame/SQL on Spark Spatial DataStream on Flink Spatial Table/SQL on Flink Complex spatial objects \u00b6 Vector geometries / trajectories Raster images with Map Algebra Various input formats: CSV, TSV, WKT, WKB, GeoJSON, Shapefile, GeoTIFF, NetCDF/HDF Distributed spatial queries \u00b6 Spatial query: range query, range join query, distance join query, K Nearest Neighbor query Spatial index: R-Tree, Quad-Tree Rich spatial analytics tools \u00b6 Coordinate Reference System / Spatial Reference System Transformation High resolution map generation: Visualize Spatial DataFrame/RDD Apache Zeppelin integration Support Scala, Java, Python, R","title":"Overview"},{"location":"setup/overview/#download-statistics","text":"Maven PyPI CRAN Apache Sedona 80k/month Archived GeoSpark releases 300k/month","title":"Download statistics"},{"location":"setup/overview/#what-can-sedona-do","text":"","title":"What can Sedona do?"},{"location":"setup/overview/#distributed-spatial-datasets","text":"Spatial RDD on Spark Spatial DataFrame/SQL on Spark Spatial DataStream on Flink Spatial Table/SQL on Flink","title":"Distributed spatial datasets"},{"location":"setup/overview/#complex-spatial-objects","text":"Vector geometries / trajectories Raster images with Map Algebra Various input formats: CSV, TSV, WKT, WKB, GeoJSON, Shapefile, GeoTIFF, NetCDF/HDF","title":"Complex spatial objects"},{"location":"setup/overview/#distributed-spatial-queries","text":"Spatial query: range query, range join query, distance join query, K Nearest Neighbor query Spatial index: R-Tree, Quad-Tree","title":"Distributed spatial queries"},{"location":"setup/overview/#rich-spatial-analytics-tools","text":"Coordinate Reference System / Spatial Reference System Transformation High resolution map generation: Visualize Spatial DataFrame/RDD Apache Zeppelin integration Support Scala, Java, Python, R","title":"Rich spatial analytics tools"},{"location":"setup/platform/","text":"Sedona binary releases are compiled by Java 1.8 and Scala 2.11/2.12 and tested in the following environments: Warning Support of Spark 2.X and Scala 2.11 will be removed in Sedona 1.3.0+ although some parts of the source code might still be compatible. Sedona 1.3.0+ will release binary for both Scala 2.12 and 2.13. Sedona Scala/Java Sedona Python Sedona R Spark 2.4 Spark 3.0 Spark 3.1 Spark 3.2 Spark 3.3 Scala 2.11 \u2705 not tested not tested not tested not tested Scala 2.12 \u2705 \u2705 \u2705 \u2705 \u2705 Scala 2.13 not tested not tested not tested \u2705 but no release \u2705 but no release Spark 2.4 (Scala 2.11) Spark 3.0 (Scala 2.12) Spark 3.1 (Scala 2.12) Spark 3.2 (Scala 2.12) Spark 3.3 (Scala 2.12) Python 3.7 \u2705 \u2705 \u2705 \u2705 \u2705 Python 3.8 not tested not tested not tested not tested \u2705 Python 3.9 not tested not tested not tested not tested \u2705 Python 3.10 not tested not tested not tested not tested \u2705 Spark 2.4 Spark 3.0 Spark 3.1 Spark 3.2 Spark 3.3 Scala 2.11 \u2705 not tested not tested not tested not tested Scala 2.12 not tested \u2705 \u2705 \u2705 \u2705","title":"Language wrappers"},{"location":"setup/release-notes/","text":"Warning Support of Spark 2.X and Scala 2.11 will be removed in Sedona 1.3.0+ although some parts of the source code might still be compatible. Sedona 1.3.0+ will release binary for both Scala 2.12 and 2.13. Sedona 1.2.1 \u00b6 This version is a maintenance release on Sedona 1.2.0 line. It includes bug fixes. Sedona on Spark is now compiled against Spark 3.3, instead of Spark 2.2. SQL (for Spark) \u00b6 Bug fixes: SEDONA-104 : Bug in reading band values of GeoTiff images SEDONA-118 : Fix the wrong result in ST_Within SEDONA-123 : Fix the check for invalid lat/lon in ST_GeoHash Improvement: SEDONA-96 : Refactor ST_MakeValid to use GeometryFixer SEDONA-108 : Write support for GeoTiff images SEDONA-122 : Overload ST_GeomFromWKB for BYTES column SEDONA-127 : Add null safety to ST_GeomFromWKT/WKB/Text SEDONA-129 : Support Spark 3.3 SEDONA-135 : Consolidate and upgrade hadoop dependency New features: SEDONA-107 : Add St_Reverse function SEDONA-105 : Add ST_PointOnSurface function SEDONA-95 : Add ST_Disjoint predicate SEDONA-112 : Add ST_AsEWKT SEDONA-106 : Add ST_LineFromText SEDONA-117 : Add RS_AppendNormalizedDifference SEDONA-97 : Add ST_Force_2D SEDONA-98 : Add ST_IsEmpty SEDONA-116 : Add ST_YMax and ST_Ymin SEDONA-115 : Add ST_XMax and ST_Min SEDONA-120 : Add ST_BuildArea SEDONA-113 : Add ST_PointN SEDONA-124 : Add ST_CollectionExtract SEDONA-109 : Add ST_OrderingEquals Flink \u00b6 New features: SEDONA-107 : Add St_Reverse function SEDONA-105 : Add ST_PointOnSurface function SEDONA-95 : Add ST_Disjoint predicate SEDONA-112 : Add ST_AsEWKT SEDONA-97 : Add ST_Force_2D SEDONA-98 : Add ST_IsEmpty SEDONA-116 : Add ST_YMax and ST_Ymin SEDONA-115 : Add ST_XMax and ST_Min SEDONA-120 : Add ST_BuildArea SEDONA-113 : Add ST_PointN SEDONA-110 : Add ST_GeomFromGeoHash SEDONA-121 : More ST constructors to Flink SEDONA-122 : Overload ST_GeomFromWKB for BYTES column Sedona 1.2.0 \u00b6 This version is a major release on Sedona 1.2.0 line. It includes bug fixes and new features: Sedona with Apache Flink. RDD \u00b6 Bug fix: SEDONA-18 : Fix an error reading Shapefile SEDONA-73 : Exclude scala-library from scala-collection-compat Improvement: SEDONA-77 : Refactor Format readers and spatial partitioning functions to be standalone libraries. So they can be used by Flink and others. SQL \u00b6 New features: SEDONA-4 : Handle nulls in SQL functions SEDONA-65 : Create ST_Difference function SEDONA-68 Add St_Collect function. SEDONA-82 : Create ST_SymmDifference function SEDONA-75 : Add support for \"3D\" geometries: Preserve Z coordinates on geometries when serializing, ST_AsText , ST_Z, ST_3DDistance SEDONA-86 : Support empty geometries in ST_AsBinary and ST_AsEWKB SEDONA-90 : Add ST_Union SEDONA-100 : Add st_multi function Bug fix: SEDONA-89 : GeometryUDT equals should test equivalence of the other object Flink \u00b6 Major update: SEDONA-80 : Geospatial stream processing support in Flink Table API SEDONA-85 : ST_Geohash function in Flink SEDONA-87 : Support Flink Table and DataStream conversion SEDONA-93 : Add ST_GeomFromGeoJSON Sedona 1.1.1 \u00b6 This version is a maintenance release on Sedona 1.1.X line. It includes bug fixes and a few new functions. Global \u00b6 New feature: SEDONA-73 : Scala source code supports Scala 2.13 SQL \u00b6 Bug fix: SEDONA-67 : Support Spark 3.2 New features: SEDONA-43 : Add ST_GeoHash and ST_GeomFromGeoHash SEDONA-45 : Add ST_MakePolygon SEDONA-71 : Add ST_AsBinary, ST_AsEWKB, ST_SRID, ST_SetSRID Sedona 1.1.0 \u00b6 This version is a major release on Sedona 1.1.0 line. It includes bug fixes and new features: R language API, Raster data and Map algebra support Global \u00b6 Dependency upgrade: SEDONA-30 : Use Geotools-wrapper 1.1.0-24.1 to include geotools GeoTiff libraries. Improvement on join queries in core and SQL: SEDONA-63 : Skip empty partitions in NestedLoopJudgement SEDONA-64 : Broadcast dedupParams to improve performance Behavior change: SEDONA-62 : Ignore HDF test in order to avoid NASA copyright issue Core \u00b6 Bug fix: SEDONA-41 : Fix rangeFilter bug when the leftCoveredByRight para is false SEDONA-53 : Fix SpatialKnnQuery NullPointerException SQL \u00b6 Major update: SEDONA-30 : Add GeoTiff raster I/O and Map Algebra function New function: SEDONA-27 : Add ST_Subdivide and ST_SubdivideExplode functions Bug fix: SEDONA-56 : Fix broadcast join with Adapter Query Engine enabled SEDONA-22 , SEDONA-60 : Fix join queries in SparkSQL when one side has no rows or only one row Viz \u00b6 N/A Python \u00b6 Improvement: SEDONA-59 : Make pyspark dependency of Sedona Python optional Bug fix: SEDONA-50 : Remove problematic logging conf that leads to errors on Databricks Fix the issue: Spark dependency in setup.py was configured to be < v3.1.0 by mistake. R \u00b6 Major update: SEDONA-31 : Add R interface for Sedona Sedona 1.0.1 \u00b6 This version is a maintenance release on Sedona 1.0.0 line. It includes bug fixes, some new features, one API change Known issue \u00b6 In Sedona v1.0.1 and eariler versions, the Spark dependency in setup.py was configured to be < v3.1.0 by mistake . When you install Sedona Python (apache-sedona v1.0.1) from Pypi, pip might unstall PySpark 3.1.1 and install PySpark 3.0.2 on your machine. Three ways to fix this: After install apache-sedona v1.0.1, unstall PySpark 3.0.2 and reinstall PySpark 3.1.1 Ask pip not to install Sedona dependencies: pip install --no-deps apache-sedona Install Sedona from the latest setup.py (on GitHub) manually. Global \u00b6 Dependency upgrade: SEDONA-16 : Use a GeoTools Maven Central wrapper to fix failed Jupyter notebook examples SEDONA-29 : upgrade to Spark 3.1.1 SEDONA-33 : jts2geojson version from 0.14.3 to 0.16.1 Core \u00b6 Bug fix: SEDONA-35 : Address user-data mutability issue with Adapter.toDF() SQL \u00b6 Bug fix: SEDONA-14 : Saving dataframe to CSV or Parquet fails due to unknown type SEDONA-15 : Add ST_MinimumBoundingRadius and ST_MinimumBoundingCircle functions SEDONA-19 : Global indexing does not work with SQL joins SEDONA-20 : Case object GeometryUDT and GeometryUDT instance not equal in Spark 3.0.2 New function: SEDONA-21 : allows Sedona to be used in pure SQL environment SEDONA-24 : Add ST_LineSubString and ST_LineInterpolatePoint SEDONA-26 : Add broadcast join support Viz \u00b6 Improvement: SEDONA-32 : Speed up ST_Render API change: SEDONA-29 : Upgrade to Spark 3.1.1 and fix ST_Pixelize Python \u00b6 Bug fix: SEDONA-19 : Global indexing does not work with SQL joins Sedona 1.0.0 \u00b6 This version is the first Sedona release since it joins the Apache Incubator. It includes new functions, bug fixes, and API changes . Global \u00b6 Key dependency upgrade: SEDONA-1 : upgrade to JTS 1.18 upgrade to GeoTools 24.0 upgrade to jts2geojson 0.14.3 Key dependency packaging strategy change: JTS, GeoTools, jts2geojson are no longer packaged in Sedona jars. End users need to add them manually. See here . Key compilation target change: SEDONA-3 : Paths and class names have been changed to Apache Sedona SEDONA-7 : build the source code for Spark 2.4, 3.0, Scala 2.11, 2.12, Python 3.7, 3.8, 3.9. See here . Sedona-core \u00b6 Bug fix: PR 443 : read multiple Shape Files by multiPartitions PR 451 ( API change ): modify CRSTransform to ignore datum shift New function: SEDONA-8 : spatialRDD.flipCoordinates() API / behavior change: PR 488 : JoinQuery.SpatialJoinQuery/DistanceJoinQuery now returns <Geometry, List> instead of <Geometry, HashSet> because we can no longer use HashSet in Sedona for duplicates removal. All original duplicates in both input RDDs will be preserved in the output. Sedona-sql \u00b6 Bug fix: SEDONA-8 ( API change ): ST_Transform slow due to lock contention. See here PR 427 : ST_Point and ST_PolygonFromEnvelope now allows Double type New function: PR 499 : ST_Azimuth, ST_X, ST_Y, ST_StartPoint, ST_Boundary, ST_EndPoint, ST_ExteriorRing, ST_GeometryN, ST_InteriorRingN, ST_Dump, ST_DumpPoints, ST_IsClosed, ST_NumInteriorRings, ST_AddPoint, ST_RemovePoint, ST_IsRing PR 459 : ST_LineMerge PR 460 : ST_NumGeometries PR 469 : ST_AsGeoJSON SEDONA-8 : ST_FlipCoordinates Behavior change: PR 480 : Aggregate Functions rewrite for new Aggregator API. The functions can be used as typed functions in code and enable compilation-time type check. API change: SEDONA-11 : Adapter.toDf() will directly generate a geometry type column. ST_GeomFromWKT is no longer needed. Sedona-viz \u00b6 API change: Drop the function which can generate SVG vector images because the required library has an incompatible license and the SVG image is not good at plotting big data Sedona Python \u00b6 API/Behavior change: Python-to-Sedona adapter is moved to a separate module. To use Sedona Python, see here New function: PR 448 : Add support for partition number in spatialPartitioning function spatial_rdd.spatialPartitioning(grid_type, NUM_PARTITION) GeoSpark legacy release notes \u00b6 v1.3.1 \u00b6 This version includes the official release of GeoSpark Python wrapper. It also contains a number of bug fixes and new functions. The tutorial section provides some articles to explain the usage of GeoSpark Python wrapper. GeoSpark Core Bug fix: Issue # 344 and PR # 365 : GeoJSON reader cannot handle \"id\" Issue # 420 and PR # 421 : Cannot handle null value in geojson properties PR # 422 : Use HTTPS to resolve dependencies in Maven Build New functions: Issue # 399 and PR # 401 : saveAsWKB PR # 402 : saveAsWKT GeoSpark SQL New functions: PR # 359 : ST_NPoints PR # 373 : ST_GeometryType PR # 398 : ST_SimplifyPreserveTopology PR # 406 : ST_MakeValid PR # 416 : ST_Intersection_aggr Performance: Issue # 345 and PR # 346 : the performance issue of Adapter.toDF() function Bug fix: Issue # 395 and PR # 396 : Fix the geometry col bug in Adapter GeoSpark Viz Bug fix: Issue # 378 and PR # 379 : Classpath issue when integrating GeoSparkViz with s3 GeoSpark Python Add new GeoSpark python wrapper for RDD and SQL APIs Contributors (12) Mariano Gonzalez Pawe\u0142 Koci\u0144ski Semen Komissarov Jonathan Leitschuh Netanel Malka Keivan Shahida Sachio Wakai Hui Wang Wrussia Jia Yu Harry Zhu Ilya Zverev v1.3.0 \u00b6 This release has been skipped due to a bug in GeoSpark Python wrapper. v1.2.0 \u00b6 This version contains numerous bug fixes, new functions, and new GeoSpark module. License change From MIT to Apache License 2.0 GeoSpark Core Bug fix: Issue # 224 load GeoJSON non-spatial attributes. Issue # 228 Shapefiel Reader fails to handle UNDEFINED type. Issue # 320 Read CSV ArrayIndexOutOfBoundsException New functions: PR # 270 # 298 Add GeoJSON Reader to load GeoJSON with all attributes. See GeoSpark doc for an example. PR # 314 Add WktReader and WkbReader. Their usage is simialr to GeoJSON reader. GeoSpark SQL Bug fix: Issue # 244 JTS side location conflict Issue # 245 Drop ST_Circle in 1.2.0 Issue # 288 ST_isValid fails Issue # 321 ST_Point doesn't accept null user data PR # 284 ST_Union_Aggr bug PR # 331 Adapter doesn't handle null values New SQL functions: ST_IsValid ST_PrecisionReduce ST_Touches ST_Overlaps ST_Equals ST_Crosses ST_IsSimple ST_AsText Behavior / API change: GeoSpark Adapter will automatically carry all attributes between DataFrame and RDD. No need to use UUID in SQL ST functions to pass values. Please read GeoSpark doc . GeoSpark Viz Bug fix: Issue # 231 Pixel NullPointException Issue # 234 OutOfMemory for large images New functions Add the DataFrame support. Please read GeoSpark doc ST_Pixelize ST_TileName ST_Colorize ST_EncodeImage ST_Render Behavior / API change GeoSparkViz Maven coordinate changed. You need to specify Spark version. Please read GeoSpark Maven coordinate GeoSpark-Zeppelin New functions Add the support of connecting GeoSpark and Zeppelin Add the support of connecting GeoSparkViz and Zeppelin Contributors (13) Anton Peniaziev, Avshalom Orenstein, Jia Yu, Jordan Perr-Sauer, JulienPeloton, Sergii Mikhtoniuk, Netanel Malka, Rishabh Mishra, sagar1993, Shi-Hao Liu, Serhuela, tociek, Wrussia v1.1.3 \u00b6 This version contains a critical bug fix for GeoSpark-core RDD API. GeoSpark Core Fixed Issue # 222 : geometry toString() method has cumulative non-spatial attributes. See PR # 223 GeoSpark SQL None GeoSpark Viz None v1.1.2 \u00b6 This version contains several bug fixes and several small improvements. GeoSpark Core Added WKB input format support (Issue # 2 , 213 ): See PR # 203 , 216 . Thanks for the patch from Lucas C.! Added empty constructors for typed SpatialRDDs. This is especially useful when the users want to load a persisted RDD from disk and assemble a typed SpatialRDD by themselves. See PR # 211 Fixed Issue # 214 : duplicated geometry parts when print each Geometry in a SpatialRDD to a String using toString() method. See PR # 216 GeoSpark SQL Added ST_GeomFromWKB expression (Issue # 2 ): See PR # 203 . Thanks for the patch from Lucas C.! Fixed Issue # 193 : IllegalArgumentException in RangeJoin: Number of partitions must be >= 0. See PR # 207 Fixed Issue # 204 : Wrong ST_Intersection result. See PR # 205 [For Developer] Separate the expression catalog and the udf registrator to simplify the steps of merging patches among different Spark versions. See PR # 209 GeoSpark Viz None v1.1.1 \u00b6 This release has been skipped due to wrong Maven Central configuration. v1.1.0 \u00b6 This version adds very efficient R-Tree and Quad-Tree index serializers and supports Apache Spark and SparkSQL 2.3. See Maven Central coordinate to locate the particular version. GeoSpark Core Fixed Issue # 185 : CRStransform throws Exception for Bursa wolf parameters. See PR # 189 . Fixed Issue # 190 : Shapefile reader doesn't support Chinese characters (\u4e2d\u6587\u5b57\u7b26). See PR # 192 . Add R-Tree and Quad-Tree index serializer. GeoSpark custom index serializer has around 2 times smaller index size and faster serialization than Apache Spark kryo serializer. See PR # 177 . GeoSpark SQL Fixed Issue # 194 : doesn't support Spark 2.3. Fixed Issue # 188 :ST_ConvexHull should accept any type of geometry as an input. See PR # 189 . Add ST_Intersection function. See Issue # 110 and PR # 189 . GeoSpark Viz Fixed Issue # 154 : GeoSpark kryp serializer and GeoSparkViz conflict. See PR # 178 v1.0.1 \u00b6 GeoSpark Core Fixed Issue # 170 GeoSpark SQL Fixed Issue # 171 Added the support of SparkSQL 2.2. GeoSpark-SQL for Spark 2.1 is published separately ( Maven Coordinates ). GeoSpark Viz None v1.0.0 \u00b6 GeoSpark Core Add GeoSparkConf class to read GeoSparkConf from SparkConf GeoSpark SQL Initial release: fully supports SQL/MM-Part3 Spatial SQL standard GeoSpark Viz Republish GeoSpark Viz under \"GeoSparkViz\" folder. All \"Babylon\" strings have been replaced to \"GeoSparkViz\" v0.9.1 (GeoSpark-core) \u00b6 Bug fixes : Fixed \"Missing values when reading Shapefile\": Issue #141 Performance improvement : Solved Issue #91 , #103 , #104 , #125 , #150 . Add GeoSpark customized Kryo Serializer to significantly reduce memory footprint. This serializer which follows Shapefile compression rule takes less memory than the default Kryo. See PR 139 . Delete the duplicate removal by using Reference Point concept. This eliminates one data shuffle but still guarantees the accuracy. See PR 131 . New Functionalities added : SpatialJoinQueryFlat/DistanceJoinQueryFlat returns the join query in a flat way following database iteration model: Each row has fixed two members [Polygon, Point]. This API is more efficient for unbalanced length of join results. The left and right shapes in Range query, Distance query, Range join query, Distance join query can be switched. The index side in Range query, Distance query, Range join query, Distance join query can be switched. The generic SpatialRdd supports heterogenous geometries Add KDB-Tree spatial partitioning method which is more balanced than Quad-Tree Range query, Distance query, Range join query, Distance join query, KNN query supports heterogenous inputs. v0.8.2 (GeoSpark-core) \u00b6 Bug fixes : Fix the shapefile RDD null pointer bug when running in cluster mode. See Issue https://github.com/DataSystemsLab/GeoSpark/issues/115 New function added : Provide granular control to SpatialRDD sampling utils. SpatialRDD has a setter and getter for a parameter called \"sampleNumber\". The user can manually specify the sample size for spatial partitioning. v0.8.1 (GeoSpark-core) \u00b6 Bug fixes : (1) Fix the blank DBF attribute error when load DBF along with SHX file. (2) Allow user to call CRS transformation function at any time. Previously, it was only allowed in GeoSpark constructors v0.8.0 (GeoSpark-core) \u00b6 New input format added : GeoSpark is able to load and query ESRI ShapeFile (.shp, .shx, .dbf) from local disk and HDFS! Users first need to build a Shapefile RDD by giving Spark Context and an input path then call ShapefileRDD.getSpatialRDD to retrieve Spatial RDD. ( Scala Example , Java Example ) Join Query Performance enhancement 1 : GeoSpark provides a new Quad-Tree Spatial Partitioning method to speed up Join Query. Users need to pass GridType.QUADTREE parameter to RDD1.spatialPartitioning() function. Then users need to use RDD1.partitionTree in RDD2.spatialPartitioning() function. This Quad-Tree partitioning method (1) avoids overflowed spatial objects when partitioning spatial objects. (2) checking a spatial object against the Quad-Tree grids is completed in a log complexity tree search. ( Scala Example , Java Example ) Join Query Performance enhancement 2 : Internally, GeoSpark uses zipPartitions instead of CoGroup to join two Spatial RDD so that the incurred shuffle overhead decreases. SpatialRDD Initialization Performance enhancement : GeoSpark uses mapPartition instead of flatMapToPair to generate Spatial Objects. This will speed up the calculation. API changed : Since it chooses mapPartition API in mappers, GeoSpark no longer supports the old user supplified format mapper. However, if you are using your own format mapper for old GeoSpark version, you just need to add one more loop to fit in GeoSpark 0.8.0. Please see GeoSpark user supplied format mapper examples Alternative SpatialRDD constructor added : GeoSpark no longer forces users to provide StorageLevel parameter in their SpatialRDD constructors. This will siginicantly accelerate all Spatial RDD initialization. If he only needs Spatial Range Query and KNN query, the user can totally remove this parameter from their constructors. If he needs Spatial Join Query or Distance Join Query but he knows his dataset boundary and approximate total count, the user can also remove StorageLevel parameter and append a Envelope type dataset boundary and an approxmiate total count as additional parameters. If he needs Spatial Join Query or Distance Join Query but knows nothing about his dataset , the user still has to pass StorageLevel parameter. Bug fix : Fix bug Issue #97 and Issue #100 . v0.1 - v0.7 \u00b6 Version Summary 0.7.0 Coordinate Reference System (CRS) Transformation (aka. Coordinate projection) added: GeoSpark allows users to transform the original CRS (e.g., degree based coordinates such as EPSG:4326 and WGS84) to any other CRS (e.g., meter based coordinates such as EPSG:3857) so that it can accurately process both geographic data and geometrical data. Please specify your desired CRS in GeoSpark Spatial RDD constructor ( Example ); Unnecessary dependencies removed : NetCDF/HDF support depends on SerNetCDF . SetNetCDF becomes optional dependency to reduce fat jar size; Default JDK/JRE change to JDK/JRE 1.8 : To satisfy CRS transformation requirement, GeoSpark is compiled by JDK 1.8 by default; Bug fix : fix a small format bug when output spatial RDD to disk. 0.6.2 New input format added: Add a new input format mapper called EarthdataHDFPointMapper so that GeoSpark can load, query and save NASA Petabytes NetCDF/HDF Earth Data ( Scala Example , Java Example ); Bug fix: Print UserData attribute when output Spatial RDDs as GeoJSON or regular text file 0.6.1 Bug fixes: Fix typos LineString DistanceJoin API 0.6.0 Major updates: (1) DistanceJoin is merged into JoinQuery. GeoSpark now supports complete DistanceJoin between Points, Polygons, and LineStrings. (2) Add Refine Phase to Spatial Range and Join Query. Use real polygon coordinates instead of its MBR to filter the final results. API changes: All spatial range and join queries now take a parameter called ConsiderBoundaryIntersection . This will tell GeoSpark whether returns the objects intersect with windows. 0.5.3 Bug fix: Fix Issue #69 : Now, if two objects have the same coordinates but different non-spatial attributes (UserData), GeoSpark treats them as different objects. 0.5.2 Bug fix: Fix Issue #58 and Issue #60 ; Performance enhancement: (1) Deprecate all old Spatial RDD constructors. See the JavaDoc here . (2) Recommend the new SRDD constructors which take an additional RDD storage level and automatically cache rawSpatialRDD to accelerate internal SRDD analyze step 0.5.1 Bug fix: (1) GeoSpark: Fix inaccurate KNN result when K is large (2) GeoSpark: Replace incompatible Spark API call Issue #55 ; (3) Babylon: Remove JPG output format temporarily due to the lack of OpenJDK support 0.5.0 Major updates: We are pleased to announce the initial version of Babylon a large-scale in-memory geospatial visualization system extending GeoSpark. Babylon and GeoSpark are integrated together. You can just import GeoSpark and enjoy! More details are available here: Babylon GeoSpatial Visualization 0.4.0 Major updates: ( Example ) 1. Refactor constrcutor API usage. 2. Simplify Spatial Join Query API. 3. Add native support for LineStringRDD; Functionality enhancement: 1. Release the persist function back to users. 2. Add more exception explanations. 0.3.2 Functionality enhancement: 1. JTSplus Spatial Objects now carry the original input data. Each object stores \"UserData\" and provides getter and setter. 2. Add a new SpatialRDD constructor to transform a regular data RDD to a spatial partitioned SpatialRDD. 0.3.1 Bug fix: Support Apache Spark 2.X version, fix a bug which results in inaccurate results when doing join query, add more unit test cases 0.3 Major updates: Significantly shorten query time on spatial join for skewed data; Support load balanced spatial partitioning methods (also serve as the global index); Optimize code for iterative spatial data mining 0.2 Improve code structure and refactor API 0.1 Support spatial range, join and Knn GeoSpark-Viz (old) \u00b6 Version Summary 0.2.2 Add the support of new output storage : Now the user is able to output gigapixel or megapixel resolution images (image tiles or stitched single image) to HDFS and Amazon S3. Please use the new ImageGenerator not the BabylonImageGenerator class. 0.2.1 Performance enhancement : significantly accelerate single image generation pipeline. Bug fix :fix a bug in scatter plot parallel rendering. 0.2.0 API updates for Issue #80 : 1. Babylon now has two different OverlayOperators for raster image and vector image: RasterOverlayOperator and VectorOverlayOperator; 2. Babylon merged old SparkImageGenerator and NativeJavaGenerator into a new BabylonImageGenerator which has neat APIs; New feature: Babylon can use Scatter Plot to visualize NASA Petabytes NetCDF/HDF format Earth Data. ( Scala Example , Java Example ) 0.1.1 Major updates: Babylon supports vector image and outputs SVG image format 0.1.0 Major updates: Babylon initial version supports raster images","title":"Release notes"},{"location":"setup/release-notes/#sedona-121","text":"This version is a maintenance release on Sedona 1.2.0 line. It includes bug fixes. Sedona on Spark is now compiled against Spark 3.3, instead of Spark 2.2.","title":"Sedona 1.2.1"},{"location":"setup/release-notes/#sql-for-spark","text":"Bug fixes: SEDONA-104 : Bug in reading band values of GeoTiff images SEDONA-118 : Fix the wrong result in ST_Within SEDONA-123 : Fix the check for invalid lat/lon in ST_GeoHash Improvement: SEDONA-96 : Refactor ST_MakeValid to use GeometryFixer SEDONA-108 : Write support for GeoTiff images SEDONA-122 : Overload ST_GeomFromWKB for BYTES column SEDONA-127 : Add null safety to ST_GeomFromWKT/WKB/Text SEDONA-129 : Support Spark 3.3 SEDONA-135 : Consolidate and upgrade hadoop dependency New features: SEDONA-107 : Add St_Reverse function SEDONA-105 : Add ST_PointOnSurface function SEDONA-95 : Add ST_Disjoint predicate SEDONA-112 : Add ST_AsEWKT SEDONA-106 : Add ST_LineFromText SEDONA-117 : Add RS_AppendNormalizedDifference SEDONA-97 : Add ST_Force_2D SEDONA-98 : Add ST_IsEmpty SEDONA-116 : Add ST_YMax and ST_Ymin SEDONA-115 : Add ST_XMax and ST_Min SEDONA-120 : Add ST_BuildArea SEDONA-113 : Add ST_PointN SEDONA-124 : Add ST_CollectionExtract SEDONA-109 : Add ST_OrderingEquals","title":"SQL (for Spark)"},{"location":"setup/release-notes/#flink","text":"New features: SEDONA-107 : Add St_Reverse function SEDONA-105 : Add ST_PointOnSurface function SEDONA-95 : Add ST_Disjoint predicate SEDONA-112 : Add ST_AsEWKT SEDONA-97 : Add ST_Force_2D SEDONA-98 : Add ST_IsEmpty SEDONA-116 : Add ST_YMax and ST_Ymin SEDONA-115 : Add ST_XMax and ST_Min SEDONA-120 : Add ST_BuildArea SEDONA-113 : Add ST_PointN SEDONA-110 : Add ST_GeomFromGeoHash SEDONA-121 : More ST constructors to Flink SEDONA-122 : Overload ST_GeomFromWKB for BYTES column","title":"Flink"},{"location":"setup/release-notes/#sedona-120","text":"This version is a major release on Sedona 1.2.0 line. It includes bug fixes and new features: Sedona with Apache Flink.","title":"Sedona 1.2.0"},{"location":"setup/release-notes/#rdd","text":"Bug fix: SEDONA-18 : Fix an error reading Shapefile SEDONA-73 : Exclude scala-library from scala-collection-compat Improvement: SEDONA-77 : Refactor Format readers and spatial partitioning functions to be standalone libraries. So they can be used by Flink and others.","title":"RDD"},{"location":"setup/release-notes/#sql","text":"New features: SEDONA-4 : Handle nulls in SQL functions SEDONA-65 : Create ST_Difference function SEDONA-68 Add St_Collect function. SEDONA-82 : Create ST_SymmDifference function SEDONA-75 : Add support for \"3D\" geometries: Preserve Z coordinates on geometries when serializing, ST_AsText , ST_Z, ST_3DDistance SEDONA-86 : Support empty geometries in ST_AsBinary and ST_AsEWKB SEDONA-90 : Add ST_Union SEDONA-100 : Add st_multi function Bug fix: SEDONA-89 : GeometryUDT equals should test equivalence of the other object","title":"SQL"},{"location":"setup/release-notes/#flink_1","text":"Major update: SEDONA-80 : Geospatial stream processing support in Flink Table API SEDONA-85 : ST_Geohash function in Flink SEDONA-87 : Support Flink Table and DataStream conversion SEDONA-93 : Add ST_GeomFromGeoJSON","title":"Flink"},{"location":"setup/release-notes/#sedona-111","text":"This version is a maintenance release on Sedona 1.1.X line. It includes bug fixes and a few new functions.","title":"Sedona 1.1.1"},{"location":"setup/release-notes/#global","text":"New feature: SEDONA-73 : Scala source code supports Scala 2.13","title":"Global"},{"location":"setup/release-notes/#sql_1","text":"Bug fix: SEDONA-67 : Support Spark 3.2 New features: SEDONA-43 : Add ST_GeoHash and ST_GeomFromGeoHash SEDONA-45 : Add ST_MakePolygon SEDONA-71 : Add ST_AsBinary, ST_AsEWKB, ST_SRID, ST_SetSRID","title":"SQL"},{"location":"setup/release-notes/#sedona-110","text":"This version is a major release on Sedona 1.1.0 line. It includes bug fixes and new features: R language API, Raster data and Map algebra support","title":"Sedona 1.1.0"},{"location":"setup/release-notes/#global_1","text":"Dependency upgrade: SEDONA-30 : Use Geotools-wrapper 1.1.0-24.1 to include geotools GeoTiff libraries. Improvement on join queries in core and SQL: SEDONA-63 : Skip empty partitions in NestedLoopJudgement SEDONA-64 : Broadcast dedupParams to improve performance Behavior change: SEDONA-62 : Ignore HDF test in order to avoid NASA copyright issue","title":"Global"},{"location":"setup/release-notes/#core","text":"Bug fix: SEDONA-41 : Fix rangeFilter bug when the leftCoveredByRight para is false SEDONA-53 : Fix SpatialKnnQuery NullPointerException","title":"Core"},{"location":"setup/release-notes/#sql_2","text":"Major update: SEDONA-30 : Add GeoTiff raster I/O and Map Algebra function New function: SEDONA-27 : Add ST_Subdivide and ST_SubdivideExplode functions Bug fix: SEDONA-56 : Fix broadcast join with Adapter Query Engine enabled SEDONA-22 , SEDONA-60 : Fix join queries in SparkSQL when one side has no rows or only one row","title":"SQL"},{"location":"setup/release-notes/#viz","text":"N/A","title":"Viz"},{"location":"setup/release-notes/#python","text":"Improvement: SEDONA-59 : Make pyspark dependency of Sedona Python optional Bug fix: SEDONA-50 : Remove problematic logging conf that leads to errors on Databricks Fix the issue: Spark dependency in setup.py was configured to be < v3.1.0 by mistake.","title":"Python"},{"location":"setup/release-notes/#r","text":"Major update: SEDONA-31 : Add R interface for Sedona","title":"R"},{"location":"setup/release-notes/#sedona-101","text":"This version is a maintenance release on Sedona 1.0.0 line. It includes bug fixes, some new features, one API change","title":"Sedona 1.0.1"},{"location":"setup/release-notes/#known-issue","text":"In Sedona v1.0.1 and eariler versions, the Spark dependency in setup.py was configured to be < v3.1.0 by mistake . When you install Sedona Python (apache-sedona v1.0.1) from Pypi, pip might unstall PySpark 3.1.1 and install PySpark 3.0.2 on your machine. Three ways to fix this: After install apache-sedona v1.0.1, unstall PySpark 3.0.2 and reinstall PySpark 3.1.1 Ask pip not to install Sedona dependencies: pip install --no-deps apache-sedona Install Sedona from the latest setup.py (on GitHub) manually.","title":"Known issue"},{"location":"setup/release-notes/#global_2","text":"Dependency upgrade: SEDONA-16 : Use a GeoTools Maven Central wrapper to fix failed Jupyter notebook examples SEDONA-29 : upgrade to Spark 3.1.1 SEDONA-33 : jts2geojson version from 0.14.3 to 0.16.1","title":"Global"},{"location":"setup/release-notes/#core_1","text":"Bug fix: SEDONA-35 : Address user-data mutability issue with Adapter.toDF()","title":"Core"},{"location":"setup/release-notes/#sql_3","text":"Bug fix: SEDONA-14 : Saving dataframe to CSV or Parquet fails due to unknown type SEDONA-15 : Add ST_MinimumBoundingRadius and ST_MinimumBoundingCircle functions SEDONA-19 : Global indexing does not work with SQL joins SEDONA-20 : Case object GeometryUDT and GeometryUDT instance not equal in Spark 3.0.2 New function: SEDONA-21 : allows Sedona to be used in pure SQL environment SEDONA-24 : Add ST_LineSubString and ST_LineInterpolatePoint SEDONA-26 : Add broadcast join support","title":"SQL"},{"location":"setup/release-notes/#viz_1","text":"Improvement: SEDONA-32 : Speed up ST_Render API change: SEDONA-29 : Upgrade to Spark 3.1.1 and fix ST_Pixelize","title":"Viz"},{"location":"setup/release-notes/#python_1","text":"Bug fix: SEDONA-19 : Global indexing does not work with SQL joins","title":"Python"},{"location":"setup/release-notes/#sedona-100","text":"This version is the first Sedona release since it joins the Apache Incubator. It includes new functions, bug fixes, and API changes .","title":"Sedona 1.0.0"},{"location":"setup/release-notes/#global_3","text":"Key dependency upgrade: SEDONA-1 : upgrade to JTS 1.18 upgrade to GeoTools 24.0 upgrade to jts2geojson 0.14.3 Key dependency packaging strategy change: JTS, GeoTools, jts2geojson are no longer packaged in Sedona jars. End users need to add them manually. See here . Key compilation target change: SEDONA-3 : Paths and class names have been changed to Apache Sedona SEDONA-7 : build the source code for Spark 2.4, 3.0, Scala 2.11, 2.12, Python 3.7, 3.8, 3.9. See here .","title":"Global"},{"location":"setup/release-notes/#sedona-core","text":"Bug fix: PR 443 : read multiple Shape Files by multiPartitions PR 451 ( API change ): modify CRSTransform to ignore datum shift New function: SEDONA-8 : spatialRDD.flipCoordinates() API / behavior change: PR 488 : JoinQuery.SpatialJoinQuery/DistanceJoinQuery now returns <Geometry, List> instead of <Geometry, HashSet> because we can no longer use HashSet in Sedona for duplicates removal. All original duplicates in both input RDDs will be preserved in the output.","title":"Sedona-core"},{"location":"setup/release-notes/#sedona-sql","text":"Bug fix: SEDONA-8 ( API change ): ST_Transform slow due to lock contention. See here PR 427 : ST_Point and ST_PolygonFromEnvelope now allows Double type New function: PR 499 : ST_Azimuth, ST_X, ST_Y, ST_StartPoint, ST_Boundary, ST_EndPoint, ST_ExteriorRing, ST_GeometryN, ST_InteriorRingN, ST_Dump, ST_DumpPoints, ST_IsClosed, ST_NumInteriorRings, ST_AddPoint, ST_RemovePoint, ST_IsRing PR 459 : ST_LineMerge PR 460 : ST_NumGeometries PR 469 : ST_AsGeoJSON SEDONA-8 : ST_FlipCoordinates Behavior change: PR 480 : Aggregate Functions rewrite for new Aggregator API. The functions can be used as typed functions in code and enable compilation-time type check. API change: SEDONA-11 : Adapter.toDf() will directly generate a geometry type column. ST_GeomFromWKT is no longer needed.","title":"Sedona-sql"},{"location":"setup/release-notes/#sedona-viz","text":"API change: Drop the function which can generate SVG vector images because the required library has an incompatible license and the SVG image is not good at plotting big data","title":"Sedona-viz"},{"location":"setup/release-notes/#sedona-python","text":"API/Behavior change: Python-to-Sedona adapter is moved to a separate module. To use Sedona Python, see here New function: PR 448 : Add support for partition number in spatialPartitioning function spatial_rdd.spatialPartitioning(grid_type, NUM_PARTITION)","title":"Sedona Python"},{"location":"setup/release-notes/#geospark-legacy-release-notes","text":"","title":"GeoSpark legacy release notes"},{"location":"setup/release-notes/#v131","text":"This version includes the official release of GeoSpark Python wrapper. It also contains a number of bug fixes and new functions. The tutorial section provides some articles to explain the usage of GeoSpark Python wrapper. GeoSpark Core Bug fix: Issue # 344 and PR # 365 : GeoJSON reader cannot handle \"id\" Issue # 420 and PR # 421 : Cannot handle null value in geojson properties PR # 422 : Use HTTPS to resolve dependencies in Maven Build New functions: Issue # 399 and PR # 401 : saveAsWKB PR # 402 : saveAsWKT GeoSpark SQL New functions: PR # 359 : ST_NPoints PR # 373 : ST_GeometryType PR # 398 : ST_SimplifyPreserveTopology PR # 406 : ST_MakeValid PR # 416 : ST_Intersection_aggr Performance: Issue # 345 and PR # 346 : the performance issue of Adapter.toDF() function Bug fix: Issue # 395 and PR # 396 : Fix the geometry col bug in Adapter GeoSpark Viz Bug fix: Issue # 378 and PR # 379 : Classpath issue when integrating GeoSparkViz with s3 GeoSpark Python Add new GeoSpark python wrapper for RDD and SQL APIs Contributors (12) Mariano Gonzalez Pawe\u0142 Koci\u0144ski Semen Komissarov Jonathan Leitschuh Netanel Malka Keivan Shahida Sachio Wakai Hui Wang Wrussia Jia Yu Harry Zhu Ilya Zverev","title":"v1.3.1"},{"location":"setup/release-notes/#v130","text":"This release has been skipped due to a bug in GeoSpark Python wrapper.","title":"v1.3.0"},{"location":"setup/release-notes/#v120","text":"This version contains numerous bug fixes, new functions, and new GeoSpark module. License change From MIT to Apache License 2.0 GeoSpark Core Bug fix: Issue # 224 load GeoJSON non-spatial attributes. Issue # 228 Shapefiel Reader fails to handle UNDEFINED type. Issue # 320 Read CSV ArrayIndexOutOfBoundsException New functions: PR # 270 # 298 Add GeoJSON Reader to load GeoJSON with all attributes. See GeoSpark doc for an example. PR # 314 Add WktReader and WkbReader. Their usage is simialr to GeoJSON reader. GeoSpark SQL Bug fix: Issue # 244 JTS side location conflict Issue # 245 Drop ST_Circle in 1.2.0 Issue # 288 ST_isValid fails Issue # 321 ST_Point doesn't accept null user data PR # 284 ST_Union_Aggr bug PR # 331 Adapter doesn't handle null values New SQL functions: ST_IsValid ST_PrecisionReduce ST_Touches ST_Overlaps ST_Equals ST_Crosses ST_IsSimple ST_AsText Behavior / API change: GeoSpark Adapter will automatically carry all attributes between DataFrame and RDD. No need to use UUID in SQL ST functions to pass values. Please read GeoSpark doc . GeoSpark Viz Bug fix: Issue # 231 Pixel NullPointException Issue # 234 OutOfMemory for large images New functions Add the DataFrame support. Please read GeoSpark doc ST_Pixelize ST_TileName ST_Colorize ST_EncodeImage ST_Render Behavior / API change GeoSparkViz Maven coordinate changed. You need to specify Spark version. Please read GeoSpark Maven coordinate GeoSpark-Zeppelin New functions Add the support of connecting GeoSpark and Zeppelin Add the support of connecting GeoSparkViz and Zeppelin Contributors (13) Anton Peniaziev, Avshalom Orenstein, Jia Yu, Jordan Perr-Sauer, JulienPeloton, Sergii Mikhtoniuk, Netanel Malka, Rishabh Mishra, sagar1993, Shi-Hao Liu, Serhuela, tociek, Wrussia","title":"v1.2.0"},{"location":"setup/release-notes/#v113","text":"This version contains a critical bug fix for GeoSpark-core RDD API. GeoSpark Core Fixed Issue # 222 : geometry toString() method has cumulative non-spatial attributes. See PR # 223 GeoSpark SQL None GeoSpark Viz None","title":"v1.1.3"},{"location":"setup/release-notes/#v112","text":"This version contains several bug fixes and several small improvements. GeoSpark Core Added WKB input format support (Issue # 2 , 213 ): See PR # 203 , 216 . Thanks for the patch from Lucas C.! Added empty constructors for typed SpatialRDDs. This is especially useful when the users want to load a persisted RDD from disk and assemble a typed SpatialRDD by themselves. See PR # 211 Fixed Issue # 214 : duplicated geometry parts when print each Geometry in a SpatialRDD to a String using toString() method. See PR # 216 GeoSpark SQL Added ST_GeomFromWKB expression (Issue # 2 ): See PR # 203 . Thanks for the patch from Lucas C.! Fixed Issue # 193 : IllegalArgumentException in RangeJoin: Number of partitions must be >= 0. See PR # 207 Fixed Issue # 204 : Wrong ST_Intersection result. See PR # 205 [For Developer] Separate the expression catalog and the udf registrator to simplify the steps of merging patches among different Spark versions. See PR # 209 GeoSpark Viz None","title":"v1.1.2"},{"location":"setup/release-notes/#v111","text":"This release has been skipped due to wrong Maven Central configuration.","title":"v1.1.1"},{"location":"setup/release-notes/#v110","text":"This version adds very efficient R-Tree and Quad-Tree index serializers and supports Apache Spark and SparkSQL 2.3. See Maven Central coordinate to locate the particular version. GeoSpark Core Fixed Issue # 185 : CRStransform throws Exception for Bursa wolf parameters. See PR # 189 . Fixed Issue # 190 : Shapefile reader doesn't support Chinese characters (\u4e2d\u6587\u5b57\u7b26). See PR # 192 . Add R-Tree and Quad-Tree index serializer. GeoSpark custom index serializer has around 2 times smaller index size and faster serialization than Apache Spark kryo serializer. See PR # 177 . GeoSpark SQL Fixed Issue # 194 : doesn't support Spark 2.3. Fixed Issue # 188 :ST_ConvexHull should accept any type of geometry as an input. See PR # 189 . Add ST_Intersection function. See Issue # 110 and PR # 189 . GeoSpark Viz Fixed Issue # 154 : GeoSpark kryp serializer and GeoSparkViz conflict. See PR # 178","title":"v1.1.0"},{"location":"setup/release-notes/#v101","text":"GeoSpark Core Fixed Issue # 170 GeoSpark SQL Fixed Issue # 171 Added the support of SparkSQL 2.2. GeoSpark-SQL for Spark 2.1 is published separately ( Maven Coordinates ). GeoSpark Viz None","title":"v1.0.1"},{"location":"setup/release-notes/#v100","text":"GeoSpark Core Add GeoSparkConf class to read GeoSparkConf from SparkConf GeoSpark SQL Initial release: fully supports SQL/MM-Part3 Spatial SQL standard GeoSpark Viz Republish GeoSpark Viz under \"GeoSparkViz\" folder. All \"Babylon\" strings have been replaced to \"GeoSparkViz\"","title":"v1.0.0"},{"location":"setup/release-notes/#v091-geospark-core","text":"Bug fixes : Fixed \"Missing values when reading Shapefile\": Issue #141 Performance improvement : Solved Issue #91 , #103 , #104 , #125 , #150 . Add GeoSpark customized Kryo Serializer to significantly reduce memory footprint. This serializer which follows Shapefile compression rule takes less memory than the default Kryo. See PR 139 . Delete the duplicate removal by using Reference Point concept. This eliminates one data shuffle but still guarantees the accuracy. See PR 131 . New Functionalities added : SpatialJoinQueryFlat/DistanceJoinQueryFlat returns the join query in a flat way following database iteration model: Each row has fixed two members [Polygon, Point]. This API is more efficient for unbalanced length of join results. The left and right shapes in Range query, Distance query, Range join query, Distance join query can be switched. The index side in Range query, Distance query, Range join query, Distance join query can be switched. The generic SpatialRdd supports heterogenous geometries Add KDB-Tree spatial partitioning method which is more balanced than Quad-Tree Range query, Distance query, Range join query, Distance join query, KNN query supports heterogenous inputs.","title":"v0.9.1 (GeoSpark-core)"},{"location":"setup/release-notes/#v082-geospark-core","text":"Bug fixes : Fix the shapefile RDD null pointer bug when running in cluster mode. See Issue https://github.com/DataSystemsLab/GeoSpark/issues/115 New function added : Provide granular control to SpatialRDD sampling utils. SpatialRDD has a setter and getter for a parameter called \"sampleNumber\". The user can manually specify the sample size for spatial partitioning.","title":"v0.8.2 (GeoSpark-core)"},{"location":"setup/release-notes/#v081-geospark-core","text":"Bug fixes : (1) Fix the blank DBF attribute error when load DBF along with SHX file. (2) Allow user to call CRS transformation function at any time. Previously, it was only allowed in GeoSpark constructors","title":"v0.8.1 (GeoSpark-core)"},{"location":"setup/release-notes/#v080-geospark-core","text":"New input format added : GeoSpark is able to load and query ESRI ShapeFile (.shp, .shx, .dbf) from local disk and HDFS! Users first need to build a Shapefile RDD by giving Spark Context and an input path then call ShapefileRDD.getSpatialRDD to retrieve Spatial RDD. ( Scala Example , Java Example ) Join Query Performance enhancement 1 : GeoSpark provides a new Quad-Tree Spatial Partitioning method to speed up Join Query. Users need to pass GridType.QUADTREE parameter to RDD1.spatialPartitioning() function. Then users need to use RDD1.partitionTree in RDD2.spatialPartitioning() function. This Quad-Tree partitioning method (1) avoids overflowed spatial objects when partitioning spatial objects. (2) checking a spatial object against the Quad-Tree grids is completed in a log complexity tree search. ( Scala Example , Java Example ) Join Query Performance enhancement 2 : Internally, GeoSpark uses zipPartitions instead of CoGroup to join two Spatial RDD so that the incurred shuffle overhead decreases. SpatialRDD Initialization Performance enhancement : GeoSpark uses mapPartition instead of flatMapToPair to generate Spatial Objects. This will speed up the calculation. API changed : Since it chooses mapPartition API in mappers, GeoSpark no longer supports the old user supplified format mapper. However, if you are using your own format mapper for old GeoSpark version, you just need to add one more loop to fit in GeoSpark 0.8.0. Please see GeoSpark user supplied format mapper examples Alternative SpatialRDD constructor added : GeoSpark no longer forces users to provide StorageLevel parameter in their SpatialRDD constructors. This will siginicantly accelerate all Spatial RDD initialization. If he only needs Spatial Range Query and KNN query, the user can totally remove this parameter from their constructors. If he needs Spatial Join Query or Distance Join Query but he knows his dataset boundary and approximate total count, the user can also remove StorageLevel parameter and append a Envelope type dataset boundary and an approxmiate total count as additional parameters. If he needs Spatial Join Query or Distance Join Query but knows nothing about his dataset , the user still has to pass StorageLevel parameter. Bug fix : Fix bug Issue #97 and Issue #100 .","title":"v0.8.0 (GeoSpark-core)"},{"location":"setup/release-notes/#v01-v07","text":"Version Summary 0.7.0 Coordinate Reference System (CRS) Transformation (aka. Coordinate projection) added: GeoSpark allows users to transform the original CRS (e.g., degree based coordinates such as EPSG:4326 and WGS84) to any other CRS (e.g., meter based coordinates such as EPSG:3857) so that it can accurately process both geographic data and geometrical data. Please specify your desired CRS in GeoSpark Spatial RDD constructor ( Example ); Unnecessary dependencies removed : NetCDF/HDF support depends on SerNetCDF . SetNetCDF becomes optional dependency to reduce fat jar size; Default JDK/JRE change to JDK/JRE 1.8 : To satisfy CRS transformation requirement, GeoSpark is compiled by JDK 1.8 by default; Bug fix : fix a small format bug when output spatial RDD to disk. 0.6.2 New input format added: Add a new input format mapper called EarthdataHDFPointMapper so that GeoSpark can load, query and save NASA Petabytes NetCDF/HDF Earth Data ( Scala Example , Java Example ); Bug fix: Print UserData attribute when output Spatial RDDs as GeoJSON or regular text file 0.6.1 Bug fixes: Fix typos LineString DistanceJoin API 0.6.0 Major updates: (1) DistanceJoin is merged into JoinQuery. GeoSpark now supports complete DistanceJoin between Points, Polygons, and LineStrings. (2) Add Refine Phase to Spatial Range and Join Query. Use real polygon coordinates instead of its MBR to filter the final results. API changes: All spatial range and join queries now take a parameter called ConsiderBoundaryIntersection . This will tell GeoSpark whether returns the objects intersect with windows. 0.5.3 Bug fix: Fix Issue #69 : Now, if two objects have the same coordinates but different non-spatial attributes (UserData), GeoSpark treats them as different objects. 0.5.2 Bug fix: Fix Issue #58 and Issue #60 ; Performance enhancement: (1) Deprecate all old Spatial RDD constructors. See the JavaDoc here . (2) Recommend the new SRDD constructors which take an additional RDD storage level and automatically cache rawSpatialRDD to accelerate internal SRDD analyze step 0.5.1 Bug fix: (1) GeoSpark: Fix inaccurate KNN result when K is large (2) GeoSpark: Replace incompatible Spark API call Issue #55 ; (3) Babylon: Remove JPG output format temporarily due to the lack of OpenJDK support 0.5.0 Major updates: We are pleased to announce the initial version of Babylon a large-scale in-memory geospatial visualization system extending GeoSpark. Babylon and GeoSpark are integrated together. You can just import GeoSpark and enjoy! More details are available here: Babylon GeoSpatial Visualization 0.4.0 Major updates: ( Example ) 1. Refactor constrcutor API usage. 2. Simplify Spatial Join Query API. 3. Add native support for LineStringRDD; Functionality enhancement: 1. Release the persist function back to users. 2. Add more exception explanations. 0.3.2 Functionality enhancement: 1. JTSplus Spatial Objects now carry the original input data. Each object stores \"UserData\" and provides getter and setter. 2. Add a new SpatialRDD constructor to transform a regular data RDD to a spatial partitioned SpatialRDD. 0.3.1 Bug fix: Support Apache Spark 2.X version, fix a bug which results in inaccurate results when doing join query, add more unit test cases 0.3 Major updates: Significantly shorten query time on spatial join for skewed data; Support load balanced spatial partitioning methods (also serve as the global index); Optimize code for iterative spatial data mining 0.2 Improve code structure and refactor API 0.1 Support spatial range, join and Knn","title":"v0.1 - v0.7"},{"location":"setup/release-notes/#geospark-viz-old","text":"Version Summary 0.2.2 Add the support of new output storage : Now the user is able to output gigapixel or megapixel resolution images (image tiles or stitched single image) to HDFS and Amazon S3. Please use the new ImageGenerator not the BabylonImageGenerator class. 0.2.1 Performance enhancement : significantly accelerate single image generation pipeline. Bug fix :fix a bug in scatter plot parallel rendering. 0.2.0 API updates for Issue #80 : 1. Babylon now has two different OverlayOperators for raster image and vector image: RasterOverlayOperator and VectorOverlayOperator; 2. Babylon merged old SparkImageGenerator and NativeJavaGenerator into a new BabylonImageGenerator which has neat APIs; New feature: Babylon can use Scatter Plot to visualize NASA Petabytes NetCDF/HDF format Earth Data. ( Scala Example , Java Example ) 0.1.1 Major updates: Babylon supports vector image and outputs SVG image format 0.1.0 Major updates: Babylon initial version supports raster images","title":"GeoSpark-Viz (old)"},{"location":"setup/zeppelin/","text":"Install Sedona-Zeppelin \u00b6 Warning Known issue : due to an issue in Leaflet JS, Sedona can only plot each geometry (point, line string and polygon) as a point on Zeppelin map. To enjoy the scalable and full-fleged visualization, please use SedonaViz to plot scatter plots and heat maps on Zeppelin map. Compatibility \u00b6 Apache Spark 2.3+ Apache Zeppelin 0.8.1+ Sedona 1.0.0+: Sedona-core, Sedona-SQL, Sedona-Viz Installation \u00b6 Note You only need to do Step 1 and 2 only if you cannot see Apache-sedona or GeoSpark Zeppelin in Zeppelin Helium package list. Create Helium folder (optional) \u00b6 Create a folder called helium in Zeppelin root folder. Add Sedona-Zeppelin description (optional) \u00b6 Create a file called sedona-zeppelin.json in this folder and put the following content in this file. You need to change the artifact path! { \"type\": \"VISUALIZATION\", \"name\": \"sedona-zeppelin\", \"description\": \"Zeppelin visualization support for Sedona\", \"artifact\": \"/Absolute/Path/incubator-sedona/zeppelin\", \"license\": \"BSD-2-Clause\", \"icon\": \"<i class='fa fa-globe'></i>\" } Enable Sedona-Zeppelin \u00b6 Restart Zeppelin then open Zeppelin Helium interface and enable Sedona-Zeppelin. Add Sedona dependencies in Zeppelin Spark Interpreter \u00b6 Visualize SedonaSQL results \u00b6 Display SedonaViz results \u00b6 Now, you are good to go! Please read Sedona-Zeppelin tutorial for a hands-on tutorial.","title":"Install Sedona-Zeppelin"},{"location":"setup/zeppelin/#install-sedona-zeppelin","text":"Warning Known issue : due to an issue in Leaflet JS, Sedona can only plot each geometry (point, line string and polygon) as a point on Zeppelin map. To enjoy the scalable and full-fleged visualization, please use SedonaViz to plot scatter plots and heat maps on Zeppelin map.","title":"Install Sedona-Zeppelin"},{"location":"setup/zeppelin/#compatibility","text":"Apache Spark 2.3+ Apache Zeppelin 0.8.1+ Sedona 1.0.0+: Sedona-core, Sedona-SQL, Sedona-Viz","title":"Compatibility"},{"location":"setup/zeppelin/#installation","text":"Note You only need to do Step 1 and 2 only if you cannot see Apache-sedona or GeoSpark Zeppelin in Zeppelin Helium package list.","title":"Installation"},{"location":"setup/zeppelin/#create-helium-folder-optional","text":"Create a folder called helium in Zeppelin root folder.","title":"Create Helium folder (optional)"},{"location":"setup/zeppelin/#add-sedona-zeppelin-description-optional","text":"Create a file called sedona-zeppelin.json in this folder and put the following content in this file. You need to change the artifact path! { \"type\": \"VISUALIZATION\", \"name\": \"sedona-zeppelin\", \"description\": \"Zeppelin visualization support for Sedona\", \"artifact\": \"/Absolute/Path/incubator-sedona/zeppelin\", \"license\": \"BSD-2-Clause\", \"icon\": \"<i class='fa fa-globe'></i>\" }","title":"Add Sedona-Zeppelin description (optional)"},{"location":"setup/zeppelin/#enable-sedona-zeppelin","text":"Restart Zeppelin then open Zeppelin Helium interface and enable Sedona-Zeppelin.","title":"Enable Sedona-Zeppelin"},{"location":"setup/zeppelin/#add-sedona-dependencies-in-zeppelin-spark-interpreter","text":"","title":"Add Sedona dependencies in Zeppelin Spark Interpreter"},{"location":"setup/zeppelin/#visualize-sedonasql-results","text":"","title":"Visualize SedonaSQL results"},{"location":"setup/zeppelin/#display-sedonaviz-results","text":"Now, you are good to go! Please read Sedona-Zeppelin tutorial for a hands-on tutorial.","title":"Display SedonaViz results"},{"location":"setup/flink/install-scala/","text":"Before starting the Sedona journey, you need to make sure your Apache Flink cluster is ready. Then you can create a self-contained Scala / Java project. A self-contained project allows you to create multiple Scala / Java files and write complex logics in one place. To use Sedona in your self-contained Flink project, you just need to add Sedona as a dependency in your POM.xml or build.sbt. To add Sedona as dependencies, please read Sedona Maven Central coordinates Read Sedona Flink guide and use Sedona Template project to start: Sedona Template Project Compile your project using Maven. Make sure you obtain the fat jar which packages all dependencies. Submit your compiled fat jar to Flink cluster. Make sure you are in the root folder of Flink distribution. Then run the following command: ./bin/flink run /Path/To/YourJar.jar","title":"Install Sedona Scala/Java"},{"location":"setup/flink/modules/","text":"Sedona modules for Apache Flink \u00b6 Name Introduction Core Spatial query algorithms, data readers/writers SQL Spatial SQL function implementation Flink Spatial Table and DataStream implementation API availability \u00b6 DataStream Table Scala/Java \u2705 \u2705 Python no no R no no","title":"Modules"},{"location":"setup/flink/modules/#sedona-modules-for-apache-flink","text":"Name Introduction Core Spatial query algorithms, data readers/writers SQL Spatial SQL function implementation Flink Spatial Table and DataStream implementation","title":"Sedona modules for Apache Flink"},{"location":"setup/flink/modules/#api-availability","text":"DataStream Table Scala/Java \u2705 \u2705 Python no no R no no","title":"API availability"},{"location":"setup/flink/platform/","text":"Sedona Flink binary releases are compiled by Java 1.8 and Scala 2.12/2.11, and tested in the following environments: Sedona Scala/Java Flink 1.12 Flink 1.13 Flink 1.14 Scala 2.12 \u2705 \u2705 \u2705 Scala 2.11 \u2705 \u2705 \u2705","title":"Language wrappers"},{"location":"tutorial/Advanced-Tutorial-Tune-your-Application/","text":"Advanced tutorial: Tune your Sedona RDD application \u00b6 Before getting into this advanced tutorial, please make sure that you have tried several Sedona functions on your local machine. Pick a proper Sedona version \u00b6 The versions of Sedona have three levels: X.X.X (i.e., 0.8.1) The first level means that this version contains big structure redesign which may bring big changes in APIs and performance. The second level (i.e., 0.8) indicates that this version contains significant performance enhancement, big new features and API changes. An old Sedona user who wants to pick this version needs to be careful about the API changes. Before you move to this version, please read Sedona version release notes and make sure you are ready to accept the API changes. The third level (i.e., 0.8.1) tells that this version only contains bug fixes, some small new features and slight performance enhancement. This version will not contain any API changes. Moving to this version is safe. We highly suggest all Sedona users that stay at the same level move to the latest version in this level. Choose a proper Spatial RDD constructor \u00b6 Sedona provides a number of constructors for each SpatialRDD (PointRDD, PolygonRDD and LineStringRDD). In general, you have two options to start with. Initialize a SpatialRDD from your data source such as HDFS and S3. A typical example is as follows: public PointRDD ( JavaSparkContext sparkContext , String InputLocation , Integer Offset , FileDataSplitter splitter , boolean carryInputData , Integer partitions , StorageLevel newLevel ) Initialize a SpatialRDD from an existing RDD. A typical example is as follows: public PointRDD ( JavaRDD < Point > rawSpatialRDD , StorageLevel newLevel ) You may notice that these constructors all take as input a \"StorageLevel\" parameter. This is to tell Apache Spark cache the \"rawSpatialRDD\", one attribute of SpatialRDD. The reason why Sedona does this is that Sedona wants to calculate the dataset boundary and approximate total count using several Apache Spark \"Action\"s. These information are useful when doing Spatial Join Query and Distance Join Query. However, in some cases, you may know well about your datasets. If so, you can manually provide these information by calling this kind of Spatial RDD constructors: public PointRDD ( JavaSparkContext sparkContext , String InputLocation , Integer Offset , FileDataSplitter splitter , boolean carryInputData , Integer partitions , Envelope datasetBoundary , Integer approximateTotalCount ) { Manually providing the dataset boundary and approximate total count helps Sedona avoiding several slow \"Action\"s during initialization. Cache the Spatial RDD that is repeatedly used \u00b6 Each SpatialRDD (PointRDD, PolygonRDD and LineStringRDD) possesses four RDD attributes. They are: rawSpatialRDD: The RDD generated by SpatialRDD constructors. spatialPartitionedRDD: The RDD generated by spatial partition a rawSpatialRDD. Note that: this RDD has replicated spatial objects. indexedRawRDD: The RDD generated by indexing a rawSpatialRDD. indexedRDD: The RDD generated by indexing a spatialPartitionedRDD. Note that: this RDD has replicated spatial objects. These four RDDs don't co-exist so you don't need to worry about the memory issue. These four RDDs are invoked in different queries: Spatial Range Query / KNN Query, no index: rawSpatialRDD is used. Spatial Range Query / KNN Query, use index: indexedRawRDD is used. Spatial Join Query / Distance Join Query, no index: spatialPartitionedRDD is used. Spatial Join Query / Distance Join Query, use index: indexed RDD is used. Therefore, if you use one of the queries above many times, you'd better cache the associated RDD into memory. There are several possible use cases: In Spatial Data Mining such as Spatial Autocorrelation and Spatial Co-location Pattern Mining, you may need to use Spatial Join / Spatial Self-join iteratively in order to calculate the adjacency matrix. If so, please cache the spatialPartitionedRDD/indexedRDD which is queries many times. In Spark RDD sharing applications such as Livy and Spark Job Server , many users may do Spatial Range Query / KNN Query on the same Spatial RDD with different query predicates. You'd better cache the rawSpatialRDD/indexedRawRDD. Be aware of Spatial RDD partitions \u00b6 Sometimes users complain that the execution time is slow in some cases. As the first step, you should always consider increasing the number of your SpatialRDD partitions (2 - 8 times more than the original number). You can do this when you initialize a SpatialRDD. This may significantly improve your performance. After that, you may consider tuning some other parameters in Apache Spark. For example, you may use Kyro serializer or change the RDD fraction that is cached into memory.","title":"Tune RDD application"},{"location":"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application","text":"Before getting into this advanced tutorial, please make sure that you have tried several Sedona functions on your local machine.","title":"Advanced tutorial: Tune your Sedona RDD application"},{"location":"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version","text":"The versions of Sedona have three levels: X.X.X (i.e., 0.8.1) The first level means that this version contains big structure redesign which may bring big changes in APIs and performance. The second level (i.e., 0.8) indicates that this version contains significant performance enhancement, big new features and API changes. An old Sedona user who wants to pick this version needs to be careful about the API changes. Before you move to this version, please read Sedona version release notes and make sure you are ready to accept the API changes. The third level (i.e., 0.8.1) tells that this version only contains bug fixes, some small new features and slight performance enhancement. This version will not contain any API changes. Moving to this version is safe. We highly suggest all Sedona users that stay at the same level move to the latest version in this level.","title":"Pick a proper Sedona version"},{"location":"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor","text":"Sedona provides a number of constructors for each SpatialRDD (PointRDD, PolygonRDD and LineStringRDD). In general, you have two options to start with. Initialize a SpatialRDD from your data source such as HDFS and S3. A typical example is as follows: public PointRDD ( JavaSparkContext sparkContext , String InputLocation , Integer Offset , FileDataSplitter splitter , boolean carryInputData , Integer partitions , StorageLevel newLevel ) Initialize a SpatialRDD from an existing RDD. A typical example is as follows: public PointRDD ( JavaRDD < Point > rawSpatialRDD , StorageLevel newLevel ) You may notice that these constructors all take as input a \"StorageLevel\" parameter. This is to tell Apache Spark cache the \"rawSpatialRDD\", one attribute of SpatialRDD. The reason why Sedona does this is that Sedona wants to calculate the dataset boundary and approximate total count using several Apache Spark \"Action\"s. These information are useful when doing Spatial Join Query and Distance Join Query. However, in some cases, you may know well about your datasets. If so, you can manually provide these information by calling this kind of Spatial RDD constructors: public PointRDD ( JavaSparkContext sparkContext , String InputLocation , Integer Offset , FileDataSplitter splitter , boolean carryInputData , Integer partitions , Envelope datasetBoundary , Integer approximateTotalCount ) { Manually providing the dataset boundary and approximate total count helps Sedona avoiding several slow \"Action\"s during initialization.","title":"Choose a proper Spatial RDD constructor"},{"location":"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used","text":"Each SpatialRDD (PointRDD, PolygonRDD and LineStringRDD) possesses four RDD attributes. They are: rawSpatialRDD: The RDD generated by SpatialRDD constructors. spatialPartitionedRDD: The RDD generated by spatial partition a rawSpatialRDD. Note that: this RDD has replicated spatial objects. indexedRawRDD: The RDD generated by indexing a rawSpatialRDD. indexedRDD: The RDD generated by indexing a spatialPartitionedRDD. Note that: this RDD has replicated spatial objects. These four RDDs don't co-exist so you don't need to worry about the memory issue. These four RDDs are invoked in different queries: Spatial Range Query / KNN Query, no index: rawSpatialRDD is used. Spatial Range Query / KNN Query, use index: indexedRawRDD is used. Spatial Join Query / Distance Join Query, no index: spatialPartitionedRDD is used. Spatial Join Query / Distance Join Query, use index: indexed RDD is used. Therefore, if you use one of the queries above many times, you'd better cache the associated RDD into memory. There are several possible use cases: In Spatial Data Mining such as Spatial Autocorrelation and Spatial Co-location Pattern Mining, you may need to use Spatial Join / Spatial Self-join iteratively in order to calculate the adjacency matrix. If so, please cache the spatialPartitionedRDD/indexedRDD which is queries many times. In Spark RDD sharing applications such as Livy and Spark Job Server , many users may do Spatial Range Query / KNN Query on the same Spatial RDD with different query predicates. You'd better cache the rawSpatialRDD/indexedRawRDD.","title":"Cache the Spatial RDD that is repeatedly used"},{"location":"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions","text":"Sometimes users complain that the execution time is slow in some cases. As the first step, you should always consider increasing the number of your SpatialRDD partitions (2 - 8 times more than the original number). You can do this when you initialize a SpatialRDD. This may significantly improve your performance. After that, you may consider tuning some other parameters in Apache Spark. For example, you may use Kyro serializer or change the RDD fraction that is cached into memory.","title":"Be aware of Spatial RDD partitions"},{"location":"tutorial/benchmark/","text":"Benchmark \u00b6 We welcome people to use Sedona for benchmark purpose. To achieve the best performance or enjoy all features of Sedona, Please always use the latest version or state the version used in your benchmark so that we can trace back to the issues. Please consider using Sedona core instead of Sedona SQL. Due to the limitation of SparkSQL (for instance, not support clustered index), we are not able to expose all features to SparkSQL. Please open Sedona kryo serializer to reduce the memory footprint.","title":"Benchmark"},{"location":"tutorial/benchmark/#benchmark","text":"We welcome people to use Sedona for benchmark purpose. To achieve the best performance or enjoy all features of Sedona, Please always use the latest version or state the version used in your benchmark so that we can trace back to the issues. Please consider using Sedona core instead of Sedona SQL. Due to the limitation of SparkSQL (for instance, not support clustered index), we are not able to expose all features to SparkSQL. Please open Sedona kryo serializer to reduce the memory footprint.","title":"Benchmark"},{"location":"tutorial/core-python/","text":"Spatial RDD Applications in Python \u00b6 Introduction \u00b6 Sedona provides a Python wrapper on Sedona core Java/Scala library. Sedona SpatialRDDs (and other classes when it was necessary) have implemented meta classes which allow to use overloaded functions, methods and constructors to be the most similar to Java/Scala API as possible. Apache Sedona core provides five special SpatialRDDs: PointRDD PolygonRDD LineStringRDD CircleRDD RectangleRDD All of them can be imported from sedona.core.SpatialRDD module sedona has written serializers which convert Sedona SpatialRDD to Python objects. Converting will produce GeoData objects which have 2 attributes: geom: shapely.geometry.BaseGeometry userData: str geom attribute holds geometry representation as shapely objects. userData is string representation of other attributes separated by \"\\t\" GeoData has one method to get user data. getUserData() -> str Note This tutorial is based on Sedona Core Jupyter Notebook example . You can interact with Sedona Python Jupyter notebook immediately on Binder. Click and wait for a few minutes. Then select a notebook and enjoy! Installation \u00b6 Please read Quick start to install Sedona Python. Apache Sedona Serializers \u00b6 Sedona has a suite of well-written geometry and index serializers. Forgetting to enable these serializers will lead to high memory consumption. conf . set ( \"spark.serializer\" , KryoSerializer . getName ) conf . set ( \"spark.kryo.registrator\" , SedonaKryoRegistrator . getName ) sc = SparkContext ( conf = conf ) Create a SpatialRDD \u00b6 Create a typed SpatialRDD \u00b6 Apache Sedona core provides three special SpatialRDDs: PointRDD PolygonRDD LineStringRDD CircleRDD RectangleRDD They can be loaded from CSV, TSV, WKT, WKB, Shapefiles, GeoJSON formats. To pass the format to SpatialRDD constructor please use FileDataSplitter enumeration. sedona SpatialRDDs (and other classes when it was necessary) have implemented meta classes which allow to use overloaded functions how Scala/Java Apache Sedona API allows. ex. from pyspark import StorageLevel from sedona.core.SpatialRDD import PointRDD from sedona.core.enums import FileDataSplitter input_location = \"checkin.csv\" offset = 0 # The point long/lat starts from Column 0 splitter = FileDataSplitter . CSV # FileDataSplitter enumeration carry_other_attributes = True # Carry Column 2 (hotel, gas, bar...) level = StorageLevel . MEMORY_ONLY # Storage level from pyspark s_epsg = \"epsg:4326\" # Source epsg code t_epsg = \"epsg:5070\" # target epsg code point_rdd = PointRDD ( sc , input_location , offset , splitter , carry_other_attributes ) point_rdd = PointRDD ( sc , input_location , splitter , carry_other_attributes , level , s_epsg , t_epsg ) point_rdd = PointRDD ( sparkContext = sc , InputLocation = input_location , Offset = offset , splitter = splitter , carryInputData = carry_other_attributes ) From SparkSQL DataFrame \u00b6 To create spatialRDD from other formats you can use adapter between Spark DataFrame and SpatialRDD Load data in SedonaSQL. csv_point_input_location = \"/tests/resources/county_small.tsv\" df = spark . read . \\ format ( \"csv\" ) . \\ option ( \"delimiter\" , \" \\t \" ) . \\ option ( \"header\" , \"false\" ) . \\ load ( csv_point_input_location ) df . createOrReplaceTempView ( \"counties\" ) Create a Geometry type column in SedonaSQL spatial_df = spark . sql ( \"\"\" SELECT ST_GeomFromWKT(_c0) as geom, _c6 as county_name FROM counties \"\"\" ) spatial_df . printSchema () root |-- geom: geometry (nullable = false) |-- county_name: string (nullable = true) Use SedonaSQL DataFrame-RDD Adapter to convert a DataFrame to an SpatialRDD Note that, you have to name your column geometry from sedona.utils.adapter import Adapter spatial_rdd = Adapter . toSpatialRdd ( spatial_df ) spatial_rdd . analyze () spatial_rdd . boundaryEnvelope <sedona.core.geom_types.Envelope object at 0x7f1e5f29fe10> or pass Geometry column name as a second argument spatial_rdd = Adapter . toSpatialRdd ( spatial_df , \"geom\" ) For WKT/WKB/GeoJSON data, please use ST_GeomFromWKT / ST_GeomFromWKB / ST_GeomFromGeoJSON instead. Read other attributes in an SpatialRDD \u00b6 Each SpatialRDD can carry non-spatial attributes such as price, age and name as long as the user sets carryOtherAttributes as TRUE . The other attributes are combined together to a string and stored in UserData field of each geometry. To retrieve the UserData field, use the following code: rdd_with_other_attributes = object_rdd . rawSpatialRDD . map ( lambda x : x . getUserData ()) Write a Spatial Range Query \u00b6 from sedona.core.geom.envelope import Envelope from sedona.core.spatialOperator import RangeQuery range_query_window = Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) consider_boundary_intersection = False ## Only return gemeotries fully covered by the window using_index = False query_result = RangeQuery . SpatialRangeQuery ( spatial_rdd , range_query_window , consider_boundary_intersection , using_index ) Note Please use RangeQueryRaw from the same module if you want to avoid jvm python serde while converting to Spatial DataFrame It takes the same parameters as RangeQuery but returns reference to jvm rdd which can be converted to dataframe without python - jvm serde using Adapter. Example: from sedona.core.geom.envelope import Envelope from sedona.core.spatialOperator import RangeQueryRaw from sedona.utils.adapter import Adapter range_query_window = Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) consider_boundary_intersection = False ## Only return gemeotries fully covered by the window using_index = False query_result = RangeQueryRaw . SpatialRangeQuery ( spatial_rdd , range_query_window , consider_boundary_intersection , using_index ) gdf = Adapter . toDf ( query_result , spark , [ \"col1\" , ... , \"coln\" ]) Range query window \u00b6 Besides the rectangle (Envelope) type range query window, Apache Sedona range query window can be Point Polygon LineString To create shapely geometries please follow Shapely official docs Use spatial indexes \u00b6 Sedona provides two types of spatial indexes, Quad-Tree R-Tree Once you specify an index type, Sedona will build a local tree index on each of the SpatialRDD partition. To utilize a spatial index in a spatial range query, use the following code: from sedona.core.geom.envelope import Envelope from sedona.core.enums import IndexType from sedona.core.spatialOperator import RangeQuery range_query_window = Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) consider_boundary_intersection = False ## Only return gemeotries fully covered by the window build_on_spatial_partitioned_rdd = False ## Set to TRUE only if run join query spatial_rdd . buildIndex ( IndexType . QUADTREE , build_on_spatial_partitioned_rdd ) using_index = True query_result = RangeQuery . SpatialRangeQuery ( spatial_rdd , range_query_window , consider_boundary_intersection , using_index ) Output format \u00b6 The output format of the spatial range query is another RDD which consists of GeoData objects. SpatialRangeQuery result can be used as RDD with map or other spark RDD funtions. Also it can be used as Python objects when using collect method. Example: query_result . map ( lambda x : x . geom . length ) . collect () [ 1.5900840000000045, 1.5906639999999896, 1.1110299999999995, 1.1096700000000084, 1.1415619999999933, 1.1386399999999952, 1.1415619999999933, 1.1418860000000137, 1.1392780000000045, ... ] Or transformed to GeoPandas GeoDataFrame import geopandas as gpd gpd . GeoDataFrame ( query_result . map ( lambda x : [ x . geom , x . userData ]) . collect (), columns = [ \"geom\" , \"user_data\" ], geometry = \"geom\" ) Write a Spatial KNN Query \u00b6 A spatial K Nearnest Neighbor query takes as input a K, a query point and an SpatialRDD and finds the K geometries in the RDD which are the closest to he query point. Assume you now have an SpatialRDD (typed or generic). You can use the following code to issue an Spatial KNN Query on it. from sedona.core.spatialOperator import KNNQuery from shapely.geometry import Point point = Point ( - 84.01 , 34.01 ) k = 1000 ## K Nearest Neighbors using_index = False result = KNNQuery . SpatialKnnQuery ( object_rdd , point , k , using_index ) Query center geometry \u00b6 Besides the Point type, Apache Sedona KNN query center can be Polygon LineString To create Polygon or Linestring object please follow Shapely official docs Use spatial indexes \u00b6 To utilize a spatial index in a spatial KNN query, use the following code: from sedona.core.spatialOperator import KNNQuery from sedona.core.enums import IndexType from shapely.geometry import Point point = Point ( - 84.01 , 34.01 ) k = 5 ## K Nearest Neighbors build_on_spatial_partitioned_rdd = False ## Set to TRUE only if run join query spatial_rdd . buildIndex ( IndexType . RTREE , build_on_spatial_partitioned_rdd ) using_index = True result = KNNQuery . SpatialKnnQuery ( spatial_rdd , point , k , using_index ) Warning Only R-Tree index supports Spatial KNN query Output format \u00b6 The output format of the spatial KNN query is a list of GeoData objects. The list has K GeoData objects. Example: >> result [ GeoData , GeoData , GeoData , GeoData , GeoData ] Write a Spatial Join Query \u00b6 A spatial join query takes as input two Spatial RDD A and B. For each geometry in A, finds the geometries (from B) covered/intersected by it. A and B can be any geometry type and are not necessary to have the same geometry type. Assume you now have two SpatialRDDs (typed or generic). You can use the following code to issue an Spatial Join Query on them. from sedona.core.enums import GridType from sedona.core.spatialOperator import JoinQuery consider_boundary_intersection = False ## Only return geometries fully covered by each query window in queryWindowRDD using_index = False object_rdd . analyze () object_rdd . spatialPartitioning ( GridType . KDBTREE ) query_window_rdd . spatialPartitioning ( object_rdd . getPartitioner ()) result = JoinQuery . SpatialJoinQuery ( object_rdd , query_window_rdd , using_index , consider_boundary_intersection ) Result of SpatialJoinQuery is RDD which consists of GeoData instance and list of GeoData instances which spatially intersects or are covered by GeoData. result . collect ()) [ [GeoData, [GeoData, GeoData, GeoData, GeoData]], [GeoData, [GeoData, GeoData, GeoData]], [GeoData, [GeoData]], [GeoData, [GeoData, GeoData]], ... [GeoData, [GeoData, GeoData]] ] Use spatial partitioning \u00b6 Apache Sedona spatial partitioning method can significantly speed up the join query. Three spatial partitioning methods are available: KDB-Tree, Quad-Tree and R-Tree. Two SpatialRDD must be partitioned by the same way. If you first partition SpatialRDD A, then you must use the partitioner of A to partition B. object_rdd . spatialPartitioning ( GridType . KDBTREE ) query_window_rdd . spatialPartitioning ( object_rdd . getPartitioner ()) Or query_window_rdd . spatialPartitioning ( GridType . KDBTREE ) object_rdd . spatialPartitioning ( query_window_rdd . getPartitioner ()) Use spatial indexes \u00b6 To utilize a spatial index in a spatial join query, use the following code: from sedona.core.enums import GridType from sedona.core.enums import IndexType from sedona.core.spatialOperator import JoinQuery object_rdd . spatialPartitioning ( GridType . KDBTREE ) query_window_rdd . spatialPartitioning ( object_rdd . getPartitioner ()) build_on_spatial_partitioned_rdd = True ## Set to TRUE only if run join query using_index = True query_window_rdd . buildIndex ( IndexType . QUADTREE , build_on_spatial_partitioned_rdd ) result = JoinQuery . SpatialJoinQueryFlat ( object_rdd , query_window_rdd , using_index , True ) The index should be built on either one of two SpatialRDDs. In general, you should build it on the larger SpatialRDD. Output format \u00b6 The output format of the spatial join query is a PairRDD. In this PairRDD, each object is a pair of two GeoData objects. The left one is the GeoData from object_rdd and the right one is the GeoData from the query_window_rdd. Point,Polygon Point,Polygon Point,Polygon Polygon,Polygon LineString,LineString Polygon,LineString ... example result . collect () [ [GeoData, GeoData], [GeoData, GeoData], [GeoData, GeoData], [GeoData, GeoData], ... [GeoData, GeoData], [GeoData, GeoData] ] Each object on the left is covered/intersected by the object on the right. Write a Distance Join Query \u00b6 A distance join query takes two spatial RDD assuming that we have two SpatialRDD's: object_rdd spatial_rdd And finds the geometries (from spatial_rdd) are within given distance to it. spatial_rdd and object_rdd can be any geometry type (point, line, polygon) and are not necessary to have the same geometry type You can use the following code to issue an Distance Join Query on them. from sedona.core.SpatialRDD import CircleRDD from sedona.core.enums import GridType from sedona.core.spatialOperator import JoinQuery object_rdd . analyze () circle_rdd = CircleRDD ( object_rdd , 0.1 ) ## Create a CircleRDD using the given distance circle_rdd . analyze () circle_rdd . spatialPartitioning ( GridType . KDBTREE ) spatial_rdd . spatialPartitioning ( circle_rdd . getPartitioner ()) consider_boundary_intersection = False ## Only return gemeotries fully covered by each query window in queryWindowRDD using_index = False result = JoinQuery . DistanceJoinQueryFlat ( spatial_rdd , circle_rdd , using_index , consider_boundary_intersection ) Note Please use JoinQueryRaw from the same module for methods spatialJoin DistanceJoinQueryFlat SpatialJoinQueryFlat For better performance while converting to dataframe with adapter. That approach allows to avoid costly serialization between Python and jvm and in result operating on python object instead of native geometries. Example: from sedona.core.SpatialRDD import CircleRDD from sedona.core.enums import GridType from sedona.core.spatialOperator import JoinQueryRaw object_rdd . analyze () circle_rdd = CircleRDD ( object_rdd , 0.1 ) ## Create a CircleRDD using the given distance circle_rdd . analyze () circle_rdd . spatialPartitioning ( GridType . KDBTREE ) spatial_rdd . spatialPartitioning ( circle_rdd . getPartitioner ()) consider_boundary_intersection = False ## Only return gemeotries fully covered by each query window in queryWindowRDD using_index = False result = JoinQueryRaw . DistanceJoinQueryFlat ( spatial_rdd , circle_rdd , using_index , consider_boundary_intersection ) gdf = Adapter . toDf ( result , [ \"left_col1\" , ... , \"lefcoln\" ], [ \"rightcol1\" , ... , \"rightcol2\" ], spark ) Output format \u00b6 Result for this query is RDD which holds two GeoData objects within list of lists. Example: result . collect () [[GeoData, GeoData], [GeoData, GeoData] ...] It is possible to do some RDD operation on result data ex. Getting polygon centroid. result . map ( lambda x : x [ 0 ] . geom . centroid ) . collect () [ <shapely.geometry.point.Point at 0x7efee2d28128>, <shapely.geometry.point.Point at 0x7efee2d280b8>, <shapely.geometry.point.Point at 0x7efee2d28fd0>, <shapely.geometry.point.Point at 0x7efee2d28080>, ... ] Save to permanent storage \u00b6 You can always save an SpatialRDD back to some permanent storage such as HDFS and Amazon S3. You can save distributed SpatialRDD to WKT, GeoJSON and object files. Note Non-spatial attributes such as price, age and name will also be stored to permanent storage. Save an SpatialRDD (not indexed) \u00b6 Typed SpatialRDD and generic SpatialRDD can be saved to permanent storage. Save to distributed WKT text file \u00b6 Use the following code to save an SpatialRDD as a distributed WKT text file: object_rdd . rawSpatialRDD . saveAsTextFile ( \"hdfs://PATH\" ) object_rdd . saveAsWKT ( \"hdfs://PATH\" ) Save to distributed WKB text file \u00b6 Use the following code to save an SpatialRDD as a distributed WKB text file: object_rdd . saveAsWKB ( \"hdfs://PATH\" ) Save to distributed GeoJSON text file \u00b6 Use the following code to save an SpatialRDD as a distributed GeoJSON text file: object_rdd . saveAsGeoJSON ( \"hdfs://PATH\" ) Save to distributed object file \u00b6 Use the following code to save an SpatialRDD as a distributed object file: object_rdd . rawJvmSpatialRDD . saveAsObjectFile ( \"hdfs://PATH\" ) Note Each object in a distributed object file is a byte array (not human-readable). This byte array is the serialized format of a Geometry or a SpatialIndex. Save an SpatialRDD (indexed) \u00b6 Indexed typed SpatialRDD and generic SpatialRDD can be saved to permanent storage. However, the indexed SpatialRDD has to be stored as a distributed object file. Save to distributed object file \u00b6 Use the following code to save an SpatialRDD as a distributed object file: object_rdd . indexedRawRDD . saveAsObjectFile ( \"hdfs://PATH\" ) Save an SpatialRDD (spatialPartitioned W/O indexed) \u00b6 A spatial partitioned RDD can be saved to permanent storage but Spark is not able to maintain the same RDD partition Id of the original RDD. This will lead to wrong join query results. We are working on some solutions. Stay tuned! Reload a saved SpatialRDD \u00b6 You can easily reload an SpatialRDD that has been saved to a distributed object file . Load to a typed SpatialRDD \u00b6 Use the following code to reload the PointRDD/PolygonRDD/LineStringRDD: from sedona.core.formatMapper.disc_utils import load_spatial_rdd_from_disc , GeoType polygon_rdd = load_spatial_rdd_from_disc ( sc , \"hdfs://PATH\" , GeoType . POLYGON ) point_rdd = load_spatial_rdd_from_disc ( sc , \"hdfs://PATH\" , GeoType . POINT ) linestring_rdd = load_spatial_rdd_from_disc ( sc , \"hdfs://PATH\" , GeoType . LINESTRING ) Load to a generic SpatialRDD \u00b6 Use the following code to reload the SpatialRDD: saved_rdd = load_spatial_rdd_from_disc ( sc , \"hdfs://PATH\" , GeoType . GEOMETRY ) Use the following code to reload the indexed SpatialRDD: saved_rdd = SpatialRDD () saved_rdd . indexedRawRDD = load_spatial_index_rdd_from_disc ( sc , \"hdfs://PATH\" ) Read from other Geometry files \u00b6 All below methods will return SpatialRDD object which can be used with Spatial functions such as Spatial Join etc. Read from WKT file \u00b6 from sedona.core.formatMapper import WktReader WktReader . readToGeometryRDD ( sc , wkt_geometries_location , 0 , True , False ) <sedona.core.SpatialRDD.spatial_rdd.SpatialRDD at 0x7f8fd2fbf250> Read from WKB file \u00b6 from sedona.core.formatMapper import WkbReader WkbReader . readToGeometryRDD ( sc , wkb_geometries_location , 0 , True , False ) <sedona.core.SpatialRDD.spatial_rdd.SpatialRDD at 0x7f8fd2eece50> Read from GeoJson file \u00b6 from sedona.core.formatMapper import GeoJsonReader GeoJsonReader . readToGeometryRDD ( sc , geo_json_file_location ) <sedona.core.SpatialRDD.spatial_rdd.SpatialRDD at 0x7f8fd2eecb90> Read from Shapefile \u00b6 from sedona.core.formatMapper.shapefileParser import ShapefileReader ShapefileReader . readToGeometryRDD ( sc , shape_file_location ) <sedona.core.SpatialRDD.spatial_rdd.SpatialRDD at 0x7f8fd2ee0710> Tips \u00b6 When you use Sedona functions such as JoinQuery.spatialJoin JoinQuery.DistanceJoinQueryFlat JoinQuery.SpatialJoinQueryFlat RangeQuery.SpatialRangeQuery For better performance when converting to dataframe you can use JoinQueryRaw and RangeQueryRaw from the same module and adapter to convert to Spatial DataFrame. Example, JoinQueryRaw: from sedona.core.SpatialRDD import CircleRDD from sedona.core.enums import GridType from sedona.core.spatialOperator import JoinQueryRaw object_rdd . analyze () circle_rdd = CircleRDD ( object_rdd , 0.1 ) ## Create a CircleRDD using the given distance circle_rdd . analyze () circle_rdd . spatialPartitioning ( GridType . KDBTREE ) spatial_rdd . spatialPartitioning ( circle_rdd . getPartitioner ()) consider_boundary_intersection = False ## Only return gemeotries fully covered by each query window in queryWindowRDD using_index = False result = JoinQueryRaw . DistanceJoinQueryFlat ( spatial_rdd , circle_rdd , using_index , consider_boundary_intersection ) gdf = Adapter . toDf ( result , [ \"left_col1\" , ... , \"lefcoln\" ], [ \"rightcol1\" , ... , \"rightcol2\" ], spark ) and RangeQueryRaw from sedona.core.geom.envelope import Envelope from sedona.core.spatialOperator import RangeQueryRaw from sedona.utils.adapter import Adapter range_query_window = Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) consider_boundary_intersection = False ## Only return gemeotries fully covered by the window using_index = False query_result = RangeQueryRaw . SpatialRangeQuery ( spatial_rdd , range_query_window , consider_boundary_intersection , using_index ) gdf = Adapter . toDf ( query_result , spark , [ \"col1\" , ... , \"coln\" ])","title":"Python"},{"location":"tutorial/core-python/#spatial-rdd-applications-in-python","text":"","title":"Spatial RDD Applications in Python"},{"location":"tutorial/core-python/#introduction","text":"Sedona provides a Python wrapper on Sedona core Java/Scala library. Sedona SpatialRDDs (and other classes when it was necessary) have implemented meta classes which allow to use overloaded functions, methods and constructors to be the most similar to Java/Scala API as possible. Apache Sedona core provides five special SpatialRDDs: PointRDD PolygonRDD LineStringRDD CircleRDD RectangleRDD All of them can be imported from sedona.core.SpatialRDD module sedona has written serializers which convert Sedona SpatialRDD to Python objects. Converting will produce GeoData objects which have 2 attributes: geom: shapely.geometry.BaseGeometry userData: str geom attribute holds geometry representation as shapely objects. userData is string representation of other attributes separated by \"\\t\" GeoData has one method to get user data. getUserData() -> str Note This tutorial is based on Sedona Core Jupyter Notebook example . You can interact with Sedona Python Jupyter notebook immediately on Binder. Click and wait for a few minutes. Then select a notebook and enjoy!","title":"Introduction"},{"location":"tutorial/core-python/#installation","text":"Please read Quick start to install Sedona Python.","title":"Installation"},{"location":"tutorial/core-python/#apache-sedona-serializers","text":"Sedona has a suite of well-written geometry and index serializers. Forgetting to enable these serializers will lead to high memory consumption. conf . set ( \"spark.serializer\" , KryoSerializer . getName ) conf . set ( \"spark.kryo.registrator\" , SedonaKryoRegistrator . getName ) sc = SparkContext ( conf = conf )","title":"Apache Sedona Serializers"},{"location":"tutorial/core-python/#create-a-spatialrdd","text":"","title":"Create a SpatialRDD"},{"location":"tutorial/core-python/#create-a-typed-spatialrdd","text":"Apache Sedona core provides three special SpatialRDDs: PointRDD PolygonRDD LineStringRDD CircleRDD RectangleRDD They can be loaded from CSV, TSV, WKT, WKB, Shapefiles, GeoJSON formats. To pass the format to SpatialRDD constructor please use FileDataSplitter enumeration. sedona SpatialRDDs (and other classes when it was necessary) have implemented meta classes which allow to use overloaded functions how Scala/Java Apache Sedona API allows. ex. from pyspark import StorageLevel from sedona.core.SpatialRDD import PointRDD from sedona.core.enums import FileDataSplitter input_location = \"checkin.csv\" offset = 0 # The point long/lat starts from Column 0 splitter = FileDataSplitter . CSV # FileDataSplitter enumeration carry_other_attributes = True # Carry Column 2 (hotel, gas, bar...) level = StorageLevel . MEMORY_ONLY # Storage level from pyspark s_epsg = \"epsg:4326\" # Source epsg code t_epsg = \"epsg:5070\" # target epsg code point_rdd = PointRDD ( sc , input_location , offset , splitter , carry_other_attributes ) point_rdd = PointRDD ( sc , input_location , splitter , carry_other_attributes , level , s_epsg , t_epsg ) point_rdd = PointRDD ( sparkContext = sc , InputLocation = input_location , Offset = offset , splitter = splitter , carryInputData = carry_other_attributes )","title":"Create a typed SpatialRDD"},{"location":"tutorial/core-python/#read-other-attributes-in-an-spatialrdd","text":"Each SpatialRDD can carry non-spatial attributes such as price, age and name as long as the user sets carryOtherAttributes as TRUE . The other attributes are combined together to a string and stored in UserData field of each geometry. To retrieve the UserData field, use the following code: rdd_with_other_attributes = object_rdd . rawSpatialRDD . map ( lambda x : x . getUserData ())","title":"Read other attributes in an SpatialRDD"},{"location":"tutorial/core-python/#write-a-spatial-range-query","text":"from sedona.core.geom.envelope import Envelope from sedona.core.spatialOperator import RangeQuery range_query_window = Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) consider_boundary_intersection = False ## Only return gemeotries fully covered by the window using_index = False query_result = RangeQuery . SpatialRangeQuery ( spatial_rdd , range_query_window , consider_boundary_intersection , using_index ) Note Please use RangeQueryRaw from the same module if you want to avoid jvm python serde while converting to Spatial DataFrame It takes the same parameters as RangeQuery but returns reference to jvm rdd which can be converted to dataframe without python - jvm serde using Adapter. Example: from sedona.core.geom.envelope import Envelope from sedona.core.spatialOperator import RangeQueryRaw from sedona.utils.adapter import Adapter range_query_window = Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) consider_boundary_intersection = False ## Only return gemeotries fully covered by the window using_index = False query_result = RangeQueryRaw . SpatialRangeQuery ( spatial_rdd , range_query_window , consider_boundary_intersection , using_index ) gdf = Adapter . toDf ( query_result , spark , [ \"col1\" , ... , \"coln\" ])","title":"Write a Spatial Range Query"},{"location":"tutorial/core-python/#range-query-window","text":"Besides the rectangle (Envelope) type range query window, Apache Sedona range query window can be Point Polygon LineString To create shapely geometries please follow Shapely official docs","title":"Range query window"},{"location":"tutorial/core-python/#use-spatial-indexes","text":"Sedona provides two types of spatial indexes, Quad-Tree R-Tree Once you specify an index type, Sedona will build a local tree index on each of the SpatialRDD partition. To utilize a spatial index in a spatial range query, use the following code: from sedona.core.geom.envelope import Envelope from sedona.core.enums import IndexType from sedona.core.spatialOperator import RangeQuery range_query_window = Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) consider_boundary_intersection = False ## Only return gemeotries fully covered by the window build_on_spatial_partitioned_rdd = False ## Set to TRUE only if run join query spatial_rdd . buildIndex ( IndexType . QUADTREE , build_on_spatial_partitioned_rdd ) using_index = True query_result = RangeQuery . SpatialRangeQuery ( spatial_rdd , range_query_window , consider_boundary_intersection , using_index )","title":"Use spatial indexes"},{"location":"tutorial/core-python/#output-format","text":"The output format of the spatial range query is another RDD which consists of GeoData objects. SpatialRangeQuery result can be used as RDD with map or other spark RDD funtions. Also it can be used as Python objects when using collect method. Example: query_result . map ( lambda x : x . geom . length ) . collect () [ 1.5900840000000045, 1.5906639999999896, 1.1110299999999995, 1.1096700000000084, 1.1415619999999933, 1.1386399999999952, 1.1415619999999933, 1.1418860000000137, 1.1392780000000045, ... ] Or transformed to GeoPandas GeoDataFrame import geopandas as gpd gpd . GeoDataFrame ( query_result . map ( lambda x : [ x . geom , x . userData ]) . collect (), columns = [ \"geom\" , \"user_data\" ], geometry = \"geom\" )","title":"Output format"},{"location":"tutorial/core-python/#write-a-spatial-knn-query","text":"A spatial K Nearnest Neighbor query takes as input a K, a query point and an SpatialRDD and finds the K geometries in the RDD which are the closest to he query point. Assume you now have an SpatialRDD (typed or generic). You can use the following code to issue an Spatial KNN Query on it. from sedona.core.spatialOperator import KNNQuery from shapely.geometry import Point point = Point ( - 84.01 , 34.01 ) k = 1000 ## K Nearest Neighbors using_index = False result = KNNQuery . SpatialKnnQuery ( object_rdd , point , k , using_index )","title":"Write a Spatial KNN Query"},{"location":"tutorial/core-python/#query-center-geometry","text":"Besides the Point type, Apache Sedona KNN query center can be Polygon LineString To create Polygon or Linestring object please follow Shapely official docs","title":"Query center geometry"},{"location":"tutorial/core-python/#use-spatial-indexes_1","text":"To utilize a spatial index in a spatial KNN query, use the following code: from sedona.core.spatialOperator import KNNQuery from sedona.core.enums import IndexType from shapely.geometry import Point point = Point ( - 84.01 , 34.01 ) k = 5 ## K Nearest Neighbors build_on_spatial_partitioned_rdd = False ## Set to TRUE only if run join query spatial_rdd . buildIndex ( IndexType . RTREE , build_on_spatial_partitioned_rdd ) using_index = True result = KNNQuery . SpatialKnnQuery ( spatial_rdd , point , k , using_index ) Warning Only R-Tree index supports Spatial KNN query","title":"Use spatial indexes"},{"location":"tutorial/core-python/#output-format_1","text":"The output format of the spatial KNN query is a list of GeoData objects. The list has K GeoData objects. Example: >> result [ GeoData , GeoData , GeoData , GeoData , GeoData ]","title":"Output format"},{"location":"tutorial/core-python/#write-a-spatial-join-query","text":"A spatial join query takes as input two Spatial RDD A and B. For each geometry in A, finds the geometries (from B) covered/intersected by it. A and B can be any geometry type and are not necessary to have the same geometry type. Assume you now have two SpatialRDDs (typed or generic). You can use the following code to issue an Spatial Join Query on them. from sedona.core.enums import GridType from sedona.core.spatialOperator import JoinQuery consider_boundary_intersection = False ## Only return geometries fully covered by each query window in queryWindowRDD using_index = False object_rdd . analyze () object_rdd . spatialPartitioning ( GridType . KDBTREE ) query_window_rdd . spatialPartitioning ( object_rdd . getPartitioner ()) result = JoinQuery . SpatialJoinQuery ( object_rdd , query_window_rdd , using_index , consider_boundary_intersection ) Result of SpatialJoinQuery is RDD which consists of GeoData instance and list of GeoData instances which spatially intersects or are covered by GeoData. result . collect ()) [ [GeoData, [GeoData, GeoData, GeoData, GeoData]], [GeoData, [GeoData, GeoData, GeoData]], [GeoData, [GeoData]], [GeoData, [GeoData, GeoData]], ... [GeoData, [GeoData, GeoData]] ]","title":"Write a Spatial Join Query"},{"location":"tutorial/core-python/#use-spatial-partitioning","text":"Apache Sedona spatial partitioning method can significantly speed up the join query. Three spatial partitioning methods are available: KDB-Tree, Quad-Tree and R-Tree. Two SpatialRDD must be partitioned by the same way. If you first partition SpatialRDD A, then you must use the partitioner of A to partition B. object_rdd . spatialPartitioning ( GridType . KDBTREE ) query_window_rdd . spatialPartitioning ( object_rdd . getPartitioner ()) Or query_window_rdd . spatialPartitioning ( GridType . KDBTREE ) object_rdd . spatialPartitioning ( query_window_rdd . getPartitioner ())","title":"Use spatial partitioning"},{"location":"tutorial/core-python/#use-spatial-indexes_2","text":"To utilize a spatial index in a spatial join query, use the following code: from sedona.core.enums import GridType from sedona.core.enums import IndexType from sedona.core.spatialOperator import JoinQuery object_rdd . spatialPartitioning ( GridType . KDBTREE ) query_window_rdd . spatialPartitioning ( object_rdd . getPartitioner ()) build_on_spatial_partitioned_rdd = True ## Set to TRUE only if run join query using_index = True query_window_rdd . buildIndex ( IndexType . QUADTREE , build_on_spatial_partitioned_rdd ) result = JoinQuery . SpatialJoinQueryFlat ( object_rdd , query_window_rdd , using_index , True ) The index should be built on either one of two SpatialRDDs. In general, you should build it on the larger SpatialRDD.","title":"Use spatial indexes"},{"location":"tutorial/core-python/#output-format_2","text":"The output format of the spatial join query is a PairRDD. In this PairRDD, each object is a pair of two GeoData objects. The left one is the GeoData from object_rdd and the right one is the GeoData from the query_window_rdd. Point,Polygon Point,Polygon Point,Polygon Polygon,Polygon LineString,LineString Polygon,LineString ... example result . collect () [ [GeoData, GeoData], [GeoData, GeoData], [GeoData, GeoData], [GeoData, GeoData], ... [GeoData, GeoData], [GeoData, GeoData] ] Each object on the left is covered/intersected by the object on the right.","title":"Output format"},{"location":"tutorial/core-python/#write-a-distance-join-query","text":"A distance join query takes two spatial RDD assuming that we have two SpatialRDD's: object_rdd spatial_rdd And finds the geometries (from spatial_rdd) are within given distance to it. spatial_rdd and object_rdd can be any geometry type (point, line, polygon) and are not necessary to have the same geometry type You can use the following code to issue an Distance Join Query on them. from sedona.core.SpatialRDD import CircleRDD from sedona.core.enums import GridType from sedona.core.spatialOperator import JoinQuery object_rdd . analyze () circle_rdd = CircleRDD ( object_rdd , 0.1 ) ## Create a CircleRDD using the given distance circle_rdd . analyze () circle_rdd . spatialPartitioning ( GridType . KDBTREE ) spatial_rdd . spatialPartitioning ( circle_rdd . getPartitioner ()) consider_boundary_intersection = False ## Only return gemeotries fully covered by each query window in queryWindowRDD using_index = False result = JoinQuery . DistanceJoinQueryFlat ( spatial_rdd , circle_rdd , using_index , consider_boundary_intersection ) Note Please use JoinQueryRaw from the same module for methods spatialJoin DistanceJoinQueryFlat SpatialJoinQueryFlat For better performance while converting to dataframe with adapter. That approach allows to avoid costly serialization between Python and jvm and in result operating on python object instead of native geometries. Example: from sedona.core.SpatialRDD import CircleRDD from sedona.core.enums import GridType from sedona.core.spatialOperator import JoinQueryRaw object_rdd . analyze () circle_rdd = CircleRDD ( object_rdd , 0.1 ) ## Create a CircleRDD using the given distance circle_rdd . analyze () circle_rdd . spatialPartitioning ( GridType . KDBTREE ) spatial_rdd . spatialPartitioning ( circle_rdd . getPartitioner ()) consider_boundary_intersection = False ## Only return gemeotries fully covered by each query window in queryWindowRDD using_index = False result = JoinQueryRaw . DistanceJoinQueryFlat ( spatial_rdd , circle_rdd , using_index , consider_boundary_intersection ) gdf = Adapter . toDf ( result , [ \"left_col1\" , ... , \"lefcoln\" ], [ \"rightcol1\" , ... , \"rightcol2\" ], spark )","title":"Write a Distance Join Query"},{"location":"tutorial/core-python/#output-format_3","text":"Result for this query is RDD which holds two GeoData objects within list of lists. Example: result . collect () [[GeoData, GeoData], [GeoData, GeoData] ...] It is possible to do some RDD operation on result data ex. Getting polygon centroid. result . map ( lambda x : x [ 0 ] . geom . centroid ) . collect () [ <shapely.geometry.point.Point at 0x7efee2d28128>, <shapely.geometry.point.Point at 0x7efee2d280b8>, <shapely.geometry.point.Point at 0x7efee2d28fd0>, <shapely.geometry.point.Point at 0x7efee2d28080>, ... ]","title":"Output format"},{"location":"tutorial/core-python/#save-to-permanent-storage","text":"You can always save an SpatialRDD back to some permanent storage such as HDFS and Amazon S3. You can save distributed SpatialRDD to WKT, GeoJSON and object files. Note Non-spatial attributes such as price, age and name will also be stored to permanent storage.","title":"Save to permanent storage"},{"location":"tutorial/core-python/#save-an-spatialrdd-not-indexed","text":"Typed SpatialRDD and generic SpatialRDD can be saved to permanent storage.","title":"Save an SpatialRDD (not indexed)"},{"location":"tutorial/core-python/#save-an-spatialrdd-indexed","text":"Indexed typed SpatialRDD and generic SpatialRDD can be saved to permanent storage. However, the indexed SpatialRDD has to be stored as a distributed object file.","title":"Save an SpatialRDD (indexed)"},{"location":"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed","text":"A spatial partitioned RDD can be saved to permanent storage but Spark is not able to maintain the same RDD partition Id of the original RDD. This will lead to wrong join query results. We are working on some solutions. Stay tuned!","title":"Save an SpatialRDD (spatialPartitioned W/O indexed)"},{"location":"tutorial/core-python/#reload-a-saved-spatialrdd","text":"You can easily reload an SpatialRDD that has been saved to a distributed object file .","title":"Reload a saved SpatialRDD"},{"location":"tutorial/core-python/#read-from-other-geometry-files","text":"All below methods will return SpatialRDD object which can be used with Spatial functions such as Spatial Join etc.","title":"Read from other Geometry files"},{"location":"tutorial/core-python/#read-from-wkt-file","text":"from sedona.core.formatMapper import WktReader WktReader . readToGeometryRDD ( sc , wkt_geometries_location , 0 , True , False ) <sedona.core.SpatialRDD.spatial_rdd.SpatialRDD at 0x7f8fd2fbf250>","title":"Read from WKT file"},{"location":"tutorial/core-python/#read-from-wkb-file","text":"from sedona.core.formatMapper import WkbReader WkbReader . readToGeometryRDD ( sc , wkb_geometries_location , 0 , True , False ) <sedona.core.SpatialRDD.spatial_rdd.SpatialRDD at 0x7f8fd2eece50>","title":"Read from WKB file"},{"location":"tutorial/core-python/#read-from-geojson-file","text":"from sedona.core.formatMapper import GeoJsonReader GeoJsonReader . readToGeometryRDD ( sc , geo_json_file_location ) <sedona.core.SpatialRDD.spatial_rdd.SpatialRDD at 0x7f8fd2eecb90>","title":"Read from GeoJson file"},{"location":"tutorial/core-python/#read-from-shapefile","text":"from sedona.core.formatMapper.shapefileParser import ShapefileReader ShapefileReader . readToGeometryRDD ( sc , shape_file_location ) <sedona.core.SpatialRDD.spatial_rdd.SpatialRDD at 0x7f8fd2ee0710>","title":"Read from Shapefile"},{"location":"tutorial/core-python/#tips","text":"When you use Sedona functions such as JoinQuery.spatialJoin JoinQuery.DistanceJoinQueryFlat JoinQuery.SpatialJoinQueryFlat RangeQuery.SpatialRangeQuery For better performance when converting to dataframe you can use JoinQueryRaw and RangeQueryRaw from the same module and adapter to convert to Spatial DataFrame. Example, JoinQueryRaw: from sedona.core.SpatialRDD import CircleRDD from sedona.core.enums import GridType from sedona.core.spatialOperator import JoinQueryRaw object_rdd . analyze () circle_rdd = CircleRDD ( object_rdd , 0.1 ) ## Create a CircleRDD using the given distance circle_rdd . analyze () circle_rdd . spatialPartitioning ( GridType . KDBTREE ) spatial_rdd . spatialPartitioning ( circle_rdd . getPartitioner ()) consider_boundary_intersection = False ## Only return gemeotries fully covered by each query window in queryWindowRDD using_index = False result = JoinQueryRaw . DistanceJoinQueryFlat ( spatial_rdd , circle_rdd , using_index , consider_boundary_intersection ) gdf = Adapter . toDf ( result , [ \"left_col1\" , ... , \"lefcoln\" ], [ \"rightcol1\" , ... , \"rightcol2\" ], spark ) and RangeQueryRaw from sedona.core.geom.envelope import Envelope from sedona.core.spatialOperator import RangeQueryRaw from sedona.utils.adapter import Adapter range_query_window = Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) consider_boundary_intersection = False ## Only return gemeotries fully covered by the window using_index = False query_result = RangeQueryRaw . SpatialRangeQuery ( spatial_rdd , range_query_window , consider_boundary_intersection , using_index ) gdf = Adapter . toDf ( query_result , spark , [ \"col1\" , ... , \"coln\" ])","title":"Tips"},{"location":"tutorial/demo/","text":"Scala and Java Examples \u00b6 Scala and Java Examples contains template projects for RDD, SQL and Viz. The template projects have been configured properly. Note that, although the template projects are written in Scala, the same APIs can be used in Java as well. Folder structure \u00b6 The folder structure of this repository is as follows. rdd-colocation-mining: a scala template shows how to use Sedona RDD API in Spatial Data Mining sql: a scala template shows how to use Sedona DataFrame and SQL API viz: a scala template shows how to use Sedona Viz RDD and SQL API Compile and package \u00b6 Prerequisites \u00b6 Please make sure you have the following software installed on your local machine: For Scala: Scala 2.12, SBT For Java: JDK 1.8, Apache Maven 3 Compile \u00b6 Run a terminal command sbt assembly within the folder of each template Submit your fat jar to Spark \u00b6 After running the command mentioned above, you are able to see a fat jar in ./target folder. Please take it and use ./bin/spark-submit to submit this jar. To run the jar in this way, you need to: Either change Spark Master Address in template projects or simply delete it. Currently, they are hard coded to local[*] which means run locally with all cores. Change the dependency packaging scope of Apache Spark from \"compile\" to \"provided\". This is a common packaging strategy in Maven and SBT which means do not package Spark into your fat jar. Otherwise, this may lead to a huge jar and version conflicts! Make sure the dependency versions in build.sbt are consistent with your Spark version. Run template projects locally \u00b6 We highly suggest you use IDEs to run template projects on your local machine. For Scala, we recommend IntelliJ IDEA with Scala plug-in. For Java, we recommend IntelliJ IDEA and Eclipse. With the help of IDEs, you don't have to prepare anything (even don't need to download and set up Spark!). As long as you have Scala and Java, everything works properly! Scala \u00b6 Import the Scala template project as SBT project. Then run the Main file in this project.","title":"Scala/Java"},{"location":"tutorial/demo/#scala-and-java-examples","text":"Scala and Java Examples contains template projects for RDD, SQL and Viz. The template projects have been configured properly. Note that, although the template projects are written in Scala, the same APIs can be used in Java as well.","title":"Scala and Java Examples"},{"location":"tutorial/demo/#folder-structure","text":"The folder structure of this repository is as follows. rdd-colocation-mining: a scala template shows how to use Sedona RDD API in Spatial Data Mining sql: a scala template shows how to use Sedona DataFrame and SQL API viz: a scala template shows how to use Sedona Viz RDD and SQL API","title":"Folder structure"},{"location":"tutorial/demo/#compile-and-package","text":"","title":"Compile and package"},{"location":"tutorial/demo/#prerequisites","text":"Please make sure you have the following software installed on your local machine: For Scala: Scala 2.12, SBT For Java: JDK 1.8, Apache Maven 3","title":"Prerequisites"},{"location":"tutorial/demo/#compile","text":"Run a terminal command sbt assembly within the folder of each template","title":"Compile"},{"location":"tutorial/demo/#submit-your-fat-jar-to-spark","text":"After running the command mentioned above, you are able to see a fat jar in ./target folder. Please take it and use ./bin/spark-submit to submit this jar. To run the jar in this way, you need to: Either change Spark Master Address in template projects or simply delete it. Currently, they are hard coded to local[*] which means run locally with all cores. Change the dependency packaging scope of Apache Spark from \"compile\" to \"provided\". This is a common packaging strategy in Maven and SBT which means do not package Spark into your fat jar. Otherwise, this may lead to a huge jar and version conflicts! Make sure the dependency versions in build.sbt are consistent with your Spark version.","title":"Submit your fat jar to Spark"},{"location":"tutorial/demo/#run-template-projects-locally","text":"We highly suggest you use IDEs to run template projects on your local machine. For Scala, we recommend IntelliJ IDEA with Scala plug-in. For Java, we recommend IntelliJ IDEA and Eclipse. With the help of IDEs, you don't have to prepare anything (even don't need to download and set up Spark!). As long as you have Scala and Java, everything works properly!","title":"Run template projects locally"},{"location":"tutorial/demo/#scala","text":"Import the Scala template project as SBT project. Then run the Main file in this project.","title":"Scala"},{"location":"tutorial/jupyter-notebook/","text":"Python Jupyter Notebook Examples \u00b6 Click and play the interactive Sedona Python Jupyter Notebook immediately! Sedona Python provides a number of Jupyter Notebook examples . Please use the following steps to run Jupyter notebook with Pipenv on your machine Clone Sedona GitHub repo or download the source code Install Sedona Python from PyPi or GitHub source: Read Install Sedona Python to learn. Prepare python-adapter jar: Read Install Sedona Python to learn. Setup pipenv python version. For Spark 3.0, Sedona supports 3.7 - 3.9 cd binder pipenv --python 3 .8 Install dependencies cd binder pipenv install Install jupyter notebook kernel for pipenv pipenv install ipykernel pipenv shell In the pipenv shell, do python -m ipykernel install --user --name = apache-sedona Setup environment variables SPARK_HOME and PYTHONPATH if you didn't do it before. Read Install Sedona Python to learn. Launch jupyter notebook: jupyter notebook Select Sedona notebook. In your notebook, Kernel -> Change Kernel. Your kernel should now be an option.","title":"Python"},{"location":"tutorial/jupyter-notebook/#python-jupyter-notebook-examples","text":"Click and play the interactive Sedona Python Jupyter Notebook immediately! Sedona Python provides a number of Jupyter Notebook examples . Please use the following steps to run Jupyter notebook with Pipenv on your machine Clone Sedona GitHub repo or download the source code Install Sedona Python from PyPi or GitHub source: Read Install Sedona Python to learn. Prepare python-adapter jar: Read Install Sedona Python to learn. Setup pipenv python version. For Spark 3.0, Sedona supports 3.7 - 3.9 cd binder pipenv --python 3 .8 Install dependencies cd binder pipenv install Install jupyter notebook kernel for pipenv pipenv install ipykernel pipenv shell In the pipenv shell, do python -m ipykernel install --user --name = apache-sedona Setup environment variables SPARK_HOME and PYTHONPATH if you didn't do it before. Read Install Sedona Python to learn. Launch jupyter notebook: jupyter notebook Select Sedona notebook. In your notebook, Kernel -> Change Kernel. Your kernel should now be an option.","title":"Python Jupyter Notebook Examples"},{"location":"tutorial/python-vector-osm/","text":"Example of spark + sedona + hdfs with slave nodes and OSM vector data consults \u00b6 from IPython.display import display, HTML from pyspark.sql import SparkSession from pyspark import StorageLevel import pandas as pd from pyspark.sql.types import StructType, StructField,StringType, LongType, IntegerType, DoubleType, ArrayType from pyspark.sql.functions import regexp_replace from sedona.register import SedonaRegistrator from sedona.utils import SedonaKryoRegistrator, KryoSerializer from pyspark.sql.functions import col, split, expr from pyspark.sql.functions import udf, lit from sedona.utils import SedonaKryoRegistrator, KryoSerializer from pyspark.sql.functions import col, split, expr from pyspark.sql.functions import udf, lit, flatten from pywebhdfs.webhdfs import PyWebHdfsClient from datetime import date from pyspark.sql.functions import monotonically_increasing_id import json Registering spark session, adding node executor configurations and sedona registrator \u00b6 spark = SparkSession.\\ builder.\\ appName(\"Overpass-API\").\\ enableHiveSupport().\\ master(\"local[*]\").\\ master(\"spark://spark-master:7077\").\\ config(\"spark.executor.memory\", \"15G\").\\ config(\"spark.driver.maxResultSize\", \"135G\").\\ config(\"spark.sql.shuffle.partitions\", \"500\").\\ config(' spark.sql.adaptive.coalescePartitions.enabled', True).\\ config('spark.sql.adaptive.enabled', True).\\ config('spark.sql.adaptive.coalescePartitions.initialPartitionNum', 125).\\ config(\"spark.sql.execution.arrow.pyspark.enabled\", True).\\ config(\"spark.sql.execution.arrow.fallback.enabled\", True).\\ config('spark.kryoserializer.buffer.max', 2047).\\ config(\"spark.serializer\", KryoSerializer.getName).\\ config(\"spark.kryo.registrator\", SedonaKryoRegistrator.getName).\\ config(\"spark.jars.packages\", \"org.apache.sedona:sedona-python-adapter-3.0_2.12:1.1.0-incubating,org.datasyslab:geotools-wrapper:1.1.0-25.2\") .\\ enableHiveSupport().\\ getOrCreate() SedonaRegistrator.registerAll(spark) sc = spark.sparkContext Connecting to Overpass API to search and downloading data for saving into HDFS \u00b6 import requests import json overpass_url = \"http://overpass-api.de/api/interpreter\" overpass_query = \"\"\" [out:json]; area[name = \"Foz do Igua\u00e7u\"]; way(area)[\"highway\"~\"\"]; out geom; >; out skel qt; \"\"\" response = requests.get(overpass_url, params={'data': overpass_query}) data = response.json() hdfs = PyWebHdfsClient(host='179.106.229.159',port='50070', user_name='root') file_name = \"foz_roads_osm.json\" hdfs.delete_file_dir(file_name) hdfs.create_file(file_name, json.dumps(data)) Connecting spark sedona with saved hdfs file \u00b6 path = \"hdfs://776faf4d6a1e:8020/\"+file_name df = spark.read.json(path, multiLine = \"true\") Consulting and organizing data for analisis \u00b6 from pyspark.sql.functions import explode, arrays_zip df.createOrReplaceTempView(\"df\") tb = spark.sql(\"select *, size(elements) total_nodes from df\") tb.show(5) isolate_total_nodes = tb.select(\"total_nodes\").toPandas() total_nodes = isolate_total_nodes[\"total_nodes\"].iloc[0] print(total_nodes) isolate_ids = tb.select(\"elements.id\").toPandas() ids = pd.DataFrame(isolate_ids[\"id\"].iloc[0]).drop_duplicates() print(ids[0].iloc[1]) formatted_df = tb\\ .withColumn(\"id\", explode(\"elements.id\")) formatted_df.show(5) formatted_df = tb\\ .withColumn(\"new\", arrays_zip(\"elements.id\", \"elements.geometry\", \"elements.nodes\", \"elements.tags\"))\\ .withColumn(\"new\", explode(\"new\")) formatted_df.show(5) # formatted_df.printSchema() formatted_df = formatted_df.select(\"new.0\",\"new.1\",\"new.2\",\"new.3.maxspeed\",\"new.3.incline\",\"new.3.surface\", \"new.3.name\", \"total_nodes\") formatted_df = formatted_df.withColumnRenamed(\"0\",\"id\").withColumnRenamed(\"1\",\"geom\").withColumnRenamed(\"2\",\"nodes\").withColumnRenamed(\"3\",\"tags\") formatted_df.createOrReplaceTempView(\"formatted_df\") formatted_df.show(5) # TODO atualizar daqui para baixo para considerar a linha inteira na l\u00f3gica points_tb = spark.sql(\"select geom, id from formatted_df where geom IS NOT NULL\") points_tb = points_tb\\ .withColumn(\"new\", arrays_zip(\"geom.lat\", \"geom.lon\"))\\ .withColumn(\"new\", explode(\"new\")) points_tb = points_tb.select(\"new.0\",\"new.1\", \"id\") points_tb = points_tb.withColumnRenamed(\"0\",\"lat\").withColumnRenamed(\"1\",\"lon\") points_tb.printSchema() points_tb.createOrReplaceTempView(\"points_tb\") points_tb.show(5) coordinates_tb = spark.sql(\"select (select collect_list(CONCAT(p1.lat,',',p1.lon)) from points_tb p1 where p1.id = p2.id group by p1.id) as coordinates, p2.id, p2.maxspeed, p2.incline, p2.surface, p2.name, p2.nodes, p2.total_nodes from formatted_df p2\") coordinates_tb.createOrReplaceTempView(\"coordinates_tb\") coordinates_tb.show(5) roads_tb = spark.sql(\"SELECT ST_LineStringFromText(REPLACE(REPLACE(CAST(coordinates as string),'[',''),']',''), ',') as geom, id, maxspeed, incline, surface, name, nodes, total_nodes FROM coordinates_tb WHERE coordinates IS NOT NULL\") roads_tb.createOrReplaceTempView(\"roads_tb\") roads_tb.show(5)","title":"Example of spark + sedona + hdfs with slave nodes and OSM vector data consults"},{"location":"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults","text":"from IPython.display import display, HTML from pyspark.sql import SparkSession from pyspark import StorageLevel import pandas as pd from pyspark.sql.types import StructType, StructField,StringType, LongType, IntegerType, DoubleType, ArrayType from pyspark.sql.functions import regexp_replace from sedona.register import SedonaRegistrator from sedona.utils import SedonaKryoRegistrator, KryoSerializer from pyspark.sql.functions import col, split, expr from pyspark.sql.functions import udf, lit from sedona.utils import SedonaKryoRegistrator, KryoSerializer from pyspark.sql.functions import col, split, expr from pyspark.sql.functions import udf, lit, flatten from pywebhdfs.webhdfs import PyWebHdfsClient from datetime import date from pyspark.sql.functions import monotonically_increasing_id import json","title":"Example of spark + sedona + hdfs with slave nodes and OSM vector data consults"},{"location":"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator","text":"spark = SparkSession.\\ builder.\\ appName(\"Overpass-API\").\\ enableHiveSupport().\\ master(\"local[*]\").\\ master(\"spark://spark-master:7077\").\\ config(\"spark.executor.memory\", \"15G\").\\ config(\"spark.driver.maxResultSize\", \"135G\").\\ config(\"spark.sql.shuffle.partitions\", \"500\").\\ config(' spark.sql.adaptive.coalescePartitions.enabled', True).\\ config('spark.sql.adaptive.enabled', True).\\ config('spark.sql.adaptive.coalescePartitions.initialPartitionNum', 125).\\ config(\"spark.sql.execution.arrow.pyspark.enabled\", True).\\ config(\"spark.sql.execution.arrow.fallback.enabled\", True).\\ config('spark.kryoserializer.buffer.max', 2047).\\ config(\"spark.serializer\", KryoSerializer.getName).\\ config(\"spark.kryo.registrator\", SedonaKryoRegistrator.getName).\\ config(\"spark.jars.packages\", \"org.apache.sedona:sedona-python-adapter-3.0_2.12:1.1.0-incubating,org.datasyslab:geotools-wrapper:1.1.0-25.2\") .\\ enableHiveSupport().\\ getOrCreate() SedonaRegistrator.registerAll(spark) sc = spark.sparkContext","title":"Registering spark session, adding node executor configurations and sedona registrator"},{"location":"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs","text":"import requests import json overpass_url = \"http://overpass-api.de/api/interpreter\" overpass_query = \"\"\" [out:json]; area[name = \"Foz do Igua\u00e7u\"]; way(area)[\"highway\"~\"\"]; out geom; >; out skel qt; \"\"\" response = requests.get(overpass_url, params={'data': overpass_query}) data = response.json() hdfs = PyWebHdfsClient(host='179.106.229.159',port='50070', user_name='root') file_name = \"foz_roads_osm.json\" hdfs.delete_file_dir(file_name) hdfs.create_file(file_name, json.dumps(data))","title":"Connecting to Overpass API to search and downloading data for saving into HDFS"},{"location":"tutorial/python-vector-osm/#connecting-spark-sedona-with-saved-hdfs-file","text":"path = \"hdfs://776faf4d6a1e:8020/\"+file_name df = spark.read.json(path, multiLine = \"true\")","title":"Connecting spark sedona with saved hdfs file"},{"location":"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis","text":"from pyspark.sql.functions import explode, arrays_zip df.createOrReplaceTempView(\"df\") tb = spark.sql(\"select *, size(elements) total_nodes from df\") tb.show(5) isolate_total_nodes = tb.select(\"total_nodes\").toPandas() total_nodes = isolate_total_nodes[\"total_nodes\"].iloc[0] print(total_nodes) isolate_ids = tb.select(\"elements.id\").toPandas() ids = pd.DataFrame(isolate_ids[\"id\"].iloc[0]).drop_duplicates() print(ids[0].iloc[1]) formatted_df = tb\\ .withColumn(\"id\", explode(\"elements.id\")) formatted_df.show(5) formatted_df = tb\\ .withColumn(\"new\", arrays_zip(\"elements.id\", \"elements.geometry\", \"elements.nodes\", \"elements.tags\"))\\ .withColumn(\"new\", explode(\"new\")) formatted_df.show(5) # formatted_df.printSchema() formatted_df = formatted_df.select(\"new.0\",\"new.1\",\"new.2\",\"new.3.maxspeed\",\"new.3.incline\",\"new.3.surface\", \"new.3.name\", \"total_nodes\") formatted_df = formatted_df.withColumnRenamed(\"0\",\"id\").withColumnRenamed(\"1\",\"geom\").withColumnRenamed(\"2\",\"nodes\").withColumnRenamed(\"3\",\"tags\") formatted_df.createOrReplaceTempView(\"formatted_df\") formatted_df.show(5) # TODO atualizar daqui para baixo para considerar a linha inteira na l\u00f3gica points_tb = spark.sql(\"select geom, id from formatted_df where geom IS NOT NULL\") points_tb = points_tb\\ .withColumn(\"new\", arrays_zip(\"geom.lat\", \"geom.lon\"))\\ .withColumn(\"new\", explode(\"new\")) points_tb = points_tb.select(\"new.0\",\"new.1\", \"id\") points_tb = points_tb.withColumnRenamed(\"0\",\"lat\").withColumnRenamed(\"1\",\"lon\") points_tb.printSchema() points_tb.createOrReplaceTempView(\"points_tb\") points_tb.show(5) coordinates_tb = spark.sql(\"select (select collect_list(CONCAT(p1.lat,',',p1.lon)) from points_tb p1 where p1.id = p2.id group by p1.id) as coordinates, p2.id, p2.maxspeed, p2.incline, p2.surface, p2.name, p2.nodes, p2.total_nodes from formatted_df p2\") coordinates_tb.createOrReplaceTempView(\"coordinates_tb\") coordinates_tb.show(5) roads_tb = spark.sql(\"SELECT ST_LineStringFromText(REPLACE(REPLACE(CAST(coordinates as string),'[',''),']',''), ',') as geom, id, maxspeed, incline, surface, name, nodes, total_nodes FROM coordinates_tb WHERE coordinates IS NOT NULL\") roads_tb.createOrReplaceTempView(\"roads_tb\") roads_tb.show(5)","title":"Consulting and organizing data for analisis"},{"location":"tutorial/raster/","text":"Starting from v1.1.0 , Sedona SQL supports raster data sources and raster operators in DataFrame and SQL. Raster support is available in all Sedona language bindings including Scala, Java, Python and R . Initial setup \u00b6 Set up dependencies Initiate Spark session Register SedonaSQL API docs \u00b6 IO of raster data in DataFrame Map algebra in DataFrame Tutorials \u00b6 Python Jupyter Notebook","title":"Raster data - Map Algebra"},{"location":"tutorial/raster/#initial-setup","text":"Set up dependencies Initiate Spark session Register SedonaSQL","title":"Initial setup"},{"location":"tutorial/raster/#api-docs","text":"IO of raster data in DataFrame Map algebra in DataFrame","title":"API docs"},{"location":"tutorial/raster/#tutorials","text":"Python Jupyter Notebook","title":"Tutorials"},{"location":"tutorial/rdd-r/","text":"Spatial RDD applications in R language \u00b6 What are SpatialRDD s? \u00b6 SpatialRDDs are basic building blocks of distributed spatial data in Apache Sedona. A SpatialRDD can be partitioned and indexed using well-known spatial data structures to facilitate range queries, KNN queries, and other low-level operations. One can also export records from SpatailRDD s into regular Spark dataframes, making them accessible through Spark SQL and through the dplyr interface of sparklyr . Creating a SpatialRDD \u00b6 NOTE: this section is largely based on Spatial RDD Scala tutorial , except for examples have been written in R instead of Scala to reflect usages of apache.sedona . Currently SpatialRDD s can be created in apache.sedona by reading a file in a supported geospatial format, or by extracting data from a Spark SQL query. For example, the following code will import data from arealm-small.csv into a SpatialRDD : pt_rdd <- sedona_read_dsv_to_typed_rdd ( sc , location = \"arealm-small.csv\" , delimiter = \",\" , type = \"point\" , first_spatial_col_index = 1 , has_non_spatial_attrs = TRUE ) . Records from the example arealm-small.csv file look like the following: testattribute0,-88.331492,32.324142,testattribute1,testattribute2 testattribute0,-88.175933,32.360763,testattribute1,testattribute2 testattribute0,-88.388954,32.357073,testattribute1,testattribute2 As one can see from the above, each record is comma-separated and consists of a 2-dimensional coordinate starting at the 2 nd column and ending at the 3 rd column. All other columns contain non-spatial attributes. Because column indexes are 0-based, we need to specify first_spatial_col_index = 1 in the example above to ensure each record is parsed correctly. In addition to formats such as CSV and TSV, currently apache.sedona also supports reading files in WKT (Well-Known Text), WKB (Well-Known Binary), and GeoJSON formats. See ?apache.sedona::sedona_read_wkt , ?apache.sedona::sedona_read_wkb , and ?apache.sedona::sedona_read_geojson for details. One can also run to_spatial_rdd() to extract a SpatailRDD from a Spark SQL query, e.g., library ( sparklyr ) library ( apache.sedona ) library ( dplyr ) sc <- spark_connect ( master = \"local\" ) sdf <- tbl ( sc , sql ( \"SELECT ST_GeomFromText('POINT(-71.064544 42.28787)') AS `geom`, \\\"point\\\" AS `type`\" ) ) spatial_rdd <- sdf %>% to_spatial_rdd ( spatial_col = \"geom\" ) print ( spatial_rdd ) ## $.jobj ## <jobj[70]> ## org.apache.sedona.core.spatialRDD.SpatialRDD ## org.apache.sedona.core.spatialRDD.SpatialRDD@422afc5a ## ## ... will extract a spatial column named \"geom\" from the Sedona spatial SQL query above and store it in a SpatialRDD object.","title":"R"},{"location":"tutorial/rdd-r/#spatial-rdd-applications-in-r-language","text":"","title":"Spatial RDD applications in R language"},{"location":"tutorial/rdd-r/#what-are-spatialrdds","text":"SpatialRDDs are basic building blocks of distributed spatial data in Apache Sedona. A SpatialRDD can be partitioned and indexed using well-known spatial data structures to facilitate range queries, KNN queries, and other low-level operations. One can also export records from SpatailRDD s into regular Spark dataframes, making them accessible through Spark SQL and through the dplyr interface of sparklyr .","title":"What are SpatialRDDs?"},{"location":"tutorial/rdd-r/#creating-a-spatialrdd","text":"NOTE: this section is largely based on Spatial RDD Scala tutorial , except for examples have been written in R instead of Scala to reflect usages of apache.sedona . Currently SpatialRDD s can be created in apache.sedona by reading a file in a supported geospatial format, or by extracting data from a Spark SQL query. For example, the following code will import data from arealm-small.csv into a SpatialRDD : pt_rdd <- sedona_read_dsv_to_typed_rdd ( sc , location = \"arealm-small.csv\" , delimiter = \",\" , type = \"point\" , first_spatial_col_index = 1 , has_non_spatial_attrs = TRUE ) . Records from the example arealm-small.csv file look like the following: testattribute0,-88.331492,32.324142,testattribute1,testattribute2 testattribute0,-88.175933,32.360763,testattribute1,testattribute2 testattribute0,-88.388954,32.357073,testattribute1,testattribute2 As one can see from the above, each record is comma-separated and consists of a 2-dimensional coordinate starting at the 2 nd column and ending at the 3 rd column. All other columns contain non-spatial attributes. Because column indexes are 0-based, we need to specify first_spatial_col_index = 1 in the example above to ensure each record is parsed correctly. In addition to formats such as CSV and TSV, currently apache.sedona also supports reading files in WKT (Well-Known Text), WKB (Well-Known Binary), and GeoJSON formats. See ?apache.sedona::sedona_read_wkt , ?apache.sedona::sedona_read_wkb , and ?apache.sedona::sedona_read_geojson for details. One can also run to_spatial_rdd() to extract a SpatailRDD from a Spark SQL query, e.g., library ( sparklyr ) library ( apache.sedona ) library ( dplyr ) sc <- spark_connect ( master = \"local\" ) sdf <- tbl ( sc , sql ( \"SELECT ST_GeomFromText('POINT(-71.064544 42.28787)') AS `geom`, \\\"point\\\" AS `type`\" ) ) spatial_rdd <- sdf %>% to_spatial_rdd ( spatial_col = \"geom\" ) print ( spatial_rdd ) ## $.jobj ## <jobj[70]> ## org.apache.sedona.core.spatialRDD.SpatialRDD ## org.apache.sedona.core.spatialRDD.SpatialRDD@422afc5a ## ## ... will extract a spatial column named \"geom\" from the Sedona spatial SQL query above and store it in a SpatialRDD object.","title":"Creating a SpatialRDD"},{"location":"tutorial/rdd/","text":"The page outlines the steps to create Spatial RDDs and run spatial queries using Sedona-core. The example code is written in Scala but also works for Java . Set up dependencies \u00b6 Read Sedona Maven Central coordinates Select the minimum dependencies : Add Apache Spark (only the Spark core) and Sedona (core). Add the dependencies in build.sbt or pom.xml. Note To enjoy the full functions of Sedona, we suggest you include the full dependencies : Apache Spark core , Apache SparkSQL , Sedona-core, Sedona-SQL, Sedona-Viz. Please see RDD example project Initiate SparkContext \u00b6 val conf = new SparkConf () conf . setAppName ( \"SedonaRunnableExample\" ) // Change this to a proper name conf . setMaster ( \"local[*]\" ) // Delete this if run in cluster mode // Enable Sedona custom Kryo serializer conf . set ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) // org.apache.spark.serializer.KryoSerializer conf . set ( \"spark.kryo.registrator\" , classOf [ SedonaKryoRegistrator ]. getName ) // org.apache.sedona.core.serde.SedonaKryoRegistrator val sc = new SparkContext ( conf ) Warning Sedona has a suite of well-written geometry and index serializers. Forgetting to enable these serializers will lead to high memory consumption. If you add the Sedona full dependencies as suggested above, please use the following two lines to enable Sedona Kryo serializer instead: conf . set ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) // org.apache.spark.serializer.KryoSerializer conf . set ( \"spark.kryo.registrator\" , classOf [ SedonaVizKryoRegistrator ]. getName ) // org.apache.sedona.viz.core.Serde.SedonaVizKryoRegistrator Create a SpatialRDD \u00b6 Create a typed SpatialRDD \u00b6 Sedona-core provides three special SpatialRDDs: PointRDD, PolygonRDD, and LineStringRDD . They can be loaded from CSV, TSV, WKT, WKB, Shapefiles, GeoJSON and NetCDF/HDF format. PointRDD from CSV/TSV \u00b6 Suppose we have a checkin.csv CSV file at Path /Download/checkin.csv as follows: -88.331492,32.324142,hotel -88.175933,32.360763,gas -88.388954,32.357073,bar -88.221102,32.35078,restaurant This file has three columns and corresponding offsets (Column IDs) are 0, 1, 2. Use the following code to create a PointRDD val pointRDDInputLocation = \"/Download/checkin.csv\" val pointRDDOffset = 0 // The point long/lat starts from Column 0 val pointRDDSplitter = FileDataSplitter . CSV val carryOtherAttributes = true // Carry Column 2 (hotel, gas, bar...) var objectRDD = new PointRDD ( sc , pointRDDInputLocation , pointRDDOffset , pointRDDSplitter , carryOtherAttributes ) If the data file is in TSV format, just simply use the following line to replace the old FileDataSplitter: val pointRDDSplitter = FileDataSplitter . TSV PolygonRDD/LineStringRDD from CSV/TSV \u00b6 In general, polygon and line string data is stored in WKT, WKB, GeoJSON and Shapefile formats instead of CSV/TSV because the geometries in a file may have different lengths. However, if all polygons / line strings in your CSV/TSV possess the same length, you can create PolygonRDD and LineStringRDD from these files. Suppose we have a checkinshape.csv CSV file at Path /Download/checkinshape.csv as follows: -88.331492,32.324142,-88.331492,32.324142,-88.331492,32.324142,-88.331492,32.324142,-88.331492,32.324142,hotel -88.175933,32.360763,-88.175933,32.360763,-88.175933,32.360763,-88.175933,32.360763,-88.175933,32.360763,gas -88.388954,32.357073,-88.388954,32.357073,-88.388954,32.357073,-88.388954,32.357073,-88.388954,32.357073,bar -88.221102,32.35078,-88.221102,32.35078,-88.221102,32.35078,-88.221102,32.35078,-88.221102,32.35078,restaurant This file has 11 columns and corresponding offsets (Column IDs) are 0 - 10. Column 0 - 9 are 5 coordinates (longitude/latitude pairs). In this file, all geometries have the same number of coordinates. The geometries can be polyons or line strings. Warning For polygon data, the last coordinate must be the same as the first coordinate because a polygon is a closed linear ring. Use the following code to create a PolygonRDD. val polygonRDDInputLocation = \"/Download/checkinshape.csv\" val polygonRDDStartOffset = 0 // The coordinates start from Column 0 val polygonRDDEndOffset = 9 // The coordinates end at Column 9 val polygonRDDSplitter = FileDataSplitter . CSV val carryOtherAttributes = true // Carry Column 10 (hotel, gas, bar...) var objectRDD = new PolygonRDD ( sc , polygonRDDInputLocation , polygonRDDStartOffset , polygonRDDEndOffset , polygonRDDSplitter , carryOtherAttributes ) If the data file is in TSV format, just simply use the following line to replace the old FileDataSplitter: val polygonRDDSplitter = FileDataSplitter . TSV The way to create a LineStringRDD is the same as PolygonRDD. Create a generic SpatialRDD \u00b6 A generic SpatialRDD is not typed to a certain geometry type and open to more scenarios. It allows an input data file contains mixed types of geometries. For instance, a WKT file contains three types gemetries LineString , Polygon and MultiPolygon . From WKT/WKB \u00b6 Geometries in a WKT and WKB file always occupy a single column no matter how many coordinates they have. Therefore, creating a typed SpatialRDD is easy. Suppose we have a checkin.tsv WKT TSV file at Path /Download/checkin.tsv as follows: POINT (-88.331492 32.324142) hotel POINT (-88.175933 32.360763) gas POINT (-88.388954 32.357073) bar POINT (-88.221102 32.35078) restaurant This file has two columns and corresponding offsets (Column IDs) are 0, 1. Column 0 is the WKT string and Column 1 is the checkin business type. Use the following code to create a SpatialRDD val inputLocation = \"/Download/checkin.tsv\" val wktColumn = 0 // The WKT string starts from Column 0 val allowTopologyInvalidGeometries = true // Optional val skipSyntaxInvalidGeometries = false // Optional val spatialRDD = WktReader . readToGeometryRDD ( sparkSession . sparkContext , inputLocation , wktColumn , allowTopologyInvalidGeometries , skipSyntaxInvalidGeometries ) From GeoJSON \u00b6 Geometries in GeoJSON is similar to WKT/WKB. However, a GeoJSON file must be beaked into multiple lines. Suppose we have a polygon.json GeoJSON file at Path /Download/polygon.json as follows: { \"type\": \"Feature\", \"properties\": { \"STATEFP\": \"01\", \"COUNTYFP\": \"077\", \"TRACTCE\": \"011501\", \"BLKGRPCE\": \"5\", \"AFFGEOID\": \"1500000US010770115015\", \"GEOID\": \"010770115015\", \"NAME\": \"5\", \"LSAD\": \"BG\", \"ALAND\": 6844991, \"AWATER\": 32636 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -87.621765, 34.873444 ], [ -87.617535, 34.873369 ], [ -87.6123, 34.873337 ], [ -87.604049, 34.873303 ], [ -87.604033, 34.872316 ], [ -87.60415, 34.867502 ], [ -87.604218, 34.865687 ], [ -87.604409, 34.858537 ], [ -87.604018, 34.851336 ], [ -87.603716, 34.844829 ], [ -87.603696, 34.844307 ], [ -87.603673, 34.841884 ], [ -87.60372, 34.841003 ], [ -87.603879, 34.838423 ], [ -87.603888, 34.837682 ], [ -87.603889, 34.83763 ], [ -87.613127, 34.833938 ], [ -87.616451, 34.832699 ], [ -87.621041, 34.831431 ], [ -87.621056, 34.831526 ], [ -87.62112, 34.831925 ], [ -87.621603, 34.8352 ], [ -87.62158, 34.836087 ], [ -87.621383, 34.84329 ], [ -87.621359, 34.844438 ], [ -87.62129, 34.846387 ], [ -87.62119, 34.85053 ], [ -87.62144, 34.865379 ], [ -87.621765, 34.873444 ] ] ] } }, { \"type\": \"Feature\", \"properties\": { \"STATEFP\": \"01\", \"COUNTYFP\": \"045\", \"TRACTCE\": \"021102\", \"BLKGRPCE\": \"4\", \"AFFGEOID\": \"1500000US010450211024\", \"GEOID\": \"010450211024\", \"NAME\": \"4\", \"LSAD\": \"BG\", \"ALAND\": 11360854, \"AWATER\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -85.719017, 31.297901 ], [ -85.715626, 31.305203 ], [ -85.714271, 31.307096 ], [ -85.69999, 31.307552 ], [ -85.697419, 31.307951 ], [ -85.675603, 31.31218 ], [ -85.672733, 31.312876 ], [ -85.672275, 31.311977 ], [ -85.67145, 31.310988 ], [ -85.670622, 31.309524 ], [ -85.670729, 31.307622 ], [ -85.669876, 31.30666 ], [ -85.669796, 31.306224 ], [ -85.670356, 31.306178 ], [ -85.671664, 31.305583 ], [ -85.67177, 31.305299 ], [ -85.671878, 31.302764 ], [ -85.671344, 31.302123 ], [ -85.668276, 31.302076 ], [ -85.66566, 31.30093 ], [ -85.665687, 31.30022 ], [ -85.669183, 31.297677 ], [ -85.668703, 31.295638 ], [ -85.671985, 31.29314 ], [ -85.677177, 31.288211 ], [ -85.678452, 31.286376 ], [ -85.679236, 31.28285 ], [ -85.679195, 31.281426 ], [ -85.676865, 31.281049 ], [ -85.674661, 31.28008 ], [ -85.674377, 31.27935 ], [ -85.675714, 31.276882 ], [ -85.677938, 31.275168 ], [ -85.680348, 31.276814 ], [ -85.684032, 31.278848 ], [ -85.684387, 31.279082 ], [ -85.692398, 31.283499 ], [ -85.705032, 31.289718 ], [ -85.706755, 31.290476 ], [ -85.718102, 31.295204 ], [ -85.719132, 31.29689 ], [ -85.719017, 31.297901 ] ] ] } }, { \"type\": \"Feature\", \"properties\": { \"STATEFP\": \"01\", \"COUNTYFP\": \"055\", \"TRACTCE\": \"001300\", \"BLKGRPCE\": \"3\", \"AFFGEOID\": \"1500000US010550013003\", \"GEOID\": \"010550013003\", \"NAME\": \"3\", \"LSAD\": \"BG\", \"ALAND\": 1378742, \"AWATER\": 247387 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -86.000685, 34.00537 ], [ -85.998837, 34.009768 ], [ -85.998012, 34.010398 ], [ -85.987865, 34.005426 ], [ -85.986656, 34.004552 ], [ -85.985, 34.002659 ], [ -85.98851, 34.001502 ], [ -85.987567, 33.999488 ], [ -85.988666, 33.99913 ], [ -85.992568, 33.999131 ], [ -85.993144, 33.999714 ], [ -85.994876, 33.995153 ], [ -85.998823, 33.989548 ], [ -85.999925, 33.994237 ], [ -86.000616, 34.000028 ], [ -86.000685, 34.00537 ] ] ] } }, { \"type\": \"Feature\", \"properties\": { \"STATEFP\": \"01\", \"COUNTYFP\": \"089\", \"TRACTCE\": \"001700\", \"BLKGRPCE\": \"2\", \"AFFGEOID\": \"1500000US010890017002\", \"GEOID\": \"010890017002\", \"NAME\": \"2\", \"LSAD\": \"BG\", \"ALAND\": 1040641, \"AWATER\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -86.574172, 34.727375 ], [ -86.562684, 34.727131 ], [ -86.562797, 34.723865 ], [ -86.562957, 34.723168 ], [ -86.562336, 34.719766 ], [ -86.557381, 34.719143 ], [ -86.557352, 34.718322 ], [ -86.559921, 34.717363 ], [ -86.564827, 34.718513 ], [ -86.567582, 34.718565 ], [ -86.570572, 34.718577 ], [ -86.573618, 34.719377 ], [ -86.574172, 34.727375 ] ] ] } }, Use the following code to create a generic SpatialRDD: val inputLocation = \"/Download/polygon.json\" val allowTopologyInvalidGeometries = true // Optional val skipSyntaxInvalidGeometries = false // Optional val spatialRDD = GeoJsonReader . readToGeometryRDD ( sparkSession . sparkContext , inputLocation , allowTopologyInvalidGeometries , skipSyntaxInvalidGeometries ) Warning The way that Sedona reads JSON file is different from SparkSQL From Shapefile \u00b6 val shapefileInputLocation = \"/Download/myshapefile\" val spatialRDD = ShapefileReader . readToGeometryRDD ( sparkSession . sparkContext , shapefileInputLocation ) Note The file extensions of .shp, .shx, .dbf must be in lowercase. Assume you have a shape file called myShapefile , the file structure should be like this: - shapefile1 - shapefile2 - myshapefile - myshapefile.shp - myshapefile.shx - myshapefile.dbf - myshapefile... - ... If the file you are reading contains non-ASCII characters you'll need to explicitly set the encoding via sedona.global.charset system property before the call to ShapefileReader.readToGeometryRDD . Example: System . setProperty ( \"sedona.global.charset\" , \"utf8\" ) From SparkSQL DataFrame \u00b6 To create a generic SpatialRDD from CSV, TSV, WKT, WKB and GeoJSON input formats, you can use SedonaSQL. Make sure you include the full dependencies of Sedona. Read SedonaSQL API . We use checkin.csv CSV file as the example. You can create a generic SpatialRDD using the following steps: Load data in SedonaSQL. var df = sparkSession . read . format ( \"csv\" ). option ( \"header\" , \"false\" ). load ( csvPointInputLocation ) df . createOrReplaceTempView ( \"inputtable\" ) Create a Geometry type column in SedonaSQL var spatialDf = sparkSession . sql ( \"\"\" |SELECT ST_Point(CAST(inputtable._c0 AS Decimal(24,20)),CAST(inputtable._c1 AS Decimal(24,20))) AS checkin |FROM inputtable \"\"\" . stripMargin ) Use SedonaSQL DataFrame-RDD Adapter to convert a DataFrame to an SpatialRDD var spatialRDD = Adapter . toSpatialRdd ( spatialDf , \"checkin\" ) \"checkin\" is the name of the geometry column For WKT/WKB/GeoJSON data, please use ST_GeomFromWKT / ST_GeomFromWKB / ST_GeomFromGeoJSON instead. Transform the Coordinate Reference System \u00b6 Sedona doesn't control the coordinate unit (degree-based or meter-based) of all geometries in an SpatialRDD. The unit of all related distances in Sedona is same as the unit of all geometries in an SpatialRDD. To convert Coordinate Reference System of an SpatialRDD, use the following code: val sourceCrsCode = \"epsg:4326\" // WGS84, the most common degree-based CRS val targetCrsCode = \"epsg:3857\" // The most common meter-based CRS objectRDD . CRSTransform ( sourceCrsCode , targetCrsCode , false ) false in CRSTransform(sourceCrsCode, targetCrsCode, false) means that it will not tolerate Datum shift. If you want it to be lenient, use true instead. Warning CRS transformation should be done right after creating each SpatialRDD, otherwise it will lead to wrong query results. For instace, use something like this: var objectRDD = new PointRDD ( sc , pointRDDInputLocation , pointRDDOffset , pointRDDSplitter , carryOtherAttributes ) objectRDD . CRSTransform ( \"epsg:4326\" , \"epsg:3857\" , false ) The details CRS information can be found on EPSG.io Read other attributes in an SpatialRDD \u00b6 Each SpatialRDD can carry non-spatial attributes such as price, age and name as long as the user sets carryOtherAttributes as TRUE . The other attributes are combined together to a string and stored in UserData field of each geometry. To retrieve the UserData field, use the following code: val rddWithOtherAttributes = objectRDD . rawSpatialRDD . rdd . map [ String ]( f => f . getUserData . asInstanceOf [ String ]) Write a Spatial Range Query \u00b6 A spatial range query takes as input a range query window and an SpatialRDD and returns all geometries that intersect / are fully covered by the query window. Assume you now have an SpatialRDD (typed or generic). You can use the following code to issue an Spatial Range Query on it. val rangeQueryWindow = new Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) val considerBoundaryIntersection = false // Only return gemeotries fully covered by the window val usingIndex = false var queryResult = RangeQuery . SpatialRangeQuery ( spatialRDD , rangeQueryWindow , considerBoundaryIntersection , usingIndex ) considerBoundaryIntersection can be set to TRUE to return all geometries intersect with query window. Note Spatial range query is equal to ST_Within and ST_Intersects in Spatial SQL. An example query is as follows: SELECT * FROM checkin WHERE ST_Intersects ( queryWindow , checkin . location ) Range query window \u00b6 Besides the rectangle (Envelope) type range query window, Sedona range query window can be Point/Polygon/LineString. The code to create a point is as follows: val geometryFactory = new GeometryFactory () val pointObject = geometryFactory . createPoint ( new Coordinate ( - 84.01 , 34.01 )) The code to create a polygon (with 4 vertexes) is as follows: val geometryFactory = new GeometryFactory () val coordinates = new Array [ Coordinate ]( 5 ) coordinates ( 0 ) = new Coordinate ( 0 , 0 ) coordinates ( 1 ) = new Coordinate ( 0 , 4 ) coordinates ( 2 ) = new Coordinate ( 4 , 4 ) coordinates ( 3 ) = new Coordinate ( 4 , 0 ) coordinates ( 4 ) = coordinates ( 0 ) // The last coordinate is the same as the first coordinate in order to compose a closed ring val polygonObject = geometryFactory . createPolygon ( coordinates ) The code to create a line string (with 4 vertexes) is as follows: val geometryFactory = new GeometryFactory () val coordinates = new Array [ Coordinate ]( 4 ) coordinates ( 0 ) = new Coordinate ( 0 , 0 ) coordinates ( 1 ) = new Coordinate ( 0 , 4 ) coordinates ( 2 ) = new Coordinate ( 4 , 4 ) coordinates ( 3 ) = new Coordinate ( 4 , 0 ) val linestringObject = geometryFactory . createLineString ( coordinates ) Use spatial indexes \u00b6 Sedona provides two types of spatial indexes, Quad-Tree and R-Tree. Once you specify an index type, Sedona will build a local tree index on each of the SpatialRDD partition. To utilize a spatial index in a spatial range query, use the following code: val rangeQueryWindow = new Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) val considerBoundaryIntersection = false // Only return gemeotries fully covered by the window val buildOnSpatialPartitionedRDD = false // Set to TRUE only if run join query spatialRDD . buildIndex ( IndexType . QUADTREE , buildOnSpatialPartitionedRDD ) val usingIndex = true var queryResult = RangeQuery . SpatialRangeQuery ( spatialRDD , rangeQueryWindow , considerBoundaryIntersection , usingIndex ) Tip Using an index might not be the best choice all the time because building index also takes time. A spatial index is very useful when your data is complex polygons and line strings. Output format \u00b6 The output format of the spatial range query is another SpatialRDD. Write a Spatial KNN Query \u00b6 A spatial K Nearnest Neighbor query takes as input a K, a query point and an SpatialRDD and finds the K geometries in the RDD which are the closest to he query point. Assume you now have an SpatialRDD (typed or generic). You can use the following code to issue an Spatial KNN Query on it. val geometryFactory = new GeometryFactory () val pointObject = geometryFactory . createPoint ( new Coordinate ( - 84.01 , 34.01 )) val K = 1000 // K Nearest Neighbors val usingIndex = false val result = KNNQuery . SpatialKnnQuery ( objectRDD , pointObject , K , usingIndex ) Note Spatial KNN query that returns 5 Nearest Neighbors is equal to the following statement in Spatial SQL SELECT ck . name , ck . rating , ST_Distance ( ck . location , myLocation ) AS distance FROM checkins ck ORDER BY distance DESC LIMIT 5 Query center geometry \u00b6 Besides the Point type, Sedona KNN query center can be Polygon and LineString. To learn how to create Polygon and LineString object, see Range query window . Use spatial indexes \u00b6 To utilize a spatial index in a spatial KNN query, use the following code: val geometryFactory = new GeometryFactory () val pointObject = geometryFactory . createPoint ( new Coordinate ( - 84.01 , 34.01 )) val K = 1000 // K Nearest Neighbors val buildOnSpatialPartitionedRDD = false // Set to TRUE only if run join query objectRDD . buildIndex ( IndexType . RTREE , buildOnSpatialPartitionedRDD ) val usingIndex = true val result = KNNQuery . SpatialKnnQuery ( objectRDD , pointObject , K , usingIndex ) Warning Only R-Tree index supports Spatial KNN query Output format \u00b6 The output format of the spatial KNN query is a list of geometries. The list has K geometry objects. Write a Spatial Join Query \u00b6 A spatial join query takes as input two Spatial RDD A and B. For each geometry in A, finds the geometries (from B) covered/intersected by it. A and B can be any geometry type and are not necessary to have the same geometry type. Assume you now have two SpatialRDDs (typed or generic). You can use the following code to issue an Spatial Join Query on them. val considerBoundaryIntersection = false // Only return gemeotries fully covered by each query window in queryWindowRDD val usingIndex = false objectRDD . analyze () objectRDD . spatialPartitioning ( GridType . KDBTREE ) queryWindowRDD . spatialPartitioning ( objectRDD . getPartitioner ) val result = JoinQuery . SpatialJoinQuery ( objectRDD , queryWindowRDD , usingIndex , considerBoundaryIntersection ) Note Spatial join query is equal to the following query in Spatial SQL: SELECT superhero . name FROM city , superhero WHERE ST_Contains ( city . geom , superhero . geom ); Find the super heros in each city Use spatial partitioning \u00b6 Sedona spatial partitioning method can significantly speed up the join query. Three spatial partitioning methods are available: KDB-Tree, Quad-Tree and R-Tree. Two SpatialRDD must be partitioned by the same way. If you first partition SpatialRDD A, then you must use the partitioner of A to partition B. objectRDD . spatialPartitioning ( GridType . KDBTREE ) queryWindowRDD . spatialPartitioning ( objectRDD . getPartitioner ) Or queryWindowRDD . spatialPartitioning ( GridType . KDBTREE ) objectRDD . spatialPartitioning ( queryWindowRDD . getPartitioner ) Use spatial indexes \u00b6 To utilize a spatial index in a spatial join query, use the following code: objectRDD . spatialPartitioning ( joinQueryPartitioningType ) queryWindowRDD . spatialPartitioning ( objectRDD . getPartitioner ) val buildOnSpatialPartitionedRDD = true // Set to TRUE only if run join query val usingIndex = true queryWindowRDD . buildIndex ( IndexType . QUADTREE , buildOnSpatialPartitionedRDD ) val result = JoinQuery . SpatialJoinQueryFlat ( objectRDD , queryWindowRDD , usingIndex , considerBoundaryIntersection ) The index should be built on either one of two SpatialRDDs. In general, you should build it on the larger SpatialRDD. Output format \u00b6 The output format of the spatial join query is a PairRDD. In this PairRDD, each object is a pair of two geometries. The left one is the geometry from objectRDD and the right one is the geometry from the queryWindowRDD. Point,Polygon Point,Polygon Point,Polygon Polygon,Polygon LineString,LineString Polygon,LineString ... Each object on the left is covered/intersected by the object on the right. Write a Distance Join Query \u00b6 A distance join query takes as input two Spatial RDD A and B and a distance. For each geometry in A, finds the geometries (from B) are within the given distance to it. A and B can be any geometry type and are not necessary to have the same geometry type. The unit of the distance is explained here . Assume you now have two SpatialRDDs (typed or generic). You can use the following code to issue an Distance Join Query on them. objectRddA . analyze () val circleRDD = new CircleRDD ( objectRddA , 0.1 ) // Create a CircleRDD using the given distance circleRDD . spatialPartitioning ( GridType . KDBTREE ) objectRddB . spatialPartitioning ( circleRDD . getPartitioner ) val considerBoundaryIntersection = false // Only return gemeotries fully covered by each query window in queryWindowRDD val usingIndex = false val result = JoinQuery . DistanceJoinQueryFlat ( objectRddB , circleRDD , usingIndex , considerBoundaryIntersection ) The rest part of the join query is same as the spatial join query. The details of spatial partitioning in join query is here . The details of using spatial indexes in join query is here . The output format of the distance join query is here . Note Distance join query is equal to the following query in Spatial SQL: SELECT superhero . name FROM city , superhero WHERE ST_Distance ( city . geom , superhero . geom ) <= 10 ; Find the super heros within 10 miles of each city Save to permanent storage \u00b6 You can always save an SpatialRDD back to some permanent storage such as HDFS and Amazon S3. You can save distributed SpatialRDD to WKT, GeoJSON and object files. Note Non-spatial attributes such as price, age and name will also be stored to permanent storage. Save an SpatialRDD (not indexed) \u00b6 Typed SpatialRDD and generic SpatialRDD can be saved to permanent storage. Save to distributed WKT text file \u00b6 Use the following code to save an SpatialRDD as a distributed WKT text file: objectRDD . rawSpatialRDD . saveAsTextFile ( \"hdfs://PATH\" ) objectRDD . saveAsWKT ( \"hdfs://PATH\" ) Save to distributed WKB text file \u00b6 Use the following code to save an SpatialRDD as a distributed WKB text file: objectRDD . saveAsWKB ( \"hdfs://PATH\" ) Save to distributed GeoJSON text file \u00b6 Use the following code to save an SpatialRDD as a distributed GeoJSON text file: objectRDD . saveAsGeoJSON ( \"hdfs://PATH\" ) Save to distributed object file \u00b6 Use the following code to save an SpatialRDD as a distributed object file: objectRDD . rawSpatialRDD . saveAsObjectFile ( \"hdfs://PATH\" ) Note Each object in a distributed object file is a byte array (not human-readable). This byte array is the serialized format of a Geometry or a SpatialIndex. Save an SpatialRDD (indexed) \u00b6 Indexed typed SpatialRDD and generic SpatialRDD can be saved to permanent storage. However, the indexed SpatialRDD has to be stored as a distributed object file. Save to distributed object file \u00b6 Use the following code to save an SpatialRDD as a distributed object file: objectRDD.indexedRawRDD.saveAsObjectFile(\"hdfs://PATH\") Save an SpatialRDD (spatialPartitioned W/O indexed) \u00b6 A spatial partitioned RDD can be saved to permanent storage but Spark is not able to maintain the same RDD partition Id of the original RDD. This will lead to wrong join query results. We are working on some solutions. Stay tuned! Reload a saved SpatialRDD \u00b6 You can easily reload an SpatialRDD that has been saved to a distributed object file . Load to a typed SpatialRDD \u00b6 Use the following code to reload the PointRDD/PolygonRDD/LineStringRDD: var savedRDD = new PointRDD ( sc . objectFile [ Point ]( \"hdfs://PATH\" )) var savedRDD = new PointRDD ( sc . objectFile [ Polygon ]( \"hdfs://PATH\" )) var savedRDD = new PointRDD ( sc . objectFile [ LineString ]( \"hdfs://PATH\" )) Load to a generic SpatialRDD \u00b6 Use the following code to reload the SpatialRDD: var savedRDD = new SpatialRDD [ Geometry ] savedRDD . rawSpatialRDD = sc . objectFile [ Geometry ]( \"hdfs://PATH\" ) Use the following code to reload the indexed SpatialRDD: var savedRDD = new SpatialRDD [ Geometry ] savedRDD . indexedRawRDD = sc . objectFile [ SpatialIndex ]( \"hdfs://PATH\" )","title":"Scala/Java"},{"location":"tutorial/rdd/#set-up-dependencies","text":"Read Sedona Maven Central coordinates Select the minimum dependencies : Add Apache Spark (only the Spark core) and Sedona (core). Add the dependencies in build.sbt or pom.xml. Note To enjoy the full functions of Sedona, we suggest you include the full dependencies : Apache Spark core , Apache SparkSQL , Sedona-core, Sedona-SQL, Sedona-Viz. Please see RDD example project","title":"Set up dependencies"},{"location":"tutorial/rdd/#initiate-sparkcontext","text":"val conf = new SparkConf () conf . setAppName ( \"SedonaRunnableExample\" ) // Change this to a proper name conf . setMaster ( \"local[*]\" ) // Delete this if run in cluster mode // Enable Sedona custom Kryo serializer conf . set ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) // org.apache.spark.serializer.KryoSerializer conf . set ( \"spark.kryo.registrator\" , classOf [ SedonaKryoRegistrator ]. getName ) // org.apache.sedona.core.serde.SedonaKryoRegistrator val sc = new SparkContext ( conf ) Warning Sedona has a suite of well-written geometry and index serializers. Forgetting to enable these serializers will lead to high memory consumption. If you add the Sedona full dependencies as suggested above, please use the following two lines to enable Sedona Kryo serializer instead: conf . set ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) // org.apache.spark.serializer.KryoSerializer conf . set ( \"spark.kryo.registrator\" , classOf [ SedonaVizKryoRegistrator ]. getName ) // org.apache.sedona.viz.core.Serde.SedonaVizKryoRegistrator","title":"Initiate SparkContext"},{"location":"tutorial/rdd/#create-a-spatialrdd","text":"","title":"Create a SpatialRDD"},{"location":"tutorial/rdd/#create-a-typed-spatialrdd","text":"Sedona-core provides three special SpatialRDDs: PointRDD, PolygonRDD, and LineStringRDD . They can be loaded from CSV, TSV, WKT, WKB, Shapefiles, GeoJSON and NetCDF/HDF format.","title":"Create a typed SpatialRDD"},{"location":"tutorial/rdd/#create-a-generic-spatialrdd","text":"A generic SpatialRDD is not typed to a certain geometry type and open to more scenarios. It allows an input data file contains mixed types of geometries. For instance, a WKT file contains three types gemetries LineString , Polygon and MultiPolygon .","title":"Create a generic SpatialRDD"},{"location":"tutorial/rdd/#transform-the-coordinate-reference-system","text":"Sedona doesn't control the coordinate unit (degree-based or meter-based) of all geometries in an SpatialRDD. The unit of all related distances in Sedona is same as the unit of all geometries in an SpatialRDD. To convert Coordinate Reference System of an SpatialRDD, use the following code: val sourceCrsCode = \"epsg:4326\" // WGS84, the most common degree-based CRS val targetCrsCode = \"epsg:3857\" // The most common meter-based CRS objectRDD . CRSTransform ( sourceCrsCode , targetCrsCode , false ) false in CRSTransform(sourceCrsCode, targetCrsCode, false) means that it will not tolerate Datum shift. If you want it to be lenient, use true instead. Warning CRS transformation should be done right after creating each SpatialRDD, otherwise it will lead to wrong query results. For instace, use something like this: var objectRDD = new PointRDD ( sc , pointRDDInputLocation , pointRDDOffset , pointRDDSplitter , carryOtherAttributes ) objectRDD . CRSTransform ( \"epsg:4326\" , \"epsg:3857\" , false ) The details CRS information can be found on EPSG.io","title":"Transform the Coordinate Reference System"},{"location":"tutorial/rdd/#read-other-attributes-in-an-spatialrdd","text":"Each SpatialRDD can carry non-spatial attributes such as price, age and name as long as the user sets carryOtherAttributes as TRUE . The other attributes are combined together to a string and stored in UserData field of each geometry. To retrieve the UserData field, use the following code: val rddWithOtherAttributes = objectRDD . rawSpatialRDD . rdd . map [ String ]( f => f . getUserData . asInstanceOf [ String ])","title":"Read other attributes in an SpatialRDD"},{"location":"tutorial/rdd/#write-a-spatial-range-query","text":"A spatial range query takes as input a range query window and an SpatialRDD and returns all geometries that intersect / are fully covered by the query window. Assume you now have an SpatialRDD (typed or generic). You can use the following code to issue an Spatial Range Query on it. val rangeQueryWindow = new Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) val considerBoundaryIntersection = false // Only return gemeotries fully covered by the window val usingIndex = false var queryResult = RangeQuery . SpatialRangeQuery ( spatialRDD , rangeQueryWindow , considerBoundaryIntersection , usingIndex ) considerBoundaryIntersection can be set to TRUE to return all geometries intersect with query window. Note Spatial range query is equal to ST_Within and ST_Intersects in Spatial SQL. An example query is as follows: SELECT * FROM checkin WHERE ST_Intersects ( queryWindow , checkin . location )","title":"Write a Spatial Range Query"},{"location":"tutorial/rdd/#range-query-window","text":"Besides the rectangle (Envelope) type range query window, Sedona range query window can be Point/Polygon/LineString. The code to create a point is as follows: val geometryFactory = new GeometryFactory () val pointObject = geometryFactory . createPoint ( new Coordinate ( - 84.01 , 34.01 )) The code to create a polygon (with 4 vertexes) is as follows: val geometryFactory = new GeometryFactory () val coordinates = new Array [ Coordinate ]( 5 ) coordinates ( 0 ) = new Coordinate ( 0 , 0 ) coordinates ( 1 ) = new Coordinate ( 0 , 4 ) coordinates ( 2 ) = new Coordinate ( 4 , 4 ) coordinates ( 3 ) = new Coordinate ( 4 , 0 ) coordinates ( 4 ) = coordinates ( 0 ) // The last coordinate is the same as the first coordinate in order to compose a closed ring val polygonObject = geometryFactory . createPolygon ( coordinates ) The code to create a line string (with 4 vertexes) is as follows: val geometryFactory = new GeometryFactory () val coordinates = new Array [ Coordinate ]( 4 ) coordinates ( 0 ) = new Coordinate ( 0 , 0 ) coordinates ( 1 ) = new Coordinate ( 0 , 4 ) coordinates ( 2 ) = new Coordinate ( 4 , 4 ) coordinates ( 3 ) = new Coordinate ( 4 , 0 ) val linestringObject = geometryFactory . createLineString ( coordinates )","title":"Range query window"},{"location":"tutorial/rdd/#use-spatial-indexes","text":"Sedona provides two types of spatial indexes, Quad-Tree and R-Tree. Once you specify an index type, Sedona will build a local tree index on each of the SpatialRDD partition. To utilize a spatial index in a spatial range query, use the following code: val rangeQueryWindow = new Envelope ( - 90.01 , - 80.01 , 30.01 , 40.01 ) val considerBoundaryIntersection = false // Only return gemeotries fully covered by the window val buildOnSpatialPartitionedRDD = false // Set to TRUE only if run join query spatialRDD . buildIndex ( IndexType . QUADTREE , buildOnSpatialPartitionedRDD ) val usingIndex = true var queryResult = RangeQuery . SpatialRangeQuery ( spatialRDD , rangeQueryWindow , considerBoundaryIntersection , usingIndex ) Tip Using an index might not be the best choice all the time because building index also takes time. A spatial index is very useful when your data is complex polygons and line strings.","title":"Use spatial indexes"},{"location":"tutorial/rdd/#output-format","text":"The output format of the spatial range query is another SpatialRDD.","title":"Output format"},{"location":"tutorial/rdd/#write-a-spatial-knn-query","text":"A spatial K Nearnest Neighbor query takes as input a K, a query point and an SpatialRDD and finds the K geometries in the RDD which are the closest to he query point. Assume you now have an SpatialRDD (typed or generic). You can use the following code to issue an Spatial KNN Query on it. val geometryFactory = new GeometryFactory () val pointObject = geometryFactory . createPoint ( new Coordinate ( - 84.01 , 34.01 )) val K = 1000 // K Nearest Neighbors val usingIndex = false val result = KNNQuery . SpatialKnnQuery ( objectRDD , pointObject , K , usingIndex ) Note Spatial KNN query that returns 5 Nearest Neighbors is equal to the following statement in Spatial SQL SELECT ck . name , ck . rating , ST_Distance ( ck . location , myLocation ) AS distance FROM checkins ck ORDER BY distance DESC LIMIT 5","title":"Write a Spatial KNN Query"},{"location":"tutorial/rdd/#query-center-geometry","text":"Besides the Point type, Sedona KNN query center can be Polygon and LineString. To learn how to create Polygon and LineString object, see Range query window .","title":"Query center geometry"},{"location":"tutorial/rdd/#use-spatial-indexes_1","text":"To utilize a spatial index in a spatial KNN query, use the following code: val geometryFactory = new GeometryFactory () val pointObject = geometryFactory . createPoint ( new Coordinate ( - 84.01 , 34.01 )) val K = 1000 // K Nearest Neighbors val buildOnSpatialPartitionedRDD = false // Set to TRUE only if run join query objectRDD . buildIndex ( IndexType . RTREE , buildOnSpatialPartitionedRDD ) val usingIndex = true val result = KNNQuery . SpatialKnnQuery ( objectRDD , pointObject , K , usingIndex ) Warning Only R-Tree index supports Spatial KNN query","title":"Use spatial indexes"},{"location":"tutorial/rdd/#output-format_1","text":"The output format of the spatial KNN query is a list of geometries. The list has K geometry objects.","title":"Output format"},{"location":"tutorial/rdd/#write-a-spatial-join-query","text":"A spatial join query takes as input two Spatial RDD A and B. For each geometry in A, finds the geometries (from B) covered/intersected by it. A and B can be any geometry type and are not necessary to have the same geometry type. Assume you now have two SpatialRDDs (typed or generic). You can use the following code to issue an Spatial Join Query on them. val considerBoundaryIntersection = false // Only return gemeotries fully covered by each query window in queryWindowRDD val usingIndex = false objectRDD . analyze () objectRDD . spatialPartitioning ( GridType . KDBTREE ) queryWindowRDD . spatialPartitioning ( objectRDD . getPartitioner ) val result = JoinQuery . SpatialJoinQuery ( objectRDD , queryWindowRDD , usingIndex , considerBoundaryIntersection ) Note Spatial join query is equal to the following query in Spatial SQL: SELECT superhero . name FROM city , superhero WHERE ST_Contains ( city . geom , superhero . geom ); Find the super heros in each city","title":"Write a Spatial Join Query"},{"location":"tutorial/rdd/#use-spatial-partitioning","text":"Sedona spatial partitioning method can significantly speed up the join query. Three spatial partitioning methods are available: KDB-Tree, Quad-Tree and R-Tree. Two SpatialRDD must be partitioned by the same way. If you first partition SpatialRDD A, then you must use the partitioner of A to partition B. objectRDD . spatialPartitioning ( GridType . KDBTREE ) queryWindowRDD . spatialPartitioning ( objectRDD . getPartitioner ) Or queryWindowRDD . spatialPartitioning ( GridType . KDBTREE ) objectRDD . spatialPartitioning ( queryWindowRDD . getPartitioner )","title":"Use spatial partitioning"},{"location":"tutorial/rdd/#use-spatial-indexes_2","text":"To utilize a spatial index in a spatial join query, use the following code: objectRDD . spatialPartitioning ( joinQueryPartitioningType ) queryWindowRDD . spatialPartitioning ( objectRDD . getPartitioner ) val buildOnSpatialPartitionedRDD = true // Set to TRUE only if run join query val usingIndex = true queryWindowRDD . buildIndex ( IndexType . QUADTREE , buildOnSpatialPartitionedRDD ) val result = JoinQuery . SpatialJoinQueryFlat ( objectRDD , queryWindowRDD , usingIndex , considerBoundaryIntersection ) The index should be built on either one of two SpatialRDDs. In general, you should build it on the larger SpatialRDD.","title":"Use spatial indexes"},{"location":"tutorial/rdd/#output-format_2","text":"The output format of the spatial join query is a PairRDD. In this PairRDD, each object is a pair of two geometries. The left one is the geometry from objectRDD and the right one is the geometry from the queryWindowRDD. Point,Polygon Point,Polygon Point,Polygon Polygon,Polygon LineString,LineString Polygon,LineString ... Each object on the left is covered/intersected by the object on the right.","title":"Output format"},{"location":"tutorial/rdd/#write-a-distance-join-query","text":"A distance join query takes as input two Spatial RDD A and B and a distance. For each geometry in A, finds the geometries (from B) are within the given distance to it. A and B can be any geometry type and are not necessary to have the same geometry type. The unit of the distance is explained here . Assume you now have two SpatialRDDs (typed or generic). You can use the following code to issue an Distance Join Query on them. objectRddA . analyze () val circleRDD = new CircleRDD ( objectRddA , 0.1 ) // Create a CircleRDD using the given distance circleRDD . spatialPartitioning ( GridType . KDBTREE ) objectRddB . spatialPartitioning ( circleRDD . getPartitioner ) val considerBoundaryIntersection = false // Only return gemeotries fully covered by each query window in queryWindowRDD val usingIndex = false val result = JoinQuery . DistanceJoinQueryFlat ( objectRddB , circleRDD , usingIndex , considerBoundaryIntersection ) The rest part of the join query is same as the spatial join query. The details of spatial partitioning in join query is here . The details of using spatial indexes in join query is here . The output format of the distance join query is here . Note Distance join query is equal to the following query in Spatial SQL: SELECT superhero . name FROM city , superhero WHERE ST_Distance ( city . geom , superhero . geom ) <= 10 ; Find the super heros within 10 miles of each city","title":"Write a Distance Join Query"},{"location":"tutorial/rdd/#save-to-permanent-storage","text":"You can always save an SpatialRDD back to some permanent storage such as HDFS and Amazon S3. You can save distributed SpatialRDD to WKT, GeoJSON and object files. Note Non-spatial attributes such as price, age and name will also be stored to permanent storage.","title":"Save to permanent storage"},{"location":"tutorial/rdd/#save-an-spatialrdd-not-indexed","text":"Typed SpatialRDD and generic SpatialRDD can be saved to permanent storage.","title":"Save an SpatialRDD (not indexed)"},{"location":"tutorial/rdd/#save-an-spatialrdd-indexed","text":"Indexed typed SpatialRDD and generic SpatialRDD can be saved to permanent storage. However, the indexed SpatialRDD has to be stored as a distributed object file.","title":"Save an SpatialRDD (indexed)"},{"location":"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed","text":"A spatial partitioned RDD can be saved to permanent storage but Spark is not able to maintain the same RDD partition Id of the original RDD. This will lead to wrong join query results. We are working on some solutions. Stay tuned!","title":"Save an SpatialRDD (spatialPartitioned W/O indexed)"},{"location":"tutorial/rdd/#reload-a-saved-spatialrdd","text":"You can easily reload an SpatialRDD that has been saved to a distributed object file .","title":"Reload a saved SpatialRDD"},{"location":"tutorial/sql-pure-sql/","text":"Starting from Sedona v1.0.1 , you can use Sedona in a pure Spark SQL environment. The example code is written in SQL. SedonaSQL supports SQL/MM Part3 Spatial SQL Standard. Detailed SedonaSQL APIs are available here: SedonaSQL API Initiate Session \u00b6 Start spark-sql as following (replace <VERSION> with actual version, like, 1.0.1-incubating ): spark-sql --packages org.apache.sedona:sedona-python-adapter-3.0_2.12:<VERSION>,org.apache.sedona:sedona-viz-3.0_2.12:<VERSION>,org.datasyslab:geotools-wrapper:geotools-24.0 \\ --conf spark.serializer = org.apache.spark.serializer.KryoSerializer \\ --conf spark.kryo.registrator = org.apache.sedona.viz.core.Serde.SedonaVizKryoRegistrator \\ --conf spark.sql.extensions = org.apache.sedona.viz.sql.SedonaVizExtensions,org.apache.sedona.sql.SedonaSqlExtensions This will register all User Defined Tyeps, functions and optimizations in SedonaSQL and SedonaViz. Load data \u00b6 Let use data from examples/sql . To load data from CSV file we need to execute two commands: Use the following code to load the data and create a raw DataFrame: CREATE TABLE IF NOT EXISTS pointraw ( _c0 string , _c1 string ) USING csv OPTIONS ( header = 'false' ) LOCATION '<some path>/incubator-sedona/examples/sql/src/test/resources/testpoint.csv' ; CREATE TABLE IF NOT EXISTS polygonraw ( _c0 string , _c1 string , _c2 string , _c3 string ) USING csv OPTIONS ( header = 'false' ) LOCATION '<some path>/incubator-sedona/examples/sql/src/test/resources/testenvelope.csv' ; Transform the data \u00b6 We need to transform our point and polygon data into respective types: CREATE OR REPLACE TEMP VIEW pointdata AS SELECT ST_Point ( cast ( pointraw . _c0 as Decimal ( 24 , 20 )), cast ( pointraw . _c1 as Decimal ( 24 , 20 ))) AS pointshape FROM pointraw ; CREATE OR REPLACE TEMP VIEW polygondata AS select ST_PolygonFromEnvelope ( cast ( polygonraw . _c0 as Decimal ( 24 , 20 )), cast ( polygonraw . _c1 as Decimal ( 24 , 20 )), cast ( polygonraw . _c2 as Decimal ( 24 , 20 )), cast ( polygonraw . _c3 as Decimal ( 24 , 20 ))) AS polygonshape FROM polygonraw ; Work with data \u00b6 For example, let join polygon and test data: SELECT * from polygondata , pointdata WHERE ST_Contains ( polygondata . polygonshape , pointdata . pointshape ) AND ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 101 . 0 , 501 . 0 , 601 . 0 ), polygondata . polygonshape ) LIMIT 5 ;","title":"Pure SQL"},{"location":"tutorial/sql-pure-sql/#initiate-session","text":"Start spark-sql as following (replace <VERSION> with actual version, like, 1.0.1-incubating ): spark-sql --packages org.apache.sedona:sedona-python-adapter-3.0_2.12:<VERSION>,org.apache.sedona:sedona-viz-3.0_2.12:<VERSION>,org.datasyslab:geotools-wrapper:geotools-24.0 \\ --conf spark.serializer = org.apache.spark.serializer.KryoSerializer \\ --conf spark.kryo.registrator = org.apache.sedona.viz.core.Serde.SedonaVizKryoRegistrator \\ --conf spark.sql.extensions = org.apache.sedona.viz.sql.SedonaVizExtensions,org.apache.sedona.sql.SedonaSqlExtensions This will register all User Defined Tyeps, functions and optimizations in SedonaSQL and SedonaViz.","title":"Initiate Session"},{"location":"tutorial/sql-pure-sql/#load-data","text":"Let use data from examples/sql . To load data from CSV file we need to execute two commands: Use the following code to load the data and create a raw DataFrame: CREATE TABLE IF NOT EXISTS pointraw ( _c0 string , _c1 string ) USING csv OPTIONS ( header = 'false' ) LOCATION '<some path>/incubator-sedona/examples/sql/src/test/resources/testpoint.csv' ; CREATE TABLE IF NOT EXISTS polygonraw ( _c0 string , _c1 string , _c2 string , _c3 string ) USING csv OPTIONS ( header = 'false' ) LOCATION '<some path>/incubator-sedona/examples/sql/src/test/resources/testenvelope.csv' ;","title":"Load data"},{"location":"tutorial/sql-pure-sql/#transform-the-data","text":"We need to transform our point and polygon data into respective types: CREATE OR REPLACE TEMP VIEW pointdata AS SELECT ST_Point ( cast ( pointraw . _c0 as Decimal ( 24 , 20 )), cast ( pointraw . _c1 as Decimal ( 24 , 20 ))) AS pointshape FROM pointraw ; CREATE OR REPLACE TEMP VIEW polygondata AS select ST_PolygonFromEnvelope ( cast ( polygonraw . _c0 as Decimal ( 24 , 20 )), cast ( polygonraw . _c1 as Decimal ( 24 , 20 )), cast ( polygonraw . _c2 as Decimal ( 24 , 20 )), cast ( polygonraw . _c3 as Decimal ( 24 , 20 ))) AS polygonshape FROM polygonraw ;","title":"Transform the data"},{"location":"tutorial/sql-pure-sql/#work-with-data","text":"For example, let join polygon and test data: SELECT * from polygondata , pointdata WHERE ST_Contains ( polygondata . polygonshape , pointdata . pointshape ) AND ST_Contains ( ST_PolygonFromEnvelope ( 1 . 0 , 101 . 0 , 501 . 0 , 601 . 0 ), polygondata . polygonshape ) LIMIT 5 ;","title":"Work with data"},{"location":"tutorial/sql-python/","text":"Spatial SQL Application in Python \u00b6 Introduction \u00b6 This package is an extension to Apache Spark SQL package. It allow to use spatial functions on dataframes. SedonaSQL supports SQL/MM Part3 Spatial SQL Standard. It includes four kinds of SQL operators as follows. All these operators can be directly called through: spark . sql ( \"YOUR_SQL\" ) Note This tutorial is based on Sedona SQL Jupyter Notebook example . You can interact with Sedona Python Jupyter notebook immediately on Binder. Click and wait for a few minutes. Then select a notebook and enjoy! Installation \u00b6 Please read Quick start to install Sedona Python. Register package \u00b6 Before writing any code with Sedona please use the following code. from sedona.register import SedonaRegistrator SedonaRegistrator . registerAll ( spark ) You can also register functions by passing --conf spark.sql.extensions=org.apache.sedona.sql.SedonaSqlExtensions to spark-submit or spark-shell . Writing Application \u00b6 Use KryoSerializer.getName and SedonaKryoRegistrator.getName class properties to reduce memory impact. spark = SparkSession . \\ builder . \\ master ( \"local[*]\" ) . \\ appName ( \"Sedona App\" ) . \\ config ( \"spark.serializer\" , KryoSerializer . getName ) . \\ config ( \"spark.kryo.registrator\" , SedonaKryoRegistrator . getName ) . \\ getOrCreate () To turn on SedonaSQL function inside pyspark code use SedonaRegistrator.registerAll method on existing pyspark.sql.SparkSession instance ex. SedonaRegistrator.registerAll(spark) After that all the functions from SedonaSQL are available, moreover using collect or toPandas methods on Spark DataFrame returns Shapely BaseGeometry objects. Based on GeoPandas DataFrame, Pandas DataFrame with shapely objects or Sequence with shapely objects, Spark DataFrame can be created using spark.createDataFrame method. To specify Schema with geometry inside please use GeometryType() instance (look at examples section to see that in practice). Examples \u00b6 SedonaSQL \u00b6 All SedonaSQL functions (list depends on SedonaSQL version) are available in Python API. For details please refer to API/SedonaSQL page. For example use SedonaSQL for Spatial Join. counties = spark . \\ read . \\ option ( \"delimiter\" , \"|\" ) . \\ option ( \"header\" , \"true\" ) . \\ csv ( \"counties.csv\" ) counties . createOrReplaceTempView ( \"county\" ) counties_geom = spark . sql ( \"SELECT county_code, st_geomFromWKT(geom) as geometry from county\" ) counties_geom . show ( 5 ) +-----------+--------------------+ |county_code| geometry| +-----------+--------------------+ | 1815|POLYGON ((21.6942...| | 1410|POLYGON ((22.7238...| | 1418|POLYGON ((21.1100...| | 1425|POLYGON ((20.9891...| | 1427|POLYGON ((19.5087...| +-----------+--------------------+ import geopandas as gpd points = gpd . read_file ( \"gis_osm_pois_free_1.shp\" ) points_geom = spark . createDataFrame ( points [[ \"fclass\" , \"geometry\" ]] ) points_geom . show ( 5 , False ) +---------+-----------------------------+ |fclass |geometry | +---------+-----------------------------+ |camp_site|POINT (15.3393145 52.3504247)| |chalet |POINT (14.8709625 52.691693) | |motel |POINT (15.0946636 52.3130396)| |atm |POINT (15.0732014 52.3141083)| |hotel |POINT (15.0696777 52.3143013)| +---------+-----------------------------+ points_geom . createOrReplaceTempView ( \"pois\" ) counties_geom . createOrReplaceTempView ( \"counties\" ) spatial_join_result = spark . sql ( \"\"\" SELECT c.county_code, p.fclass FROM pois AS p, counties AS c WHERE ST_Intersects(p.geometry, c.geometry) \"\"\" ) spatial_join_result . explain () == Physical Plan == *(2) Project [county_code#230, fclass#239] +- RangeJoin geometry#240: geometry, geometry#236: geometry, true :- Scan ExistingRDD[fclass#239,geometry#240] +- Project [county_code#230, st_geomfromwkt(geom#232) AS geometry#236] +- *(1) FileScan csv [county_code#230,geom#232] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/projects/sedona/counties.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<county_code:string,geom:string> Calculating Number of Pois within counties per fclass. pois_per_county = spatial_join_result . groupBy ( \"county_code\" , \"fclass\" ) . \\ count () pois_per_county . show ( 5 , False ) +-----------+---------+-----+ |county_code|fclass |count| +-----------+---------+-----+ |0805 |atm |6 | |0805 |bench |75 | |0803 |museum |9 | |0802 |fast_food|5 | |0862 |atm |20 | +-----------+---------+-----+ Integration with GeoPandas and Shapely \u00b6 sedona has implemented serializers and deserializers which allows to convert Sedona Geometry objects into Shapely BaseGeometry objects. Based on that it is possible to load the data with geopandas from file (look at Fiona possible drivers) and create Spark DataFrame based on GeoDataFrame object. Example, loading the data from shapefile using geopandas read_file method and create Spark DataFrame based on GeoDataFrame: import geopandas as gpd from pyspark.sql import SparkSession from sedona.register import SedonaRegistrator spark = SparkSession . builder . \\ getOrCreate () SedonaRegistrator . registerAll ( spark ) gdf = gpd . read_file ( \"gis_osm_pois_free_1.shp\" ) spark . createDataFrame ( gdf ) . show () +---------+----+-----------+--------------------+--------------------+ | osm_id|code| fclass| name| geometry| +---------+----+-----------+--------------------+--------------------+ | 26860257|2422| camp_site| de Kroon|POINT (15.3393145...| | 26860294|2406| chalet| Le\u015bne Ustronie|POINT (14.8709625...| | 29947493|2402| motel| null|POINT (15.0946636...| | 29947498|2602| atm| null|POINT (15.0732014...| | 29947499|2401| hotel| null|POINT (15.0696777...| | 29947505|2401| hotel| null|POINT (15.0155749...| +---------+----+-----------+--------------------+--------------------+ Reading data with Spark and converting to GeoPandas import geopandas as gpd from pyspark.sql import SparkSession from sedona.register import SedonaRegistrator spark = SparkSession . builder . \\ getOrCreate () SedonaRegistrator . registerAll ( spark ) counties = spark . \\ read . \\ option ( \"delimiter\" , \"|\" ) . \\ option ( \"header\" , \"true\" ) . \\ csv ( \"counties.csv\" ) counties . createOrReplaceTempView ( \"county\" ) counties_geom = spark . sql ( \"SELECT *, st_geomFromWKT(geom) as geometry from county\" ) df = counties_geom . toPandas () gdf = gpd . GeoDataFrame ( df , geometry = \"geometry\" ) gdf . plot ( figsize = ( 10 , 8 ), column = \"value\" , legend = True , cmap = 'YlOrBr' , scheme = 'quantiles' , edgecolor = 'lightgray' ) Creating Spark DataFrame based on shapely objects \u00b6 Supported Shapely objects \u00b6 shapely object Available Point MultiPoint LineString MultiLinestring Polygon MultiPolygon To create Spark DataFrame based on mentioned Geometry types, please use GeometryType from sedona.sql.types module. Converting works for list or tuple with shapely objects. Schema for target table with integer id and geometry type can be defined as follow: from pyspark.sql.types import IntegerType , StructField , StructType from sedona.sql.types import GeometryType schema = StructType ( [ StructField ( \"id\" , IntegerType (), False ), StructField ( \"geom\" , GeometryType (), False ) ] ) Also Spark DataFrame with geometry type can be converted to list of shapely objects with collect method. Example usage for Shapely objects \u00b6 Point \u00b6 from shapely.geometry import Point data = [ [ 1 , Point ( 21.0 , 52.0 )], [ 1 , Point ( 23.0 , 42.0 )], [ 1 , Point ( 26.0 , 32.0 )] ] gdf = spark . createDataFrame ( data , schema ) gdf . show () +---+-------------+ | id| geom| +---+-------------+ | 1|POINT (21 52)| | 1|POINT (23 42)| | 1|POINT (26 32)| +---+-------------+ gdf . printSchema () root |-- id: integer (nullable = false) |-- geom: geometry (nullable = false) MultiPoint \u00b6 from shapely.geometry import MultiPoint data = [ [ 1 , MultiPoint ([[ 19.511463 , 51.765158 ], [ 19.446408 , 51.779752 ]])] ] gdf = spark . createDataFrame ( data , schema ) . show ( 1 , False ) +---+---------------------------------------------------------+ |id |geom | +---+---------------------------------------------------------+ |1 |MULTIPOINT ((19.511463 51.765158), (19.446408 51.779752))| +---+---------------------------------------------------------+ LineString \u00b6 from shapely.geometry import LineString line = [( 40 , 40 ), ( 30 , 30 ), ( 40 , 20 ), ( 30 , 10 )] data = [ [ 1 , LineString ( line )] ] gdf = spark . createDataFrame ( data , schema ) gdf . show ( 1 , False ) +---+--------------------------------+ |id |geom | +---+--------------------------------+ |1 |LINESTRING (10 10, 20 20, 10 40)| +---+--------------------------------+ MultiLineString \u00b6 from shapely.geometry import MultiLineString line1 = [( 10 , 10 ), ( 20 , 20 ), ( 10 , 40 )] line2 = [( 40 , 40 ), ( 30 , 30 ), ( 40 , 20 ), ( 30 , 10 )] data = [ [ 1 , MultiLineString ([ line1 , line2 ])] ] gdf = spark . createDataFrame ( data , schema ) gdf . show ( 1 , False ) +---+---------------------------------------------------------------------+ |id |geom | +---+---------------------------------------------------------------------+ |1 |MULTILINESTRING ((10 10, 20 20, 10 40), (40 40, 30 30, 40 20, 30 10))| +---+---------------------------------------------------------------------+ Polygon \u00b6 from shapely.geometry import Polygon polygon = Polygon ( [ [ 19.51121 , 51.76426 ], [ 19.51056 , 51.76583 ], [ 19.51216 , 51.76599 ], [ 19.51280 , 51.76448 ], [ 19.51121 , 51.76426 ] ] ) data = [ [ 1 , polygon ] ] gdf = spark . createDataFrame ( data , schema ) gdf . show ( 1 , False ) +---+--------------------------------------------------------------------------------------------------------+ |id |geom | +---+--------------------------------------------------------------------------------------------------------+ |1 |POLYGON ((19.51121 51.76426, 19.51056 51.76583, 19.51216 51.76599, 19.5128 51.76448, 19.51121 51.76426))| +---+--------------------------------------------------------------------------------------------------------+ MultiPolygon \u00b6 from shapely.geometry import MultiPolygon exterior_p1 = [( 0 , 0 ), ( 0 , 2 ), ( 2 , 2 ), ( 2 , 0 ), ( 0 , 0 )] interior_p1 = [( 1 , 1 ), ( 1 , 1.5 ), ( 1.5 , 1.5 ), ( 1.5 , 1 ), ( 1 , 1 )] exterior_p2 = [( 0 , 0 ), ( 1 , 0 ), ( 1 , 1 ), ( 0 , 1 ), ( 0 , 0 )] polygons = [ Polygon ( exterior_p1 , [ interior_p1 ]), Polygon ( exterior_p2 ) ] data = [ [ 1 , MultiPolygon ( polygons )] ] gdf = spark . createDataFrame ( data , schema ) gdf . show ( 1 , False ) +---+----------------------------------------------------------------------------------------------------------+ |id |geom | +---+----------------------------------------------------------------------------------------------------------+ |1 |MULTIPOLYGON (((0 0, 0 2, 2 2, 2 0, 0 0), (1 1, 1.5 1, 1.5 1.5, 1 1.5, 1 1)), ((0 0, 0 1, 1 1, 1 0, 0 0)))| +---+----------------------------------------------------------------------------------------------------------+","title":"Python"},{"location":"tutorial/sql-python/#spatial-sql-application-in-python","text":"","title":"Spatial SQL Application in Python"},{"location":"tutorial/sql-python/#introduction","text":"This package is an extension to Apache Spark SQL package. It allow to use spatial functions on dataframes. SedonaSQL supports SQL/MM Part3 Spatial SQL Standard. It includes four kinds of SQL operators as follows. All these operators can be directly called through: spark . sql ( \"YOUR_SQL\" ) Note This tutorial is based on Sedona SQL Jupyter Notebook example . You can interact with Sedona Python Jupyter notebook immediately on Binder. Click and wait for a few minutes. Then select a notebook and enjoy!","title":"Introduction"},{"location":"tutorial/sql-python/#installation","text":"Please read Quick start to install Sedona Python.","title":"Installation"},{"location":"tutorial/sql-python/#register-package","text":"Before writing any code with Sedona please use the following code. from sedona.register import SedonaRegistrator SedonaRegistrator . registerAll ( spark ) You can also register functions by passing --conf spark.sql.extensions=org.apache.sedona.sql.SedonaSqlExtensions to spark-submit or spark-shell .","title":"Register package"},{"location":"tutorial/sql-python/#writing-application","text":"Use KryoSerializer.getName and SedonaKryoRegistrator.getName class properties to reduce memory impact. spark = SparkSession . \\ builder . \\ master ( \"local[*]\" ) . \\ appName ( \"Sedona App\" ) . \\ config ( \"spark.serializer\" , KryoSerializer . getName ) . \\ config ( \"spark.kryo.registrator\" , SedonaKryoRegistrator . getName ) . \\ getOrCreate () To turn on SedonaSQL function inside pyspark code use SedonaRegistrator.registerAll method on existing pyspark.sql.SparkSession instance ex. SedonaRegistrator.registerAll(spark) After that all the functions from SedonaSQL are available, moreover using collect or toPandas methods on Spark DataFrame returns Shapely BaseGeometry objects. Based on GeoPandas DataFrame, Pandas DataFrame with shapely objects or Sequence with shapely objects, Spark DataFrame can be created using spark.createDataFrame method. To specify Schema with geometry inside please use GeometryType() instance (look at examples section to see that in practice).","title":"Writing Application"},{"location":"tutorial/sql-python/#examples","text":"","title":"Examples"},{"location":"tutorial/sql-python/#sedonasql","text":"All SedonaSQL functions (list depends on SedonaSQL version) are available in Python API. For details please refer to API/SedonaSQL page. For example use SedonaSQL for Spatial Join. counties = spark . \\ read . \\ option ( \"delimiter\" , \"|\" ) . \\ option ( \"header\" , \"true\" ) . \\ csv ( \"counties.csv\" ) counties . createOrReplaceTempView ( \"county\" ) counties_geom = spark . sql ( \"SELECT county_code, st_geomFromWKT(geom) as geometry from county\" ) counties_geom . show ( 5 ) +-----------+--------------------+ |county_code| geometry| +-----------+--------------------+ | 1815|POLYGON ((21.6942...| | 1410|POLYGON ((22.7238...| | 1418|POLYGON ((21.1100...| | 1425|POLYGON ((20.9891...| | 1427|POLYGON ((19.5087...| +-----------+--------------------+ import geopandas as gpd points = gpd . read_file ( \"gis_osm_pois_free_1.shp\" ) points_geom = spark . createDataFrame ( points [[ \"fclass\" , \"geometry\" ]] ) points_geom . show ( 5 , False ) +---------+-----------------------------+ |fclass |geometry | +---------+-----------------------------+ |camp_site|POINT (15.3393145 52.3504247)| |chalet |POINT (14.8709625 52.691693) | |motel |POINT (15.0946636 52.3130396)| |atm |POINT (15.0732014 52.3141083)| |hotel |POINT (15.0696777 52.3143013)| +---------+-----------------------------+ points_geom . createOrReplaceTempView ( \"pois\" ) counties_geom . createOrReplaceTempView ( \"counties\" ) spatial_join_result = spark . sql ( \"\"\" SELECT c.county_code, p.fclass FROM pois AS p, counties AS c WHERE ST_Intersects(p.geometry, c.geometry) \"\"\" ) spatial_join_result . explain () == Physical Plan == *(2) Project [county_code#230, fclass#239] +- RangeJoin geometry#240: geometry, geometry#236: geometry, true :- Scan ExistingRDD[fclass#239,geometry#240] +- Project [county_code#230, st_geomfromwkt(geom#232) AS geometry#236] +- *(1) FileScan csv [county_code#230,geom#232] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/projects/sedona/counties.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<county_code:string,geom:string> Calculating Number of Pois within counties per fclass. pois_per_county = spatial_join_result . groupBy ( \"county_code\" , \"fclass\" ) . \\ count () pois_per_county . show ( 5 , False ) +-----------+---------+-----+ |county_code|fclass |count| +-----------+---------+-----+ |0805 |atm |6 | |0805 |bench |75 | |0803 |museum |9 | |0802 |fast_food|5 | |0862 |atm |20 | +-----------+---------+-----+","title":"SedonaSQL"},{"location":"tutorial/sql-python/#integration-with-geopandas-and-shapely","text":"sedona has implemented serializers and deserializers which allows to convert Sedona Geometry objects into Shapely BaseGeometry objects. Based on that it is possible to load the data with geopandas from file (look at Fiona possible drivers) and create Spark DataFrame based on GeoDataFrame object. Example, loading the data from shapefile using geopandas read_file method and create Spark DataFrame based on GeoDataFrame: import geopandas as gpd from pyspark.sql import SparkSession from sedona.register import SedonaRegistrator spark = SparkSession . builder . \\ getOrCreate () SedonaRegistrator . registerAll ( spark ) gdf = gpd . read_file ( \"gis_osm_pois_free_1.shp\" ) spark . createDataFrame ( gdf ) . show () +---------+----+-----------+--------------------+--------------------+ | osm_id|code| fclass| name| geometry| +---------+----+-----------+--------------------+--------------------+ | 26860257|2422| camp_site| de Kroon|POINT (15.3393145...| | 26860294|2406| chalet| Le\u015bne Ustronie|POINT (14.8709625...| | 29947493|2402| motel| null|POINT (15.0946636...| | 29947498|2602| atm| null|POINT (15.0732014...| | 29947499|2401| hotel| null|POINT (15.0696777...| | 29947505|2401| hotel| null|POINT (15.0155749...| +---------+----+-----------+--------------------+--------------------+ Reading data with Spark and converting to GeoPandas import geopandas as gpd from pyspark.sql import SparkSession from sedona.register import SedonaRegistrator spark = SparkSession . builder . \\ getOrCreate () SedonaRegistrator . registerAll ( spark ) counties = spark . \\ read . \\ option ( \"delimiter\" , \"|\" ) . \\ option ( \"header\" , \"true\" ) . \\ csv ( \"counties.csv\" ) counties . createOrReplaceTempView ( \"county\" ) counties_geom = spark . sql ( \"SELECT *, st_geomFromWKT(geom) as geometry from county\" ) df = counties_geom . toPandas () gdf = gpd . GeoDataFrame ( df , geometry = \"geometry\" ) gdf . plot ( figsize = ( 10 , 8 ), column = \"value\" , legend = True , cmap = 'YlOrBr' , scheme = 'quantiles' , edgecolor = 'lightgray' )","title":"Integration with GeoPandas and Shapely"},{"location":"tutorial/sql-python/#creating-spark-dataframe-based-on-shapely-objects","text":"","title":"Creating Spark DataFrame based on shapely objects"},{"location":"tutorial/sql-python/#supported-shapely-objects","text":"shapely object Available Point MultiPoint LineString MultiLinestring Polygon MultiPolygon To create Spark DataFrame based on mentioned Geometry types, please use GeometryType from sedona.sql.types module. Converting works for list or tuple with shapely objects. Schema for target table with integer id and geometry type can be defined as follow: from pyspark.sql.types import IntegerType , StructField , StructType from sedona.sql.types import GeometryType schema = StructType ( [ StructField ( \"id\" , IntegerType (), False ), StructField ( \"geom\" , GeometryType (), False ) ] ) Also Spark DataFrame with geometry type can be converted to list of shapely objects with collect method.","title":"Supported Shapely objects"},{"location":"tutorial/sql-python/#example-usage-for-shapely-objects","text":"","title":"Example usage for Shapely objects"},{"location":"tutorial/sql-python/#point","text":"from shapely.geometry import Point data = [ [ 1 , Point ( 21.0 , 52.0 )], [ 1 , Point ( 23.0 , 42.0 )], [ 1 , Point ( 26.0 , 32.0 )] ] gdf = spark . createDataFrame ( data , schema ) gdf . show () +---+-------------+ | id| geom| +---+-------------+ | 1|POINT (21 52)| | 1|POINT (23 42)| | 1|POINT (26 32)| +---+-------------+ gdf . printSchema () root |-- id: integer (nullable = false) |-- geom: geometry (nullable = false)","title":"Point"},{"location":"tutorial/sql-python/#multipoint","text":"from shapely.geometry import MultiPoint data = [ [ 1 , MultiPoint ([[ 19.511463 , 51.765158 ], [ 19.446408 , 51.779752 ]])] ] gdf = spark . createDataFrame ( data , schema ) . show ( 1 , False ) +---+---------------------------------------------------------+ |id |geom | +---+---------------------------------------------------------+ |1 |MULTIPOINT ((19.511463 51.765158), (19.446408 51.779752))| +---+---------------------------------------------------------+","title":"MultiPoint"},{"location":"tutorial/sql-python/#linestring","text":"from shapely.geometry import LineString line = [( 40 , 40 ), ( 30 , 30 ), ( 40 , 20 ), ( 30 , 10 )] data = [ [ 1 , LineString ( line )] ] gdf = spark . createDataFrame ( data , schema ) gdf . show ( 1 , False ) +---+--------------------------------+ |id |geom | +---+--------------------------------+ |1 |LINESTRING (10 10, 20 20, 10 40)| +---+--------------------------------+","title":"LineString"},{"location":"tutorial/sql-python/#multilinestring","text":"from shapely.geometry import MultiLineString line1 = [( 10 , 10 ), ( 20 , 20 ), ( 10 , 40 )] line2 = [( 40 , 40 ), ( 30 , 30 ), ( 40 , 20 ), ( 30 , 10 )] data = [ [ 1 , MultiLineString ([ line1 , line2 ])] ] gdf = spark . createDataFrame ( data , schema ) gdf . show ( 1 , False ) +---+---------------------------------------------------------------------+ |id |geom | +---+---------------------------------------------------------------------+ |1 |MULTILINESTRING ((10 10, 20 20, 10 40), (40 40, 30 30, 40 20, 30 10))| +---+---------------------------------------------------------------------+","title":"MultiLineString"},{"location":"tutorial/sql-python/#polygon","text":"from shapely.geometry import Polygon polygon = Polygon ( [ [ 19.51121 , 51.76426 ], [ 19.51056 , 51.76583 ], [ 19.51216 , 51.76599 ], [ 19.51280 , 51.76448 ], [ 19.51121 , 51.76426 ] ] ) data = [ [ 1 , polygon ] ] gdf = spark . createDataFrame ( data , schema ) gdf . show ( 1 , False ) +---+--------------------------------------------------------------------------------------------------------+ |id |geom | +---+--------------------------------------------------------------------------------------------------------+ |1 |POLYGON ((19.51121 51.76426, 19.51056 51.76583, 19.51216 51.76599, 19.5128 51.76448, 19.51121 51.76426))| +---+--------------------------------------------------------------------------------------------------------+","title":"Polygon"},{"location":"tutorial/sql-python/#multipolygon","text":"from shapely.geometry import MultiPolygon exterior_p1 = [( 0 , 0 ), ( 0 , 2 ), ( 2 , 2 ), ( 2 , 0 ), ( 0 , 0 )] interior_p1 = [( 1 , 1 ), ( 1 , 1.5 ), ( 1.5 , 1.5 ), ( 1.5 , 1 ), ( 1 , 1 )] exterior_p2 = [( 0 , 0 ), ( 1 , 0 ), ( 1 , 1 ), ( 0 , 1 ), ( 0 , 0 )] polygons = [ Polygon ( exterior_p1 , [ interior_p1 ]), Polygon ( exterior_p2 ) ] data = [ [ 1 , MultiPolygon ( polygons )] ] gdf = spark . createDataFrame ( data , schema ) gdf . show ( 1 , False ) +---+----------------------------------------------------------------------------------------------------------+ |id |geom | +---+----------------------------------------------------------------------------------------------------------+ |1 |MULTIPOLYGON (((0 0, 0 2, 2 2, 2 0, 0 0), (1 1, 1.5 1, 1.5 1.5, 1 1.5, 1 1)), ((0 0, 0 1, 1 1, 1 0, 0 0)))| +---+----------------------------------------------------------------------------------------------------------+","title":"MultiPolygon"},{"location":"tutorial/sql-r/","text":"Spatial SQL applications in R language \u00b6 In apache.sedona , sdf_register() , a S3 generic from sparklyr converting a lower-level object to a Spark dataframe, can be applied to a SpatialRDD objects: library ( sparklyr ) library ( apache.sedona ) sc <- spark_connect ( master = \"local\" ) polygon_rdd <- sedona_read_geojson ( sc , location = \"/tmp/polygon.json\" ) polygon_sdf <- polygon_rdd %>% sdf_register () polygon_sdf %>% print ( n = 3 ) ## # Source : spark <? > [ ?? x 1 ] ## geometry ## <list> ## 1 <POLYGON ((-87.621765 34.873444, -87.617535 34.873369, -87.6123 34.873337, -8\u2026 ## 2 <POLYGON ((-85.719017 31.297901, -85.715626 31.305203, -85.714271 31.307096, \u2026 ## 3 <POLYGON ((-86.000685 34.00537, -85.998837 34.009768, -85.998012 34.010398, -\u2026 ## # \u2026 with more rows The resulting Spark dataframe object can then be modified using dplyr verbs familiar to many R users. In addition, spatial UDFs supported by Sedona can inter-operate seamlessly with other functions supported in sparklyr \u2019s dbplyr SQL translation env. For example, the code below finds the average area of all polygons in polygon_sdf : mean_area_sdf <- polygon_sdf %>% dplyr :: summarize ( mean_area = mean ( ST_Area ( geometry ))) print ( mean_area_sdf ) ## # Source : spark <? > [ ?? x 1 ] ## mean_area ## <dbl> ## 1 0.00217 Once spatial objects are imported into Spark dataframes, they can also be easily integrated with other non-spatial attributes, e.g., modified_polygon_sdf <- polygon_sdf %>% dplyr :: mutate ( type = \"polygon\" ) Notice that all of the above can open up many interesting possiblities. For example, one can extract ML features from geospatial data in Spark dataframes, build a ML pipeline using ml_* family of functions in sparklyr to work with such features, and if the output of a ML model happens to be a geospatial object as well, one can even apply visualization routines in apache.sedona to visualize the difference between any predicted geometry and the corresponding ground truth.","title":"R"},{"location":"tutorial/sql-r/#spatial-sql-applications-in-r-language","text":"In apache.sedona , sdf_register() , a S3 generic from sparklyr converting a lower-level object to a Spark dataframe, can be applied to a SpatialRDD objects: library ( sparklyr ) library ( apache.sedona ) sc <- spark_connect ( master = \"local\" ) polygon_rdd <- sedona_read_geojson ( sc , location = \"/tmp/polygon.json\" ) polygon_sdf <- polygon_rdd %>% sdf_register () polygon_sdf %>% print ( n = 3 ) ## # Source : spark <? > [ ?? x 1 ] ## geometry ## <list> ## 1 <POLYGON ((-87.621765 34.873444, -87.617535 34.873369, -87.6123 34.873337, -8\u2026 ## 2 <POLYGON ((-85.719017 31.297901, -85.715626 31.305203, -85.714271 31.307096, \u2026 ## 3 <POLYGON ((-86.000685 34.00537, -85.998837 34.009768, -85.998012 34.010398, -\u2026 ## # \u2026 with more rows The resulting Spark dataframe object can then be modified using dplyr verbs familiar to many R users. In addition, spatial UDFs supported by Sedona can inter-operate seamlessly with other functions supported in sparklyr \u2019s dbplyr SQL translation env. For example, the code below finds the average area of all polygons in polygon_sdf : mean_area_sdf <- polygon_sdf %>% dplyr :: summarize ( mean_area = mean ( ST_Area ( geometry ))) print ( mean_area_sdf ) ## # Source : spark <? > [ ?? x 1 ] ## mean_area ## <dbl> ## 1 0.00217 Once spatial objects are imported into Spark dataframes, they can also be easily integrated with other non-spatial attributes, e.g., modified_polygon_sdf <- polygon_sdf %>% dplyr :: mutate ( type = \"polygon\" ) Notice that all of the above can open up many interesting possiblities. For example, one can extract ML features from geospatial data in Spark dataframes, build a ML pipeline using ml_* family of functions in sparklyr to work with such features, and if the output of a ML model happens to be a geospatial object as well, one can even apply visualization routines in apache.sedona to visualize the difference between any predicted geometry and the corresponding ground truth.","title":"Spatial SQL applications in R language"},{"location":"tutorial/sql/","text":"The page outlines the steps to manage spatial data using SedonaSQL. The example code is written in Scala but also works for Java . SedonaSQL supports SQL/MM Part3 Spatial SQL Standard. It includes four kinds of SQL operators as follows. All these operators can be directly called through: var myDataFrame = sparkSession . sql ( \"YOUR_SQL\" ) Detailed SedonaSQL APIs are available here: SedonaSQL API Set up dependencies \u00b6 Read Sedona Maven Central coordinates Select the minimum dependencies : Add Apache Spark core , Apache SparkSQL , Sedona-core and Sedona-SQL Add the dependencies in build.sbt or pom.xml. Note To enjoy the full functions of Sedona, we suggest you include the full dependencies : Apache Spark core , Apache SparkSQL , Sedona-core, Sedona-SQL, Sedona-Viz. Please see SQL example project Initiate SparkSession \u00b6 Use the following code to initiate your SparkSession at the beginning: var sparkSession = SparkSession . builder () . master ( \"local[*]\" ) // Delete this if run in cluster mode . appName ( \"readTestScala\" ) // Change this to a proper name // Enable Sedona custom Kryo serializer . config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) // org.apache.spark.serializer.KryoSerializer . config ( \"spark.kryo.registrator\" , classOf [ SedonaKryoRegistrator ]. getName ) . getOrCreate () // org.apache.sedona.core.serde.SedonaKryoRegistrator Warning Sedona has a suite of well-written geometry and index serializers. Forgetting to enable these serializers will lead to high memory consumption. If you add the Sedona full dependencies as suggested above, please use the following two lines to enable Sedona Kryo serializer instead: . config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) // org.apache.spark.serializer.KryoSerializer . config ( \"spark.kryo.registrator\" , classOf [ SedonaVizKryoRegistrator ]. getName ) // org.apache.sedona.viz.core.Serde.SedonaVizKryoRegistrator Register SedonaSQL \u00b6 Add the following line after your SparkSession declaration SedonaSQLRegistrator . registerAll ( sparkSession ) This function will register Sedona User Defined Type, User Defined Function and optimized join query strategy. You can also register everything by passing --conf spark.sql.extensions=org.apache.sedona.sql.SedonaSqlExtensions to spark-submit or spark-shell . Load data from files \u00b6 Assume we have a WKT file, namely usa-county.tsv , at Path /Download/usa-county.tsv as follows: POLYGON (..., ...) Cuming County POLYGON (..., ...) Wahkiakum County POLYGON (..., ...) De Baca County POLYGON (..., ...) Lancaster County The file may have many other columns. Use the following code to load the data and create a raw DataFrame: var rawDf = sparkSession . read . format ( \"csv\" ). option ( \"delimiter\" , \"\\t\" ). option ( \"header\" , \"false\" ). load ( \"/Download/usa-county.tsv\" ) rawDf . createOrReplaceTempView ( \"rawdf\" ) rawDf . show () The output will be like this: | _c0|_c1|_c2| _c3| _c4| _c5| _c6|_c7|_c8| _c9|_c10| _c11|_c12|_c13| _c14| _c15| _c16| _c17| +--------------------+---+---+--------+-----+-----------+--------------------+---+---+-----+----+-----+----+----+----------+--------+-----------+------------+ |POLYGON ((-97.019...| 31|039|00835841|31039| Cuming| Cuming County| 06| H1|G4020|null| null|null| A|1477895811|10447360|+41.9158651|-096.7885168| |POLYGON ((-123.43...| 53|069|01513275|53069| Wahkiakum| Wahkiakum County| 06| H1|G4020|null| null|null| A| 682138871|61658258|+46.2946377|-123.4244583| |POLYGON ((-104.56...| 35|011|00933054|35011| De Baca| De Baca County| 06| H1|G4020|null| null|null| A|6015539696|29159492|+34.3592729|-104.3686961| |POLYGON ((-96.910...| 31|109|00835876|31109| Lancaster| Lancaster County| 06| H1|G4020| 339|30700|null| A|2169240202|22877180|+40.7835474|-096.6886584| Create a Geometry type column \u00b6 All geometrical operations in SedonaSQL are on Geometry type objects. Therefore, before any kind of queries, you need to create a Geometry type column on a DataFrame. var spatialDf = sparkSession . sql ( \"\"\" |SELECT ST_GeomFromWKT(_c0) AS countyshape, _c1, _c2 |FROM rawdf \"\"\" . stripMargin ) spatialDf . createOrReplaceTempView ( \"spatialdf\" ) spatialDf . show () You can select many other attributes to compose this spatialdDf . The output will be something like this: | countyshape|_c1|_c2| _c3| _c4| _c5| _c6|_c7|_c8| _c9|_c10| _c11|_c12|_c13| _c14| _c15| _c16| _c17| +--------------------+---+---+--------+-----+-----------+--------------------+---+---+-----+----+-----+----+----+----------+--------+-----------+------------+ |POLYGON ((-97.019...| 31|039|00835841|31039| Cuming| Cuming County| 06| H1|G4020|null| null|null| A|1477895811|10447360|+41.9158651|-096.7885168| |POLYGON ((-123.43...| 53|069|01513275|53069| Wahkiakum| Wahkiakum County| 06| H1|G4020|null| null|null| A| 682138871|61658258|+46.2946377|-123.4244583| |POLYGON ((-104.56...| 35|011|00933054|35011| De Baca| De Baca County| 06| H1|G4020|null| null|null| A|6015539696|29159492|+34.3592729|-104.3686961| |POLYGON ((-96.910...| 31|109|00835876|31109| Lancaster| Lancaster County| 06| H1|G4020| 339|30700|null| A|2169240202|22877180|+40.7835474|-096.6886584| Although it looks same with the input, but actually the type of column countyshape has been changed to Geometry type. To verify this, use the following code to print the schema of the DataFrame: spatialDf . printSchema () The output will be like this: root |-- countyshape: geometry (nullable = false) |-- _c1: string (nullable = true) |-- _c2: string (nullable = true) |-- _c3: string (nullable = true) |-- _c4: string (nullable = true) |-- _c5: string (nullable = true) |-- _c6: string (nullable = true) |-- _c7: string (nullable = true) Note SedonaSQL provides lots of functions to create a Geometry column, please read SedonaSQL constructor API . Load Shapefile and GeoJSON \u00b6 Shapefile and GeoJSON must be loaded by SpatialRDD and converted to DataFrame using Adapter. Please read Load SpatialRDD and DataFrame <-> RDD . Load GeoParquet \u00b6 GeoParquet must be loaded using DataFrame if default name is geometry. val df = sparkSession . read . format ( \"geoparquet\" ). load ( geoparquetdatalocation1 ) df . printSchema () The output will be as follows: root |-- pop_est: long (nullable = true) |-- continent: string (nullable = true) |-- name: string (nullable = true) |-- iso_a3: string (nullable = true) |-- gdp_md_est: double (nullable = true) |-- geometry: geometry (nullable = true) If geometry column name is different var df = sparkSession . read . format ( \"geoparquet\" ). option ( \"fieldGeometry\" , \"new_geometry\" ). load ( geoparquetdatalocation1 ) The output will be as follows: root |-- pop_est: long (nullable = true) |-- continent: string (nullable = true) |-- name: string (nullable = true) |-- iso_a3: string (nullable = true) |-- gdp_md_est: double (nullable = true) |-- new_geometry: geometry (nullable = true) Transform the Coordinate Reference System \u00b6 Sedona doesn't control the coordinate unit (degree-based or meter-based) of all geometries in a Geometry column. The unit of all related distances in SedonaSQL is same as the unit of all geometries in a Geometry column. To convert Coordinate Reference System of the Geometry column created before, use the following code: spatialDf = sparkSession . sql ( \"\"\" |SELECT ST_Transform(countyshape, \"epsg:4326\", \"epsg:3857\") AS newcountyshape, _c1, _c2, _c3, _c4, _c5, _c6, _c7 |FROM spatialdf \"\"\" . stripMargin ) spatialDf . createOrReplaceTempView ( \"spatialdf\" ) spatialDf . show () The first EPSG code EPSG:4326 in ST_Transform is the source CRS of the geometries. It is WGS84, the most common degree-based CRS. The second EPSG code EPSG:3857 in ST_Transform is the target CRS of the geometries. It is the most common meter-based CRS. This ST_Transform transform the CRS of these geomtries from EPSG:4326 to EPSG:3857. The details CRS information can be found on EPSG.io The coordinates of polygons have been changed. The output will be like this: +--------------------+---+---+--------+-----+-----------+--------------------+---+ | newcountyshape|_c1|_c2| _c3| _c4| _c5| _c6|_c7| +--------------------+---+---+--------+-----+-----------+--------------------+---+ |POLYGON ((-108001...| 31|039|00835841|31039| Cuming| Cuming County| 06| |POLYGON ((-137408...| 53|069|01513275|53069| Wahkiakum| Wahkiakum County| 06| |POLYGON ((-116403...| 35|011|00933054|35011| De Baca| De Baca County| 06| |POLYGON ((-107880...| 31|109|00835876|31109| Lancaster| Lancaster County| 06| Run spatial queries \u00b6 After creating a Geometry type column, you are able to run spatial queries. Range query \u00b6 Use ST_Contains , ST_Intersects , ST_Within to run a range query over a single column. The following example finds all counties that are within the given polygon: spatialDf = sparkSession . sql ( \"\"\" |SELECT * |FROM spatialdf |WHERE ST_Contains (ST_PolygonFromEnvelope(1.0,100.0,1000.0,1100.0), newcountyshape) \"\"\" . stripMargin ) spatialDf . createOrReplaceTempView ( \"spatialdf\" ) spatialDf . show () Note Read SedonaSQL constructor API to learn how to create a Geometry type query window KNN query \u00b6 Use ST_Distance to calculate the distance and rank the distance. The following code returns the 5 nearest neighbor of the given polygon. spatialDf = sparkSession . sql ( \"\"\" |SELECT countyname, ST_Distance(ST_PolygonFromEnvelope(1.0,100.0,1000.0,1100.0), newcountyshape) AS distance |FROM spatialdf |ORDER BY distance DESC |LIMIT 5 \"\"\" . stripMargin ) spatialDf . createOrReplaceTempView ( \"spatialdf\" ) spatialDf . show () Join query \u00b6 The details of a join query is available here Join query . Other queries \u00b6 There are lots of other functions can be combined with these queries. Please read SedonaSQL functions and SedonaSQL aggregate functions . Save to permanent storage \u00b6 To save a Spatial DataFrame to some permanent storage such as Hive tables and HDFS, you can simply convert each geometry in the Geometry type column back to a plain String and save the plain DataFrame to wherever you want. Use the following code to convert the Geometry column in a DataFrame back to a WKT string column: var stringDf = sparkSession . sql ( \"\"\" |SELECT ST_AsText(countyshape) |FROM polygondf \"\"\" . stripMargin ) Note ST_AsGeoJSON is also available. We would like to invite you to contribute more functions Save GeoParquet \u00b6 GeoParquet can be saved as follows df . write . format ( \"geoparquet\" ). save ( geoparquetoutputlocation + \"/GeoParquet_File_Name.parquet\" ) Convert between DataFrame and SpatialRDD \u00b6 DataFrame to SpatialRDD \u00b6 Use SedonaSQL DataFrame-RDD Adapter to convert a DataFrame to an SpatialRDD. Please read Adapter Scaladoc var spatialRDD = Adapter . toSpatialRdd ( spatialDf , \"usacounty\" ) \"usacounty\" is the name of the geometry column Warning Only one Geometry type column is allowed per DataFrame. SpatialRDD to DataFrame \u00b6 Use SedonaSQL DataFrame-RDD Adapter to convert a DataFrame to an SpatialRDD. Please read Adapter Scaladoc var spatialDf = Adapter . toDf ( spatialRDD , sparkSession ) All other attributes such as price and age will be also brought to the DataFrame as long as you specify carryOtherAttributes (see Read other attributes in an SpatialRDD ). You may also manually specify a schema for the resulting DataFrame in case you require different column names or data types. Note that string schemas and not all data types are supported\u2014please check the Adapter Scaladoc and source code to confirm what is supported for your use case. At least one column for the user data must be provided. val schema = StructType ( Array ( StructField ( \"county\" , GeometryUDT , nullable = true ), StructField ( \"name\" , StringType , nullable = true ), StructField ( \"price\" , DoubleType , nullable = true ), StructField ( \"age\" , IntegerType , nullable = true ) )) val spatialDf = Adapter . toDf ( spatialRDD , schema , sparkSession ) SpatialPairRDD to DataFrame \u00b6 PairRDD is the result of a spatial join query or distance join query. SedonaSQL DataFrame-RDD Adapter can convert the result to a DataFrame. But you need to provide the name of other attributes. var joinResultDf = Adapter . toDf ( joinResultPairRDD , Seq ( \"left_attribute1\" , \"left_attribute2\" ), Seq ( \"right_attribute1\" , \"right_attribute2\" ), sparkSession ) or you can use the attribute names directly from the input RDD import scala . collection . JavaConversions . _ var joinResultDf = Adapter . toDf ( joinResultPairRDD , leftRdd . fieldNames , rightRdd . fieldNames , sparkSession ) All other attributes such as price and age will be also brought to the DataFrame as long as you specify carryOtherAttributes (see Read other attributes in an SpatialRDD ). You may also manually specify a schema for the resulting DataFrame in case you require different column names or data types. Note that string schemas and not all data types are supported\u2014please check the Adapter Scaladoc and source code to confirm what is supported for your use case. Columns for the left and right user data must be provided. val schema = StructType ( Array ( StructField ( \"leftGeometry\" , GeometryUDT , nullable = true ), StructField ( \"name\" , StringType , nullable = true ), StructField ( \"price\" , DoubleType , nullable = true ), StructField ( \"age\" , IntegerType , nullable = true ), StructField ( \"rightGeometry\" , GeometryUDT , nullable = true ), StructField ( \"category\" , StringType , nullable = true ) )) val joinResultDf = Adapter . toDf ( joinResultPairRDD , schema , sparkSession )","title":"Scala/Java"},{"location":"tutorial/sql/#set-up-dependencies","text":"Read Sedona Maven Central coordinates Select the minimum dependencies : Add Apache Spark core , Apache SparkSQL , Sedona-core and Sedona-SQL Add the dependencies in build.sbt or pom.xml. Note To enjoy the full functions of Sedona, we suggest you include the full dependencies : Apache Spark core , Apache SparkSQL , Sedona-core, Sedona-SQL, Sedona-Viz. Please see SQL example project","title":"Set up dependencies"},{"location":"tutorial/sql/#initiate-sparksession","text":"Use the following code to initiate your SparkSession at the beginning: var sparkSession = SparkSession . builder () . master ( \"local[*]\" ) // Delete this if run in cluster mode . appName ( \"readTestScala\" ) // Change this to a proper name // Enable Sedona custom Kryo serializer . config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) // org.apache.spark.serializer.KryoSerializer . config ( \"spark.kryo.registrator\" , classOf [ SedonaKryoRegistrator ]. getName ) . getOrCreate () // org.apache.sedona.core.serde.SedonaKryoRegistrator Warning Sedona has a suite of well-written geometry and index serializers. Forgetting to enable these serializers will lead to high memory consumption. If you add the Sedona full dependencies as suggested above, please use the following two lines to enable Sedona Kryo serializer instead: . config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) // org.apache.spark.serializer.KryoSerializer . config ( \"spark.kryo.registrator\" , classOf [ SedonaVizKryoRegistrator ]. getName ) // org.apache.sedona.viz.core.Serde.SedonaVizKryoRegistrator","title":"Initiate SparkSession"},{"location":"tutorial/sql/#register-sedonasql","text":"Add the following line after your SparkSession declaration SedonaSQLRegistrator . registerAll ( sparkSession ) This function will register Sedona User Defined Type, User Defined Function and optimized join query strategy. You can also register everything by passing --conf spark.sql.extensions=org.apache.sedona.sql.SedonaSqlExtensions to spark-submit or spark-shell .","title":"Register SedonaSQL"},{"location":"tutorial/sql/#load-data-from-files","text":"Assume we have a WKT file, namely usa-county.tsv , at Path /Download/usa-county.tsv as follows: POLYGON (..., ...) Cuming County POLYGON (..., ...) Wahkiakum County POLYGON (..., ...) De Baca County POLYGON (..., ...) Lancaster County The file may have many other columns. Use the following code to load the data and create a raw DataFrame: var rawDf = sparkSession . read . format ( \"csv\" ). option ( \"delimiter\" , \"\\t\" ). option ( \"header\" , \"false\" ). load ( \"/Download/usa-county.tsv\" ) rawDf . createOrReplaceTempView ( \"rawdf\" ) rawDf . show () The output will be like this: | _c0|_c1|_c2| _c3| _c4| _c5| _c6|_c7|_c8| _c9|_c10| _c11|_c12|_c13| _c14| _c15| _c16| _c17| +--------------------+---+---+--------+-----+-----------+--------------------+---+---+-----+----+-----+----+----+----------+--------+-----------+------------+ |POLYGON ((-97.019...| 31|039|00835841|31039| Cuming| Cuming County| 06| H1|G4020|null| null|null| A|1477895811|10447360|+41.9158651|-096.7885168| |POLYGON ((-123.43...| 53|069|01513275|53069| Wahkiakum| Wahkiakum County| 06| H1|G4020|null| null|null| A| 682138871|61658258|+46.2946377|-123.4244583| |POLYGON ((-104.56...| 35|011|00933054|35011| De Baca| De Baca County| 06| H1|G4020|null| null|null| A|6015539696|29159492|+34.3592729|-104.3686961| |POLYGON ((-96.910...| 31|109|00835876|31109| Lancaster| Lancaster County| 06| H1|G4020| 339|30700|null| A|2169240202|22877180|+40.7835474|-096.6886584|","title":"Load data from files"},{"location":"tutorial/sql/#create-a-geometry-type-column","text":"All geometrical operations in SedonaSQL are on Geometry type objects. Therefore, before any kind of queries, you need to create a Geometry type column on a DataFrame. var spatialDf = sparkSession . sql ( \"\"\" |SELECT ST_GeomFromWKT(_c0) AS countyshape, _c1, _c2 |FROM rawdf \"\"\" . stripMargin ) spatialDf . createOrReplaceTempView ( \"spatialdf\" ) spatialDf . show () You can select many other attributes to compose this spatialdDf . The output will be something like this: | countyshape|_c1|_c2| _c3| _c4| _c5| _c6|_c7|_c8| _c9|_c10| _c11|_c12|_c13| _c14| _c15| _c16| _c17| +--------------------+---+---+--------+-----+-----------+--------------------+---+---+-----+----+-----+----+----+----------+--------+-----------+------------+ |POLYGON ((-97.019...| 31|039|00835841|31039| Cuming| Cuming County| 06| H1|G4020|null| null|null| A|1477895811|10447360|+41.9158651|-096.7885168| |POLYGON ((-123.43...| 53|069|01513275|53069| Wahkiakum| Wahkiakum County| 06| H1|G4020|null| null|null| A| 682138871|61658258|+46.2946377|-123.4244583| |POLYGON ((-104.56...| 35|011|00933054|35011| De Baca| De Baca County| 06| H1|G4020|null| null|null| A|6015539696|29159492|+34.3592729|-104.3686961| |POLYGON ((-96.910...| 31|109|00835876|31109| Lancaster| Lancaster County| 06| H1|G4020| 339|30700|null| A|2169240202|22877180|+40.7835474|-096.6886584| Although it looks same with the input, but actually the type of column countyshape has been changed to Geometry type. To verify this, use the following code to print the schema of the DataFrame: spatialDf . printSchema () The output will be like this: root |-- countyshape: geometry (nullable = false) |-- _c1: string (nullable = true) |-- _c2: string (nullable = true) |-- _c3: string (nullable = true) |-- _c4: string (nullable = true) |-- _c5: string (nullable = true) |-- _c6: string (nullable = true) |-- _c7: string (nullable = true) Note SedonaSQL provides lots of functions to create a Geometry column, please read SedonaSQL constructor API .","title":"Create a Geometry type column"},{"location":"tutorial/sql/#load-shapefile-and-geojson","text":"Shapefile and GeoJSON must be loaded by SpatialRDD and converted to DataFrame using Adapter. Please read Load SpatialRDD and DataFrame <-> RDD .","title":"Load Shapefile and GeoJSON"},{"location":"tutorial/sql/#load-geoparquet","text":"GeoParquet must be loaded using DataFrame if default name is geometry. val df = sparkSession . read . format ( \"geoparquet\" ). load ( geoparquetdatalocation1 ) df . printSchema () The output will be as follows: root |-- pop_est: long (nullable = true) |-- continent: string (nullable = true) |-- name: string (nullable = true) |-- iso_a3: string (nullable = true) |-- gdp_md_est: double (nullable = true) |-- geometry: geometry (nullable = true) If geometry column name is different var df = sparkSession . read . format ( \"geoparquet\" ). option ( \"fieldGeometry\" , \"new_geometry\" ). load ( geoparquetdatalocation1 ) The output will be as follows: root |-- pop_est: long (nullable = true) |-- continent: string (nullable = true) |-- name: string (nullable = true) |-- iso_a3: string (nullable = true) |-- gdp_md_est: double (nullable = true) |-- new_geometry: geometry (nullable = true)","title":"Load GeoParquet"},{"location":"tutorial/sql/#transform-the-coordinate-reference-system","text":"Sedona doesn't control the coordinate unit (degree-based or meter-based) of all geometries in a Geometry column. The unit of all related distances in SedonaSQL is same as the unit of all geometries in a Geometry column. To convert Coordinate Reference System of the Geometry column created before, use the following code: spatialDf = sparkSession . sql ( \"\"\" |SELECT ST_Transform(countyshape, \"epsg:4326\", \"epsg:3857\") AS newcountyshape, _c1, _c2, _c3, _c4, _c5, _c6, _c7 |FROM spatialdf \"\"\" . stripMargin ) spatialDf . createOrReplaceTempView ( \"spatialdf\" ) spatialDf . show () The first EPSG code EPSG:4326 in ST_Transform is the source CRS of the geometries. It is WGS84, the most common degree-based CRS. The second EPSG code EPSG:3857 in ST_Transform is the target CRS of the geometries. It is the most common meter-based CRS. This ST_Transform transform the CRS of these geomtries from EPSG:4326 to EPSG:3857. The details CRS information can be found on EPSG.io The coordinates of polygons have been changed. The output will be like this: +--------------------+---+---+--------+-----+-----------+--------------------+---+ | newcountyshape|_c1|_c2| _c3| _c4| _c5| _c6|_c7| +--------------------+---+---+--------+-----+-----------+--------------------+---+ |POLYGON ((-108001...| 31|039|00835841|31039| Cuming| Cuming County| 06| |POLYGON ((-137408...| 53|069|01513275|53069| Wahkiakum| Wahkiakum County| 06| |POLYGON ((-116403...| 35|011|00933054|35011| De Baca| De Baca County| 06| |POLYGON ((-107880...| 31|109|00835876|31109| Lancaster| Lancaster County| 06|","title":"Transform the Coordinate Reference System"},{"location":"tutorial/sql/#run-spatial-queries","text":"After creating a Geometry type column, you are able to run spatial queries.","title":"Run spatial queries"},{"location":"tutorial/sql/#range-query","text":"Use ST_Contains , ST_Intersects , ST_Within to run a range query over a single column. The following example finds all counties that are within the given polygon: spatialDf = sparkSession . sql ( \"\"\" |SELECT * |FROM spatialdf |WHERE ST_Contains (ST_PolygonFromEnvelope(1.0,100.0,1000.0,1100.0), newcountyshape) \"\"\" . stripMargin ) spatialDf . createOrReplaceTempView ( \"spatialdf\" ) spatialDf . show () Note Read SedonaSQL constructor API to learn how to create a Geometry type query window","title":"Range query"},{"location":"tutorial/sql/#knn-query","text":"Use ST_Distance to calculate the distance and rank the distance. The following code returns the 5 nearest neighbor of the given polygon. spatialDf = sparkSession . sql ( \"\"\" |SELECT countyname, ST_Distance(ST_PolygonFromEnvelope(1.0,100.0,1000.0,1100.0), newcountyshape) AS distance |FROM spatialdf |ORDER BY distance DESC |LIMIT 5 \"\"\" . stripMargin ) spatialDf . createOrReplaceTempView ( \"spatialdf\" ) spatialDf . show ()","title":"KNN query"},{"location":"tutorial/sql/#join-query","text":"The details of a join query is available here Join query .","title":"Join query"},{"location":"tutorial/sql/#other-queries","text":"There are lots of other functions can be combined with these queries. Please read SedonaSQL functions and SedonaSQL aggregate functions .","title":"Other queries"},{"location":"tutorial/sql/#save-to-permanent-storage","text":"To save a Spatial DataFrame to some permanent storage such as Hive tables and HDFS, you can simply convert each geometry in the Geometry type column back to a plain String and save the plain DataFrame to wherever you want. Use the following code to convert the Geometry column in a DataFrame back to a WKT string column: var stringDf = sparkSession . sql ( \"\"\" |SELECT ST_AsText(countyshape) |FROM polygondf \"\"\" . stripMargin ) Note ST_AsGeoJSON is also available. We would like to invite you to contribute more functions","title":"Save to permanent storage"},{"location":"tutorial/sql/#save-geoparquet","text":"GeoParquet can be saved as follows df . write . format ( \"geoparquet\" ). save ( geoparquetoutputlocation + \"/GeoParquet_File_Name.parquet\" )","title":"Save GeoParquet"},{"location":"tutorial/sql/#convert-between-dataframe-and-spatialrdd","text":"","title":"Convert between DataFrame and SpatialRDD"},{"location":"tutorial/sql/#dataframe-to-spatialrdd","text":"Use SedonaSQL DataFrame-RDD Adapter to convert a DataFrame to an SpatialRDD. Please read Adapter Scaladoc var spatialRDD = Adapter . toSpatialRdd ( spatialDf , \"usacounty\" ) \"usacounty\" is the name of the geometry column Warning Only one Geometry type column is allowed per DataFrame.","title":"DataFrame to SpatialRDD"},{"location":"tutorial/sql/#spatialrdd-to-dataframe","text":"Use SedonaSQL DataFrame-RDD Adapter to convert a DataFrame to an SpatialRDD. Please read Adapter Scaladoc var spatialDf = Adapter . toDf ( spatialRDD , sparkSession ) All other attributes such as price and age will be also brought to the DataFrame as long as you specify carryOtherAttributes (see Read other attributes in an SpatialRDD ). You may also manually specify a schema for the resulting DataFrame in case you require different column names or data types. Note that string schemas and not all data types are supported\u2014please check the Adapter Scaladoc and source code to confirm what is supported for your use case. At least one column for the user data must be provided. val schema = StructType ( Array ( StructField ( \"county\" , GeometryUDT , nullable = true ), StructField ( \"name\" , StringType , nullable = true ), StructField ( \"price\" , DoubleType , nullable = true ), StructField ( \"age\" , IntegerType , nullable = true ) )) val spatialDf = Adapter . toDf ( spatialRDD , schema , sparkSession )","title":"SpatialRDD to DataFrame"},{"location":"tutorial/sql/#spatialpairrdd-to-dataframe","text":"PairRDD is the result of a spatial join query or distance join query. SedonaSQL DataFrame-RDD Adapter can convert the result to a DataFrame. But you need to provide the name of other attributes. var joinResultDf = Adapter . toDf ( joinResultPairRDD , Seq ( \"left_attribute1\" , \"left_attribute2\" ), Seq ( \"right_attribute1\" , \"right_attribute2\" ), sparkSession ) or you can use the attribute names directly from the input RDD import scala . collection . JavaConversions . _ var joinResultDf = Adapter . toDf ( joinResultPairRDD , leftRdd . fieldNames , rightRdd . fieldNames , sparkSession ) All other attributes such as price and age will be also brought to the DataFrame as long as you specify carryOtherAttributes (see Read other attributes in an SpatialRDD ). You may also manually specify a schema for the resulting DataFrame in case you require different column names or data types. Note that string schemas and not all data types are supported\u2014please check the Adapter Scaladoc and source code to confirm what is supported for your use case. Columns for the left and right user data must be provided. val schema = StructType ( Array ( StructField ( \"leftGeometry\" , GeometryUDT , nullable = true ), StructField ( \"name\" , StringType , nullable = true ), StructField ( \"price\" , DoubleType , nullable = true ), StructField ( \"age\" , IntegerType , nullable = true ), StructField ( \"rightGeometry\" , GeometryUDT , nullable = true ), StructField ( \"category\" , StringType , nullable = true ) )) val joinResultDf = Adapter . toDf ( joinResultPairRDD , schema , sparkSession )","title":"SpatialPairRDD to DataFrame"},{"location":"tutorial/viz-gallery/","text":"Watch the high resolution version on a real map","title":"Gallery"},{"location":"tutorial/viz-r/","text":"Map Visualization applications in R language \u00b6 An important part of apache.sedona is its collection of R interfaces to Sedona visualization routines. For example, the following is essentially the R equivalent of this example in Scala . library ( sparklyr ) library ( apache.sedona ) sc <- spark_connect ( master = \"local\" ) resolution_x <- 1000 resolution_y <- 600 boundary <- c ( -126.790180 , -64.630926 , 24.863836 , 50.000 ) pt_rdd <- sedona_read_dsv_to_typed_rdd ( sc , location = \"arealm.csv\" , type = \"point\" ) polygon_rdd <- sedona_read_dsv_to_typed_rdd ( sc , location = \"primaryroads-polygon.csv\" , type = \"polygon\" ) pair_rdd <- sedona_spatial_join_count_by_key ( pt_rdd , polygon_rdd , join_type = \"intersect\" ) overlay <- sedona_render_scatter_plot ( polygon_rdd , resolution_x , resolution_y , output_location = tempfile ( \"scatter-plot-\" ), boundary = boundary , base_color = c ( 255 , 0 , 0 ), browse = FALSE ) sedona_render_choropleth_map ( pair_rdd , resolution_x , resolution_y , output_location = \"/tmp/choropleth-map\" , boundary = boundary , overlay = overlay , # vary the green color channel according to relative magnitudes of data points so # that the resulting map will show light blue, light purple, and light gray pixels color_of_variation = \"green\" , base_color = c ( 225 , 225 , 255 ) ) It will create a scatter plot, and then overlay it on top of a choropleth map, as shown below: See ?apache.sedona::sedona_render_scatter_plot , ?apache.sedona::sedona_render_heatmap , and ?apache.sedona::sedona_render_choropleth_map for more details on visualization-related R interfaces currently implemented by apache.sedona .","title":"R"},{"location":"tutorial/viz-r/#map-visualization-applications-in-r-language","text":"An important part of apache.sedona is its collection of R interfaces to Sedona visualization routines. For example, the following is essentially the R equivalent of this example in Scala . library ( sparklyr ) library ( apache.sedona ) sc <- spark_connect ( master = \"local\" ) resolution_x <- 1000 resolution_y <- 600 boundary <- c ( -126.790180 , -64.630926 , 24.863836 , 50.000 ) pt_rdd <- sedona_read_dsv_to_typed_rdd ( sc , location = \"arealm.csv\" , type = \"point\" ) polygon_rdd <- sedona_read_dsv_to_typed_rdd ( sc , location = \"primaryroads-polygon.csv\" , type = \"polygon\" ) pair_rdd <- sedona_spatial_join_count_by_key ( pt_rdd , polygon_rdd , join_type = \"intersect\" ) overlay <- sedona_render_scatter_plot ( polygon_rdd , resolution_x , resolution_y , output_location = tempfile ( \"scatter-plot-\" ), boundary = boundary , base_color = c ( 255 , 0 , 0 ), browse = FALSE ) sedona_render_choropleth_map ( pair_rdd , resolution_x , resolution_y , output_location = \"/tmp/choropleth-map\" , boundary = boundary , overlay = overlay , # vary the green color channel according to relative magnitudes of data points so # that the resulting map will show light blue, light purple, and light gray pixels color_of_variation = \"green\" , base_color = c ( 225 , 225 , 255 ) ) It will create a scatter plot, and then overlay it on top of a choropleth map, as shown below: See ?apache.sedona::sedona_render_scatter_plot , ?apache.sedona::sedona_render_heatmap , and ?apache.sedona::sedona_render_choropleth_map for more details on visualization-related R interfaces currently implemented by apache.sedona .","title":"Map Visualization applications in R language"},{"location":"tutorial/viz/","text":"The page outlines the steps to visualize spatial data using SedonaViz. The example code is written in Scala but also works for Java . SedonaViz provides native support for general cartographic design by extending Sedona to process large-scale spatial data. It can visulize Spatial RDD and Spatial Queries and render super high resolution image in parallel. SedonaViz offers Map Visualization SQL. This gives users a more flexible way to design beautiful map visualization effects including scatter plots and heat maps. SedonaViz RDD API is also available. Note All SedonaViz SQL/DataFrame APIs are explained in SedonaViz API . Please see Viz exmaple project Why scalable map visualization? \u00b6 Data visualization allows users to summarize, analyze and reason about data. Guaranteeing detailed and accurate geospatial map visualization (e.g., at multiple zoom levels) requires extremely high-resolution maps. Classic visualization solutions such as Google Maps, MapBox and ArcGIS suffer from limited computation resources and hence take a tremendous amount of time to generate maps for large-scale geospatial data. In big spatial data scenarios, these tools just crash or run forever. SedonaViz encapsulates the main steps of map visualization process, e.g., pixelize, aggregate, and render, into a set of massively parallelized GeoViz operators and the user can assemble any customized styles. Visualize SpatialRDD \u00b6 This tutorial mainly focuses on explaining SQL/DataFrame API. SedonaViz RDD example can be found in Please see Viz exmaple project Set up dependencies \u00b6 Read Sedona Maven Central coordinates Add Apache Spark core , Apache SparkSQL , Sedona-core, Sedona-SQL, Sedona-Viz Initiate SparkSession \u00b6 Use the following code to initiate your SparkSession at the beginning: This will register SedonaViz Kryo serializer. var sparkSession = SparkSession . builder () . master ( \"local[*]\" ) // Delete this if run in cluster mode . appName ( \"Sedona Viz\" ) // Change this to a proper name // Enable Sedona custom Kryo serializer . config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) // org.apache.spark.serializer.KryoSerializer . config ( \"spark.kryo.registrator\" , classOf [ SedonaVizKryoRegistrator ]. getName ) // org.apache.sedona.viz.core.Serde.SedonaVizKryoRegistrator . getOrCreate () Register SedonaSQL and SedonaViz \u00b6 Add the following line after your SparkSession declaration SedonaSQLRegistrator . registerAll ( sparkSession ) SedonaVizRegistrator . registerAll ( sparkSession ) This will register all User Defined Tyeps, functions and optimizations in SedonaSQL and SedonaViz. You can also register everything by passing --conf spark.sql.extensions=org.apache.sedona.viz.sql.SedonaVizExtensions,org.apache.sedona.sql.SedonaSqlExtensions to spark-submit or spark-shell . Create Spatial DataFrame \u00b6 There is a DataFrame as follows: +----------+---------+ | _c0| _c1| +----------+---------+ |-88.331492|32.324142| |-88.175933|32.360763| |-88.388954|32.357073| |-88.221102| 32.35078| You first need to create a Geometry type column. CREATE OR REPLACE TEMP VIEW pointtable AS SELECT ST_Point ( cast ( pointtable . _c0 as Decimal ( 24 , 20 )), cast ( pointtable . _c1 as Decimal ( 24 , 20 ))) as shape FROM pointtable As you know, Sedona provides many different methods to load various spatial data formats. Please read Write an Spatial DataFrame application . Generate a single image \u00b6 In most cases, you just want to see a single image out of your spatial dataset. Pixelize spatial objects \u00b6 To put spatial objects on a map image, you first need to convert them to pixels. First, compute the spatial boundary of this column. CREATE OR REPLACE TEMP VIEW boundtable AS SELECT ST_Envelope_Aggr ( shape ) as bound FROM pointtable Then use ST_Pixelize to convert them to pixels. This example is for Sedona before v1.0.1. ST_Pixelize extends Generator so it can directly flatten the array without the explode function. CREATE OR REPLACE TEMP VIEW pixels AS SELECT pixel , shape FROM pointtable LATERAL VIEW ST_Pixelize ( ST_Transform ( shape , 'epsg:4326' , 'epsg:3857' ), 256 , 256 , ( SELECT ST_Transform ( bound , 'epsg:4326' , 'epsg:3857' ) FROM boundtable )) AS pixel This example is for Sedona on and after v1.0.1. ST_Pixelize returns an array of pixels. You need to use explode to flatten it. CREATE OR REPLACE TEMP VIEW pixels AS SELECT pixel , shape FROM pointtable LATERAL VIEW explode ( ST_Pixelize ( ST_Transform ( shape , 'epsg:4326' , 'epsg:3857' ), 256 , 256 , ( SELECT ST_Transform ( bound , 'epsg:4326' , 'epsg:3857' ) FROM boundtable ))) AS pixel This will give you a 256*256 resolution image after you run ST_Render at the end of this tutorial. Warning We highly suggest that you should use ST_Transform to transfrom coordiantes to a visualization-specific coordinate sysmte such as epsg:3857. Otherwise you map may look distorted. Aggregate pixels \u00b6 Many objects may be pixelized to the same pixel locations. You now need to aggregate them based on either their spatial aggregation or spatial observations such as temperature or humidity. CREATE OR REPLACE TEMP VIEW pixelaggregates AS SELECT pixel , count ( * ) as weight FROM pixels GROUP BY pixel The weight indicates the degree of spatial aggregation or spatial observations. Later on, it will determine the color of this pixel. Colorize pixels \u00b6 Run the following command to assign colors for pixels based on their weights. CREATE OR REPLACE TEMP VIEW pixelaggregates AS SELECT pixel , ST_Colorize ( weight , ( SELECT max ( weight ) FROM pixelaggregates )) as color FROM pixelaggregates Please read ST_Colorize for a detailed API description. Render the image \u00b6 Use ST_Render to plot all pixels on a single image. CREATE OR REPLACE TEMP VIEW images AS SELECT ST_Render ( pixel , color ) AS image , ( SELECT ST_AsText ( bound ) FROM boundtable ) AS boundary FROM pixelaggregates This DataFrame will contain a Image type column which has only one image. Store the image on disk \u00b6 Fetch the image from the previous DataFrame var image = sparkSession.table(\"images\").take(1)(0)(0).asInstanceOf[ImageSerializableWrapper].getImage Use Sedona Viz ImageGenerator to store this image on disk. var imageGenerator = new ImageGenerator imageGenerator . SaveRasterImageAsLocalFile ( image , System . getProperty ( \"user.dir\" ) + \"/target/points\" , ImageType . PNG ) Generate map tiles \u00b6 If you are a map professional, you may need to generate map tiles for different zoom levels and eventually create the map tile layer. Pixelization and pixel aggregation \u00b6 Please first do pixelization and pixel aggregation using the same commands in single image generation. In ST_Pixelize, you need specify a very high resolution, such as 1000*1000. Note that, each dimension should be divisible by 2^zoom-level Create tile name \u00b6 Run the following command to compute the tile name for every pixels CREATE OR REPLACE TEMP VIEW pixelaggregates AS SELECT pixel , weight , ST_TileName ( pixel , 3 ) AS pid FROM pixelaggregates \"3\" is the zoom level for these map tiles. Colorize pixels \u00b6 Use the same command explained in single image generation to assign colors. Render map tiles \u00b6 You now need to group pixels by tiles and then render map tile images in parallel. CREATE OR REPLACE TEMP VIEW images AS SELECT ST_Render ( pixel , color , 3 ) AS image FROM pixelaggregates GROUP BY pid \"3\" is the zoom level for these map tiles. Store map tiles on disk \u00b6 You can use the same commands in single image generation to fetch all map tiles and store them one by one.","title":"Scala/Java"},{"location":"tutorial/viz/#why-scalable-map-visualization","text":"Data visualization allows users to summarize, analyze and reason about data. Guaranteeing detailed and accurate geospatial map visualization (e.g., at multiple zoom levels) requires extremely high-resolution maps. Classic visualization solutions such as Google Maps, MapBox and ArcGIS suffer from limited computation resources and hence take a tremendous amount of time to generate maps for large-scale geospatial data. In big spatial data scenarios, these tools just crash or run forever. SedonaViz encapsulates the main steps of map visualization process, e.g., pixelize, aggregate, and render, into a set of massively parallelized GeoViz operators and the user can assemble any customized styles.","title":"Why scalable map visualization?"},{"location":"tutorial/viz/#visualize-spatialrdd","text":"This tutorial mainly focuses on explaining SQL/DataFrame API. SedonaViz RDD example can be found in Please see Viz exmaple project","title":"Visualize SpatialRDD"},{"location":"tutorial/viz/#set-up-dependencies","text":"Read Sedona Maven Central coordinates Add Apache Spark core , Apache SparkSQL , Sedona-core, Sedona-SQL, Sedona-Viz","title":"Set up dependencies"},{"location":"tutorial/viz/#initiate-sparksession","text":"Use the following code to initiate your SparkSession at the beginning: This will register SedonaViz Kryo serializer. var sparkSession = SparkSession . builder () . master ( \"local[*]\" ) // Delete this if run in cluster mode . appName ( \"Sedona Viz\" ) // Change this to a proper name // Enable Sedona custom Kryo serializer . config ( \"spark.serializer\" , classOf [ KryoSerializer ]. getName ) // org.apache.spark.serializer.KryoSerializer . config ( \"spark.kryo.registrator\" , classOf [ SedonaVizKryoRegistrator ]. getName ) // org.apache.sedona.viz.core.Serde.SedonaVizKryoRegistrator . getOrCreate ()","title":"Initiate SparkSession"},{"location":"tutorial/viz/#register-sedonasql-and-sedonaviz","text":"Add the following line after your SparkSession declaration SedonaSQLRegistrator . registerAll ( sparkSession ) SedonaVizRegistrator . registerAll ( sparkSession ) This will register all User Defined Tyeps, functions and optimizations in SedonaSQL and SedonaViz. You can also register everything by passing --conf spark.sql.extensions=org.apache.sedona.viz.sql.SedonaVizExtensions,org.apache.sedona.sql.SedonaSqlExtensions to spark-submit or spark-shell .","title":"Register SedonaSQL and SedonaViz"},{"location":"tutorial/viz/#create-spatial-dataframe","text":"There is a DataFrame as follows: +----------+---------+ | _c0| _c1| +----------+---------+ |-88.331492|32.324142| |-88.175933|32.360763| |-88.388954|32.357073| |-88.221102| 32.35078| You first need to create a Geometry type column. CREATE OR REPLACE TEMP VIEW pointtable AS SELECT ST_Point ( cast ( pointtable . _c0 as Decimal ( 24 , 20 )), cast ( pointtable . _c1 as Decimal ( 24 , 20 ))) as shape FROM pointtable As you know, Sedona provides many different methods to load various spatial data formats. Please read Write an Spatial DataFrame application .","title":"Create Spatial DataFrame"},{"location":"tutorial/viz/#generate-a-single-image","text":"In most cases, you just want to see a single image out of your spatial dataset.","title":"Generate a single image"},{"location":"tutorial/viz/#pixelize-spatial-objects","text":"To put spatial objects on a map image, you first need to convert them to pixels. First, compute the spatial boundary of this column. CREATE OR REPLACE TEMP VIEW boundtable AS SELECT ST_Envelope_Aggr ( shape ) as bound FROM pointtable Then use ST_Pixelize to convert them to pixels. This example is for Sedona before v1.0.1. ST_Pixelize extends Generator so it can directly flatten the array without the explode function. CREATE OR REPLACE TEMP VIEW pixels AS SELECT pixel , shape FROM pointtable LATERAL VIEW ST_Pixelize ( ST_Transform ( shape , 'epsg:4326' , 'epsg:3857' ), 256 , 256 , ( SELECT ST_Transform ( bound , 'epsg:4326' , 'epsg:3857' ) FROM boundtable )) AS pixel This example is for Sedona on and after v1.0.1. ST_Pixelize returns an array of pixels. You need to use explode to flatten it. CREATE OR REPLACE TEMP VIEW pixels AS SELECT pixel , shape FROM pointtable LATERAL VIEW explode ( ST_Pixelize ( ST_Transform ( shape , 'epsg:4326' , 'epsg:3857' ), 256 , 256 , ( SELECT ST_Transform ( bound , 'epsg:4326' , 'epsg:3857' ) FROM boundtable ))) AS pixel This will give you a 256*256 resolution image after you run ST_Render at the end of this tutorial. Warning We highly suggest that you should use ST_Transform to transfrom coordiantes to a visualization-specific coordinate sysmte such as epsg:3857. Otherwise you map may look distorted.","title":"Pixelize spatial objects"},{"location":"tutorial/viz/#aggregate-pixels","text":"Many objects may be pixelized to the same pixel locations. You now need to aggregate them based on either their spatial aggregation or spatial observations such as temperature or humidity. CREATE OR REPLACE TEMP VIEW pixelaggregates AS SELECT pixel , count ( * ) as weight FROM pixels GROUP BY pixel The weight indicates the degree of spatial aggregation or spatial observations. Later on, it will determine the color of this pixel.","title":"Aggregate pixels"},{"location":"tutorial/viz/#colorize-pixels","text":"Run the following command to assign colors for pixels based on their weights. CREATE OR REPLACE TEMP VIEW pixelaggregates AS SELECT pixel , ST_Colorize ( weight , ( SELECT max ( weight ) FROM pixelaggregates )) as color FROM pixelaggregates Please read ST_Colorize for a detailed API description.","title":"Colorize pixels"},{"location":"tutorial/viz/#render-the-image","text":"Use ST_Render to plot all pixels on a single image. CREATE OR REPLACE TEMP VIEW images AS SELECT ST_Render ( pixel , color ) AS image , ( SELECT ST_AsText ( bound ) FROM boundtable ) AS boundary FROM pixelaggregates This DataFrame will contain a Image type column which has only one image.","title":"Render the image"},{"location":"tutorial/viz/#store-the-image-on-disk","text":"Fetch the image from the previous DataFrame var image = sparkSession.table(\"images\").take(1)(0)(0).asInstanceOf[ImageSerializableWrapper].getImage Use Sedona Viz ImageGenerator to store this image on disk. var imageGenerator = new ImageGenerator imageGenerator . SaveRasterImageAsLocalFile ( image , System . getProperty ( \"user.dir\" ) + \"/target/points\" , ImageType . PNG )","title":"Store the image on disk"},{"location":"tutorial/viz/#generate-map-tiles","text":"If you are a map professional, you may need to generate map tiles for different zoom levels and eventually create the map tile layer.","title":"Generate map tiles"},{"location":"tutorial/viz/#pixelization-and-pixel-aggregation","text":"Please first do pixelization and pixel aggregation using the same commands in single image generation. In ST_Pixelize, you need specify a very high resolution, such as 1000*1000. Note that, each dimension should be divisible by 2^zoom-level","title":"Pixelization and pixel aggregation"},{"location":"tutorial/viz/#create-tile-name","text":"Run the following command to compute the tile name for every pixels CREATE OR REPLACE TEMP VIEW pixelaggregates AS SELECT pixel , weight , ST_TileName ( pixel , 3 ) AS pid FROM pixelaggregates \"3\" is the zoom level for these map tiles.","title":"Create tile name"},{"location":"tutorial/viz/#colorize-pixels_1","text":"Use the same command explained in single image generation to assign colors.","title":"Colorize pixels"},{"location":"tutorial/viz/#render-map-tiles","text":"You now need to group pixels by tiles and then render map tile images in parallel. CREATE OR REPLACE TEMP VIEW images AS SELECT ST_Render ( pixel , color , 3 ) AS image FROM pixelaggregates GROUP BY pid \"3\" is the zoom level for these map tiles.","title":"Render map tiles"},{"location":"tutorial/viz/#store-map-tiles-on-disk","text":"You can use the same commands in single image generation to fetch all map tiles and store them one by one.","title":"Store map tiles on disk"},{"location":"tutorial/zeppelin/","text":"Sedona provides a Helium visualization plugin tailored for Apache Zeppelin . This finally bridges the gap between Sedona and Zeppelin. Please read Install Sedona-Zeppelin to learn how to install this plugin in Zeppelin. Sedona-Zeppelin equips two approaches to visualize spatial data in Zeppelin. The first approach uses Zeppelin to plot all spatial objects on the map. The second one leverages SedonaViz to generate map images and overlay them on maps. Small-scale without SedonaViz \u00b6 Danger Zeppelin is just a front-end visualization framework. This approach is not scalable and will fail at large-scale geospatial data. Please scroll down to read SedonaViz solution. You can use Apache Zeppelin to plot a small number of spatial objects, such as 1000 points. Assume you already have a Spatial DataFrame, you need to convert the geometry column to WKT string column use the following command in your Zeppelin Spark notebook Scala paragraph: spark . sql ( \"\"\" |CREATE OR REPLACE TEMP VIEW wktpoint AS |SELECT ST_AsText(shape) as geom |FROM pointtable \"\"\" . stripMargin ) Then create an SQL paragraph to fetch the data % sql SELECT * FROM wktpoint Select the geometry column to visualize: Large-scale with SedonaViz \u00b6 SedonaViz is a distributed visualization system that allows you to visualize big spatial data at scale. Please read How to use SedonaViz . You can use Sedona-Zeppelin to ask Zeppelin to overlay SedonaViz images on a map background. This way, you can easily visualize 1 billion spatial objects or more (depends on your cluster size). First, encode images of SedonaViz DataFrame in Zeppelin Spark notebook Scala paragraph, spark.sql( \"\"\" |CREATE OR REPLACE TEMP VIEW images AS |SELECT ST_EncodeImage(image) AS image, (SELECT ST_AsText(bound) FROM boundtable) AS boundary |FROM images \"\"\".stripMargin) Then create an SQL paragraph to fetch the data % sql SELECT * , 'I am the map center!' FROM images Select the image and its geospatial boundary: Zeppelin Spark notebook demo \u00b6 We provide a full Zeppelin Spark notebook which demonstrates al functions. Please download Sedona-Zeppelin notebook template and test data - arealm.csv . You need to use Zeppelin to import this notebook JSON file and modify the input data path in the notebook.","title":"Use Apache Zeppelin"},{"location":"tutorial/zeppelin/#small-scale-without-sedonaviz","text":"Danger Zeppelin is just a front-end visualization framework. This approach is not scalable and will fail at large-scale geospatial data. Please scroll down to read SedonaViz solution. You can use Apache Zeppelin to plot a small number of spatial objects, such as 1000 points. Assume you already have a Spatial DataFrame, you need to convert the geometry column to WKT string column use the following command in your Zeppelin Spark notebook Scala paragraph: spark . sql ( \"\"\" |CREATE OR REPLACE TEMP VIEW wktpoint AS |SELECT ST_AsText(shape) as geom |FROM pointtable \"\"\" . stripMargin ) Then create an SQL paragraph to fetch the data % sql SELECT * FROM wktpoint Select the geometry column to visualize:","title":"Small-scale without SedonaViz"},{"location":"tutorial/zeppelin/#large-scale-with-sedonaviz","text":"SedonaViz is a distributed visualization system that allows you to visualize big spatial data at scale. Please read How to use SedonaViz . You can use Sedona-Zeppelin to ask Zeppelin to overlay SedonaViz images on a map background. This way, you can easily visualize 1 billion spatial objects or more (depends on your cluster size). First, encode images of SedonaViz DataFrame in Zeppelin Spark notebook Scala paragraph, spark.sql( \"\"\" |CREATE OR REPLACE TEMP VIEW images AS |SELECT ST_EncodeImage(image) AS image, (SELECT ST_AsText(bound) FROM boundtable) AS boundary |FROM images \"\"\".stripMargin) Then create an SQL paragraph to fetch the data % sql SELECT * , 'I am the map center!' FROM images Select the image and its geospatial boundary:","title":"Large-scale with SedonaViz"},{"location":"tutorial/zeppelin/#zeppelin-spark-notebook-demo","text":"We provide a full Zeppelin Spark notebook which demonstrates al functions. Please download Sedona-Zeppelin notebook template and test data - arealm.csv . You need to use Zeppelin to import this notebook JSON file and modify the input data path in the notebook.","title":"Zeppelin Spark notebook demo"},{"location":"tutorial/flink/sql/","text":"The page outlines the steps to manage spatial data using SedonaSQL. The example code is written in Java but also works for Scala . SedonaSQL supports SQL/MM Part3 Spatial SQL Standard. It includes four kinds of SQL operators as follows. All these operators can be directly called through: Table myTable = tableEnv . sqlQuery ( \"YOUR_SQL\" ) Detailed SedonaSQL APIs are available here: SedonaSQL API Set up dependencies \u00b6 Read Sedona Maven Central coordinates Add Sedona dependencies in build.sbt or pom.xml. Add Flink dependencies in build.sbt or pom.xml. Initiate Stream Environment \u00b6 Use the following code to initiate your StreamExecutionEnvironment at the beginning: StreamExecutionEnvironment env = StreamExecutionEnvironment . getExecutionEnvironment () EnvironmentSettings settings = EnvironmentSettings . newInstance (). inStreamingMode (). build (); StreamTableEnvironment tableEnv = StreamTableEnvironment . create ( env , settings ); Register SedonaSQL \u00b6 Add the following line after your StreamExecutionEnvironment and StreamTableEnvironment declaration SedonaFlinkRegistrator . registerType ( env ); SedonaFlinkRegistrator . registerFunc ( tableEnv ); Warning Sedona has a suite of well-written geometry and index serializers. Forgetting to enable these serializers will lead to high memory consumption. This function will register Sedona User Defined Type and User Defined Function Create a Geometry type column \u00b6 All geometrical operations in SedonaSQL are on Geometry type objects. Therefore, before any kind of queries, you need to create a Geometry type column on a DataFrame. Assume you have a Flink Table tbl like this: +----+--------------------------------+--------------------------------+ | op | geom_polygon | name_polygon | +----+--------------------------------+--------------------------------+ | +I | POLYGON ((-0.5 -0.5, -0.5 0... | polygon0 | | +I | POLYGON ((0.5 0.5, 0.5 1.5,... | polygon1 | | +I | POLYGON ((1.5 1.5, 1.5 2.5,... | polygon2 | | +I | POLYGON ((2.5 2.5, 2.5 3.5,... | polygon3 | | +I | POLYGON ((3.5 3.5, 3.5 4.5,... | polygon4 | | +I | POLYGON ((4.5 4.5, 4.5 5.5,... | polygon5 | | +I | POLYGON ((5.5 5.5, 5.5 6.5,... | polygon6 | | +I | POLYGON ((6.5 6.5, 6.5 7.5,... | polygon7 | | +I | POLYGON ((7.5 7.5, 7.5 8.5,... | polygon8 | | +I | POLYGON ((8.5 8.5, 8.5 9.5,... | polygon9 | +----+--------------------------------+--------------------------------+ 10 rows in set You can create a Table with a Geometry type column as follows: tableEnv . createTemporaryView ( \"myTable\" , tbl ) Table geomTbl = tableEnv . sql ( \"SELECT ST_GeomFromWKT(geom_polygon) as geom_polygon, name_polygon FROM myTable\" ) geomTbl . execute (). print () The output will be: +----+--------------------------------+--------------------------------+ | op | geom_polygon | name_polygon | +----+--------------------------------+--------------------------------+ | +I | POLYGON ((-0.5 -0.5, -0.5 0... | polygon0 | | +I | POLYGON ((0.5 0.5, 0.5 1.5,... | polygon1 | | +I | POLYGON ((1.5 1.5, 1.5 2.5,... | polygon2 | | +I | POLYGON ((2.5 2.5, 2.5 3.5,... | polygon3 | | +I | POLYGON ((3.5 3.5, 3.5 4.5,... | polygon4 | | +I | POLYGON ((4.5 4.5, 4.5 5.5,... | polygon5 | | +I | POLYGON ((5.5 5.5, 5.5 6.5,... | polygon6 | | +I | POLYGON ((6.5 6.5, 6.5 7.5,... | polygon7 | | +I | POLYGON ((7.5 7.5, 7.5 8.5,... | polygon8 | | +I | POLYGON ((8.5 8.5, 8.5 9.5,... | polygon9 | +----+--------------------------------+--------------------------------+ 10 rows in set Although it looks same with the input, actually the type of column geom_polygon has been changed to Geometry type. To verify this, use the following code to print the schema of the DataFrame: geomTbl . printSchema () The output will be like this: ( `geom_polygon` RAW('org.locationtech.jts.geom.Geometry', '...'), `name_polygon` STRING ) Note SedonaSQL provides lots of functions to create a Geometry column, please read SedonaSQL constructor API . Transform the Coordinate Reference System \u00b6 Sedona doesn't control the coordinate unit (degree-based or meter-based) of all geometries in a Geometry column. The unit of all related distances in SedonaSQL is same as the unit of all geometries in a Geometry column. To convert Coordinate Reference System of the Geometry column created before, use the following code: Table geomTbl3857 = tableEnv . sqlQuery ( \"SELECT ST_Transform(countyshape, \" epsg : 4326 \", \" epsg : 3857 \") AS geom_polygon, name_polygon FROM myTable\" ) geomTbl3857 . execute (). print () The first EPSG code EPSG:4326 in ST_Transform is the source CRS of the geometries. It is WGS84, the most common degree-based CRS. The second EPSG code EPSG:3857 in ST_Transform is the target CRS of the geometries. It is the most common meter-based CRS. This ST_Transform transform the CRS of these geomtries from EPSG:4326 to EPSG:3857. The details CRS information can be found on EPSG.io Note Read SedonaSQL ST_Transform API to learn different spatial query predicates. For example, a Table that has coordinates in the US will become like this. Before the transformation: +----+--------------------------------+--------------------------------+ | op | geom_point | name_point | +----+--------------------------------+--------------------------------+ | +I | POINT (32 -118) | point | | +I | POINT (33 -117) | point | | +I | POINT (34 -116) | point | | +I | POINT (35 -115) | point | | +I | POINT (36 -114) | point | | +I | POINT (37 -113) | point | | +I | POINT (38 -112) | point | | +I | POINT (39 -111) | point | | +I | POINT (40 -110) | point | | +I | POINT (41 -109) | point | +----+--------------------------------+--------------------------------+ After the transformation: +----+--------------------------------+--------------------------------+ | op | _c0 | name_point | +----+--------------------------------+--------------------------------+ | +I | POINT (-13135699.91360628 3... | point | | +I | POINT (-13024380.422813008 ... | point | | +I | POINT (-12913060.932019735 ... | point | | +I | POINT (-12801741.44122646 4... | point | | +I | POINT (-12690421.950433187 ... | point | | +I | POINT (-12579102.459639912 ... | point | | +I | POINT (-12467782.96884664 4... | point | | +I | POINT (-12356463.478053367 ... | point | | +I | POINT (-12245143.987260092 ... | point | | +I | POINT (-12133824.496466817 ... | point | +----+--------------------------------+--------------------------------+ Run spatial queries \u00b6 After creating a Geometry type column, you are able to run spatial queries. Range query \u00b6 Use ST_Contains , ST_Intersects and so on to run a range query over a single column. The following example finds all counties that are within the given polygon: geomTable = tableEnv . sqlQuery ( \" SELECT * FROM spatialdf WHERE ST_Contains (ST_PolygonFromEnvelope(1.0,100.0,1000.0,1100.0), newcountyshape) \" ) geomTable . execute (). print () Note Read SedonaSQL Predicate API to learn different spatial query predicates. KNN query \u00b6 Use ST_Distance to calculate the distance and rank the distance. The following code returns the 5 nearest neighbor of the given polygon. geomTable = tableEnv . sqlQuery ( \" SELECT countyname, ST_Distance(ST_PolygonFromEnvelope(1.0,100.0,1000.0,1100.0), newcountyshape) AS distance FROM geomTable ORDER BY distance DESC LIMIT 5 \" ) geomTable . execute (). print () Convert Spatial Table to Spatial DataStream \u00b6 Get DataStream \u00b6 Use TableEnv's toDataStream function DataStream < Row > geomStream = tableEnv . toDataStream ( geomTable ) Retrieve Geometries \u00b6 Then get the Geometry from each Row object using Map import org.locationtech.jts.geom.Geometry ; DataStream < Geometry > geometries = geomStream . map ( new MapFunction < Row , Geometry > () { @Override public Geometry map ( Row value ) throws Exception { return ( Geometry ) value . getField ( 0 ); } }); geometries . print (); The output will be 14> POLYGON ((1.5 1.5, 1.5 2.5, 2.5 2.5, 2.5 1.5, 1.5 1.5)) 2> POLYGON ((5.5 5.5, 5.5 6.5, 6.5 6.5, 6.5 5.5, 5.5 5.5)) 5> POLYGON ((8.5 8.5, 8.5 9.5, 9.5 9.5, 9.5 8.5, 8.5 8.5)) 16> POLYGON ((3.5 3.5, 3.5 4.5, 4.5 4.5, 4.5 3.5, 3.5 3.5)) 12> POLYGON ((-0.5 -0.5, -0.5 0.5, 0.5 0.5, 0.5 -0.5, -0.5 -0.5)) 13> POLYGON ((0.5 0.5, 0.5 1.5, 1.5 1.5, 1.5 0.5, 0.5 0.5)) 15> POLYGON ((2.5 2.5, 2.5 3.5, 3.5 3.5, 3.5 2.5, 2.5 2.5)) 3> POLYGON ((6.5 6.5, 6.5 7.5, 7.5 7.5, 7.5 6.5, 6.5 6.5)) 1> POLYGON ((4.5 4.5, 4.5 5.5, 5.5 5.5, 5.5 4.5, 4.5 4.5)) 4> POLYGON ((7.5 7.5, 7.5 8.5, 8.5 8.5, 8.5 7.5, 7.5 7.5)) Store non-spatial attributes in Geometries \u00b6 You can concatenate other non-spatial attributes and store them in Geometry's userData field so you can recover them later on. userData field can be any object type. import org.locationtech.jts.geom.Geometry ; DataStream < Geometry > geometries = geomStream . map ( new MapFunction < Row , Geometry > () { @Override public Geometry map ( Row value ) throws Exception { Geometry geom = ( Geometry ) value . getField ( 0 ); geom . setUserData ( value . getField ( 1 )); return geom ; } }); geometries . print (); The print command will not print out userData field. But you can get it this way: import org.locationtech.jts.geom.Geometry ; geometries . map ( new MapFunction < Geometry , String > () { @Override public String map ( Geometry value ) throws Exception { return ( String ) value . getUserData (); } }). print (); The output will be 13> polygon9 6> polygon2 10> polygon6 11> polygon7 5> polygon1 12> polygon8 8> polygon4 4> polygon0 7> polygon3 9> polygon5 Convert Spatial DataStream to Spatial Table \u00b6 Create Geometries using Sedona FormatUtils \u00b6 Create a Geometry from a WKT string import org.apache.sedona.core.formatMapper.FormatUtils ; import org.locationtech.jts.geom.Geometry ; DataStream < Geometry > geometries = text . map ( new MapFunction < String , Geometry > () { @Override public Geometry map ( String value ) throws Exception { FormatUtils formatUtils = new FormatUtils ( FileDataSplitter . WKT , false ); return formatUtils . readGeometry ( value ); } }) Create a Point from a String 1.1, 2.2 . Use , as the delimiter. import org.apache.sedona.core.formatMapper.FormatUtils ; import org.locationtech.jts.geom.Geometry ; DataStream < Geometry > geometries = text . map ( new MapFunction < String , Geometry > () { @Override public Geometry map ( String value ) throws Exception { FormatUtils < Geometry > formatUtils = new FormatUtils ( \",\" , false , GeometryType . POINT ); return formatUtils . readGeometry ( value ); } }) Create a Polygon from a String 1.1, 1.1, 10.1, 10.1 . This is a rectangle with (1.1, 1.1) and (10.1, 10.1) as their min/max corners. import org.apache.sedona.core.formatMapper.FormatUtils ; import org.locationtech.jts.geom.GeometryFactory ; import org.locationtech.jts.geom.Geometry ; DataStream < Geometry > geometries = text . map ( new MapFunction < String , Geometry > () { @Override public Geometry map ( String value ) throws Exception { // Write some code to get four double type values: minX, minY, maxX, maxY ... Coordinate [] coordinates = new Coordinate [ 5 ] ; coordinates [ 0 ] = new Coordinate ( minX , minY ); coordinates [ 1 ] = new Coordinate ( minX , maxY ); coordinates [ 2 ] = new Coordinate ( maxX , maxY ); coordinates [ 3 ] = new Coordinate ( maxX , minY ); coordinates [ 4 ] = coordinates [ 0 ] ; GeometryFactory geometryFactory = new GeometryFactory (); return geometryFactory . createPolygon ( coordinates ); } }) Create Row objects \u00b6 Put a geometry in a Flink Row to a geomStream . Note that you can put other attributes in Row as well. This example uses a constant value myName for all geometries. import org.apache.sedona.core.formatMapper.FormatUtils ; import org.locationtech.jts.geom.Geometry ; import org.apache.flink.types.Row ; DataStream < Row > geomStream = text . map ( new MapFunction < String , Row > () { @Override public Row map ( String value ) throws Exception { FormatUtils formatUtils = new FormatUtils ( FileDataSplitter . WKT , false ); return Row . of ( formatUtils . readGeometry ( value ), \"myName\" ); } }) Get Spatial Table \u00b6 Use TableEnv's fromDataStream function, with two column names geom and geom_name . Table geomTable = tableEnv . fromDataStream ( geomStream , \"geom\" , \"geom_name\" )","title":"Scala/Java"},{"location":"tutorial/flink/sql/#set-up-dependencies","text":"Read Sedona Maven Central coordinates Add Sedona dependencies in build.sbt or pom.xml. Add Flink dependencies in build.sbt or pom.xml.","title":"Set up dependencies"},{"location":"tutorial/flink/sql/#initiate-stream-environment","text":"Use the following code to initiate your StreamExecutionEnvironment at the beginning: StreamExecutionEnvironment env = StreamExecutionEnvironment . getExecutionEnvironment () EnvironmentSettings settings = EnvironmentSettings . newInstance (). inStreamingMode (). build (); StreamTableEnvironment tableEnv = StreamTableEnvironment . create ( env , settings );","title":"Initiate Stream Environment"},{"location":"tutorial/flink/sql/#register-sedonasql","text":"Add the following line after your StreamExecutionEnvironment and StreamTableEnvironment declaration SedonaFlinkRegistrator . registerType ( env ); SedonaFlinkRegistrator . registerFunc ( tableEnv ); Warning Sedona has a suite of well-written geometry and index serializers. Forgetting to enable these serializers will lead to high memory consumption. This function will register Sedona User Defined Type and User Defined Function","title":"Register SedonaSQL"},{"location":"tutorial/flink/sql/#create-a-geometry-type-column","text":"All geometrical operations in SedonaSQL are on Geometry type objects. Therefore, before any kind of queries, you need to create a Geometry type column on a DataFrame. Assume you have a Flink Table tbl like this: +----+--------------------------------+--------------------------------+ | op | geom_polygon | name_polygon | +----+--------------------------------+--------------------------------+ | +I | POLYGON ((-0.5 -0.5, -0.5 0... | polygon0 | | +I | POLYGON ((0.5 0.5, 0.5 1.5,... | polygon1 | | +I | POLYGON ((1.5 1.5, 1.5 2.5,... | polygon2 | | +I | POLYGON ((2.5 2.5, 2.5 3.5,... | polygon3 | | +I | POLYGON ((3.5 3.5, 3.5 4.5,... | polygon4 | | +I | POLYGON ((4.5 4.5, 4.5 5.5,... | polygon5 | | +I | POLYGON ((5.5 5.5, 5.5 6.5,... | polygon6 | | +I | POLYGON ((6.5 6.5, 6.5 7.5,... | polygon7 | | +I | POLYGON ((7.5 7.5, 7.5 8.5,... | polygon8 | | +I | POLYGON ((8.5 8.5, 8.5 9.5,... | polygon9 | +----+--------------------------------+--------------------------------+ 10 rows in set You can create a Table with a Geometry type column as follows: tableEnv . createTemporaryView ( \"myTable\" , tbl ) Table geomTbl = tableEnv . sql ( \"SELECT ST_GeomFromWKT(geom_polygon) as geom_polygon, name_polygon FROM myTable\" ) geomTbl . execute (). print () The output will be: +----+--------------------------------+--------------------------------+ | op | geom_polygon | name_polygon | +----+--------------------------------+--------------------------------+ | +I | POLYGON ((-0.5 -0.5, -0.5 0... | polygon0 | | +I | POLYGON ((0.5 0.5, 0.5 1.5,... | polygon1 | | +I | POLYGON ((1.5 1.5, 1.5 2.5,... | polygon2 | | +I | POLYGON ((2.5 2.5, 2.5 3.5,... | polygon3 | | +I | POLYGON ((3.5 3.5, 3.5 4.5,... | polygon4 | | +I | POLYGON ((4.5 4.5, 4.5 5.5,... | polygon5 | | +I | POLYGON ((5.5 5.5, 5.5 6.5,... | polygon6 | | +I | POLYGON ((6.5 6.5, 6.5 7.5,... | polygon7 | | +I | POLYGON ((7.5 7.5, 7.5 8.5,... | polygon8 | | +I | POLYGON ((8.5 8.5, 8.5 9.5,... | polygon9 | +----+--------------------------------+--------------------------------+ 10 rows in set Although it looks same with the input, actually the type of column geom_polygon has been changed to Geometry type. To verify this, use the following code to print the schema of the DataFrame: geomTbl . printSchema () The output will be like this: ( `geom_polygon` RAW('org.locationtech.jts.geom.Geometry', '...'), `name_polygon` STRING ) Note SedonaSQL provides lots of functions to create a Geometry column, please read SedonaSQL constructor API .","title":"Create a Geometry type column"},{"location":"tutorial/flink/sql/#transform-the-coordinate-reference-system","text":"Sedona doesn't control the coordinate unit (degree-based or meter-based) of all geometries in a Geometry column. The unit of all related distances in SedonaSQL is same as the unit of all geometries in a Geometry column. To convert Coordinate Reference System of the Geometry column created before, use the following code: Table geomTbl3857 = tableEnv . sqlQuery ( \"SELECT ST_Transform(countyshape, \" epsg : 4326 \", \" epsg : 3857 \") AS geom_polygon, name_polygon FROM myTable\" ) geomTbl3857 . execute (). print () The first EPSG code EPSG:4326 in ST_Transform is the source CRS of the geometries. It is WGS84, the most common degree-based CRS. The second EPSG code EPSG:3857 in ST_Transform is the target CRS of the geometries. It is the most common meter-based CRS. This ST_Transform transform the CRS of these geomtries from EPSG:4326 to EPSG:3857. The details CRS information can be found on EPSG.io Note Read SedonaSQL ST_Transform API to learn different spatial query predicates. For example, a Table that has coordinates in the US will become like this. Before the transformation: +----+--------------------------------+--------------------------------+ | op | geom_point | name_point | +----+--------------------------------+--------------------------------+ | +I | POINT (32 -118) | point | | +I | POINT (33 -117) | point | | +I | POINT (34 -116) | point | | +I | POINT (35 -115) | point | | +I | POINT (36 -114) | point | | +I | POINT (37 -113) | point | | +I | POINT (38 -112) | point | | +I | POINT (39 -111) | point | | +I | POINT (40 -110) | point | | +I | POINT (41 -109) | point | +----+--------------------------------+--------------------------------+ After the transformation: +----+--------------------------------+--------------------------------+ | op | _c0 | name_point | +----+--------------------------------+--------------------------------+ | +I | POINT (-13135699.91360628 3... | point | | +I | POINT (-13024380.422813008 ... | point | | +I | POINT (-12913060.932019735 ... | point | | +I | POINT (-12801741.44122646 4... | point | | +I | POINT (-12690421.950433187 ... | point | | +I | POINT (-12579102.459639912 ... | point | | +I | POINT (-12467782.96884664 4... | point | | +I | POINT (-12356463.478053367 ... | point | | +I | POINT (-12245143.987260092 ... | point | | +I | POINT (-12133824.496466817 ... | point | +----+--------------------------------+--------------------------------+","title":"Transform the Coordinate Reference System"},{"location":"tutorial/flink/sql/#run-spatial-queries","text":"After creating a Geometry type column, you are able to run spatial queries.","title":"Run spatial queries"},{"location":"tutorial/flink/sql/#range-query","text":"Use ST_Contains , ST_Intersects and so on to run a range query over a single column. The following example finds all counties that are within the given polygon: geomTable = tableEnv . sqlQuery ( \" SELECT * FROM spatialdf WHERE ST_Contains (ST_PolygonFromEnvelope(1.0,100.0,1000.0,1100.0), newcountyshape) \" ) geomTable . execute (). print () Note Read SedonaSQL Predicate API to learn different spatial query predicates.","title":"Range query"},{"location":"tutorial/flink/sql/#knn-query","text":"Use ST_Distance to calculate the distance and rank the distance. The following code returns the 5 nearest neighbor of the given polygon. geomTable = tableEnv . sqlQuery ( \" SELECT countyname, ST_Distance(ST_PolygonFromEnvelope(1.0,100.0,1000.0,1100.0), newcountyshape) AS distance FROM geomTable ORDER BY distance DESC LIMIT 5 \" ) geomTable . execute (). print ()","title":"KNN query"},{"location":"tutorial/flink/sql/#convert-spatial-table-to-spatial-datastream","text":"","title":"Convert Spatial Table to Spatial DataStream"},{"location":"tutorial/flink/sql/#get-datastream","text":"Use TableEnv's toDataStream function DataStream < Row > geomStream = tableEnv . toDataStream ( geomTable )","title":"Get DataStream"},{"location":"tutorial/flink/sql/#retrieve-geometries","text":"Then get the Geometry from each Row object using Map import org.locationtech.jts.geom.Geometry ; DataStream < Geometry > geometries = geomStream . map ( new MapFunction < Row , Geometry > () { @Override public Geometry map ( Row value ) throws Exception { return ( Geometry ) value . getField ( 0 ); } }); geometries . print (); The output will be 14> POLYGON ((1.5 1.5, 1.5 2.5, 2.5 2.5, 2.5 1.5, 1.5 1.5)) 2> POLYGON ((5.5 5.5, 5.5 6.5, 6.5 6.5, 6.5 5.5, 5.5 5.5)) 5> POLYGON ((8.5 8.5, 8.5 9.5, 9.5 9.5, 9.5 8.5, 8.5 8.5)) 16> POLYGON ((3.5 3.5, 3.5 4.5, 4.5 4.5, 4.5 3.5, 3.5 3.5)) 12> POLYGON ((-0.5 -0.5, -0.5 0.5, 0.5 0.5, 0.5 -0.5, -0.5 -0.5)) 13> POLYGON ((0.5 0.5, 0.5 1.5, 1.5 1.5, 1.5 0.5, 0.5 0.5)) 15> POLYGON ((2.5 2.5, 2.5 3.5, 3.5 3.5, 3.5 2.5, 2.5 2.5)) 3> POLYGON ((6.5 6.5, 6.5 7.5, 7.5 7.5, 7.5 6.5, 6.5 6.5)) 1> POLYGON ((4.5 4.5, 4.5 5.5, 5.5 5.5, 5.5 4.5, 4.5 4.5)) 4> POLYGON ((7.5 7.5, 7.5 8.5, 8.5 8.5, 8.5 7.5, 7.5 7.5))","title":"Retrieve Geometries"},{"location":"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries","text":"You can concatenate other non-spatial attributes and store them in Geometry's userData field so you can recover them later on. userData field can be any object type. import org.locationtech.jts.geom.Geometry ; DataStream < Geometry > geometries = geomStream . map ( new MapFunction < Row , Geometry > () { @Override public Geometry map ( Row value ) throws Exception { Geometry geom = ( Geometry ) value . getField ( 0 ); geom . setUserData ( value . getField ( 1 )); return geom ; } }); geometries . print (); The print command will not print out userData field. But you can get it this way: import org.locationtech.jts.geom.Geometry ; geometries . map ( new MapFunction < Geometry , String > () { @Override public String map ( Geometry value ) throws Exception { return ( String ) value . getUserData (); } }). print (); The output will be 13> polygon9 6> polygon2 10> polygon6 11> polygon7 5> polygon1 12> polygon8 8> polygon4 4> polygon0 7> polygon3 9> polygon5","title":"Store non-spatial attributes in Geometries"},{"location":"tutorial/flink/sql/#convert-spatial-datastream-to-spatial-table","text":"","title":"Convert Spatial DataStream to Spatial Table"},{"location":"tutorial/flink/sql/#create-geometries-using-sedona-formatutils","text":"Create a Geometry from a WKT string import org.apache.sedona.core.formatMapper.FormatUtils ; import org.locationtech.jts.geom.Geometry ; DataStream < Geometry > geometries = text . map ( new MapFunction < String , Geometry > () { @Override public Geometry map ( String value ) throws Exception { FormatUtils formatUtils = new FormatUtils ( FileDataSplitter . WKT , false ); return formatUtils . readGeometry ( value ); } }) Create a Point from a String 1.1, 2.2 . Use , as the delimiter. import org.apache.sedona.core.formatMapper.FormatUtils ; import org.locationtech.jts.geom.Geometry ; DataStream < Geometry > geometries = text . map ( new MapFunction < String , Geometry > () { @Override public Geometry map ( String value ) throws Exception { FormatUtils < Geometry > formatUtils = new FormatUtils ( \",\" , false , GeometryType . POINT ); return formatUtils . readGeometry ( value ); } }) Create a Polygon from a String 1.1, 1.1, 10.1, 10.1 . This is a rectangle with (1.1, 1.1) and (10.1, 10.1) as their min/max corners. import org.apache.sedona.core.formatMapper.FormatUtils ; import org.locationtech.jts.geom.GeometryFactory ; import org.locationtech.jts.geom.Geometry ; DataStream < Geometry > geometries = text . map ( new MapFunction < String , Geometry > () { @Override public Geometry map ( String value ) throws Exception { // Write some code to get four double type values: minX, minY, maxX, maxY ... Coordinate [] coordinates = new Coordinate [ 5 ] ; coordinates [ 0 ] = new Coordinate ( minX , minY ); coordinates [ 1 ] = new Coordinate ( minX , maxY ); coordinates [ 2 ] = new Coordinate ( maxX , maxY ); coordinates [ 3 ] = new Coordinate ( maxX , minY ); coordinates [ 4 ] = coordinates [ 0 ] ; GeometryFactory geometryFactory = new GeometryFactory (); return geometryFactory . createPolygon ( coordinates ); } })","title":"Create Geometries using Sedona FormatUtils"},{"location":"tutorial/flink/sql/#create-row-objects","text":"Put a geometry in a Flink Row to a geomStream . Note that you can put other attributes in Row as well. This example uses a constant value myName for all geometries. import org.apache.sedona.core.formatMapper.FormatUtils ; import org.locationtech.jts.geom.Geometry ; import org.apache.flink.types.Row ; DataStream < Row > geomStream = text . map ( new MapFunction < String , Row > () { @Override public Row map ( String value ) throws Exception { FormatUtils formatUtils = new FormatUtils ( FileDataSplitter . WKT , false ); return Row . of ( formatUtils . readGeometry ( value ), \"myName\" ); } })","title":"Create Row objects"},{"location":"tutorial/flink/sql/#get-spatial-table","text":"Use TableEnv's fromDataStream function, with two column names geom and geom_name . Table geomTable = tableEnv . fromDataStream ( geomStream , \"geom\" , \"geom_name\" )","title":"Get Spatial Table"}],"index":{"fieldVectors":[["title/",[0,8.243]],["text/",[1,6.821,2,2.473,3,4.231,4,5.548,5,4.572,6,3.918,7,1.36,8,4.712,9,5.717,10,5.309,11,5.717,12,0.592,13,6.821,14,4.136,15,4.963,16,4.092,17,5.717,18,4.281,19,2.084,20,6.821,21,5.717,22,5.551,23,6.821,24,4.961,25,3.157,26,6.821,27,2.685,28,3.237,29,5.717,30,4.572,31,2.313,32,2.994,33,5.162,34,1.087,35,2.205,36,6.821,37,5.406,38,4.712,39,5.91,40,2.659,41,4.789,42,4.572,43,2.61,44,5.717,45,5.278]],["title/#08302022-sedona-121-incubating-is-released-it-supports-spark-24-33-and-flink-112",[1,2.229,2,0.489,3,1.383,4,1.125,5,0.927,6,0.794,7,0.304,8,1.54,9,1.868,10,1.323,11,1.868]],["text/#08302022-sedona-121-incubating-is-released-it-supports-spark-24-33-and-flink-112",[]],["title/#04162022-sedona-120-incubating-is-released-sedona-now-supports-geospatial-stream-processing-in-apache-flink",[2,0.744,4,0.986,5,0.812,6,0.696,10,1.159,13,1.953,14,1.184,15,0.972,16,1.172,17,1.637,18,1.226,19,0.597]],["text/#04162022-sedona-120-incubating-is-released-sedona-now-supports-geospatial-stream-processing-in-apache-flink",[]],["title/#11232021-sedona-111-incubating-is-released-it-now-supports-spark-32",[2,0.569,4,1.31,5,1.079,6,0.925,7,0.354,15,1.291,20,2.596,21,2.175,22,2.112]],["text/#11232021-sedona-111-incubating-is-released-it-now-supports-spark-32",[]],["title/#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported",[2,0.327,4,0.753,5,0.62,6,0.532,15,0.742,23,1.492,24,1.085,25,0.69,26,1.492,27,0.587,28,0.708,29,1.25,30,1,31,0.506,32,0.655,33,1.129,34,0.238,35,0.482]],["text/#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported",[]],["title/#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39",[2,0.381,4,0.877,5,0.723,6,0.619,7,0.237,36,1.738,37,1.378,38,1.201,39,1.506,40,0.678,41,1.22,42,1.165,43,0.665,44,1.457,45,1.345]],["text/#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39",[]],["title/download/",[46,3.555]],["text/download/",[2,1.431,3,4.05,4,4.384,5,4.329,12,0.612,14,3.96,46,4.072,47,5.94,48,4.912,49,4.315,50,4.311,51,2.995,52,4.098,53,1.806,54,3.504,55,2.475,56,5.572,57,3.022,58,4.749,59,2.621,60,3.182,61,5.052,62,4.749,63,4.749,64,4.257,65,4.315,66,3.917,67,4.584,68,5.052,69,2.307,70,5.328,71,6.723,72,6.576,73,6.442,74,9.816,75,9.373,76,6.723,77,7.071,78,5.879,79,4.149,80,3.343,81,6.53,82,7.528,83,2.788,84,1.844,85,3.14,86,6.53]],["title/download/#github-repository",[47,3.49,48,3.457]],["text/download/#github-repository",[5,4.356,47,6.388,48,4.964,49,5.802,50,3.876,51,2.693,52,5.511,53,2.429,54,4.712,55,3.329,56,5.01,57,4.064,58,6.386,59,3.524,60,4.279,61,6.794,62,6.386,63,6.386]],["title/download/#verify-the-integrity",[64,3.987,65,4.041]],["text/download/#verify-the-integrity",[66,5.875,67,6.876,68,7.578]],["title/download/#versions",[69,2.68]],["text/download/#versions",[]],["title/download/#121-incubating",[3,3.793,4,3.086]],["text/download/#121-incubating",[46,4.313,50,4.063,51,2.822,56,5.252,70,5.644,71,7.121,72,6.965,73,6.823,74,10.157,75,9.698,76,7.121]],["title/download/#120-incubating",[4,3.086,14,3.709]],["text/download/#120-incubating",[46,4.313,50,4.063,51,2.822,56,5.252,70,5.644,71,7.121,72,6.965,73,6.823,74,10.157,75,9.698,76,7.121]],["title/download/#past-releases",[5,2.543,77,4.977]],["text/download/#past-releases",[2,2.093,5,3.971,77,7.771,78,8.597,79,6.066,80,4.889,81,9.549]],["title/download/#security",[82,6.572]],["text/download/#security",[82,8.377,83,4.129,84,2.731,85,4.649,86,9.669]],["title/api/java-api/",[87,3.669,88,3.75]],["text/api/java-api/",[27,4.181,40,4.141,84,2.538,89,2.963,90,6.954,91,2.975,92,3.99,93,4.743,94,6.801,95,5.28,96,4.242,97,1.749,98,3.392]],["title/api/python-api/",[43,2.34,88,3.75]],["text/api/python-api/",[28,4.678,99,9.295]],["title/api/r-api/",[25,2.831,88,3.75]],["text/api/r-api/",[25,4.504,84,2.748,88,5.967,89,3.208]],["title/api/flink/Aggregator/",[100,4.249]],["text/api/flink/Aggregator/",[12,0.644,34,1.543,101,6.56,102,1.839,103,2.161,104,5.172,105,3.981,106,3.951,107,1.502,108,1.657,109,7.176,110,4.993,111,1.479,112,1.589,113,5.194,114,4.732,115,7.553,116,3.785,117,6.116,118,3.128,119,3.738,120,4.489]],["title/api/flink/Aggregator/#st_envelope_aggr",[101,4.705]],["text/api/flink/Aggregator/#st_envelope_aggr",[12,0.604,34,1.408,101,6.52,102,1.678,103,1.972,104,5.919,105,4.556,106,4.522,107,1.719,108,1.512,109,6.547,110,4.556,111,1.35,112,1.45,113,5.64,114,5.415]],["title/api/flink/Aggregator/#st_union_aggr",[115,5.418]],["text/api/flink/Aggregator/#st_union_aggr",[12,0.603,34,1.399,102,1.669,103,1.961,108,1.503,109,6.51,110,4.53,111,1.342,112,1.442,115,7.481,116,4.007,117,6.96,118,3.559,119,4.046,120,5.108]],["title/api/flink/Constructor/",[121,3.913]],["text/api/flink/Constructor/",[7,0.421,12,0.665,34,1.684,56,1.762,102,1.979,107,1.957,108,1.808,110,2.573,111,1.615,112,1.734,113,2.677,116,1.785,120,4.192,122,3.86,123,0.94,124,2.447,125,2.316,126,2.57,127,3.954,128,2.78,129,1.986,130,4.123,131,2.78,132,3.214,133,1.34,134,4.336,135,4.992,136,1.558,137,2.587,138,4.151,139,6.043,140,3.726,141,5.26,142,2.447,143,2.78,144,2.78,145,2.78,146,2.78,147,2.78,148,2.78,149,5.26,150,2.447,151,2.78,152,2.78,153,2.78,154,2.78,155,2.905,156,2.383,157,3.86,158,3.867,159,3.86,160,3.954,161,4.653,162,5.516,163,1.778,164,2.587,165,2.78,166,3.087,167,5.576,168,2.189,169,3.899,170,5.288,171,5.147,172,5.147,173,4.059,174,1.691,175,2.053,176,2.153,177,4.856,178,3.484,179,1.705,180,2.722,181,2.873,182,2.587,183,2.587,184,3.939,185,1.938,186,4.856,187,2.587,188,3.425,189,2.447,190,2.447,191,2.447,192,2.447,193,2.587,194,2.587,195,2.587,196,2.587,197,1.643,198,0.84,199,2.235,200,1.657,201,1.581,202,1.893,203,4.856,204,1.684,205,1.938,206,3.954,207,2.447,208,2.447]],["title/api/flink/Constructor/#st_geomfromgeohash",[122,5.869]],["text/api/flink/Constructor/#st_geomfromgeohash",[12,0.6,34,1.384,102,1.65,107,1.69,108,1.486,111,1.327,112,1.425,122,6.717,123,2.643,124,6.88,125,3.839,126,3.555,127,8.246,128,7.816,129,5.585,130,4.23,131,7.816,132,4.445,133,3.768]],["title/api/flink/Constructor/#st_geomfromgeojson",[134,5.24]],["text/api/flink/Constructor/#st_geomfromgeojson",[12,0.606,34,1.416,102,1.688,107,1.729,108,1.521,111,1.358,112,1.459,120,5.167,134,7.286,135,4.328,136,4.482,137,7.444,138,4.358,139,7.533,140,5.273]],["title/api/flink/Constructor/#st_geomfromgml",[141,6.357]],["text/api/flink/Constructor/#st_geomfromgml",[12,0.566,34,1.408,102,1.678,107,2.046,108,1.512,110,4.556,111,1.35,112,1.45,135,4.303,141,8.809,142,7,143,7.952,144,7.952,145,7.952,146,7.952,147,7.952,148,7.952]],["title/api/flink/Constructor/#st_geomfromkml",[149,6.357]],["text/api/flink/Constructor/#st_geomfromkml",[12,0.57,34,1.424,102,1.698,107,2.06,108,1.53,110,4.609,111,1.366,112,1.467,135,4.354,149,8.87,150,7.082,151,8.045,152,8.045,153,8.045,154,8.045]],["title/api/flink/Constructor/#st_geomfromtext",[155,3.511]],["text/api/flink/Constructor/#st_geomfromtext",[12,0.568,34,1.416,102,1.688,107,2.053,108,1.521,111,1.358,112,1.459,130,4.328,135,4.328,155,4.882,156,4.243,157,6.873,158,4.766,159,6.873,160,7.04,161,6.585]],["title/api/flink/Constructor/#st_geomfromwkb",[162,4.945]],["text/api/flink/Constructor/#st_geomfromwkb",[12,0.633,34,1.578,56,4.564,102,1.52,107,1.557,108,1.695,111,1.513,112,1.625,120,5.758,125,2.952,130,3.898,135,3.898,138,3.925,139,8.022,140,5.876,162,7.525,163,4.608,164,6.704,165,7.203,166,7.999]],["title/api/flink/Constructor/#st_geomfromwkt",[158,4.07]],["text/api/flink/Constructor/#st_geomfromwkt",[12,0.572,34,1.432,102,1.708,107,2.067,108,1.539,111,1.374,112,1.476,135,4.379,138,4.409,156,4.293,158,5.699,159,6.954,160,7.123,161,6.663]],["title/api/flink/Constructor/#st_linefromtext",[167,5.869]],["text/api/flink/Constructor/#st_linefromtext",[12,0.56,34,1.384,102,1.65,108,1.486,111,1.327,112,1.425,126,3.555,130,4.23,132,4.445,135,4.23,167,8.05,168,3.81,169,4.697,170,5.937,171,6.2,172,6.2,173,7.065,174,2.943,175,3.573,176,3.747]],["title/api/flink/Constructor/#st_linestringfromtext",[177,5.869]],["text/api/flink/Constructor/#st_linestringfromtext",[7,1.163,12,0.555,34,1.36,102,1.622,108,1.461,111,1.305,112,1.402,126,3.495,130,4.159,132,4.37,135,4.159,157,6.604,167,6.604,168,3.747,169,4.618,170,5.877,171,6.096,172,6.096,173,6.946,174,2.894,175,3.513,176,3.684,177,7.969]],["title/api/flink/Constructor/#st_point",[178,4.211]],["text/api/flink/Constructor/#st_point",[12,0.603,34,1.399,102,1.669,108,1.503,111,1.342,112,1.442,130,4.279,135,4.279,178,5.816,179,3.001,180,5.716,181,6.034,182,7.359,183,7.359,184,5.511,185,5.511]],["title/api/flink/Constructor/#st_pointfromtext",[186,5.869]],["text/api/flink/Constructor/#st_pointfromtext",[12,0.623,34,1.391,102,1.659,108,1.495,111,1.334,112,1.434,135,4.254,138,4.283,161,6.472,169,4.724,170,5.957,171,6.235,172,6.235,179,2.984,184,5.479,186,8.078,187,7.317]],["title/api/flink/Constructor/#st_polygonfromenvelope",[188,4.139]],["text/api/flink/Constructor/#st_polygonfromenvelope",[12,0.665,34,1.242,102,1.481,108,1.334,111,1.192,112,1.28,113,5.227,116,2.79,135,3.799,138,3.824,184,4.893,188,5.315,189,6.179,190,6.179,191,6.179,192,6.179,193,6.533,194,6.533,195,6.533,196,6.533,197,4.149,198,2.12,199,3.451,200,4.183,201,3.992,202,4.78]],["title/api/flink/Constructor/#st_polygonfromtext",[203,5.869]],["text/api/flink/Constructor/#st_polygonfromtext",[12,0.632,34,1.353,102,1.613,108,1.453,111,1.297,112,1.394,116,3.038,120,4.938,135,4.136,138,4.164,169,4.592,170,5.857,171,6.062,172,6.062,203,7.942,204,4.631,205,5.327,206,8.136,207,6.728,208,6.728]],["title/api/flink/Function/",[35,2.453]],["text/api/flink/Function/",[6,0.584,7,0.821,12,0.658,34,0.961,35,0.283,56,0.935,69,0.817,85,0.788,91,0.765,92,0.388,97,0.319,98,0.33,102,1.866,103,2.193,105,0.451,106,1.184,107,2.011,108,1.717,110,4.37,111,1.509,112,1.621,116,2.157,118,2.736,119,3.813,124,1.832,125,1.074,126,0.671,127,1.299,129,1.487,130,2.937,132,3.086,133,1.003,136,0.441,138,1.69,142,0.693,150,0.693,155,2.367,156,0.783,163,0.944,168,2.245,169,0.886,174,3.269,175,2.864,178,1.912,179,2.933,180,2.141,181,2.261,198,3.115,199,3.444,209,1.832,210,1.299,211,1.826,212,0.787,213,1.236,214,0.879,215,0.745,216,3.006,217,0.91,218,3.441,219,1.714,220,0.693,221,1.789,222,1.75,223,1.805,224,2.712,225,1.789,226,1.95,227,0.787,228,0.754,229,3.299,230,0.91,231,1.373,232,0.879,233,1.299,234,1.191,235,1.24,236,1.15,237,1.789,238,0.787,239,0.356,240,2.157,241,1.651,242,1.937,243,1.937,244,1.469,245,1.215,246,0.733,247,0.336,248,1.813,249,0.733,250,2.572,251,1.863,252,0.733,253,0.733,254,2.043,255,2.76,256,0.733,257,1.215,258,0.733,259,0.733,260,0.733,261,1.419,262,1.789,263,1.373,264,1.132,265,0.733,266,0.555,267,0.485,268,0.733,269,0.524,270,1.789,271,0.787,272,1.054,273,0.712,274,0.787,275,0.693,276,1.638,277,1.638,278,0.787,279,3.561,280,0.874,281,1.709,282,0.787,283,2.438,284,2.909,285,0.874,286,1.475,287,1.307,288,0.595,289,1.789,290,1.215,291,0.733,292,1.572,293,0.542,294,0.874,295,4.038,296,1.749,297,0.693,298,0.787,299,0.787,300,1.789,301,0.693,302,0.469,303,1.799,304,2.493,305,1.475,306,3.738,307,0.787,308,0.787,309,0.787,310,1.475,311,0.787,312,0.787,313,0.787,314,0.787,315,0.787,316,1.24,317,0.787,318,0.237,319,0.757,320,0.757,321,0.33,322,0.787,323,1.215,324,0.423,325,1.714,326,1.215,327,0.733,328,0.733,329,0.733,330,0.712,331,0.733,332,1.681,333,0.733,334,1.848,335,0.524,336,0.57,337,1.215,338,1.268,339,0.53,340,0.371,341,0.733,342,1.623,343,0.842,344,0.4,345,1.251,346,0.733,347,2.558,348,1.789,349,1.134,350,0.614,351,1.215,352,1.979,353,0.733,354,0.614,355,0.563,356,0.469,357,1.651,358,1.789,359,0.733,360,1.651,361,1.427,362,1.714,363,0.677,364,0.821,365,1.215,366,0.733,367,1.268,368,0.787,369,0.787,370,0.758,371,0.549,372,0.733,373,0.586,374,0.874,375,0.874,376,0.874,377,1.299,378,0.614,379,0.787,380,0.733,381,0.787,382,1.333,383,0.787,384,1.789,385,0.693,386,0.872,387,0.787,388,6.645,389,0.349,390,0.515,391,1.373,392,1.307,393,1.373,394,0.499,395,0.787,396,1.832,397,2.33,398,0.426,399,0.733,400,0.733,401,0.49,402,0.733,403,0.787,404,0.563,405,0.563,406,0.662,407,0.662,408,0.865,409,0.481,410,0.3,411,0.733,412,0.563,413,0.733,414,0.524,415,0.636,416,0.733,417,0.733,418,0.733,419,0.624,420,0.935,421,1.005,422,0.316,423,0.377,424,0.595,425,0.514,426,0.614,427,0.595,428,1.215,429,0.733,430,0.677,431,1.789,432,0.757,433,0.787,434,2.841,435,1.114,436,1.937,437,0.787,438,1.215,439,0.733,440,0.733,441,1.789,442,1.268,443,0.787,444,1.299,445,0.662,446,0.787,447,0.787]],["title/api/flink/Function/#st_3ddistance",[209,6.012]],["text/api/flink/Function/#st_3ddistance",[12,0.632,102,1.613,103,1.895,108,1.453,110,4.379,111,1.297,112,1.394,119,4.261,175,3.493,209,8.136,210,6.728,211,5.327,212,7.643,213,3.605,214,4.555,215,3.858,216,2.937,217,4.712,218,4.359]],["title/api/flink/Function/#st_area",[219,5.624]],["text/api/flink/Function/#st_area",[12,0.61,102,1.718,103,2.019,108,1.548,110,4.664,111,1.382,112,1.484,119,4.116,216,3.128,218,3.839,219,7.902,220,7.165]],["title/api/flink/Function/#st_asbinary",[221,5.869]],["text/api/flink/Function/#st_asbinary",[12,0.604,56,5.039,102,1.678,103,1.972,107,1.719,108,1.512,110,4.556,111,1.35,112,1.45,119,4.06,216,3.056,218,3.751,221,8.133,222,4.489,223,5.478,224,5.039]],["title/api/flink/Function/#st_asewkb",[225,5.869]],["text/api/flink/Function/#st_asewkb",[6,2.807,12,0.575,56,4.494,69,2.783,102,1.497,103,1.759,107,2.078,108,1.827,110,4.063,111,1.204,112,1.293,119,3.786,163,5.647,216,2.725,218,3.345,222,4.003,223,4.885,224,4.494,225,7.585,226,6.57,227,7.091,228,3.623,229,7.419,230,4.372,231,6.6,232,4.226,233,6.242,234,5.727,235,5.96,236,5.529]],["title/api/flink/Function/#st_asewkt",[237,5.869]],["text/api/flink/Function/#st_asewkt",[6,2.75,7,1.052,12,0.569,34,1.23,69,2.727,102,1.466,103,1.723,107,2.059,108,1.811,111,1.179,112,1.267,119,3.738,130,3.76,156,4.624,169,4.175,216,2.67,218,3.277,222,3.922,223,4.786,224,4.403,226,6.487,228,3.55,229,7.325,230,4.284,231,6.467,232,4.141,233,6.116,234,5.612,235,5.84,236,5.418,237,7.489,238,6.948,239,3.144,240,5.721]],["title/api/flink/Function/#st_asgeojson",[241,5.418]],["text/api/flink/Function/#st_asgeojson",[7,1.197,12,0.603,34,1.399,102,1.669,103,1.961,107,1.709,108,1.503,110,4.53,111,1.342,112,1.442,119,4.046,125,3.24,136,4.431,216,3.039,218,3.729,224,5.01,241,7.481]],["title/api/flink/Function/#st_asgml",[242,6.357]],["text/api/flink/Function/#st_asgml",[7,1.197,12,0.603,34,1.399,102,1.669,103,1.961,107,1.709,108,1.503,110,4.53,111,1.342,112,1.442,119,4.046,125,3.24,142,6.96,216,3.039,218,3.729,224,5.01,242,8.779]],["title/api/flink/Function/#st_askml",[243,6.357]],["text/api/flink/Function/#st_askml",[7,1.197,12,0.603,34,1.399,102,1.669,103,1.961,107,1.709,108,1.503,110,4.53,111,1.342,112,1.442,119,4.046,125,3.24,150,6.96,216,3.039,218,3.729,224,5.01,243,8.779]],["title/api/flink/Function/#st_astext",[244,4.819]],["text/api/flink/Function/#st_astext",[12,0.603,102,1.669,103,1.961,107,1.709,108,1.503,110,4.53,111,1.342,112,1.442,119,4.046,125,3.24,169,4.751,216,3.039,218,3.729,222,4.463,223,5.446,224,5.01,244,6.655]],["title/api/flink/Function/#st_azimuth",[245,5.624]],["text/api/flink/Function/#st_azimuth",[12,0.66,102,1.497,103,1.759,108,1.348,110,4.063,111,1.204,112,1.293,178,5.443,179,3.649,199,3.684,245,5.839,246,6.6,247,3.027,248,3.275,249,6.6,250,4.261,251,4.261,252,6.6,253,6.6,254,5.529,255,2.566,256,6.6]],["title/api/flink/Function/#st_boundary",[257,5.624]],["text/api/flink/Function/#st_boundary",[12,0.582,102,1.536,103,1.805,106,4.139,107,1.939,108,1.384,110,4.17,111,1.236,112,1.327,116,2.893,155,3.741,198,3.36,199,3.496,255,2.634,257,5.993,258,6.775,259,6.775,260,6.775,261,7.004]],["title/api/flink/Function/#st_buffer",[262,5.869]],["text/api/flink/Function/#st_buffer",[7,1.138,12,0.614,34,1.331,102,1.587,103,1.864,108,1.429,111,1.276,112,1.371,119,3.925,138,4.096,179,2.854,198,2.27,213,4.316,216,2.889,218,3.546,262,7.863,263,8.516,264,5.767,265,6.997,266,5.304,267,4.635,268,6.997,269,5.008]],["title/api/flink/Function/#st_buildarea",[270,5.869]],["text/api/flink/Function/#st_buildarea",[12,0.602,102,1.37,103,1.609,107,1.804,108,1.234,111,1.102,112,1.183,118,3.757,130,3.512,133,3.128,199,3.354,216,2.494,255,2.348,270,7.171,271,6.489,272,4.637,273,5.865,274,6.489,275,5.712,276,9.268,277,9.268,278,6.489,279,6.557,280,7.207,281,6.354,282,6.489,283,7.768,284,10.815,285,7.207,286,8.345]],["title/api/flink/Function/#st_distance",[287,4.288]],["text/api/flink/Function/#st_distance",[7,1.163,12,0.633,34,1.36,102,1.622,103,1.906,108,1.461,111,1.305,112,1.402,119,4.272,138,4.188,213,3.625,214,4.58,215,3.879,216,2.954,217,4.739,218,4.374,287,5.822,288,5.806]],["title/api/flink/Function/#st_envelope",[289,5.869]],["text/api/flink/Function/#st_envelope",[12,0.609,102,1.708,103,2.007,105,4.636,106,4.602,108,1.539,110,4.636,111,1.374,112,1.476,119,4.102,216,3.11,218,3.817,289,8.218]],["title/api/flink/Function/#st_exteriorring",[290,5.624]],["text/api/flink/Function/#st_exteriorring",[12,0.56,102,1.416,103,2.114,107,1.843,108,1.276,111,1.139,112,1.224,116,3.725,118,3.021,130,3.632,168,4.156,174,3.211,198,3.324,199,3.747,250,4.033,255,2.429,264,5.149,290,5.526,291,6.246,292,5.07,293,4.623,294,7.453,295,5.211]],["title/api/flink/Function/#st_flipcoordinates",[296,5.741]],["text/api/flink/Function/#st_flipcoordinates",[7,1.132,12,0.588,34,1.323,69,2.934,102,1.578,103,1.854,107,1.972,108,1.421,111,1.269,112,1.363,118,3.366,138,4.074,174,3.434,179,3.462,180,4.531,181,4.783,198,2.754,248,3.453,255,2.706,295,5.574,296,6.284,297,6.581,298,7.476,299,7.476]],["title/api/flink/Function/#st_force_2d",[300,5.869]],["text/api/flink/Function/#st_force_2d",[12,0.559,102,1.41,107,1.838,108,1.27,111,1.134,112,1.218,118,3.007,130,3.614,133,3.219,174,3.201,175,3.053,180,4.047,181,4.273,198,2.972,199,3.22,210,5.879,216,2.567,224,4.232,255,3.076,283,7.911,295,5.195,300,7.304,301,5.879,302,3.98,303,2.61,304,5.998,305,8.5,306,3.614,307,6.678,308,6.678,309,6.678,310,8.5,311,6.678,312,6.678,313,6.678,314,6.678,315,6.678]],["title/api/flink/Function/#st_geohash",[316,5.741]],["text/api/flink/Function/#st_geohash",[12,0.665,102,1.536,103,1.805,107,1.939,108,1.384,111,1.236,112,1.327,124,8.56,127,7.897,129,5.201,138,3.966,155,3.741,248,3.362,306,3.939,316,6.118,317,7.279,318,2.191,319,7.004,320,7.004,321,3.051,322,7.279]],["title/api/flink/Function/#st_geometryn",[323,5.624]],["text/api/flink/Function/#st_geometryn",[12,0.6,102,1.489,103,2.182,107,2.073,108,1.341,110,4.042,111,1.198,112,1.287,129,5.041,132,5.004,155,3.626,174,2.657,175,4.022,179,2.678,198,2.131,199,2.43,250,4.239,251,4.239,255,2.553,306,3.818,323,5.809,324,3.792,325,5.809,326,5.809,327,6.566,328,6.566,329,6.566,330,6.376,331,6.566,332,5.698,333,6.566,334,4.978,335,4.7,336,5.108]],["title/api/flink/Function/#st_interiorringn",[337,5.624]],["text/api/flink/Function/#st_interiorringn",[12,0.559,102,1.23,103,1.929,107,1.893,108,1.108,110,3.34,111,0.99,112,1.063,116,3.092,129,4.166,132,5.693,155,2.996,168,2.842,174,3.999,175,4.806,198,3.308,199,3.448,248,2.692,250,3.503,255,2.11,261,5.609,292,4.404,304,4.113,306,5.055,325,4.8,332,6.283,337,4.8,338,5.01,339,3.926,340,2.75,341,5.426]],["title/api/flink/Function/#st_isclosed",[342,5.326]],["text/api/flink/Function/#st_isclosed",[12,0.597,98,3.239,102,1.631,103,1.917,107,1.671,108,1.469,110,4.428,111,1.312,112,1.409,155,3.972,168,3.768,179,2.934,198,3.015,199,3.204,342,6.026,343,3.126,344,3.924,345,4.644,346,7.193,347,5.595]],["title/api/flink/Function/#st_isempty",[348,5.869]],["text/api/flink/Function/#st_isempty",[7,1.204,12,0.604,34,1.408,102,1.678,107,2.046,108,1.512,111,1.35,112,1.45,119,4.06,130,4.303,216,3.056,218,3.751,348,8.133,349,4.333,350,6.2]],["title/api/flink/Function/#st_isring",[351,5.624]],["text/api/flink/Function/#st_isring",[12,0.591,102,1.595,103,1.874,107,1.634,108,1.437,110,4.331,111,1.283,112,1.378,155,3.885,168,3.685,198,3.106,199,3.629,255,2.735,342,5.894,343,3.713,347,5.472,351,6.224,352,5.71,353,7.035]],["title/api/flink/Function/#st_issimple",[352,5.16]],["text/api/flink/Function/#st_issimple",[12,0.604,102,1.678,106,4.522,108,1.512,110,4.556,111,1.35,112,1.45,119,4.06,179,3.019,216,3.056,218,3.751,349,4.333,352,7.15,354,6.2,355,5.682,356,4.739]],["title/api/flink/Function/#st_isvalid",[357,5.418]],["text/api/flink/Function/#st_isvalid",[12,0.607,102,1.698,107,1.739,108,1.53,110,4.609,111,1.366,112,1.467,119,4.088,216,3.092,218,3.795,222,4.541,272,5.748,349,4.383,357,7.559]],["title/api/flink/Function/#st_length",[358,5.869]],["text/api/flink/Function/#st_length",[12,0.61,102,1.718,103,2.019,108,1.548,110,4.664,111,1.382,112,1.484,119,4.116,216,3.128,218,3.839,358,8.247,359,7.576]],["title/api/flink/Function/#st_npoints",[360,5.418]],["text/api/flink/Function/#st_npoints",[12,0.607,102,1.698,103,1.995,107,1.739,108,1.53,110,4.609,111,1.366,112,1.467,119,4.088,179,3.054,216,3.092,218,3.795,360,7.559,361,4.383]],["title/api/flink/Function/#st_numgeometries",[362,5.624]],["text/api/flink/Function/#st_numgeometries",[12,0.594,102,1.613,103,2.464,107,2.285,108,1.453,110,4.379,111,1.297,112,1.394,198,2.308,216,2.937,295,5.649,326,6.293,361,5.036,362,7.61,363,6.568,364,4.252]],["title/api/flink/Function/#st_numinteriorrings",[365,5.624]],["text/api/flink/Function/#st_numinteriorrings",[12,0.575,102,1.497,103,1.759,107,1.908,108,1.348,110,4.063,111,1.204,112,1.293,116,3.509,155,3.645,174,3.787,198,3.231,199,3.633,255,2.566,292,5.357,306,5.443,338,6.094,361,3.864,365,5.839,366,6.6]],["title/api/flink/Function/#st_pointn",[367,5.869]],["text/api/flink/Function/#st_pointn",[12,0.559,102,1.23,103,1.929,107,1.893,108,1.108,111,0.99,112,1.063,118,3.942,130,3.155,132,5.312,168,4.554,174,4.061,175,4.002,179,3.694,198,3.257,199,2.679,250,3.503,255,3.168,295,4.755,325,4.8,334,6.178,345,3.503,347,5.632,364,3.244,367,5.01,368,5.829,369,5.829,370,2.996,371,4.063,372,5.426,373,4.339,374,6.474,375,6.474,376,6.474]],["title/api/flink/Function/#st_pointonsurface",[377,6.012]],["text/api/flink/Function/#st_pointonsurface",[12,0.544,102,1.332,103,1.565,107,1.364,108,1.2,111,1.071,112,1.151,118,4.338,130,3.415,174,2.376,179,3.885,198,2.749,199,3.778,255,3.487,279,4.967,295,5.01,304,4.453,306,5.778,347,5.934,377,5.555,378,4.921,379,6.311,380,5.874,381,6.311,382,7.408,383,6.311]],["title/api/flink/Function/#st_reverse",[384,5.869]],["text/api/flink/Function/#st_reverse",[12,0.614,102,1.459,103,1.714,107,1.878,108,1.314,111,1.174,112,1.261,116,3.453,118,3.112,130,3.741,133,3.333,216,2.657,255,2.502,295,5.31,384,7.466,385,6.085,386,4.086,387,6.913,388,10.871]],["title/api/flink/Function/#st_setsrid",[240,5.624]],["text/api/flink/Function/#st_setsrid",[12,0.62,102,1.631,107,1.671,108,1.469,110,4.428,111,1.312,112,1.409,119,3.991,216,2.97,218,3.645,229,7.82,240,7.661,389,3.428,390,1.911,391,7.193,392,3.855,393,7.193,394,4.898,395,7.728]],["title/api/flink/Function/#st_srid",[396,6.012]],["text/api/flink/Function/#st_srid",[12,0.603,102,1.669,103,1.961,107,1.709,108,1.503,110,4.53,111,1.342,112,1.442,119,4.046,216,3.039,218,3.729,229,6.645,390,1.955,391,7.359,392,3.944,393,7.359,396,8.303]],["title/api/flink/Function/#st_transform",[397,4.503]],["text/api/flink/Function/#st_transform",[7,1.155,12,0.646,34,1.35,35,2.033,85,4.074,91,3.171,92,2.792,97,1.649,102,1.195,108,1.076,111,1.295,112,1.391,119,3.96,126,3.469,138,3.085,180,3.431,181,3.622,216,2.176,218,3.598,296,4.759,303,2.213,345,3.402,370,2.91,386,3.347,390,1.4,392,3.805,397,6.353,398,3.064,399,5.27,400,5.27,401,3.522,402,5.27,403,5.662,404,4.046,405,4.046,406,4.759,407,4.759,408,4.473,409,3.46,410,2.158,411,5.27,412,4.046,413,5.27,414,3.772,415,4.573,416,5.27,417,5.27,418,5.27,419,4.491,420,4.834,421,5.195,422,2.27,423,2.714,424,4.277,425,3.695,426,4.415,427,4.277]],["title/api/flink/Function/#st_x",[428,5.624]],["text/api/flink/Function/#st_x",[12,0.632,102,1.613,103,1.895,108,1.453,110,4.379,111,1.297,112,1.394,178,4.712,179,3.508,180,4.631,199,3.422,248,3.53,250,4.592,251,4.592,254,5.959,255,2.766,303,2.987,428,6.293,429,7.114,430,6.568]],["title/api/flink/Function/#st_xmax",[431,5.869]],["text/api/flink/Function/#st_xmax",[12,0.608,102,1.544,103,1.815,107,1.946,108,1.391,111,1.242,112,1.334,116,2.909,118,3.294,130,3.96,174,3.389,180,4.434,198,2.944,199,2.52,216,2.812,255,2.648,279,4.434,295,5.501,303,2.86,431,7.734,432,7.041,433,7.317,434,7.057,435,5.528]],["title/api/flink/Function/#st_xmin",[436,6.357]],["text/api/flink/Function/#st_xmin",[12,0.608,102,1.544,103,1.815,107,1.946,108,1.391,111,1.242,112,1.334,116,2.909,118,3.294,130,3.96,174,2.755,180,4.434,198,3.071,199,2.52,211,5.101,216,2.812,255,2.648,279,4.434,295,5.501,303,2.86,434,7.057,435,5.528,436,8.377,437,7.317]],["title/api/flink/Function/#st_y",[438,5.624]],["text/api/flink/Function/#st_y",[12,0.632,102,1.613,103,1.895,108,1.453,110,4.379,111,1.297,112,1.394,178,4.712,179,3.508,181,4.89,199,3.422,248,3.53,250,4.592,251,4.592,254,5.959,255,2.766,303,2.987,438,6.293,439,7.114,440,7.114]],["title/api/flink/Function/#st_ymax",[441,5.869]],["text/api/flink/Function/#st_ymax",[7,1.102,12,0.607,34,1.288,102,1.536,103,1.805,108,1.384,111,1.236,112,1.327,130,3.939,155,3.741,174,3.378,181,4.657,198,3.328,199,3.349,211,5.074,216,2.797,255,2.634,303,2.844,304,5.136,441,7.709]],["title/api/flink/Function/#st_ymin",[442,5.869]],["text/api/flink/Function/#st_ymin",[7,1.102,12,0.607,34,1.288,102,1.536,103,1.805,108,1.384,111,1.236,112,1.327,130,3.939,155,3.741,174,2.741,181,4.657,198,3.328,199,3.496,211,5.074,216,2.797,255,2.634,303,2.844,304,5.136,442,6.255,443,7.279]],["title/api/flink/Function/#st_z",[444,6.012]],["text/api/flink/Function/#st_z",[12,0.64,102,1.587,103,1.864,108,1.429,110,4.307,111,1.276,112,1.371,178,4.635,179,3.473,199,3.535,248,3.472,250,4.517,251,4.517,254,5.862,255,2.72,303,2.938,434,5.442,444,6.617,445,6.318,446,7.517,447,7.517]],["title/api/flink/Overview/",[448,7.586]],["text/api/flink/Overview/",[2,1.837,6,2.205,10,3.672,12,0.451,34,1.514,35,2.709,84,1.747,89,2.04,100,4.694,101,3.837,102,1.176,103,2.376,104,4.146,105,3.191,106,3.168,107,2.072,111,1.557,118,2.508,121,3.191,123,1.883,125,3.506,135,3.014,156,2.955,158,3.319,197,3.293,213,2.627,215,4.837,228,2.846,247,2.378,248,4.563,287,3.497,288,4.208,303,2.177,343,3.051,364,3.099,370,2.863,390,1.377,422,3.025,449,3.216,450,4.208,451,4.208,452,4.208,453,4.903,454,5.36,455,5.57,456,3.191,457,1.61,458,4.923,459,4.817,460,3.635,461,3.599,462,4.586,463,5.184,464,3.241,465,3.099,466,2.828,467,5.034]],["title/api/flink/Overview/#introduction",[102,1.442]],["text/api/flink/Overview/#introduction",[2,1.847,6,2.223,10,3.702,12,0.336,34,1.521,35,2.724,84,1.761,89,2.056,100,4.72,101,3.868,103,2.383,104,4.18,105,3.217,106,3.193,107,2.078,111,1.562,118,2.528,121,3.217,123,1.899,125,3.521,135,3.039,156,2.979,158,3.346,197,3.319,213,2.649,215,4.85,228,2.869,247,2.397,248,4.574,287,3.526,288,4.242,303,2.194,343,3.068,364,3.124,370,2.886,390,1.388,422,3.041,449,3.242,450,4.242,451,4.242,452,4.242,453,4.943,454,5.403,455,5.615,456,3.217,457,1.624,458,4.95,459,4.827,460,3.664,461,3.628,462,4.624,463,5.227,464,3.267,465,3.124,466,2.851,467,5.075]],["title/api/flink/Predicate/",[461,4.413]],["text/api/flink/Predicate/",[7,0.588,12,0.673,34,1.476,98,1.629,102,1.643,103,1.93,107,1.514,108,1.48,111,1.416,112,1.521,113,5.219,114,4.769,130,3.157,138,3.179,158,4.638,174,3.849,188,4.244,197,4.139,198,2.35,199,3.747,200,4.173,201,3.982,202,4.769,215,3.928,216,2.691,217,4.318,255,2.111,267,2.397,303,1.519,304,2.742,343,3.373,356,2.316,386,2.297,422,1.558,465,2.163,466,1.974,468,5.013,469,3.887,470,3.887,471,4.28,472,6.164,473,3.887,474,7.003]],["title/api/flink/Predicate/#st_contains",[197,4.037]],["text/api/flink/Predicate/#st_contains",[12,0.666,34,1.262,102,1.504,103,1.768,108,1.355,111,1.21,112,1.3,113,5.277,114,4.854,138,3.884,188,4.319,197,5.235,198,2.153,199,3.47,200,4.248,201,4.054,202,4.854,215,3.598,216,2.739,217,4.395,343,2.883,465,3.966,466,3.619]],["title/api/flink/Predicate/#st_disjoint",[468,5.869]],["text/api/flink/Predicate/#st_disjoint",[7,1.079,12,0.666,34,1.262,102,1.504,103,1.768,108,1.355,111,1.21,112,1.3,113,5.277,114,4.854,130,3.858,188,4.319,198,2.153,199,3.47,200,4.248,201,4.054,202,4.854,215,3.598,216,2.739,217,4.395,343,2.883,468,6.125,469,7.128,470,7.128]],["title/api/flink/Predicate/#st_intersects",[471,4.175]],["text/api/flink/Predicate/#st_intersects",[12,0.667,34,1.268,102,1.512,103,1.777,108,1.362,111,1.216,112,1.307,113,5.294,114,4.88,138,3.904,188,4.342,198,2.164,199,3.477,200,4.27,201,4.075,202,4.88,215,3.617,216,2.754,217,4.418,343,2.898,356,4.27,471,5.43]],["title/api/flink/Predicate/#st_orderingequals",[472,6.012]],["text/api/flink/Predicate/#st_orderingequals",[12,0.64,34,1.413,98,2.54,102,1.279,103,1.503,107,1.93,108,1.152,111,1.355,112,1.456,130,3.28,158,5.653,174,4.127,198,1.83,199,3.791,215,3.059,255,2.889,267,3.737,303,2.368,304,4.276,343,3.228,386,3.583,422,2.43,472,7.027,473,6.061,474,8.925]],["title/api/sql/AggregateFunction/",[35,1.977,100,3.426]],["text/api/sql/AggregateFunction/",[7,1.372,12,0.652,34,1.604,101,6.243,102,1.913,103,2.247,104,4.655,105,3.583,106,3.556,107,1.352,108,1.723,109,7.462,111,1.538,112,1.653,113,4.856,114,4.259,115,7.188,116,3.817,117,5.505,119,4.119,120,5.264,356,3.727,475,3.833,476,7.617]],["title/api/sql/AggregateFunction/#st_envelope_aggr",[101,4.705]],["text/api/sql/AggregateFunction/#st_envelope_aggr",[7,1.197,12,0.603,34,1.399,101,6.497,102,1.669,103,1.961,104,5.885,105,4.53,106,4.496,107,1.709,108,1.503,109,6.51,111,1.342,112,1.442,113,5.621,114,5.384,475,3.344]],["title/api/sql/AggregateFunction/#st_intersection_aggr",[476,5.741]],["text/api/sql/AggregateFunction/#st_intersection_aggr",[7,1.204,12,0.604,34,1.408,102,1.678,103,1.972,108,1.512,109,6.547,111,1.35,112,1.45,116,3.762,119,4.06,120,5.137,356,4.739,475,3.363,476,7.955]],["title/api/sql/AggregateFunction/#st_union_aggr",[115,5.418]],["text/api/sql/AggregateFunction/#st_union_aggr",[7,1.204,12,0.604,34,1.408,102,1.678,103,1.972,108,1.512,109,6.547,111,1.35,112,1.45,115,7.507,116,3.762,117,7,119,4.06,120,5.137,475,3.363]],["title/api/sql/Constructor/",[121,3.913]],["text/api/sql/Constructor/",[7,1.171,12,0.676,34,1.505,56,1.119,84,0.554,89,1.78,91,0.649,92,1.513,97,0.663,102,1.761,107,1.764,108,1.617,110,1.758,111,1.444,112,1.625,113,1.829,116,1.617,119,1.316,120,3.141,122,2.637,123,1.038,124,1.555,125,1.668,126,1.851,127,2.702,128,1.766,129,1.262,130,0.956,131,1.766,132,1.745,133,1.479,134,2.355,135,4.417,136,1.72,137,1.644,139,5.447,140,4.275,141,3.788,142,1.555,143,1.766,144,1.766,145,1.766,146,1.766,147,1.766,148,1.766,149,3.788,150,1.555,151,1.766,152,1.766,153,1.766,154,1.766,155,2.092,156,2.159,157,1.518,158,3.598,159,3.497,160,2.702,161,3.351,162,3.52,163,1.13,164,1.644,165,1.766,167,4.178,168,0.861,169,2.921,170,4.109,171,3.228,172,3.228,173,1.597,174,0.665,175,0.807,176,1.471,177,4.178,178,2.998,179,1.165,180,1.07,181,1.13,182,2.857,183,2.857,184,3.389,185,3.837,186,4.178,187,1.644,188,2.466,189,1.555,190,1.555,191,1.555,192,1.555,193,1.644,194,1.644,195,1.644,196,1.644,197,1.044,198,0.533,199,1.674,200,1.053,201,1.005,202,1.203,203,4.178,204,1.07,205,1.231,206,3.582,207,2.702,208,2.702,218,0.833,251,1.061,281,2.003,321,0.74,389,0.784,392,1.531,410,0.673,422,0.708,449,1.772,459,1.463,466,0.897,475,3.166,477,1.555,478,1.786,479,0.671,480,1.72,481,3.085,482,1.668,483,0.727,484,1.203,485,1.355,486,1.334,487,2.61,488,1.217,489,1.644,490,4.861,491,0.931,492,1.377,493,1.963,494,2.836,495,1.766,496,2.222,497,1.401,498,2.045,499,2.187,500,1.279,501,1.949,502,1.355,503,1.485,504,1.427,505,1.377,506,1.644,507,1.053,508,0.962,509,3.788,510,1.231,511,1.644,512,1.644,513,1.644,514,1.644,515,1.644,516,1.672,517,0.908,518,0.99,519,0.662,520,1.053,521,1.644,522,1.485,523,1.644,524,1.644,525,1.377,526,1.296,527,3.214,528,1.355,529,0.997,530,1.644,531,1.644,532,1.644,533,1.427,534,4.519,535,4.519,536,5.399,537,4.069,538,1.02,539,1.427,540,1.19,541,0.937,542,1.766,543,1.766,544,1.07,545,0.931,546,3.408,547,1.962,548,3.069,549,3.069,550,1.962,551,2.355,552,2.318,553,2.393]],["title/api/sql/Constructor/#read-esri-shapefile",[89,1.689,477,4.061,478,2.684]],["text/api/sql/Constructor/#read-esri-shapefile",[12,0.673,34,0.84,84,1.488,89,1.737,91,1.744,92,3.328,97,1.459,102,1.001,107,1.459,111,1.146,123,1.604,135,2.568,158,2.827,251,2.851,389,2.104,392,3.367,410,1.808,449,2.739,459,3.218,466,2.409,475,2.007,478,2.76,479,1.801,480,2.659,481,4.402,482,2.936,483,1.953,484,3.231,485,3.64,486,3.584,487,3.725,488,3.268,489,4.416,490,8.557,491,2.501,492,3.699,493,3.035,494,5.476,495,4.744,496,3.435,497,3.763,498,3.161,499,2.55,500,3.435,501,3.431,502,3.64,503,3.988,504,3.832,505,3.699,506,4.416,507,2.827,508,2.585,509,7.312,510,3.307,511,4.416,512,4.416,513,4.416,514,4.416,515,4.416,516,2.585,517,2.439,518,2.659,519,1.779,520,2.827,521,4.416,522,3.988,523,4.416,524,4.416,525,3.699,526,3.482,527,7.068,528,3.64,529,2.678,530,4.416,531,4.416,532,4.416]],["title/api/sql/Constructor/#st_geomfromgeohash",[122,5.869]],["text/api/sql/Constructor/#st_geomfromgeohash",[7,1.052,12,0.658,34,1.23,102,1.466,107,1.502,108,1.321,111,1.179,112,1.267,116,2.762,122,5.971,123,2.349,124,6.116,125,3.572,126,3.16,127,7.672,128,6.948,129,4.965,131,6.948,132,3.951,133,4.201,321,2.912,533,5.612,534,10.576,535,10.576,536,11.09]],["title/api/sql/Constructor/#st_geomfromgeojson",[134,5.24]],["text/api/sql/Constructor/#st_geomfromgeojson",[7,0.905,12,0.677,34,1.401,89,2.898,102,1.262,107,1.293,108,1.505,111,1.015,112,1.091,119,3.394,126,3.599,134,4.589,135,3.237,136,4.435,137,5.568,139,6.277,170,3.791,218,2.821,422,2.398,449,3.453,475,2.53,480,3.352,481,4.435,487,3.753,493,3.827,498,3.985,499,4.254,516,3.259,537,8.868,538,3.453,539,4.831,540,4.029,541,3.173,542,5.982,543,5.982,544,3.625,545,3.153]],["title/api/sql/Constructor/#st_geomfromgml",[141,6.357]],["text/api/sql/Constructor/#st_geomfromgml",[12,0.566,34,1.408,102,1.678,107,2.046,108,1.512,110,4.556,111,1.35,112,1.45,135,4.303,141,8.809,142,7,143,7.952,144,7.952,145,7.952,146,7.952,147,7.952,148,7.952]],["title/api/sql/Constructor/#st_geomfromkml",[149,6.357]],["text/api/sql/Constructor/#st_geomfromkml",[12,0.57,34,1.424,102,1.698,107,2.06,108,1.53,110,4.609,111,1.366,112,1.467,135,4.354,149,8.87,150,7.082,151,8.045,152,8.045,153,8.045,154,8.045]],["title/api/sql/Constructor/#st_geomfromtext",[155,3.511]],["text/api/sql/Constructor/#st_geomfromtext",[7,1.204,12,0.566,34,1.408,102,1.678,107,2.046,108,1.512,111,1.35,112,1.45,135,4.303,155,4.865,156,4.219,157,6.833,158,4.739,159,6.833,160,7,161,6.547,475,3.363]],["title/api/sql/Constructor/#st_geomfromwkb",[162,4.945]],["text/api/sql/Constructor/#st_geomfromwkb",[7,1.177,12,0.598,34,1.376,56,4.925,102,1.64,107,1.68,108,1.478,111,1.319,112,1.417,120,5.021,125,3.185,135,4.206,139,7.405,140,5.124,162,7.245,163,4.972,164,7.234,165,7.772,475,3.287]],["title/api/sql/Constructor/#st_geomfromwkt",[158,4.07]],["text/api/sql/Constructor/#st_geomfromwkt",[7,1.157,12,0.632,34,1.353,102,1.613,107,1.998,108,1.453,111,1.297,112,1.685,120,4.938,135,4.136,139,7.331,140,5.039,156,4.055,158,5.921,159,6.568,160,6.728,161,6.293,475,3.233]],["title/api/sql/Constructor/#st_linefromtext",[167,5.869]],["text/api/sql/Constructor/#st_linefromtext",[7,1.138,12,0.629,34,1.331,102,1.587,108,1.429,111,1.276,112,1.669,130,4.068,132,4.275,135,4.068,140,4.956,156,3.988,159,6.46,167,8.476,169,4.517,173,6.794,174,2.831,175,3.436,176,4.387,546,10.162,547,8.349]],["title/api/sql/Constructor/#st_linestringfromtext",[177,5.869]],["text/api/sql/Constructor/#st_linestringfromtext",[7,1.102,12,0.659,34,1.288,102,1.536,108,1.384,111,1.236,112,1.636,135,3.939,140,4.799,168,3.548,169,4.374,170,5.685,171,5.774,172,5.774,177,8.357,206,6.407,207,6.407,208,6.407,475,3.079,548,8.971,549,8.971]],["title/api/sql/Constructor/#st_point",[178,4.211]],["text/api/sql/Constructor/#st_point",[7,1.052,12,0.658,34,1.23,102,1.466,108,1.657,111,1.179,112,1.267,135,3.76,140,4.581,178,5.872,179,2.638,180,4.21,181,4.445,182,8.112,183,8.112,184,4.843,185,6.638,281,5.687,475,2.939,496,5.03,550,7.717,551,6.686,552,6.584,553,6.796]],["title/api/sql/Constructor/#st_pointfromtext",[186,5.869]],["text/api/sql/Constructor/#st_pointfromtext",[7,1.114,12,0.656,34,1.302,102,1.553,108,1.399,111,1.249,112,1.647,135,3.981,140,4.85,161,6.057,169,4.421,170,5.722,171,5.835,172,5.835,179,2.793,184,6.294,185,6.294,186,8.396,187,6.847,475,3.112]],["title/api/sql/Constructor/#st_polygonfromenvelope",[188,4.139]],["text/api/sql/Constructor/#st_polygonfromenvelope",[7,1.057,12,0.665,34,1.236,102,1.474,108,1.328,111,1.185,112,1.274,113,5.21,116,2.776,135,3.779,184,4.868,188,5.298,189,6.147,190,6.147,191,6.147,192,6.147,193,6.5,194,6.5,195,6.5,196,6.5,197,4.128,198,2.109,199,3.445,200,4.162,201,3.971,202,4.756,475,2.954]],["title/api/sql/Constructor/#st_polygonfromtext",[203,5.869]],["text/api/sql/Constructor/#st_polygonfromtext",[7,1.085,12,0.657,34,1.268,102,1.512,108,1.362,111,1.216,112,1.62,116,2.848,120,5.74,135,3.878,139,7.047,140,4.724,169,4.305,170,5.63,171,5.683,172,5.683,203,8.298,204,4.342,205,4.994,206,7.82,207,6.307,208,6.307,475,3.031]],["title/api/sql/Function/",[35,2.453]],["text/api/sql/Function/",[2,0.096,6,0.303,7,1.15,12,0.663,28,0.209,34,1.345,35,0.275,51,0.135,56,0.485,59,0.176,69,0.564,85,0.409,91,0.641,92,0.195,97,0.311,98,0.602,102,1.752,103,2.084,105,0.227,106,0.632,107,1.999,108,1.627,110,0.439,111,1.404,112,1.566,116,2.073,117,0.348,118,1.152,119,3.341,123,0.134,124,0.979,125,0.832,126,0.506,127,0.674,129,1.245,130,1.872,132,2.893,133,2.686,136,0.222,138,1.254,142,0.348,150,0.348,155,3.351,156,0.406,157,0.34,158,1.67,163,0.49,168,2.77,169,0.46,173,0.358,174,2.966,175,4,176,0.835,178,1.074,179,2.738,180,1.23,181,1.299,198,2.993,199,3.301,200,2.694,205,0.276,209,0.979,210,0.674,211,1.001,212,0.396,213,0.678,214,1.21,215,1.162,216,2.675,217,1.252,218,2.825,219,0.915,220,0.348,221,0.955,222,0.984,223,0.99,224,1.776,225,0.955,226,1.069,227,0.396,228,0.734,229,1.935,230,0.685,231,0.712,232,0.456,233,0.674,234,0.618,235,0.643,236,0.597,237,0.955,238,0.396,239,0.179,240,1.435,241,0.882,242,1.035,243,1.035,244,1.977,245,0.63,246,0.368,247,0.169,248,1.939,249,0.368,250,1.538,251,1.047,252,0.368,253,0.368,254,1.12,255,2.056,256,0.368,257,0.63,258,0.368,259,0.368,260,0.368,262,0.955,263,0.712,264,0.853,265,0.368,266,0.279,267,0.244,268,0.368,269,1.534,270,0.955,271,0.396,272,0.794,273,0.692,274,0.396,275,1.265,278,0.396,279,3.744,281,4.404,282,0.396,283,1.337,286,0.765,287,0.698,288,0.299,289,0.955,290,0.63,291,0.368,292,0.84,295,1.713,296,0.934,297,0.348,298,0.396,299,0.396,300,0.955,301,0.348,302,0.236,303,1.271,304,1.806,305,0.765,306,3.997,307,0.396,308,0.396,309,0.396,310,0.765,311,0.396,312,0.396,313,0.396,314,0.396,315,0.396,316,0.643,317,0.396,318,0.432,319,1.07,320,1.677,321,1.829,322,0.396,323,0.63,324,0.772,325,0.915,326,0.915,327,0.368,328,0.368,329,0.368,330,0.692,331,0.368,332,1.16,333,0.368,334,2.581,335,1.161,336,1.667,337,0.63,338,0.658,339,0.266,340,0.187,341,0.368,342,0.867,343,0.705,344,0.389,345,1.047,346,0.368,347,3.04,348,0.955,349,0.606,350,1.12,351,0.63,352,1.085,353,0.368,354,0.309,355,0.283,356,0.856,357,0.882,358,0.955,359,0.368,360,0.882,361,1.254,362,0.915,363,1.235,364,0.619,365,0.63,366,0.368,367,0.658,368,0.396,369,0.396,370,0.571,371,0.276,372,0.368,373,1.069,377,0.348,378,0.309,379,0.396,380,0.368,381,0.396,382,0.358,383,0.396,384,0.955,385,0.348,386,0.452,387,0.396,389,0.34,390,0.275,391,0.712,392,0.717,393,0.712,394,0.91,395,0.396,396,0.979,397,1.339,398,0.214,399,0.368,400,0.368,401,0.476,402,0.368,403,0.396,404,0.283,405,0.283,406,0.333,407,0.333,408,0.652,409,0.242,410,0.151,411,0.368,412,0.283,413,0.368,414,0.264,415,0.618,416,0.368,417,0.368,418,0.368,419,0.607,420,0.485,421,0.521,422,0.307,423,0.19,424,0.299,425,0.258,426,0.309,427,0.299,428,0.63,429,0.368,430,0.34,431,0.955,432,0.736,433,0.396,434,1.667,435,0.578,436,1.035,437,0.396,438,0.63,439,0.368,440,0.368,441,0.955,442,0.658,443,0.396,444,0.674,445,0.333,446,0.396,447,0.396,464,0.23,466,0.565,471,0.679,475,2.791,483,0.315,518,0.222,519,0.417,533,1.407,545,0.757,552,1.085,554,0.979,555,0.269,556,0.315,557,1.235,558,0.248,559,0.765,560,0.765,561,1.265,562,3.524,563,0.439,564,1.035,565,1.035,566,0.85,567,1.437,568,0.85,569,0.85,570,1.035,571,0.348,572,0.802,573,0.315,574,0.439,575,0.757,576,0.439,577,0.439,578,0.802,579,0.85,580,1.596,581,1.12,582,0.85,583,0.85,584,1.677,585,0.439,586,0.705,587,0.736,588,0.439,589,0.979,590,0.439,591,0.85,592,0.439,593,0.85,594,0.85,595,0.439,596,0.934,597,0.396,598,0.396,599,0.396,600,1.07,601,0.54,602,0.674,603,0.396,604,0.597,605,0.396,606,0.34,607,0.934,608,0.396,609,3.586,610,2.927,611,0.674,612,0.568,613,0.29,614,0.396,615,0.674,616,0.396,617,1.534,618,0.712,619,2.579,620,0.712,621,0.63,622,0.712,623,0.934,624,0.396,625,0.396,626,0.934,627,0.396,628,0.396,629,0.396,630,1.07,631,1.235,632,0.333,633,0.386,634,1.208,635,0.816,636,1.005,637,0.527,638,0.607,639,0.227,640,1.102,641,0.802,642,0.736,643,0.955,644,0.934,645,0.692,646,0.439,647,0.439,648,0.979,649,0.396,650,0.29,651,0.93,652,1.16,653,0.396,654,0.283,655,1.07,656,0.368,657,1.235,658,0.519,659,0.439,660,0.32,661,0.439,662,0.439,663,0.439,664,0.439,665,0.439,666,0.439,667,0.439,668,0.439,669,0.736,670,0.401,671,0.85,672,0.439,673,0.652,674,0.439,675,1.464,676,0.439,677,1.61,678,0.34,679,0.853,680,0.439,681,0.439,682,0.396,683,0.85,684,0.439,685,0.439,686,0.202,687,0.439,688,0.439,689,0.348,690,0.34,691,0.29,692,0.368,693,0.299,694,0.286,695,0.348,696,0.736,697,0.802,698,0.736,699,0.439,700,0.439,701,0.736,702,0.381,703,0.29,704,0.396,705,0.439,706,1.07,707,0.396,708,0.439,709,0.439,710,0.439,711,0.439,712,0.85,713,0.85,714,0.439,715,0.439,716,0.934,717,0.29,718,1.12,719,0.396,720,0.396,721,0.674,722,0.534,723,0.765,724,0.934,725,0.32,726,0.29,727,0.712,728,0.396,729,0.396,730,0.396,731,0.674,732,0.396,733,0.396,734,1.337,735,0.396,736,0.439,737,0.439,738,0.802,739,0.85,740,1.742,741,2.313,742,3.58,743,0.439,744,0.439,745,1.235,746,0.85,747,0.439,748,2.842,749,0.85,750,2.557,751,0.439,752,2.842,753,3.368,754,1.235,755,1.235,756,0.439,757,0.85,758,0.439,759,3.874,760,3.22,761,1.164,762,1.164,763,1.164,764,1.164,765,1.164,766,1.005,767,0.299,768,0.232,769,0.439,770,0.534,771,0.476,772,0.264,773,1.164,774,0.439,775,0.299,776,1.07]],["title/api/sql/Function/#st_3ddistance",[209,6.012]],["text/api/sql/Function/#st_3ddistance",[7,1.144,12,0.63,34,1.338,102,1.595,103,1.874,108,1.437,111,1.283,112,1.378,119,4.241,138,4.119,175,3.455,209,8.081,210,6.654,211,5.269,212,7.559,213,3.565,214,4.505,215,3.815,216,2.905,217,4.661,218,4.33]],["title/api/sql/Function/#st_addpoint",[554,6.012]],["text/api/sql/Function/#st_addpoint",[7,0.886,12,0.641,28,3.086,34,1.036,102,1.236,103,1.452,107,2.023,108,1.483,111,0.994,112,1.423,155,4.81,168,2.854,176,2.807,179,3.552,198,3.279,199,3.58,248,2.704,255,2.119,345,3.518,347,6.774,394,3.71,475,2.476,554,6.867,555,3.987,556,2.41,557,6.704,558,3.676,559,7.801,560,7.801,561,8.237,562,6.301]],["title/api/sql/Function/#st_area",[219,5.624]],["text/api/sql/Function/#st_area",[7,1.218,12,0.607,34,1.424,102,1.698,103,1.995,108,1.53,111,1.366,112,1.467,119,4.088,216,3.092,218,3.795,219,7.847,220,7.082,475,3.403]],["title/api/sql/Function/#st_asbinary",[221,5.869]],["text/api/sql/Function/#st_asbinary",[7,1.19,12,0.601,34,1.391,56,4.982,102,1.659,103,1.949,107,1.699,108,1.495,111,1.334,112,1.434,119,4.032,216,3.021,218,3.708,221,8.078,222,4.437,223,5.415,224,4.982,533,6.349]],["title/api/sql/Function/#st_asewkb",[225,5.869]],["text/api/sql/Function/#st_asewkb",[6,2.75,7,1.052,12,0.569,34,1.23,56,4.403,69,2.727,102,1.466,103,1.723,107,2.059,108,1.811,111,1.179,112,1.267,119,3.738,163,5.576,216,2.67,218,3.277,222,3.922,223,4.786,224,4.403,225,7.489,226,6.487,227,6.948,228,3.55,229,7.325,230,4.284,231,6.467,232,4.141,233,6.116,234,5.612,235,5.84,236,5.418,240,5.721,533,5.612,563,7.717]],["title/api/sql/Function/#st_asewkt",[237,5.869]],["text/api/sql/Function/#st_asewkt",[6,2.75,7,1.052,12,0.569,34,1.23,69,2.727,102,1.466,103,1.723,107,2.059,108,1.811,111,1.179,112,1.267,119,3.738,130,3.76,156,4.624,169,4.175,216,2.67,218,3.277,222,3.922,223,4.786,224,4.403,226,6.487,228,3.55,229,7.325,230,4.284,231,6.467,232,4.141,233,6.116,234,5.612,235,5.84,236,5.418,237,7.489,238,6.948,239,3.144,240,5.721]],["title/api/sql/Function/#st_asgeojson",[241,5.418]],["text/api/sql/Function/#st_asgeojson",[7,1.197,12,0.603,34,1.399,102,1.669,103,1.961,107,1.709,108,1.503,111,1.342,112,1.442,119,4.046,125,3.24,136,4.431,216,3.039,218,3.729,224,5.01,241,7.481,475,3.344]],["title/api/sql/Function/#st_asgml",[242,6.357]],["text/api/sql/Function/#st_asgml",[7,1.197,12,0.603,34,1.399,102,1.669,103,1.961,107,1.709,108,1.503,110,4.53,111,1.342,112,1.442,119,4.046,125,3.24,142,6.96,216,3.039,218,3.729,224,5.01,242,8.779]],["title/api/sql/Function/#st_askml",[243,6.357]],["text/api/sql/Function/#st_askml",[7,1.197,12,0.603,34,1.399,102,1.669,103,1.961,107,1.709,108,1.503,110,4.53,111,1.342,112,1.442,119,4.046,125,3.24,150,6.96,216,3.039,218,3.729,224,5.01,243,8.779]],["title/api/sql/Function/#st_astext",[244,4.819]],["text/api/sql/Function/#st_astext",[7,1.183,12,0.6,34,1.384,102,1.65,103,1.938,107,1.69,108,1.486,111,1.327,112,1.425,119,4.018,125,3.203,169,4.697,216,3.004,218,3.687,222,4.412,223,5.384,224,4.953,244,6.61,475,3.306]],["title/api/sql/Function/#st_azimuth",[245,5.624]],["text/api/sql/Function/#st_azimuth",[7,1.063,12,0.659,34,1.242,102,1.481,103,1.741,108,1.334,111,1.192,112,1.28,178,5.408,179,3.632,199,3.676,245,5.779,246,6.533,247,2.997,248,3.242,249,6.533,250,4.218,251,4.218,252,6.533,253,6.533,254,5.473,255,2.54,256,6.533,475,2.969]],["title/api/sql/Function/#st_boundary",[257,5.624]],["text/api/sql/Function/#st_boundary",[7,1.102,12,0.582,34,1.288,102,1.536,103,1.805,106,4.139,107,1.939,108,1.384,111,1.236,112,1.327,155,3.741,168,3.548,198,3.328,199,3.349,255,2.634,257,5.993,258,6.775,259,6.775,260,6.775,475,3.079,564,6.775,565,6.775]],["title/api/sql/Function/#st_buffer",[262,5.869]],["text/api/sql/Function/#st_buffer",[7,1.138,12,0.614,34,1.331,102,1.587,103,1.864,108,1.429,111,1.276,112,1.371,119,3.925,179,2.854,198,2.27,213,4.316,216,2.889,218,3.546,262,7.863,263,8.516,264,5.767,265,6.997,266,5.304,267,4.635,268,6.997,269,5.008,475,3.18]],["title/api/sql/Function/#st_buildarea",[270,5.869]],["text/api/sql/Function/#st_buildarea",[12,0.654,102,1.351,103,1.587,107,1.788,108,1.217,111,1.086,112,1.167,118,2.881,130,3.463,133,3.987,155,3.289,174,3.868,199,3.336,216,2.459,270,7.107,271,6.399,272,4.572,273,5.783,274,6.399,278,6.399,281,6.321,283,7.698,286,8.27,304,4.515,321,2.682,566,9.185,567,9.686,568,9.185,569,9.185]],["title/api/sql/Function/#st_centroid",[570,6.357]],["text/api/sql/Function/#st_centroid",[7,1.211,12,0.606,34,1.416,102,1.688,103,1.983,108,1.521,111,1.358,112,1.459,119,4.074,179,3.036,216,3.074,218,3.773,475,3.383,570,8.84,571,7.04]],["title/api/sql/Function/#st_collect",[275,6.012]],["text/api/sql/Function/#st_collect",[12,0.676,102,1.257,103,1.477,107,1.913,108,1.132,111,1.34,112,1.439,133,4.542,138,3.245,155,4.842,275,6.946,319,7.593,320,9.065,321,3.307,324,3.202,572,6.237,573,2.452,574,6.615,575,5.374,576,6.615,577,6.615,578,6.237,579,8.764,580,10.463,581,6.153,582,8.764,583,8.764]],["title/api/sql/Function/#st_collectionextract",[584,6.572]],["text/api/sql/Function/#st_collectionextract",[12,0.662,102,1.19,103,1.887,107,1.861,108,1.446,111,0.957,112,1.028,116,2.241,130,3.051,133,4.15,155,2.898,168,2.749,174,2.123,175,2.577,179,2.14,198,2.297,199,3.635,216,2.924,248,2.604,279,4.61,282,5.638,304,3.979,306,5.577,321,2.363,361,3.072,363,6.537,408,3.306,519,2.853,584,8.868,585,6.262,586,3.573,587,5.425,588,6.262,589,4.963,590,6.262,591,8.449,592,6.262,593,8.449,594,8.449,595,6.262]],["title/api/sql/Function/#st_convexhull",[596,5.741]],["text/api/sql/Function/#st_convexhull",[7,1.204,12,0.604,34,1.408,102,1.678,103,1.972,108,1.512,111,1.35,112,1.45,119,4.06,216,3.056,218,3.751,475,3.363,596,7.955,597,7.952,598,7.952,599,7.952]],["title/api/sql/Function/#st_difference",[600,6.572]],["text/api/sql/Function/#st_difference",[12,0.614,102,1.351,103,2.051,107,1.981,108,1.217,111,1.086,112,1.167,116,3.642,132,5.945,138,3.487,158,4.928,175,5.095,199,3.538,214,3.813,215,4.174,216,2.459,217,3.945,321,2.682,356,3.813,545,3.373,600,7.958,601,4.515]],["title/api/sql/Function/#st_distance",[287,4.288]],["text/api/sql/Function/#st_distance",[7,1.163,12,0.633,34,1.36,102,1.622,103,1.906,108,1.461,111,1.305,112,1.402,119,4.272,213,3.625,214,4.58,215,3.879,216,2.954,217,4.739,218,4.374,287,5.822,288,5.806,475,3.251]],["title/api/sql/Function/#st_dump",[602,6.012]],["text/api/sql/Function/#st_dump",[7,1.001,12,0.557,34,1.171,59,2.948,102,1.396,103,2.095,107,2.191,108,1.258,111,1.123,112,1.206,116,2.629,155,3.4,168,3.224,179,3.847,255,2.394,279,5.943,281,6.4,363,5.684,419,5.246,475,2.798,581,5.157,586,5.353,602,5.822,603,6.614,604,5.157,605,6.614,606,5.684,607,5.559,608,6.614,609,7.779,610,6.836]],["title/api/sql/Function/#st_dumppoints",[611,6.012]],["text/api/sql/Function/#st_dumppoints",[7,1.068,12,0.573,34,1.249,102,1.489,103,1.75,107,1.902,108,1.341,111,1.198,112,1.287,155,3.626,168,3.439,179,3.999,198,3.227,199,3.752,255,2.553,475,2.984,611,6.21,612,3.604,613,5.178,614,7.055]],["title/api/sql/Function/#st_endpoint",[615,6.012]],["text/api/sql/Function/#st_endpoint",[7,1.144,12,0.591,34,1.338,102,1.595,103,1.874,107,1.634,108,1.437,111,1.283,112,1.378,155,3.885,168,3.685,179,2.869,248,3.491,255,2.735,373,5.626,475,3.197,615,6.654,616,7.559,617,6.654,618,7.035,619,5.996,620,7.035,621,6.224,622,7.035,623,7.716,624,7.559]],["title/api/sql/Function/#st_envelope",[289,5.869]],["text/api/sql/Function/#st_envelope",[7,1.211,12,0.606,34,1.416,102,1.688,103,1.983,105,4.582,106,4.548,108,1.521,111,1.358,112,1.459,119,4.074,216,3.074,218,3.773,289,8.161,475,3.383]],["title/api/sql/Function/#st_exteriorring",[290,5.624]],["text/api/sql/Function/#st_exteriorring",[7,1.011,12,0.559,34,1.182,102,1.41,103,2.108,107,2.021,108,1.27,111,1.134,112,1.218,116,3.379,125,2.737,155,3.433,168,3.256,174,3.201,176,3.202,198,3.362,199,3.636,250,4.013,255,2.417,264,5.124,290,5.499,291,6.216,292,5.045,304,4.712,475,2.825,625,6.678]],["title/api/sql/Function/#st_flipcoordinates",[296,5.741]],["text/api/sql/Function/#st_flipcoordinates",[7,1.132,12,0.588,34,1.323,69,2.934,102,1.578,103,1.854,107,1.972,108,1.421,111,1.269,112,1.363,118,3.366,174,3.434,179,3.462,180,4.531,181,4.783,198,2.754,248,3.453,255,2.706,295,5.574,296,6.284,297,6.581,298,7.476,299,7.476,475,3.162]],["title/api/sql/Function/#st_force_2d",[300,5.869]],["text/api/sql/Function/#st_force_2d",[12,0.657,102,1.351,107,1.383,108,1.217,111,1.086,112,1.167,130,3.463,133,3.987,155,3.289,174,3.114,175,2.925,180,3.878,181,4.094,198,2.925,199,3.156,210,5.633,216,2.459,224,4.055,244,4.515,255,2.316,283,7.698,300,7.107,301,5.633,302,3.813,303,2.501,304,5.835,305,8.27,306,3.463,307,6.399,308,6.399,309,6.399,310,8.27,311,6.399,312,6.399,313,6.399,314,6.399,315,6.399,321,2.682]],["title/api/sql/Function/#st_geohash",[316,5.741]],["text/api/sql/Function/#st_geohash",[12,0.665,102,1.536,103,1.805,107,1.939,108,1.384,111,1.236,112,1.327,124,8.56,127,7.897,129,5.201,155,3.741,248,3.362,306,3.939,316,6.118,317,7.279,318,2.191,319,7.004,320,7.004,321,3.051,322,7.279,533,5.879]],["title/api/sql/Function/#st_geometryn",[323,5.624]],["text/api/sql/Function/#st_geometryn",[7,1.057,12,0.598,34,1.236,102,1.474,103,2.168,107,2.063,108,1.328,111,1.185,112,1.274,129,4.99,132,4.972,155,3.589,174,2.63,175,3.996,179,2.651,198,2.109,199,2.405,250,4.196,251,4.196,255,2.527,306,3.779,323,5.75,324,3.754,325,5.75,326,5.75,327,6.5,328,6.5,329,6.5,330,6.312,331,6.5,332,5.64,333,6.5,334,4.927,335,4.653,336,5.056,475,2.954]],["title/api/sql/Function/#st_geometrytype",[626,5.741]],["text/api/sql/Function/#st_geometrytype",[7,1.177,12,0.598,34,1.376,102,1.64,103,1.927,107,1.68,108,1.478,111,1.319,112,1.417,119,4.004,125,3.185,216,2.987,218,3.666,475,3.287,519,2.915,604,6.06,626,7.847,627,7.772,628,7.772,629,7.772]],["title/api/sql/Function/#st_interiorringn",[337,5.624]],["text/api/sql/Function/#st_interiorringn",[7,0.875,12,0.557,34,1.023,102,1.22,103,1.918,107,1.885,108,1.099,111,0.981,112,1.054,116,3.075,129,4.131,132,5.679,155,2.971,168,3.771,174,3.993,175,4.798,198,3.305,199,3.44,248,2.67,250,3.474,255,2.092,292,4.367,304,4.079,306,5.038,325,4.76,332,6.248,337,4.76,338,4.968,339,3.893,340,2.727,341,5.38,475,2.445]],["title/api/sql/Function/#st_intersection",[471,4.175]],["text/api/sql/Function/#st_intersection",[7,1.17,12,0.634,34,1.368,102,1.631,103,1.917,107,1.671,108,1.469,111,1.312,112,1.409,119,4.282,215,3.901,216,2.97,217,4.765,218,4.389,356,4.606,471,5.687,475,3.269]],["title/api/sql/Function/#st_isclosed",[342,5.326]],["text/api/sql/Function/#st_isclosed",[7,1.144,12,0.591,34,1.338,98,3.168,102,1.595,103,1.874,107,1.634,108,1.437,111,1.283,112,1.378,155,3.885,168,3.685,179,2.869,198,2.986,199,3.162,255,2.735,342,5.894,343,3.057,344,3.838,345,4.542,346,7.035,347,5.472,422,3.03,475,3.197]],["title/api/sql/Function/#st_isempty",[348,5.869]],["text/api/sql/Function/#st_isempty",[7,1.204,12,0.604,34,1.408,102,1.678,107,2.046,108,1.512,111,1.35,112,1.45,119,4.06,130,4.303,216,3.056,218,3.751,348,8.133,349,4.333,350,6.2]],["title/api/sql/Function/#st_isring",[351,5.624]],["text/api/sql/Function/#st_isring",[7,1.132,12,0.588,34,1.323,102,1.578,103,1.854,107,1.616,108,1.421,111,1.269,112,1.363,155,3.843,168,3.645,198,3.094,199,3.618,255,2.706,342,5.83,343,3.688,347,5.413,351,6.156,352,5.648,353,6.959,475,3.162]],["title/api/sql/Function/#st_issimple",[352,5.16]],["text/api/sql/Function/#st_issimple",[7,1.19,12,0.601,34,1.391,102,1.659,106,4.47,108,1.495,111,1.334,112,1.434,119,4.032,179,2.984,216,3.021,218,3.708,349,4.283,352,7.101,354,6.13,355,5.617,356,4.685,475,3.325]],["title/api/sql/Function/#st_isvalid",[357,5.418]],["text/api/sql/Function/#st_isvalid",[7,1.204,12,0.604,34,1.408,102,1.678,107,1.719,108,1.512,111,1.35,112,1.45,119,4.06,216,3.056,218,3.751,222,4.489,272,5.682,349,4.333,357,7.507,475,3.363]],["title/api/sql/Function/#st_length",[358,5.869]],["text/api/sql/Function/#st_length",[7,1.218,12,0.607,34,1.424,102,1.698,103,1.995,108,1.53,111,1.366,112,1.467,119,4.088,216,3.092,218,3.795,358,8.19,359,7.488,475,3.403]],["title/api/sql/Function/#st_lineinterpolatepoint",[630,6.572]],["text/api/sql/Function/#st_lineinterpolatepoint",[7,0.973,12,0.654,34,1.138,102,1.357,103,1.594,107,1.39,108,1.222,111,1.091,112,1.172,133,3.099,158,3.831,168,4.044,174,2.421,176,3.082,179,3.486,198,1.942,199,2.857,200,3.831,214,3.831,255,2.326,264,4.932,269,5.526,630,7.982,631,10.2,632,5.403,633,3.245,634,6.972,635,4.718,636,7.497,637,4.428,638,5.099,639,3.683,640,4.932,641,6.733,642,6.186,643,5.524,644,5.403,645,5.81,646,7.14,647,7.14]],["title/api/sql/Function/#st_linemerge",[648,6.012]],["text/api/sql/Function/#st_linemerge",[12,0.54,91,2.704,97,1.59,102,1.553,103,2.423,107,1.952,108,1.399,112,1.342,168,3.586,176,3.527,216,2.827,230,4.536,272,5.257,273,6.649,295,4.496,326,6.057,350,5.736,475,3.112,648,7.949,649,7.357,650,5.399,651,4.822,652,8.229,653,7.357,654,5.257]],["title/api/sql/Function/#st_linesubstring",[655,6.572]],["text/api/sql/Function/#st_linesubstring",[7,0.922,12,0.656,34,1.078,102,1.285,103,1.51,107,1.316,108,1.157,111,1.033,112,1.11,118,2.741,133,2.935,158,3.628,168,4.361,198,1.838,199,3.081,200,4.771,214,3.628,248,2.811,255,2.203,269,5.959,344,3.091,345,3.658,370,3.129,634,5.117,635,4.468,636,5.502,637,4.193,638,4.829,640,4.67,641,6.375,642,5.857,643,6.879,644,5.117,645,5.502,651,3.251,655,7.703,656,5.666,657,9.934,658,2.841,659,6.761,660,4.917,661,6.761,662,6.761,663,6.761,664,6.761,665,6.761,666,6.761,667,6.761,668,6.761]],["title/api/sql/Function/#st_makepolygon",[669,6.572]],["text/api/sql/Function/#st_makepolygon",[12,0.654,35,2.129,102,1.252,107,1.282,108,1.127,111,1.007,112,1.081,116,3.738,155,4.044,168,2.891,174,3.788,198,3.218,205,4.134,228,3.029,318,1.785,321,2.485,334,7.444,335,6.266,336,6.809,575,4.038,578,6.21,669,5.706,670,3.106,671,8.739,672,6.586,673,3.477,674,6.586,675,8.226,676,6.586]],["title/api/sql/Function/#st_makevalid",[677,5.418]],["text/api/sql/Function/#st_makevalid",[2,1.313,7,0.817,12,0.659,34,0.955,51,1.838,69,2.117,91,1.983,102,1.139,103,1.338,107,2.049,108,1.404,111,0.916,112,1.346,118,2.429,123,1.824,133,4.057,158,3.215,168,4.103,173,4.876,179,2.048,198,2.862,216,2.837,224,3.419,228,2.756,248,2.492,321,2.261,330,4.876,343,2.986,350,5.757,364,3.002,401,3.357,415,4.358,464,3.139,475,2.282,518,3.024,545,3.891,589,4.749,634,4.535,635,3.96,651,2.881,670,2.826,677,7.517,678,4.636,679,5.664,680,5.992,681,5.992,682,5.395,683,8.199,684,5.992,685,5.992,686,2.756,687,5.992,688,5.992,689,4.749,690,4.636,691,3.96,692,5.022,693,4.076,694,3.906,695,4.749]],["title/api/sql/Function/#st_minimumboundingcircle",[696,6.572]],["text/api/sql/Function/#st_minimumboundingcircle",[7,1.144,12,0.591,34,1.338,102,1.595,103,1.874,107,1.985,108,1.437,111,1.283,112,1.378,116,3.004,126,3.438,155,3.885,198,3.106,199,2.603,466,3.838,564,7.035,565,7.035,640,5.799,696,7.273,697,7.916,698,7.273,699,8.395,700,8.395]],["title/api/sql/Function/#st_minimumboundingradius",[701,6.572]],["text/api/sql/Function/#st_minimumboundingradius",[7,1.132,12,0.588,34,1.323,102,1.578,103,1.854,107,1.972,108,1.421,111,1.269,112,1.363,155,3.843,179,2.838,198,3.094,199,2.575,466,4.631,564,6.959,565,6.959,640,5.736,697,7.83,698,7.194,701,7.194,702,7.194,703,5.487,704,7.476,705,8.304]],["title/api/sql/Function/#st_multi",[706,6.572]],["text/api/sql/Function/#st_multi",[12,0.663,102,1.497,103,1.759,107,2.078,108,1.348,111,1.204,112,1.293,118,3.193,133,4.255,138,3.864,155,3.645,157,6.094,198,2.903,275,6.242,321,2.972,324,3.812,572,7.427,573,2.919,581,5.529,658,3.309,706,8.494,707,7.091,708,7.876,709,7.876]],["title/api/sql/Function/#st_npoints",[360,5.418]],["text/api/sql/Function/#st_npoints",[12,0.61,102,1.718,103,2.019,107,1.76,108,1.548,112,1.484,119,4.116,179,3.09,216,3.128,218,3.839,360,7.612,475,3.443]],["title/api/sql/Function/#st_numgeometries",[362,5.624]],["text/api/sql/Function/#st_numgeometries",[12,0.596,102,1.622,103,2.47,107,2.288,108,1.461,112,1.402,198,2.321,216,2.954,295,5.668,326,6.328,361,5.053,362,7.635,363,6.604,364,4.276,475,3.251]],["title/api/sql/Function/#st_numinteriorrings",[365,5.624]],["text/api/sql/Function/#st_numinteriorrings",[7,1.063,12,0.572,34,1.242,102,1.481,103,1.741,107,1.896,108,1.334,111,1.192,112,1.28,116,3.486,155,3.608,174,3.774,198,3.224,199,3.624,255,2.54,292,5.302,306,5.423,338,6.032,361,3.824,365,5.779,366,6.533,475,2.969]],["title/api/sql/Function/#st_pointn",[367,5.869]],["text/api/sql/Function/#st_pointn",[7,0.973,12,0.654,34,1.138,102,1.357,103,2.057,107,1.985,108,1.222,111,1.091,112,1.172,130,3.479,132,3.656,133,3.999,155,3.304,168,4.73,174,3.654,175,2.939,179,3.486,198,2.774,199,2.214,250,3.863,321,2.694,325,5.293,332,5.192,334,4.536,345,3.863,347,4.654,364,3.577,367,5.524,368,6.429,369,6.429,370,3.304,371,4.481,372,5.984,373,4.785,394,4.074,710,7.14]],["title/api/sql/Function/#st_pointonsurface",[377,6.012]],["text/api/sql/Function/#st_pointonsurface",[102,1.41,103,1.656,108,1.27,111,1.134,112,1.795,130,3.614,174,2.515,179,3.227,198,2.824,199,3.744,244,6.945,279,5.151,306,5.839,378,5.207,379,6.678,380,6.216,381,6.678,382,6.036,383,6.678,711,7.417,712,9.44,713,9.44,714,7.417,715,7.417]],["title/api/sql/Function/#st_precisionreduce",[716,5.741]],["text/api/sql/Function/#st_precisionreduce",[7,1.096,12,0.606,34,1.282,102,1.528,107,1.565,108,1.377,111,1.229,112,1.32,119,3.835,216,2.783,218,3.415,248,3.344,303,3.494,336,6.474,361,3.945,373,5.389,475,3.063,483,2.98,552,7.654,716,7.516,717,5.314,718,7.9,719,7.24,720,7.24]],["title/api/sql/Function/#st_removepoint",[721,6.012]],["text/api/sql/Function/#st_removepoint",[7,1.063,12,0.599,34,1.242,102,1.481,103,1.741,107,1.896,108,1.668,111,1.192,112,1.28,155,3.608,176,3.365,179,2.665,198,3.115,199,3.451,248,3.242,255,2.54,347,6.35,373,5.225,394,4.448,475,2.969,556,2.889,557,7.537,587,6.754,658,3.276,721,6.179,722,6.114,723,8.771]],["title/api/sql/Function/#st_reverse",[384,5.869]],["text/api/sql/Function/#st_reverse",[12,0.663,102,1.445,103,1.697,107,1.48,108,1.301,111,1.162,112,1.248,130,3.704,132,4.91,133,4.162,155,3.518,168,3.337,174,3.739,175,3.946,198,2.607,199,3.257,216,2.63,244,4.829,321,2.869,334,6.092,347,4.955,384,7.419,385,6.025,386,4.046,387,6.844]],["title/api/sql/Function/#st_setsrid",[240,5.624]],["text/api/sql/Function/#st_setsrid",[7,1.157,12,0.617,34,1.353,102,1.613,107,1.652,108,1.453,111,1.297,112,1.394,119,3.964,216,2.937,218,3.605,229,7.768,240,7.61,389,3.39,390,1.889,391,7.114,392,3.812,393,7.114,394,4.843,395,7.643,533,6.173]],["title/api/sql/Function/#st_simplifypreservetopology",[724,5.741]],["text/api/sql/Function/#st_simplifypreservetopology",[12,0.623,98,3.76,102,1.536,107,1.939,108,1.384,112,1.327,118,3.277,119,3.848,199,2.507,216,2.797,218,3.433,269,4.849,279,4.411,321,3.051,361,3.966,475,3.079,589,6.407,607,7.54,679,5.584,724,7.54,725,5.879,726,5.342,727,8.35,728,7.279,729,7.279,730,7.279]],["title/api/sql/Function/#st_srid",[396,6.012]],["text/api/sql/Function/#st_srid",[7,1.183,12,0.6,34,1.384,102,1.65,103,1.938,107,1.69,108,1.486,111,1.327,112,1.425,119,4.018,216,3.004,218,3.687,229,6.57,390,1.932,391,7.275,392,3.899,393,7.275,396,8.246,533,6.313]],["title/api/sql/Function/#st_startpoint",[731,6.012]],["text/api/sql/Function/#st_startpoint",[7,1.144,12,0.591,34,1.338,102,1.595,103,1.874,107,1.634,108,1.437,111,1.283,112,1.378,155,3.885,168,3.685,179,2.869,248,3.491,255,2.735,475,3.197,617,6.654,618,7.035,619,5.996,620,7.035,621,6.224,622,7.035,623,6.353,633,3.815,644,6.353,731,6.654,732,7.559,733,7.559]],["title/api/sql/Function/#st_subdivide",[734,6.357]],["text/api/sql/Function/#st_subdivide",[7,0.829,12,0.588,34,0.969,102,0.754,103,0.886,107,1.183,108,0.679,111,0.929,112,0.998,129,2.554,155,2.814,199,1.885,200,4.79,248,1.651,255,1.981,279,5.871,281,7.107,306,4.776,324,1.921,347,3.963,361,1.947,432,3.439,562,6.492,609,7.977,610,6.851,612,1.826,617,3.146,619,5.277,673,2.096,734,5.095,735,3.574,736,3.969,737,3.969,738,3.743,739,6.079,740,8.038,741,8.229,742,9.361,743,3.969,744,3.969,745,7.389,746,6.079,747,3.969,748,10.111,749,6.079,750,9.802,751,3.969,752,10.111,753,10.579,754,7.389,755,7.389,756,3.969,757,6.079,758,3.969,759,7.734,760,6.94,761,3.743,762,3.743,763,3.743,764,3.743,765,3.743]],["title/api/sql/Function/#st_subdivideexplode",[766,6.173]],["text/api/sql/Function/#st_subdivideexplode",[12,0.672,97,0.927,98,1.796,102,0.905,103,1.063,107,1.878,108,0.815,111,0.728,112,1.144,129,3.063,133,3.935,155,2.203,199,2.812,200,5.94,279,6.04,306,5.53,318,1.888,321,2.629,347,5.91,483,1.764,562,8.05,612,2.19,617,5.521,619,7.199,651,2.289,673,2.513,734,3.989,738,4.489,759,9.59,760,8.947,761,6.569,762,6.569,763,6.569,764,6.569,765,6.569,766,5.669,767,3.238,768,2.513,769,4.76,770,4.372,771,3.902,772,2.856]],["title/api/sql/Function/#st_symdifference",[773,7.153]],["text/api/sql/Function/#st_symdifference",[12,0.626,102,1.279,103,1.98,107,1.726,108,1.152,111,1.029,112,1.105,116,3.173,132,5.395,138,3.302,158,4.757,174,3.811,175,5.182,214,3.612,215,3.059,216,2.329,217,3.737,321,2.54,356,3.612,389,2.688,545,3.195,601,4.276,773,8.36,774,6.731,775,4.578]],["title/api/sql/Function/#st_transform",[397,4.503]],["text/api/sql/Function/#st_transform",[7,1.155,12,0.646,34,1.35,35,2.033,85,4.074,91,3.171,92,2.792,97,1.649,102,1.195,108,1.076,111,1.295,112,1.391,119,3.96,126,3.469,180,3.431,181,3.622,216,2.176,218,3.598,296,4.759,303,2.213,345,3.402,370,2.91,386,3.347,390,1.4,392,3.805,397,6.353,398,3.064,399,5.27,400,5.27,401,3.522,402,5.27,403,5.662,404,4.046,405,4.046,406,4.759,407,4.759,408,4.473,409,3.46,410,2.158,411,5.27,412,4.046,413,5.27,414,3.772,415,4.573,416,5.27,417,5.27,418,5.27,419,4.491,420,4.834,421,5.195,422,2.27,423,2.714,424,4.277,425,3.695,426,4.415,427,4.277,475,2.395]],["title/api/sql/Function/#st_union",[776,6.572]],["text/api/sql/Function/#st_union",[12,0.617,102,1.37,103,1.609,107,1.403,108,1.234,111,1.102,112,1.183,116,3.667,117,5.712,138,3.536,158,4.973,174,3.474,175,5.146,198,3.114,199,2.874,215,3.275,216,2.494,217,4.001,306,4.516,321,2.72,776,8.03]],["title/api/sql/Function/#st_x",[428,5.624]],["text/api/sql/Function/#st_x",[7,1.144,12,0.63,34,1.338,102,1.595,103,1.874,108,1.437,111,1.283,112,1.378,178,4.661,179,3.485,180,4.58,199,3.405,248,3.491,250,4.542,251,4.542,254,5.894,255,2.735,303,2.954,428,6.224,429,7.035,430,6.495,475,3.197]],["title/api/sql/Function/#st_xmax",[431,5.869]],["text/api/sql/Function/#st_xmax",[12,0.608,102,1.544,103,1.815,107,1.946,108,1.391,111,1.242,112,1.334,116,2.909,118,3.294,130,3.96,174,3.389,180,4.434,198,2.944,199,2.52,216,2.812,255,2.648,279,4.434,295,5.501,303,2.86,431,7.734,432,7.041,433,7.317,434,7.057,435,5.528]],["title/api/sql/Function/#st_xmin",[436,6.357]],["text/api/sql/Function/#st_xmin",[12,0.608,102,1.544,103,1.815,107,1.946,108,1.391,111,1.242,112,1.334,116,2.909,118,3.294,130,3.96,174,2.755,180,4.434,198,3.071,199,2.52,211,5.101,216,2.812,255,2.648,279,4.434,295,5.501,303,2.86,434,7.057,435,5.528,436,8.377,437,7.317]],["title/api/sql/Function/#st_y",[438,5.624]],["text/api/sql/Function/#st_y",[7,1.144,12,0.63,34,1.338,102,1.595,103,1.874,108,1.437,111,1.283,112,1.378,178,4.661,179,3.485,181,4.836,199,3.405,248,3.491,250,4.542,251,4.542,254,5.894,255,2.735,303,2.954,438,6.224,439,7.035,440,7.035,475,3.197]],["title/api/sql/Function/#st_ymax",[441,5.869]],["text/api/sql/Function/#st_ymax",[7,1.108,12,0.583,34,1.295,102,1.544,103,1.815,108,1.391,111,1.242,112,1.334,130,3.96,155,3.761,174,3.389,181,4.682,198,3.331,199,3.357,211,5.101,216,2.812,255,2.648,303,2.86,304,5.163,441,7.734]],["title/api/sql/Function/#st_ymin",[442,5.869]],["text/api/sql/Function/#st_ymin",[7,1.102,12,0.607,34,1.288,102,1.536,103,1.805,108,1.384,111,1.236,112,1.327,130,3.939,155,3.741,174,2.741,181,4.657,198,3.328,199,3.496,211,5.074,216,2.797,255,2.634,303,2.844,304,5.136,442,6.255,443,7.279]],["title/api/sql/Function/#st_z",[444,6.012]],["text/api/sql/Function/#st_z",[7,1.126,12,0.638,34,1.316,102,1.569,103,1.844,108,1.414,111,1.262,112,1.356,138,4.052,178,4.585,179,3.451,199,3.522,248,3.434,250,4.468,251,4.468,254,5.798,255,2.691,303,2.906,434,5.384,444,6.546,445,6.25,446,7.436,447,7.436]],["title/api/sql/Optimizer/",[318,1.388,777,1.81,778,3.073]],["text/api/sql/Optimizer/",[2,0.82,6,1.334,7,1.094,12,0.672,19,0.668,34,1.279,54,2.008,59,1.502,84,0.617,85,1.051,91,1.239,98,1.412,102,1.104,107,1.958,111,0.75,112,1.169,113,4.663,119,3.46,120,3.799,157,4.495,174,1.663,184,3.646,188,1.193,197,2.611,198,0.595,199,1.802,213,3.56,215,1.701,239,0.891,248,0.909,266,1.389,267,1.214,287,2.773,288,1.487,303,0.769,318,2.175,340,2.467,343,1.363,354,1.535,356,1.173,390,0.487,392,0.982,397,1.298,398,1.065,409,1.203,422,1.771,449,2.55,456,1.128,457,0.569,458,2.199,461,4.142,465,1.875,471,1.203,480,1.103,516,1.073,520,1.173,538,4.517,633,1.701,634,1.655,651,1.051,658,0.919,777,3.505,778,3.485,779,1.203,780,2.096,781,3.136,782,1.976,783,1.681,784,2.408,785,1.655,786,4.397,787,1.969,788,1.407,789,6.207,790,6.207,791,2.627,792,4.869,793,4.869,794,3.388,795,3.136,796,8.088,797,3.889,798,3.136,799,3.136,800,3.136,801,6.207,802,3.136,803,3.136,804,4.605,805,1.969,806,1.465,807,2.473,808,2.06,809,6.595,810,6.17,811,3.37,812,3.37,813,1.733,814,3.37,815,3.37,816,3.445,817,1.969,818,1.969,819,1.969,820,2.321,821,1.372,822,1.969,823,2.156,824,1.341,825,1.407,826,0.919,827,5.315,828,2.673,829,1.535,830,0.988,831,1.59,832,3.136,833,2.186,834,2.186,835,3.742,836,6.531,837,4.906,838,2.186,839,4.906,840,4.906,841,3.136,842,3.742,843,2.473,844,2.186,845,2.186,846,2.186,847,2.186,848,2.186,849,2.186,850,2.186,851,2.186,852,2.186,853,4.906,854,2.186,855,2.186,856,1.655,857,1.894,858,1.312,859,1.733,860,2.966,861,1.832,862,1.832,863,1.832,864,2.186]],["title/api/sql/Optimizer/#sedonasql-query-optimizer",[318,1.388,449,2.663,778,3.073]],["text/api/sql/Optimizer/#sedonasql-query-optimizer",[2,1.881,6,3.059,19,2.623,54,5.545,213,3.645,318,3.119,340,3.645,390,1.911,456,4.428,457,2.235,461,4.993,465,4.3,480,4.331,777,3.651,778,6.651,779,4.724,780,4.808,781,7.193]],["title/api/sql/Optimizer/#range-join",[340,2.598,777,2.161]],["text/api/sql/Optimizer/#range-join",[6,2.047,7,1.086,12,0.669,34,1.269,59,2.306,91,1.901,102,1.092,107,2.018,111,0.878,112,1.501,113,5.757,119,4.143,120,5.318,184,5.738,197,3.057,215,2.611,318,1.557,340,2.44,422,2.074,449,4.14,461,4.633,471,3.161,538,4.14,777,3.23,782,3.033,783,2.58,784,3.696,785,4.347,786,4.347,787,5.172,788,3.696,789,5.688,790,5.688,791,4.033,792,6.675,793,6.675,794,3.105,795,4.814,796,7.954,797,4.553,798,4.814,799,4.814,800,4.814,801,5.688,802,4.814,803,4.814,804,4.553,805,5.172]],["title/api/sql/Optimizer/#distance-join",[213,2.598,777,2.161]],["text/api/sql/Optimizer/#distance-join",[2,1.218,7,1.061,12,0.662,34,1.24,59,2.23,84,1.569,85,2.672,98,2.097,102,1.056,107,2.067,111,0.849,112,1.278,174,2.638,213,4.133,215,2.525,239,2.264,266,3.53,267,3.085,287,4.399,288,3.779,303,1.955,343,2.023,354,3.901,356,2.982,392,2.496,397,3.298,398,2.708,465,2.784,516,2.726,538,4.045,782,2.934,783,2.496,784,3.575,786,6.797,789,5.558,790,5.558,794,3.034,796,7.214,797,4.404,801,5.558,804,6.168,806,3.724,807,5.142,808,4.283,809,8.43,810,8.43,811,7.007,812,7.007,813,4.404,814,7.007,815,7.007,816,3.901,817,5.003,818,5.003,819,5.003,820,3.446,821,3.487,822,5.003,823,4.483,824,3.407,825,3.575,826,2.335]],["title/api/sql/Optimizer/#broadcast-join",[777,2.161,827,4.977]],["text/api/sql/Optimizer/#broadcast-join",[7,0.947,12,0.669,34,1.108,91,1.571,102,0.902,107,1.762,113,3.729,119,2.684,157,7.005,174,1.609,213,3.493,287,2.683,340,2.015,343,1.728,409,2.612,422,1.713,520,2.546,538,4.706,633,2.157,634,3.591,651,2.282,658,1.994,777,3.558,780,2.658,789,6.466,790,6.466,794,3.53,796,8.201,801,6.466,809,7.125,810,6.022,816,4.88,820,2.943,827,7.368,828,4.964,829,3.332,830,2.144,831,3.451,832,5.825,833,4.746,834,4.746,835,6.95,836,9.636,837,8.224,838,4.746,839,8.224,840,8.224,841,5.825,842,6.95,843,4.593,844,4.746,845,4.746,846,4.746,847,4.746,848,4.746,849,4.746,850,4.746,851,4.746,852,4.746,853,8.224,854,4.746,855,4.746,856,3.591,857,4.111,858,2.847]],["title/api/sql/Optimizer/#predicate-pushdown",[461,3.558,781,5.126]],["text/api/sql/Optimizer/#predicate-pushdown",[7,1.121,12,0.671,34,1.31,98,2.27,102,1.143,107,1.6,111,0.92,112,0.988,113,4.411,119,3.617,120,4.782,184,3.776,188,3.282,197,4.376,198,1.636,199,3.122,248,2.502,318,2.228,422,2.172,458,4.831,461,4.782,538,4.274,633,2.734,777,2.905,789,5.872,790,5.872,791,4.224,792,6.89,793,6.89,794,3.205,795,5.042,796,8.067,797,4.768,798,5.042,799,5.042,800,5.042,801,5.872,802,5.042,803,5.042,804,4.768,859,4.768,860,6.516,861,5.042,862,5.042,863,5.042,864,6.016]],["title/api/sql/Overview/",[344,2.796,865,4.099]],["text/api/sql/Overview/",[2,1.848,6,2.224,7,0.56,12,0.662,19,1.255,34,1.445,35,2.725,60,2.002,80,4.887,84,1.16,89,1.354,92,1.824,97,0.8,100,3.496,101,2.548,102,0.781,103,2.024,104,2.753,105,2.119,106,2.103,107,1.858,111,1.288,118,1.665,121,2.119,123,1.25,125,2.785,135,2.002,156,1.962,158,2.204,176,1.773,197,2.186,213,1.745,215,4.12,228,1.89,247,1.579,248,3.969,287,2.322,288,2.794,303,1.445,318,1.113,343,2.273,344,1.878,370,1.901,390,0.914,422,2.253,423,1.773,449,3.244,450,2.794,451,2.794,452,2.794,456,3.22,457,1.625,458,3.667,459,4.259,460,2.414,461,2.39,462,3.045,463,3.443,464,2.152,465,2.058,466,1.878,467,3.343,479,1.404,480,2.073,481,2.073,482,1.269,487,3.871,491,2.962,612,1.89,670,1.937,778,2.464,794,1.602,832,5.23,865,2.753,866,2.714,867,2.794,868,2.753,869,2.753,870,5.23,871,3.178,872,3.256,873,5.23,874,4.108,875,5.407,876,5.558,877,1.845,878,3.256,879,2.578,880,2.015,881,3.109,882,2.281,883,2.399,884,1.536,885,2.261,886,2.261,887,4.124,888,2.714,889,2.281,890,3.435,891,2.152,892,2.678,893,2.119,894,3.045,895,1.764,896,2.464,897,3.699,898,2.281,899,1.529,900,3.699,901,2.414,902,4.723,903,2.464]],["title/api/sql/Overview/#introduction",[102,1.442]],["text/api/sql/Overview/#introduction",[]],["title/api/sql/Overview/#function-list",[35,1.977,612,2.813]],["text/api/sql/Overview/#function-list",[2,1.135,6,2.639,12,0.626,34,1.377,35,2.794,80,5.108,84,1.463,89,1.708,92,2.3,97,1.008,100,4.148,101,3.213,103,2.228,104,3.472,105,2.672,106,2.652,107,2.02,111,1.441,118,2.1,121,2.672,123,1.577,125,3.189,135,2.524,156,2.474,158,2.779,197,2.757,213,2.2,215,4.534,228,2.383,247,1.991,248,4.315,287,2.928,288,3.523,303,1.823,318,1.404,343,2.696,370,2.397,390,1.153,422,2.673,449,3.849,450,3.523,451,3.523,452,3.523,456,3.82,457,1.348,458,4.351,459,4.586,460,3.043,461,3.013,462,3.84,463,4.341,464,2.714,465,2.595,466,2.368,467,4.215,479,1.771,480,2.614,481,2.614,482,1.6,487,2.212,491,3.514,670,2.443,778,3.107,832,6.206,866,3.423,867,3.523,868,3.472,869,3.472,870,6.206,871,4.008,872,4.106,873,6.206,874,5.18,875,6.415,876,6.117,877,2.326,878,4.106]],["title/api/sql/Overview/#quick-start",[344,2.796,865,4.099]],["text/api/sql/Overview/#quick-start",[2,2.196,7,0.938,12,0.673,19,2.103,34,1.434,60,3.354,80,3.524,176,2.971,423,2.971,457,1.792,487,4.538,794,2.683,879,4.32,880,3.377,881,5.209,882,3.821,883,3.458,884,2.574,885,3.788,886,3.788,887,5.944,888,4.548,889,3.821,890,4.951,891,3.606,892,4.487,893,3.551,894,5.103,895,2.955,896,4.129,897,6.197,898,3.821,899,2.562,900,6.197,901,4.044,902,6.808,903,4.129]],["title/api/sql/Parameter/",[408,4.005]],["text/api/sql/Parameter/",[2,1.08,6,2.546,12,0.658,34,1.139,60,2.402,95,2.896,96,3.357,97,1.391,198,1.34,213,2.093,232,2.645,318,1.936,340,2.093,343,3.356,361,2.418,370,4.871,389,1.969,390,2.178,394,2.813,401,5.715,408,2.603,422,1.779,449,3.714,464,2.582,483,1.827,487,3.589,488,3.057,519,2.413,556,2.648,679,3.405,777,3.257,826,2.071,828,6.003,830,4.164,843,5.554,869,3.304,879,3.094,889,2.737,890,4.625,891,2.582,892,3.213,893,2.543,894,3.654,895,2.116,896,2.957,897,4.438,898,2.737,904,3.257,905,3.585,906,7.925,907,4.241,908,2.867,909,2.31,910,8.405,911,4.438,912,4.438,913,6.404,914,4.929,915,3.585,916,4.929,917,3.585,918,4.432,919,4.929,920,5.717,921,2.418,922,3.213,923,6.091,924,4.54,925,4.929,926,3.585,927,2.957,928,4.929,929,4.438,930,3.52]],["title/api/sql/Parameter/#usage",[904,5.013]],["text/api/sql/Parameter/#usage",[6,2.521,12,0.675,60,3.447,232,3.796,343,2.576,370,3.274,389,2.825,408,3.735,449,4.76,464,3.706,483,2.622,487,4.336,488,4.387,826,2.972,869,4.741,889,3.927,890,5.588,891,3.706,892,4.611,893,3.649,894,5.244,895,3.037,896,4.243,897,6.369,898,3.927,905,5.144,906,6.67,907,4.199,908,4.115,909,3.315,910,10.154,911,6.369,912,6.369]],["title/api/sql/Parameter/#explanation",[879,4.761]],["text/api/sql/Parameter/#explanation",[2,1.378,6,2.241,34,1.35,95,3.695,96,3.827,97,1.649,198,1.71,213,2.671,318,2.296,340,2.671,343,3.489,361,3.085,370,5.102,390,2.382,394,3.588,401,6.176,422,2.27,519,2.861,556,3.14,679,4.344,777,3.623,828,6.843,830,4.632,843,6.331,906,7.989,907,3.733,913,6.92,914,6.288,915,4.573,916,6.288,917,4.573,918,5.255,919,6.288,920,6.517,921,3.085,922,4.099,923,6.775,924,5.383,925,6.288,926,4.573,927,3.772,928,6.288,929,5.662,930,4.491]],["title/api/sql/Predicate/",[461,4.413]],["text/api/sql/Predicate/",[7,1.267,12,0.677,34,1.481,98,1.072,102,1.766,103,2.075,107,1.154,108,1.591,111,1.421,112,1.571,113,5.368,114,4.99,130,2.271,133,3.533,158,3.681,174,3.507,188,4.441,197,3.155,198,2.338,199,3.688,200,4.367,201,4.167,202,4.99,215,4.224,216,3.106,217,4.983,255,1.519,267,2.588,303,0.999,304,1.805,343,3.483,356,1.524,386,1.512,422,1.025,465,2.335,466,2.131,468,3.606,469,2.558,470,2.558,471,3.262,472,4.698,473,2.558,474,5.337,475,3.274,788,3.814,931,4.486,932,2.558,933,4.038,934,4.038,935,4.486,936,4.486,937,2.558,938,4.486,939,2.558]],["title/api/sql/Predicate/#st_contains",[197,4.037]],["text/api/sql/Predicate/#st_contains",[7,1.073,12,0.666,34,1.255,102,1.497,103,1.759,108,1.348,111,1.204,112,1.293,113,5.26,114,4.829,188,4.297,197,5.218,198,2.142,199,3.464,200,4.226,201,4.033,202,4.829,215,3.579,216,2.725,217,4.372,343,2.868,465,3.946,466,3.601,475,2.999]],["title/api/sql/Predicate/#st_crosses",[931,5.741]],["text/api/sql/Predicate/#st_crosses",[7,1.079,12,0.666,34,1.262,102,1.504,103,1.768,108,1.355,111,1.21,112,1.3,113,5.277,114,4.854,188,4.319,198,2.153,199,3.47,200,4.248,201,4.054,202,4.854,215,3.598,216,2.739,217,4.395,343,2.883,475,3.015,931,7.443,932,7.128]],["title/api/sql/Predicate/#st_disjoint",[468,5.869]],["text/api/sql/Predicate/#st_disjoint",[7,1.163,12,0.643,34,1.36,102,1.622,103,1.906,108,1.461,111,1.305,112,1.402,130,4.159,133,4.801,215,3.879,216,2.954,217,4.739,343,3.108,468,6.604,469,7.685,470,7.685,933,7.395,934,7.395]],["title/api/sql/Predicate/#st_equals",[935,5.741]],["text/api/sql/Predicate/#st_equals",[7,1.079,12,0.666,34,1.262,102,1.504,103,1.768,108,1.355,111,1.21,112,1.3,113,5.277,114,4.854,188,4.319,198,2.153,199,3.47,200,4.248,201,4.054,202,4.854,215,3.598,216,2.739,217,4.395,267,4.395,343,2.883,475,3.015,935,7.443]],["title/api/sql/Predicate/#st_intersects",[471,4.175]],["text/api/sql/Predicate/#st_intersects",[7,1.079,12,0.666,34,1.262,102,1.504,103,1.768,108,1.355,111,1.21,112,1.3,113,5.277,114,4.854,188,4.319,198,2.153,199,3.47,200,4.248,201,4.054,202,4.854,215,3.598,216,2.739,217,4.395,343,2.883,356,4.248,471,5.413,475,3.015]],["title/api/sql/Predicate/#st_orderingequals",[472,6.012]],["text/api/sql/Predicate/#st_orderingequals",[7,1.201,12,0.639,34,1.405,98,2.518,102,1.268,103,1.49,107,1.921,108,1.142,111,1.347,112,1.447,130,3.251,158,5.634,174,4.123,198,1.814,199,3.787,215,3.032,255,2.872,267,3.704,303,2.348,304,4.239,343,3.21,386,3.551,422,2.409,472,6.986,473,6.008,474,8.887]],["title/api/sql/Predicate/#st_overlaps",[936,5.741]],["text/api/sql/Predicate/#st_overlaps",[7,1.163,12,0.643,34,1.36,102,1.622,103,1.906,108,1.461,111,1.305,112,1.402,133,4.801,215,3.879,216,2.954,217,4.739,343,3.108,475,3.251,933,7.395,934,7.395,936,7.794,937,7.685]],["title/api/sql/Predicate/#st_touches",[938,5.741]],["text/api/sql/Predicate/#st_touches",[12,0.667,102,1.528,103,1.796,108,1.377,112,1.32,113,5.329,114,4.931,188,4.388,198,2.187,199,3.49,200,4.315,201,4.118,202,4.931,215,3.655,216,2.783,217,4.464,343,2.928,475,3.063,938,7.516,939,7.24]],["title/api/sql/Predicate/#st_within",[788,4.881]],["text/api/sql/Predicate/#st_within",[7,1.073,12,0.666,34,1.255,102,1.497,103,1.759,108,1.348,111,1.204,112,1.293,113,5.26,114,4.829,188,4.297,198,2.142,199,3.464,200,4.226,201,4.033,202,4.829,215,3.579,216,2.725,217,4.372,343,2.868,465,3.946,466,3.601,475,2.999,788,6.308]],["title/api/sql/Raster-loader/",[30,3.434,118,2.077,255,1.669]],["text/api/sql/Raster-loader/",[2,0.496,7,0.909,12,0.68,28,0.589,31,2.261,34,0.948,50,1.379,54,0.666,59,0.498,73,1.679,85,2.158,89,1.82,91,0.75,92,1.005,97,0.441,102,0.957,103,0.698,107,1.588,108,1.326,111,0.967,112,0.633,118,0.918,123,0.689,125,1.858,126,3.717,130,0.604,132,1.16,133,1.356,135,0.604,174,0.421,175,0.511,198,0.85,199,0.702,204,2.448,230,3.513,247,0.871,248,0.516,255,1.798,264,1.564,269,2.313,295,0.683,302,2.408,303,1.942,339,0.752,343,3.743,344,0.567,361,1.111,364,1.565,370,3.359,389,0.495,392,2.015,394,4.141,398,1.103,401,3.544,408,1.65,412,0.798,414,0.744,420,3.149,422,0.448,430,1.752,457,0.59,459,2.996,479,2.85,481,1.577,483,0.46,487,1.647,493,0.715,499,1.867,500,1.476,501,0.448,541,2.143,545,0.589,552,0.844,556,0.839,575,3.088,612,0.571,633,0.564,637,0.769,639,1.612,654,0.798,658,0.952,673,2.036,678,0.96,694,0.809,702,2.707,768,0.655,779,0.683,808,0.683,830,1.023,858,0.744,873,3.232,880,3.104,909,1.061,922,3.876,927,1.358,940,6.201,941,2.813,942,0.831,943,3.836,944,2.094,945,0.96,946,0.983,947,0.844,948,5.946,949,3.636,950,2.265,951,6.538,952,5.589,953,5.589,954,4.782,955,3.636,956,3.636,957,0.752,958,0.578,959,3.124,960,3.636,961,1.215,962,1.24,963,0.798,964,0.708,965,2.265,966,1.04,967,1.075,968,0.769,969,1.24,970,1.24,971,0.596,972,1.117,973,2.946,974,2.135,975,2.946,976,2.946,977,2.946,978,2.946,979,3.53,980,2.135,981,1.24,982,1.24,983,2.265,984,1.24,985,1.714,986,1.24,987,2.135,988,1.24,989,1.24,990,2.135,991,1.24,992,2.266,993,0.722,994,0.871,995,0.909,996,2.265,997,1.24,998,0.96,999,2.508,1000,0.92,1001,4.487,1002,6.978,1003,2.265,1004,4.487,1005,1.01,1006,0.983,1007,1.04,1008,1.24,1009,1.24,1010,0.621,1011,2.265,1012,0.683,1013,0.886,1014,0.779,1015,2.265,1016,1.24,1017,2.265,1018,2.265,1019,1.24,1020,1.24,1021,2.039,1022,1.24,1023,2.135,1024,1.24,1025,1.24,1026,2.135,1027,1.843,1028,1.24,1029,1.24,1030,1.24,1031,2.721,1032,1.24,1033,1.24,1034,1.24,1035,3.636,1036,1.24,1037,2.265,1038,0.871,1039,0.902,1040,2.265,1041,2.265,1042,1.24,1043,1.24,1044,0.902,1045,1.24,1046,1.04,1047,1.24,1048,0.82,1049,1.117,1050,1.962,1051,0.886,1052,0.886,1053,1.24,1054,1.24,1055,1.24,1056,3.124,1057,1.24,1058,1.24,1059,1.24,1060,1.24,1061,1.04,1062,2.618,1063,0.983,1064,1.24,1065,1.24,1066,1.24,1067,1.24,1068,1.24,1069,2.265,1070,2.265]],["title/api/sql/Raster-loader/#geotiff-dataframe-loader",[479,1.751,940,3.041,941,4.613]],["text/api/sql/Raster-loader/#geotiff-dataframe-loader",[2,1.05,7,0.653,12,0.68,31,2.373,34,0.468,50,1.297,54,1.577,59,1.18,85,3.366,89,2.542,102,0.558,107,1.771,108,0.82,111,0.928,112,0.483,118,1.191,125,1.768,126,3.962,132,2.454,133,1.276,135,1.432,204,2.615,230,3.887,255,1.977,264,2.03,269,2.875,303,2.713,343,4.006,361,1.442,364,2.401,370,2.218,392,3.144,394,4.719,398,2.335,401,1.646,408,1.552,412,1.891,414,1.763,420,3.463,422,1.061,479,1.638,481,2.418,483,1.089,487,2.046,493,1.693,499,1.422,500,3.124,541,2.899,545,1.395,575,2.939,639,2.472,673,1.552,678,2.274,702,4.152,873,2.463,922,1.916,940,5.879,941,2.646,942,1.97,943,4.184,944,1.97,945,2.274,946,2.329,947,1.999,948,9.096,949,4.519,950,4.793,951,7.097,952,5.086,953,5.086,954,4.152,955,4.519,956,4.519,957,1.782,958,1.369,959,6.069,960,4.519,961,1.577,962,2.939,963,1.891,964,1.677,965,4.793,966,2.463,967,2.546,968,1.823,969,2.939,970,2.939,971,1.413,972,2.646,973,2.771,974,2.771,975,2.771,976,2.771,977,2.771,978,2.771,979,1.745,980,2.771,981,2.939,982,2.939,983,4.793,984,2.939,985,3.627,986,2.939,987,2.771,988,2.939,989,2.939,990,2.771]],["title/api/sql/Raster-loader/#geotiff-dataframe-writer",[479,1.751,940,3.041,991,5.123]],["text/api/sql/Raster-loader/#geotiff-dataframe-writer",[7,0.548,12,0.679,28,1.13,31,2.526,34,0.379,50,1.776,85,1.145,89,1.326,92,1.786,97,0.463,102,0.452,107,1.623,108,1.428,111,0.615,125,1.484,126,3.678,130,1.16,133,1.746,198,0.647,204,2.851,230,3.812,247,1.546,255,0.776,264,1.644,269,2.413,302,3.684,303,1.416,343,3.746,364,1.193,370,3.859,389,0.951,392,1.069,394,4.251,401,4.671,408,2.124,420,3.505,457,1.047,459,3.967,479,3.158,481,1.201,487,1.718,501,0.859,541,1.922,575,2.467,612,1.095,639,1.228,654,1.532,658,1.691,694,1.552,702,2.062,779,1.31,808,1.31,830,1.818,858,1.428,873,3.372,880,4.26,922,5.172,927,2.413,940,6.456,943,3.836,944,2.696,949,3.794,951,6.577,952,6.244,953,6.244,954,5.948,955,3.794,956,3.794,960,3.794,961,1.277,973,3.794,974,2.245,975,3.794,976,3.794,977,3.794,978,3.794,979,2.388,992,3.609,993,1.385,994,1.671,995,1.615,996,4.023,997,2.38,998,1.842,999,3.606,1000,1.765,1001,6.866,1002,9.24,1003,4.023,1004,6.866,1005,1.937,1006,1.887,1007,1.995,1008,2.38,1009,2.38,1010,1.193,1011,4.023,1012,1.31,1013,1.7,1014,1.494,1015,4.023,1016,2.38,1017,4.023,1018,4.023,1019,2.38,1020,2.38,1021,3.622,1022,2.38]],["title/api/sql/Raster-loader/#rs_array",[1023,7.153]],["text/api/sql/Raster-loader/#rs_array",[7,1.183,12,0.622,34,1.384,102,1.65,108,1.486,111,1.327,112,1.425,123,2.643,248,3.61,370,4.815,430,6.717,552,5.905,575,5.323,673,4.584,952,7.275,953,7.275,1023,8.186,1024,8.681,1025,8.681]],["title/api/sql/Raster-loader/#rs_base64",[1026,7.153]],["text/api/sql/Raster-loader/#rs_base64",[7,1.208,12,0.658,34,1.413,91,2.228,97,1.31,102,1.279,103,1.503,108,1.152,111,1.029,112,1.105,118,2.729,123,2.049,125,2.484,126,2.756,175,2.77,199,2.087,255,2.193,339,4.082,430,5.208,479,2.301,499,3.258,575,4.127,673,3.554,909,3.154,940,3.996,943,3.096,979,3.996,1026,6.347,1027,5.478,1028,6.731,1029,6.731,1030,6.731,1031,6.389,1032,6.731,1033,6.731,1034,6.731,1035,8.36,1036,6.731,1037,8.865,1038,4.726,1039,4.895,1040,8.865,1041,8.865,1042,6.731,1043,6.731,1044,4.895,1045,6.731,1046,5.641,1047,6.731,1048,4.448,1049,6.061]],["title/api/sql/Raster-loader/#rs_getband",[1050,6.572]],["text/api/sql/Raster-loader/#rs_getband",[7,1.237,12,0.661,34,1.446,91,2.309,102,1.326,103,1.558,108,1.194,111,1.066,112,1.146,174,2.365,198,2.468,199,2.164,255,2.273,344,3.19,361,3.423,479,2.385,499,3.377,556,3.364,633,3.171,637,4.327,673,3.684,768,3.684,909,3.269,940,5.387,941,6.282,979,6.341,980,6.579,987,6.579,990,6.579,1031,4.231,1035,8.558,1050,6.045,1051,4.983,1052,4.983,1053,6.977,1054,6.977,1055,6.977,1056,10.087,1057,6.977,1058,6.977,1059,6.977]],["title/api/sql/Raster-loader/#rs_html",[1060,7.586]],["text/api/sql/Raster-loader/#rs_html",[7,1.057,12,0.669,34,1.236,73,7.199,102,1.474,103,1.732,108,1.328,111,1.185,125,2.862,126,3.176,255,2.527,295,4.268,499,3.754,873,6.5,1027,6.312,1061,6.5,1062,8.884,1063,6.147,1064,7.756,1065,7.756,1066,7.756,1067,7.756,1068,7.756,1069,9.71,1070,9.71]],["title/api/sql/Raster-operators/",[30,4.099,456,3.155]],["text/api/sql/Raster-operators/",[7,1.529,12,0.658,30,1.122,31,1.005,34,1.788,80,0.857,95,1.742,97,0.326,102,1.887,103,1.656,108,1.681,111,1.534,112,1.631,129,1.908,130,0.816,174,0.568,175,0.689,198,1.661,199,1.497,214,2.963,222,0.851,230,0.929,247,2.705,248,0.696,266,1.884,267,2.216,269,3.663,272,1.077,302,1.591,303,0.589,324,0.81,345,0.906,370,4.299,371,1.861,414,1.779,456,1.53,460,0.984,479,3.357,483,1.48,545,2.291,556,1.48,575,1.818,673,5.186,735,1.507,782,2.549,883,0.643,909,4.602,940,5.071,943,3.929,952,1.403,953,1.403,954,2.569,964,5.208,979,6.117,1031,6.463,1038,6.408,1039,7.143,1050,1.45,1051,4.361,1071,2.796,1072,5.236,1073,1.674,1074,1.674,1075,1.674,1076,1.674,1077,3.39,1078,1.674,1079,2.796,1080,3.594,1081,2.413,1082,1.327,1083,1.051,1084,1.195,1085,1.139,1086,2.965,1087,1.674,1088,1.674,1089,1.674,1090,1.674,1091,2.796,1092,2.796,1093,1.674,1094,1.674,1095,1.674,1096,2.796,1097,1.674,1098,1.674,1099,2.796,1100,1.674,1101,1.674,1102,2.796,1103,2.796,1104,1.674,1105,1.674,1106,2.796,1107,1.175,1108,1.674,1109,3.992,1110,1.674,1111,1.674,1112,1.674,1113,1.674,1114,2.965,1115,1.674,1116,1.674,1117,1.674,1118,2.796,1119,4.183,1120,2.569,1121,1.674,1122,1.674,1123,4.183,1124,2.796,1125,1.674,1126,1.674,1127,2.796,1128,1.674,1129,1.674,1130,2.796,1131,1.674,1132,1.674,1133,2.796,1134,1.674,1135,1.674,1136,1.674,1137,2.796,1138,1.674,1139,1.674,1140,1.674,1141,1.674,1142,2.796,1143,1.674,1144,1.674,1145,2.796,1146,1.674,1147,1.674,1148,2.796,1149,2.965,1150,0.845,1151,1.507,1152,1.674,1153,1.674,1154,2.796,1155,2.796,1156,1.674,1157,1.674,1158,2.796,1159,2.485,1160,1.674,1161,1.674,1162,1.674,1163,2.796,1164,1.507,1165,1.674,1166,1.674,1167,1.674,1168,1.674,1169,1.674,1170,1.674,1171,2.796,1172,1.674,1173,0.913,1174,1.674,1175,1.674,1176,1.674,1177,2.796,1178,1.674,1179,1.674,1180,1.674,1181,1.674,1182,1.674]],["title/api/sql/Raster-operators/#rs_add",[1071,7.153]],["text/api/sql/Raster-operators/#rs_add",[7,1.385,12,0.614,34,1.62,102,1.587,108,1.429,111,1.276,112,1.371,247,3.209,479,2.854,673,4.408,883,3.209,909,3.912,940,4.956,943,3.84,979,4.956,1031,6.162,1038,5.862,1039,7.39,1071,7.873,1072,6.617,1073,8.349,1074,8.349,1075,8.349]],["title/api/sql/Raster-operators/#rs_append",[1076,7.586]],["text/api/sql/Raster-operators/#rs_append",[7,1.226,12,0.594,31,3.05,34,1.434,80,3.524,97,1.34,102,1.308,103,1.537,108,1.178,111,1.375,112,1.13,129,4.428,130,3.354,214,4.827,247,3.458,345,3.724,414,5.396,456,4.641,460,4.044,479,2.353,483,3.714,545,4.269,556,3.334,909,3.225,940,4.086,943,3.166,954,7.794,979,6.546,1031,5.455,1050,5.963,1077,6.316,1078,6.883,1079,6.49,1080,6.197,1081,7.321,1082,5.455,1083,4.32,1084,4.916,1085,4.681,1086,8.996,1087,6.883,1088,6.883,1089,6.883,1090,6.883]],["title/api/sql/Raster-operators/#rs_bitwiseand",[1091,7.153]],["text/api/sql/Raster-operators/#rs_bitwiseand",[7,1.381,12,0.613,34,1.614,102,1.578,108,1.421,111,1.269,112,1.363,214,4.456,247,3.192,479,2.838,673,4.384,782,4.384,909,3.891,940,4.929,943,3.819,979,4.929,1031,6.142,1038,5.83,1039,7.366,1091,7.83,1092,7.83,1093,8.304,1094,8.304,1095,8.304]],["title/api/sql/Raster-operators/#rs_bitwiseor",[1096,7.153]],["text/api/sql/Raster-operators/#rs_bitwiseor",[7,1.385,12,0.614,34,1.62,102,1.587,108,1.429,111,1.276,112,1.371,214,4.48,247,3.209,479,2.854,673,4.408,782,4.408,909,3.912,940,4.956,943,3.84,979,4.956,1031,6.162,1038,5.862,1039,7.39,1092,7.873,1096,7.873,1097,8.349,1098,8.349]],["title/api/sql/Raster-operators/#rs_count",[1099,7.153]],["text/api/sql/Raster-operators/#rs_count",[7,1.376,12,0.612,30,5.535,34,1.609,102,1.569,103,1.844,108,1.414,111,1.262,112,1.356,269,4.954,370,3.822,371,6.336,479,2.823,673,4.361,909,3.87,943,3.799,964,5.76,979,4.902,1031,5.008,1038,5.798,1051,5.898,1072,6.546,1099,7.788,1100,8.259,1101,8.259]],["title/api/sql/Raster-operators/#rs_divide",[1102,7.153]],["text/api/sql/Raster-operators/#rs_divide",[7,1.39,12,0.615,34,1.625,102,1.595,108,1.437,111,1.283,112,1.378,479,2.869,673,4.432,735,7.559,909,3.934,940,4.983,943,3.861,1031,6.183,1038,7.158,1039,7.986,1102,7.916,1103,7.916,1104,8.395,1105,8.395]],["title/api/sql/Raster-operators/#rs_fetchregion",[1106,7.153]],["text/api/sql/Raster-operators/#rs_fetchregion",[7,1.315,12,0.596,34,1.538,102,1.459,108,1.314,111,1.174,112,1.261,175,3.16,198,2.088,199,2.381,222,3.902,230,4.263,248,3.193,303,2.702,324,3.716,479,2.624,556,2.846,673,4.054,909,3.598,940,4.558,943,4.438,952,6.435,953,6.435,979,4.558,1031,4.656,1106,7.24,1107,5.39,1108,7.678,1109,10.552,1110,7.678,1111,7.678,1112,7.678,1113,7.678,1114,9.649,1115,7.678,1116,7.678,1117,7.678]],["title/api/sql/Raster-operators/#rs_greaterthan",[1118,7.153]],["text/api/sql/Raster-operators/#rs_greaterthan",[7,1.381,12,0.613,34,1.614,102,1.578,108,1.421,111,1.269,112,1.363,198,2.258,269,4.981,370,4.687,479,2.838,673,4.384,909,3.891,964,6.236,979,4.929,1031,5.035,1051,5.93,1118,7.83,1119,7.194,1120,7.194,1121,8.304,1122,8.304,1123,7.194]],["title/api/sql/Raster-operators/#rs_greaterthanequal",[1124,7.153]],["text/api/sql/Raster-operators/#rs_greaterthanequal",[7,1.376,12,0.612,34,1.609,102,1.569,108,1.414,111,1.262,112,1.356,198,2.246,267,4.585,269,4.954,370,4.672,479,2.823,673,4.361,909,3.87,964,6.221,979,4.902,1031,5.008,1051,5.898,1119,7.155,1120,7.155,1123,7.155,1124,7.788,1125,8.259,1126,8.259]],["title/api/sql/Raster-operators/#rs_lessthan",[1127,7.153]],["text/api/sql/Raster-operators/#rs_lessthan",[7,1.381,12,0.613,34,1.614,102,1.578,108,1.421,111,1.269,112,1.363,198,2.258,266,5.275,269,4.981,370,4.687,479,2.838,673,4.384,909,3.891,964,6.236,979,4.929,1031,5.035,1051,5.93,1119,7.194,1123,7.194,1127,7.83,1128,8.304,1129,8.304]],["title/api/sql/Raster-operators/#rs_lessthanequal",[1130,7.153]],["text/api/sql/Raster-operators/#rs_lessthanequal",[7,1.376,12,0.612,34,1.609,102,1.569,108,1.414,111,1.262,112,1.356,198,2.246,266,5.247,267,4.585,269,4.954,370,4.672,479,2.823,673,4.361,909,3.87,964,6.221,979,4.902,1031,5.008,1051,5.898,1119,7.155,1123,7.155,1130,7.788,1131,8.259,1132,8.259]],["title/api/sql/Raster-operators/#rs_logicaldifference",[1133,7.153]],["text/api/sql/Raster-operators/#rs_logicaldifference",[7,1.367,12,0.609,34,1.598,102,1.553,103,2.239,108,1.399,111,1.249,112,1.342,198,2.222,199,2.534,370,4.641,479,2.793,545,3.878,673,4.314,909,3.829,979,4.85,1031,6.081,1038,7.041,1039,7.891,1133,7.705,1134,8.17,1135,8.17,1136,8.17]],["title/api/sql/Raster-operators/#rs_logicalover",[1137,7.153]],["text/api/sql/Raster-operators/#rs_logicalover",[7,1.371,12,0.61,34,1.604,102,1.561,103,2.247,108,1.406,111,1.256,112,1.349,199,2.547,267,4.56,370,4.657,479,2.808,673,4.337,909,3.849,1031,6.101,1038,7.064,1039,7.91,1137,7.746,1138,8.214,1139,8.214,1140,8.214,1141,8.214]],["title/api/sql/Raster-operators/#rs_mean",[1142,7.153]],["text/api/sql/Raster-operators/#rs_mean",[7,1.394,12,0.616,34,1.63,95,6.011,102,1.604,103,1.885,108,1.445,111,1.29,112,1.386,370,3.907,479,2.885,673,4.457,909,3.956,940,5.011,943,3.883,979,6.073,1031,5.119,1072,6.69,1142,7.96,1143,8.441,1144,8.441]],["title/api/sql/Raster-operators/#rs_mode",[1145,7.153]],["text/api/sql/Raster-operators/#rs_mode",[7,1.39,12,0.615,34,1.625,102,1.595,103,1.874,108,1.437,111,1.283,112,1.378,272,5.401,302,5.471,479,2.869,575,5.148,673,4.432,909,3.934,940,4.983,943,3.861,979,6.052,1031,5.091,1072,6.654,1145,7.916,1146,8.395,1147,8.395]],["title/api/sql/Raster-operators/#rs_modulo",[1148,7.153]],["text/api/sql/Raster-operators/#rs_modulo",[7,1.385,12,0.614,34,1.62,102,1.587,108,1.429,111,1.276,112,1.371,269,5.008,370,3.864,479,2.854,673,4.408,782,4.408,909,3.912,964,5.798,979,4.956,1031,5.063,1051,5.963,1148,7.873,1149,10.162,1150,4.213,1151,7.517,1152,8.349,1153,8.349]],["title/api/sql/Raster-operators/#rs_multiply",[1154,7.153]],["text/api/sql/Raster-operators/#rs_multiply",[7,1.385,12,0.614,34,1.62,102,1.587,108,1.429,111,1.276,112,1.371,247,3.209,479,2.854,673,4.408,909,3.912,940,4.956,943,3.84,979,4.956,1031,6.162,1038,5.862,1039,7.39,1072,6.617,1103,7.873,1154,7.873,1155,7.873,1156,8.349,1157,8.349]],["title/api/sql/Raster-operators/#rs_multiplyfactor",[1158,7.153]],["text/api/sql/Raster-operators/#rs_multiplyfactor",[7,1.385,12,0.614,34,1.62,102,1.587,108,1.429,111,1.276,112,1.371,129,5.372,174,2.831,479,2.854,673,4.408,909,3.912,940,4.956,943,3.84,979,4.956,1031,5.063,1038,5.862,1072,6.617,1155,7.873,1158,7.873,1159,8.516,1160,8.349,1161,8.349,1162,8.349]],["title/api/sql/Raster-operators/#rs_normalize",[1163,7.153]],["text/api/sql/Raster-operators/#rs_normalize",[7,1.24,12,0.576,34,1.449,102,1.728,111,1.39,112,1.493,199,2.82,370,4.209,575,5.576,673,4.802,979,5.398,1077,6.385,1163,8.576,1164,8.188]],["title/api/sql/Raster-operators/#rs_normalizeddifference",[1080,6.83]],["text/api/sql/Raster-operators/#rs_normalizeddifference",[7,1.362,12,0.608,34,1.593,102,1.544,103,1.815,108,1.391,111,1.242,112,1.334,214,4.361,247,3.124,479,2.778,545,3.857,673,4.291,909,3.808,940,4.824,1031,6.062,1038,7.018,1039,7.269,1077,5.706,1079,7.664,1080,7.317,1165,8.127,1166,8.127,1167,8.127,1168,8.127,1169,8.127,1170,8.127]],["title/api/sql/Raster-operators/#rs_squareroot",[1171,7.153]],["text/api/sql/Raster-operators/#rs_squareroot",[7,1.394,12,0.616,34,1.63,102,1.604,108,1.445,111,1.29,112,1.386,370,3.907,479,2.885,673,4.457,782,4.457,909,3.956,940,5.011,943,3.883,979,6.073,1031,5.119,1171,7.96,1172,8.441,1173,4.606,1174,8.441,1175,8.441,1176,8.441]],["title/api/sql/Raster-operators/#rs_subtract",[1177,7.153]],["text/api/sql/Raster-operators/#rs_subtract",[7,1.381,12,0.613,34,1.614,102,1.578,108,1.421,111,1.269,112,1.363,247,3.192,479,2.838,673,4.384,909,3.891,940,4.929,979,4.929,1031,6.142,1038,7.111,1039,7.366,1072,6.581,1177,7.83,1178,8.304,1179,8.304,1180,8.304,1181,8.304,1182,8.304]],["title/api/viz/java-api/",[1183,2.85]],["text/api/viz/java-api/",[27,4.181,40,4.141,84,2.538,89,2.963,90,6.954,91,2.975,92,3.99,93,4.743,94,6.801,95,5.28,96,4.242,97,1.749,98,3.392]],["title/api/viz/sql/",[1184,6.357]],["text/api/viz/sql/",[2,0.994,7,1.155,12,0.662,19,0.84,32,1.991,34,1.277,35,2.174,60,1.339,80,2.323,84,1.281,85,2.181,91,1.502,93,2.026,97,0.883,98,1.037,100,2.541,101,1.705,102,1.414,103,1.501,107,0.535,108,1.371,111,1.354,112,1.315,118,1.114,119,1.062,125,2.481,126,2.372,175,1.867,176,1.186,180,3.161,181,3.337,185,1.725,216,0.951,224,1.568,236,3.185,248,2.796,297,3.596,303,1.596,344,1.257,364,2.273,370,2.1,390,1.497,394,1.568,408,1.451,423,1.186,445,3.433,457,0.716,475,2.834,479,0.939,487,3.177,499,1.33,508,2.226,519,0.928,525,1.93,545,2.153,573,1.019,575,1.685,612,1.264,634,2.08,650,1.816,660,1.999,670,1.296,768,1.451,770,1.725,771,1.54,783,1.234,794,1.072,807,1.816,865,1.842,868,1.842,879,1.725,883,1.744,884,1.028,885,1.513,886,1.513,887,2.998,888,1.816,889,1.526,890,2.497,891,1.44,892,1.792,893,1.418,895,1.18,896,1.649,898,1.526,902,2.08,903,2.721,943,2.665,961,1.475,963,1.768,995,2.986,1012,1.513,1013,1.963,1027,3.692,1046,3.802,1052,1.963,1062,2.303,1077,1.93,1084,1.963,1150,5.373,1185,1.348,1186,2.303,1187,2.749,1188,1.193,1189,1.999,1190,2.749,1191,2.475,1192,1.999,1193,4.72,1194,6.163,1195,6.53,1196,1.999,1197,2.178,1198,2.178,1199,1.632,1200,2.475,1201,2.08,1202,2.306,1203,2.475,1204,2.475,1205,2.178,1206,2.178,1207,2.237,1208,2.303,1209,5.635,1210,4.537,1211,2.749,1212,1.93,1213,1.667,1214,1.87,1215,2.749,1216,1.705,1217,2.178,1218,2.749,1219,1.93,1220,2.749,1221,2.749,1222,2.749,1223,2.749,1224,2.749,1225,2.08,1226,4.384,1227,3.433,1228,3.802,1229,2.038,1230,2.303,1231,1.649,1232,2.475,1233,1.322,1234,2.475,1235,3.882,1236,1.792,1237,2.303,1238,2.475,1239,2.475,1240,2.475,1241,3.596,1242,4.067,1243,4.755,1244,5.224,1245,4.095,1246,4.085,1247,2.475,1248,3.802,1249,2.475,1250,3.776,1251,3.299,1252,2.475,1253,1.87,1254,2.475,1255,2.749,1256,4.085,1257,2.475]],["title/api/viz/sql/#quick-start",[344,2.796,865,4.099]],["text/api/viz/sql/#quick-start",[2,2.001,7,0.96,12,0.672,60,3.431,80,3.605,176,3.039,390,1.567,423,3.039,457,1.833,487,4.743,794,2.745,879,4.419,883,3.51,884,2.633,885,3.875,886,3.875,887,6.033,888,4.653,889,3.909,890,5.025,891,3.689,892,4.59,893,3.632,895,3.023,896,4.224,898,3.909,902,5.329,903,5.477,1185,3.454,1186,5.901,1187,7.041,1188,3.056,1189,5.121,1190,7.041,1191,6.34]],["title/api/viz/sql/#regular-functions",[35,1.977,1192,4.448]],["text/api/viz/sql/#regular-functions",[]],["title/api/viz/sql/#st_colorize",[1193,5.326]],["text/api/viz/sql/#st_colorize",[91,2.62,100,4.435,102,1.504,103,1.768,108,1.355,125,2.921,126,3.242,248,3.292,370,4.552,390,2.382,394,4.517,475,3.015,479,2.706,499,3.832,519,2.673,525,5.558,573,2.934,783,3.556,1013,5.654,1046,6.635,1150,3.995,1193,5.558,1194,7.152,1195,6.862,1196,5.757,1197,6.275,1198,6.275,1199,4.699,1200,7.128,1201,5.991,1202,4.024,1203,7.128,1204,7.128]],["title/api/viz/sql/#st_encodeimage",[1226,5.741]],["text/api/viz/sql/#st_encodeimage",[7,1.114,12,0.584,19,2.496,34,1.302,93,3.648,102,1.553,103,1.824,108,1.399,111,1.533,112,1.342,125,3.7,224,4.662,475,3.112,943,4.613,1027,8.161,1062,6.847,1084,5.835,1202,4.153,1226,7.59,1227,6.183,1228,6.847,1229,6.057,1230,6.847,1231,4.901,1232,7.357,1233,3.929,1234,7.357]],["title/api/viz/sql/#st_pixelize",[1235,5.084]],["text/api/viz/sql/#st_pixelize",[7,1.085,12,0.648,34,1.268,97,1.549,101,4.936,102,1.512,107,1.549,108,1.362,111,1.216,112,1.307,119,3.073,185,4.994,216,2.754,248,3.309,475,3.031,508,4.841,575,4.88,650,5.258,670,3.753,770,4.994,771,4.458,1150,4.015,1235,6.613,1236,5.187,1237,6.669,1238,7.165,1239,7.165,1240,7.165,1241,7.82]],["title/api/viz/sql/#st_tilename",[1242,5.326]],["text/api/viz/sql/#st_tilename",[7,1.001,12,0.606,32,3.224,34,1.171,84,2.075,85,3.532,91,2.431,102,1.396,103,1.64,108,1.606,111,1.123,112,1.206,125,2.71,175,3.023,180,5.64,181,5.955,248,3.055,297,7.436,303,3.301,445,7.1,475,2.798,995,4.149,1150,4.734,1209,6.156,1242,6.587,1243,6.681,1244,6.587,1245,5.163,1246,8.448,1247,6.614,1248,6.156,1249,6.614]],["title/api/viz/sql/#aggregate-functions",[35,1.977,100,3.426]],["text/api/viz/sql/#aggregate-functions",[]],["title/api/viz/sql/#st_render",[1250,4.945]],["text/api/viz/sql/#st_render",[7,1.006,12,0.62,34,1.176,93,3.296,97,1.437,102,1.403,103,1.648,108,1.264,111,1.128,112,1.212,126,3.854,175,3.038,248,3.069,364,4.715,408,3.897,475,2.811,768,3.897,943,3.395,961,3.961,1150,5.506,1195,5.771,1209,6.186,1227,5.586,1228,6.186,1243,4.382,1244,7.274,1245,5.702,1248,6.186,1250,6.135,1251,6.844,1252,6.646,1253,5.021,1254,6.646,1255,7.381,1256,8.474,1257,6.646]],["title/archive/api/GeoSpark-Python-API/",[43,2.34,88,3.75]],["text/archive/api/GeoSpark-Python-API/",[28,4.678,99,9.295]],["title/archive/api/GeoSpark-Scala-and-Java-API/",[87,3.669,88,3.75]],["text/archive/api/GeoSpark-Scala-and-Java-API/",[12,0.445,27,4.585,40,4.428,49,5.457,53,3.142,69,2.918,91,2.734,92,3.667,93,5.071,94,6.25,95,4.852,96,4.032,97,1.608,98,3.117,1258,8.259,1259,6.671,1260,3.971]],["title/archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api",[27,2.017,40,1.997,93,2.288]],["text/archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api",[27,4.504,40,4.292,49,5.578,53,3.165,69,2.983,91,2.794,92,3.748,93,4.915,94,6.388,95,4.96,96,4.086,97,1.643,98,3.185,1258,8.441,1259,6.76,1260,4.059]],["title/archive/api/sql/GeoSparkSQL-AggregateFunction/",[35,1.977,100,3.426]],["text/archive/api/sql/GeoSparkSQL-AggregateFunction/",[7,1.372,12,0.652,34,1.604,101,6.243,102,1.913,103,2.247,104,4.655,105,3.583,106,3.556,107,1.352,108,1.723,109,7.462,111,1.538,112,1.653,113,4.856,114,4.259,115,7.188,116,3.817,117,5.505,119,4.119,120,5.264,130,3.384,356,3.727,475,3.446,476,7.617]],["title/archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr",[101,4.705]],["text/archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr",[7,1.197,12,0.603,34,1.399,101,6.497,102,1.669,103,1.961,104,5.885,105,4.53,106,4.496,107,1.709,108,1.503,109,6.51,111,1.342,112,1.442,113,5.621,114,5.384,475,3.344]],["title/archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr",[115,5.418]],["text/archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr",[7,1.204,12,0.604,34,1.408,102,1.678,103,1.972,108,1.512,109,6.547,111,1.35,112,1.45,115,7.507,116,3.762,117,7,119,4.06,120,5.137,475,3.363]],["title/archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr",[476,5.741]],["text/archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr",[7,1.204,12,0.604,34,1.408,102,1.678,103,1.972,108,1.512,109,6.547,111,1.35,112,1.45,116,3.762,119,4.06,120,5.137,130,4.303,356,4.739,476,7.955]],["title/archive/api/sql/GeoSparkSQL-Constructor/",[121,3.913]],["text/archive/api/sql/GeoSparkSQL-Constructor/",[7,1.104,12,0.675,34,1.386,53,0.559,59,0.811,84,0.988,85,0.972,89,1.817,91,1.531,92,1.553,97,0.681,98,0.763,102,1.6,107,1.577,108,1.441,111,1.329,112,1.504,113,2.957,116,1.252,119,1.351,120,3.206,123,0.615,125,3.106,126,1.432,134,2.416,135,4.102,136,1.765,137,1.694,138,0.992,139,5.526,140,4.048,156,0.966,158,3.342,159,1.564,160,1.602,161,2.593,162,3.014,163,1.164,164,1.694,168,0.887,169,2.502,170,4.174,171,3.303,172,3.303,177,4.264,178,2.567,179,1.196,180,1.103,181,1.164,182,1.694,183,1.694,184,3.909,185,3.909,186,4.264,187,1.694,188,2.523,189,1.602,190,1.602,191,1.602,192,1.602,193,1.694,194,1.694,195,1.694,196,1.694,197,1.076,198,0.951,199,1.931,200,1.085,201,1.035,202,1.24,203,4.264,204,1.103,205,1.269,206,3.665,207,2.773,208,2.773,216,0.7,218,0.859,239,0.824,251,1.094,281,2.055,303,0.711,354,1.419,389,0.807,390,1.029,392,2.077,397,1.2,398,0.985,410,1.201,414,4.642,422,0.73,459,1.502,466,0.924,475,3.085,477,1.602,478,1.833,479,1.196,480,1.765,481,3.143,482,1.703,483,0.749,484,1.24,485,1.396,486,1.375,487,2.659,488,1.254,489,1.694,490,4.962,491,0.959,492,1.419,493,2.015,494,2.902,495,1.82,496,2.28,497,1.444,498,2.099,499,2.238,500,1.318,501,1.989,502,1.396,503,1.53,504,1.47,505,1.419,506,1.694,507,1.085,508,1.716,509,3.875,510,1.269,511,1.694,512,1.694,513,1.694,514,1.694,515,1.694,516,1.716,517,0.936,518,1.02,519,0.683,520,1.877,521,1.694,522,1.53,523,1.694,524,1.694,525,1.419,526,1.336,528,1.396,529,1.027,530,1.694,531,1.694,532,1.694,537,4.164,538,1.051,539,1.47,540,1.226,541,0.966,542,1.82,543,1.82,544,1.103,545,0.959,548,3.15,549,3.15,551,2.416,552,2.379,553,2.456,670,0.953,698,1.751,704,1.82,726,1.336,820,1.254,821,1.269,823,2.015,824,1.24,825,1.301,826,0.849,961,1.085,971,0.972,1183,0.759,1261,5.596,1262,2.196,1263,1.318,1264,1.375,1265,1.318,1266,1.318,1267,5.987,1268,5.987,1269,5.987,1270,1.728,1271,3.299,1272,3.763,1273,2.021,1274,1.694,1275,2.021]],["title/archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt",[158,4.07]],["text/archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt",[7,1.114,12,0.636,34,1.302,102,1.553,107,1.952,108,1.399,111,1.249,112,1.647,120,4.753,125,3.015,135,3.981,139,7.162,140,4.85,156,3.903,158,5.823,159,6.322,160,6.476,161,6.057,414,4.901,475,3.112,1261,5.644,1267,6.322,1268,6.322,1269,6.322]],["title/archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb",[162,4.945]],["text/archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb",[7,1.151,12,0.616,34,1.345,102,1.604,107,1.643,108,1.445,111,1.29,112,1.386,120,4.91,125,3.775,135,4.113,138,4.141,139,7.306,140,5.011,162,6.669,163,4.863,164,7.074,414,5.064,1261,5.831,1267,6.531,1268,6.531,1269,6.531]],["title/archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson",[134,5.24]],["text/archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson",[7,0.879,12,0.676,34,1.373,89,2.84,102,1.225,107,1.255,108,1.475,111,0.985,112,1.059,119,3.327,125,2.379,126,3.528,134,4.454,135,3.142,136,4.347,137,5.403,139,6.153,170,3.679,218,2.738,414,3.868,422,2.327,475,2.455,480,3.253,481,4.347,487,3.679,493,3.714,498,3.868,499,4.17,516,3.163,537,8.737,538,3.351,539,4.689,540,3.91,541,3.08,542,5.805,543,5.805,544,3.518,545,3.06,1261,4.454,1267,4.988,1268,4.988,1269,4.988,1270,3.185]],["title/archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile",[89,1.689,477,4.061,478,2.684]],["text/archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile",[12,0.673,34,0.84,84,1.488,89,1.737,91,1.744,92,3.328,97,1.459,102,1.001,107,1.459,111,1.146,123,1.604,135,2.568,158,2.827,251,2.851,389,2.104,392,3.367,410,1.808,459,3.218,466,2.409,475,2.007,478,2.76,479,1.801,480,2.659,481,4.402,482,2.936,483,1.953,484,3.231,485,3.64,486,3.584,487,3.725,488,3.268,489,4.416,490,8.557,491,2.501,492,3.699,493,3.035,494,5.476,495,4.744,496,3.435,497,3.763,498,3.161,499,2.55,500,3.435,501,3.431,502,3.64,503,3.988,504,3.832,505,3.699,506,4.416,507,2.827,508,2.585,509,7.312,510,3.307,511,4.416,512,4.416,513,4.416,514,4.416,515,4.416,516,2.585,517,2.439,518,2.659,519,1.779,520,2.827,521,4.416,522,3.988,523,4.416,524,4.416,525,3.699,526,3.482,528,3.64,529,2.678,530,4.416,531,4.416,532,4.416,1270,2.603,1271,7.068]],["title/archive/api/sql/GeoSparkSQL-Constructor/#st_point",[178,4.211]],["text/archive/api/sql/GeoSparkSQL-Constructor/#st_point",[7,1.041,12,0.66,34,1.218,102,1.452,108,1.308,111,1.168,112,1.254,125,2.819,135,3.723,140,4.535,178,5.34,179,2.611,180,4.168,181,4.401,182,6.402,183,6.402,184,4.795,185,6.607,281,5.651,414,4.583,475,2.91,496,4.98,551,6.644,552,6.542,553,6.753,1261,5.277,1267,5.911,1268,5.911,1269,5.911]],["title/archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext",[186,5.869]],["text/archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext",[7,1.073,12,0.656,34,1.255,102,1.497,108,1.348,111,1.204,112,1.61,125,2.906,135,3.838,140,4.675,161,5.839,169,4.261,170,5.594,171,5.625,172,5.625,179,2.692,184,6.153,185,6.153,186,8.259,187,6.6,414,4.725,475,2.999,1261,5.44,1267,6.094,1268,6.094,1269,6.094]],["title/archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext",[203,5.869]],["text/archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext",[7,1.047,12,0.658,34,1.224,102,1.459,108,1.314,111,1.174,112,1.584,116,2.748,120,5.613,125,2.833,135,3.741,139,6.891,140,4.558,169,4.154,170,5.506,171,5.483,172,5.483,203,8.164,204,4.189,205,4.819,206,7.648,207,6.085,208,6.085,414,4.606,475,2.924,1261,5.304,1267,5.941,1268,5.941,1269,5.941]],["title/archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext",[177,5.869]],["text/archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext",[7,1.063,12,0.659,34,1.242,102,1.481,108,1.334,111,1.192,112,1.599,125,2.876,135,3.799,140,4.627,168,3.422,169,4.218,170,5.558,171,5.567,172,5.567,177,8.221,206,6.179,207,6.179,208,6.179,414,4.676,475,2.969,548,8.771,549,8.771,1261,5.385,1267,6.032,1268,6.032,1269,6.032]],["title/archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope",[188,4.139]],["text/archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope",[7,1.021,12,0.664,34,1.194,102,1.423,108,1.282,111,1.145,112,1.23,113,5.097,116,2.681,125,2.764,135,3.65,184,4.701,188,5.183,189,5.936,190,5.936,191,5.936,192,5.936,193,6.277,194,6.277,195,6.277,196,6.277,197,3.986,198,2.037,199,3.402,200,4.019,201,3.835,202,4.593,414,4.493,475,2.852,1261,5.174,1267,5.795,1268,5.795,1269,5.795]],["title/archive/api/sql/GeoSparkSQL-Constructor/#st_circle",[1272,6.173]],["text/archive/api/sql/GeoSparkSQL-Constructor/#st_circle",[7,1.047,12,0.627,34,1.224,53,2.124,84,2.168,85,3.692,91,2.541,98,2.897,102,1.459,107,1.495,108,1.314,111,1.174,112,1.261,113,5.177,135,3.741,184,4.819,198,2.088,199,2.381,216,2.657,239,3.128,303,2.702,354,5.39,392,3.448,397,4.558,398,3.741,475,2.924,698,6.652,704,6.913,820,4.762,821,4.819,823,5.558,824,4.708,825,4.94,826,3.226,1272,7.852,1273,7.678,1274,6.435,1275,7.678]],["title/archive/api/sql/GeoSparkSQL-Function/",[35,2.453]],["text/archive/api/sql/GeoSparkSQL-Function/",[7,1.303,12,0.657,28,0.481,34,1.523,59,0.406,85,0.903,91,1.447,92,0.45,97,0.366,98,0.992,102,1.857,103,2.225,105,0.522,106,1.346,107,2.028,108,1.695,111,1.461,112,1.626,116,2.519,118,0.411,119,3.824,123,0.308,125,1.211,126,1.076,129,1.209,130,1.281,132,2.683,136,0.511,138,2.145,155,3.456,168,2.871,169,0.548,174,2.596,175,2.576,176,1.417,178,1.823,179,3.212,180,0.553,181,0.583,198,3.09,199,3.398,213,1.116,214,0.543,215,0.854,216,2.824,217,1.043,218,3.465,219,1.949,220,0.803,222,0.955,223,0.628,224,1.5,230,0.562,241,1.877,244,1.67,245,1.393,246,0.849,247,0.389,248,2.474,249,0.849,250,2.365,251,1.776,252,0.849,253,0.849,254,1.845,255,2.433,256,0.849,257,1.393,258,0.849,259,0.849,260,0.849,262,2.034,263,1.575,264,1.298,265,0.849,266,0.643,267,0.562,268,0.849,269,1.127,272,1.209,273,0.824,279,2.106,281,1.929,287,1.486,288,0.689,289,2.034,290,1.393,291,0.849,292,1.788,295,1.446,303,1.538,304,1.194,306,2.735,321,0.382,323,1.393,324,0.49,325,1.393,326,1.949,327,0.849,328,0.849,329,0.849,330,0.824,331,0.849,332,1.911,333,0.849,334,0.643,335,0.608,336,1.713,337,1.393,338,1.454,339,0.614,340,0.43,341,0.849,342,1.845,343,1.195,344,0.463,345,1.422,346,0.849,347,3.416,349,0.922,350,0.711,351,1.393,352,2.233,353,0.849,354,0.711,355,0.652,356,1.008,357,1.877,358,2.034,359,0.849,360,1.877,361,1.893,362,1.949,363,1.454,364,0.507,365,1.393,366,0.849,370,0.469,373,1.761,389,0.405,390,0.225,392,0.844,394,1.072,397,2.867,398,0.494,399,0.849,400,0.849,401,0.567,404,1.209,405,1.209,406,0.766,407,0.766,408,0.992,409,0.557,410,0.645,411,0.849,412,0.652,413,0.849,414,0.608,415,1.366,416,0.849,417,0.849,418,0.849,419,1.342,420,1.072,421,1.152,422,1.185,423,0.437,424,0.689,425,0.595,426,0.711,427,0.689,428,1.393,429,0.849,430,0.784,438,1.393,439,0.849,440,0.849,471,1.446,475,1.839,483,0.375,507,0.543,519,0.342,552,2.233,554,2.083,555,0.621,556,0.696,557,2.54,558,0.573,559,1.692,560,1.692,561,2.602,562,1.366,564,0.849,565,0.849,570,2.203,571,0.803,581,0.711,586,1.072,587,0.877,589,0.803,596,1.989,597,0.912,598,0.912,599,0.912,602,1.489,603,0.912,604,1.319,605,0.912,606,0.784,607,1.989,608,0.912,609,2.345,610,2.06,611,1.489,612,0.466,613,0.669,614,0.912,615,1.489,616,0.912,617,1.489,618,1.575,619,1.342,620,1.575,621,1.393,622,1.575,623,1.989,624,0.912,625,0.912,626,1.989,627,0.912,628,0.912,629,0.912,633,0.46,644,0.766,648,2.083,649,0.912,650,0.669,651,0.903,652,2.387,653,0.912,654,0.652,658,0.79,673,0.535,677,1.877,678,1.454,679,1.298,694,0.66,716,1.989,717,0.669,718,2.305,719,0.912,720,0.912,721,1.489,722,1.179,723,1.692,724,1.989,725,0.737,726,0.669,727,1.575,728,0.912,729,0.912,730,0.912,731,1.489,732,0.912,733,0.912,770,1.179,771,1.053,772,0.608,775,1.278,856,0.766,1012,0.557,1276,0.912,1277,1.013,1278,1.013,1279,1.013,1280,1.013,1281,1.013,1282,1.013,1283,1.879,1284,1.013,1285,0.7,1286,1.013,1287,5.149]],["title/archive/api/sql/GeoSparkSQL-Function/#st_distance",[287,4.288]],["text/archive/api/sql/GeoSparkSQL-Function/#st_distance",[7,1.163,12,0.633,34,1.36,102,1.622,103,1.906,108,1.461,111,1.305,112,1.402,119,4.272,213,3.625,214,4.58,215,3.879,216,2.954,217,4.739,218,4.374,287,5.822,288,5.806,475,3.251]],["title/archive/api/sql/GeoSparkSQL-Function/#st_convexhull",[596,5.741]],["text/archive/api/sql/GeoSparkSQL-Function/#st_convexhull",[7,1.204,12,0.604,34,1.408,102,1.678,103,1.972,108,1.512,111,1.35,112,1.45,119,4.06,216,3.056,218,3.751,475,3.363,596,7.955,597,7.952,598,7.952,599,7.952]],["title/archive/api/sql/GeoSparkSQL-Function/#st_envelope",[289,5.869]],["text/archive/api/sql/GeoSparkSQL-Function/#st_envelope",[7,1.211,12,0.606,34,1.416,102,1.688,103,1.983,105,4.582,106,4.548,108,1.521,111,1.358,112,1.459,119,4.074,216,3.074,218,3.773,289,8.161,475,3.383]],["title/archive/api/sql/GeoSparkSQL-Function/#st_length",[358,5.869]],["text/archive/api/sql/GeoSparkSQL-Function/#st_length",[7,1.218,12,0.607,34,1.424,102,1.698,103,1.995,108,1.53,111,1.366,112,1.467,119,4.088,216,3.092,218,3.795,358,8.19,359,7.488,475,3.403]],["title/archive/api/sql/GeoSparkSQL-Function/#st_area",[219,5.624]],["text/archive/api/sql/GeoSparkSQL-Function/#st_area",[7,1.218,12,0.607,34,1.424,102,1.698,103,1.995,108,1.53,111,1.366,112,1.467,119,4.088,216,3.092,218,3.795,219,7.847,220,7.082,475,3.403]],["title/archive/api/sql/GeoSparkSQL-Function/#st_centroid",[570,6.357]],["text/archive/api/sql/GeoSparkSQL-Function/#st_centroid",[7,1.211,12,0.606,34,1.416,102,1.688,103,1.983,108,1.521,111,1.358,112,1.459,119,4.074,179,3.036,216,3.074,218,3.773,475,3.383,570,8.84,571,7.04]],["title/archive/api/sql/GeoSparkSQL-Function/#st_transform",[397,4.503]],["text/archive/api/sql/GeoSparkSQL-Function/#st_transform",[7,1.142,12,0.648,34,1.335,85,4.029,91,3.145,92,2.746,102,1.176,108,1.059,111,1.281,112,1.376,119,3.933,126,3.891,216,2.141,218,3.559,303,2.948,343,2.253,345,3.347,370,2.863,389,2.471,390,1.377,392,3.763,397,6.513,398,3.014,399,5.184,400,5.184,401,3.465,404,3.98,405,3.98,406,4.682,407,4.682,408,4.424,409,3.404,410,2.123,411,5.184,412,3.98,413,5.184,414,3.711,415,4.499,416,5.184,417,5.184,418,5.184,419,4.418,420,4.781,421,5.138,422,3.025,423,2.67,424,4.208,425,3.635,426,4.343,427,4.208,475,2.356,507,3.319,1012,3.404,1276,5.57,1277,6.186,1278,6.186,1279,6.186]],["title/archive/api/sql/GeoSparkSQL-Function/#st_intersection",[471,4.175]],["text/archive/api/sql/GeoSparkSQL-Function/#st_intersection",[7,1.17,12,0.634,34,1.368,102,1.631,103,1.917,107,1.671,108,1.469,111,1.312,112,1.409,119,4.282,215,3.901,216,2.97,217,4.765,218,4.389,356,4.606,471,5.687,673,4.532]],["title/archive/api/sql/GeoSparkSQL-Function/#st_isvalid",[357,5.418]],["text/archive/api/sql/GeoSparkSQL-Function/#st_isvalid",[7,1.204,12,0.604,34,1.408,102,1.678,107,1.719,108,1.512,111,1.35,112,1.45,119,4.06,138,4.333,216,3.056,218,3.751,222,4.489,272,5.682,349,4.333,357,7.507]],["title/archive/api/sql/GeoSparkSQL-Function/#st_makevalid",[677,5.418]],["text/archive/api/sql/GeoSparkSQL-Function/#st_makevalid",[7,0.996,12,0.585,34,1.165,91,3.096,97,1.423,102,1.389,103,1.632,107,1.821,108,1.252,111,1.117,112,1.2,116,4.182,123,2.225,138,3.587,216,2.53,224,4.171,248,3.04,404,4.704,405,4.704,410,2.509,415,5.317,422,2.639,658,3.072,677,6.68,678,7.237,679,5.05,694,4.766,770,5.87,771,5.239,772,4.386,775,6.362,856,5.533,1280,7.311,1281,7.311,1282,7.311,1283,9.354,1284,7.311,1285,5.05,1286,7.311]],["title/archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce",[716,5.741]],["text/archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce",[7,1.096,12,0.606,34,1.282,102,1.528,107,1.565,108,1.377,111,1.229,112,1.32,119,3.835,138,3.945,216,2.783,218,3.415,248,3.344,303,3.494,336,6.474,361,3.945,373,5.389,483,2.98,552,7.654,716,7.516,717,5.314,718,7.9,719,7.24,720,7.24]],["title/archive/api/sql/GeoSparkSQL-Function/#st_issimple",[352,5.16]],["text/archive/api/sql/GeoSparkSQL-Function/#st_issimple",[7,1.19,12,0.601,34,1.391,102,1.659,106,4.47,108,1.495,111,1.334,112,1.434,119,4.032,138,4.283,179,2.984,216,3.021,218,3.708,349,4.283,352,7.101,354,6.13,355,5.617,356,4.685]],["title/archive/api/sql/GeoSparkSQL-Function/#st_buffer",[262,5.869]],["text/archive/api/sql/GeoSparkSQL-Function/#st_buffer",[7,1.138,12,0.614,34,1.331,102,1.587,103,1.864,108,1.429,111,1.276,112,1.371,119,3.925,138,4.096,179,2.854,198,2.27,213,4.316,216,2.889,218,3.546,262,7.863,263,8.516,264,5.767,265,6.997,266,5.304,267,4.635,268,6.997,269,5.008]],["title/archive/api/sql/GeoSparkSQL-Function/#st_astext",[244,4.819]],["text/archive/api/sql/GeoSparkSQL-Function/#st_astext",[7,1.183,12,0.6,34,1.384,102,1.65,103,1.938,107,1.69,108,1.486,111,1.327,112,1.425,119,4.018,125,3.203,138,4.259,169,4.697,216,3.004,218,3.687,222,4.412,223,5.384,224,4.953,244,6.61]],["title/archive/api/sql/GeoSparkSQL-Function/#st_asgeojson",[241,5.418]],["text/archive/api/sql/GeoSparkSQL-Function/#st_asgeojson",[7,1.197,12,0.603,34,1.399,102,1.669,103,1.961,107,1.709,108,1.503,111,1.342,112,1.442,119,4.046,125,3.24,136,4.431,216,3.039,218,3.729,224,5.01,241,7.481,1287,5.649]],["title/archive/api/sql/GeoSparkSQL-Function/#st_npoints",[360,5.418]],["text/archive/api/sql/GeoSparkSQL-Function/#st_npoints",[12,0.61,102,1.718,103,2.019,107,1.76,108,1.548,112,1.484,119,4.116,130,4.405,179,3.09,216,3.128,218,3.839,360,7.612]],["title/archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology",[724,5.741]],["text/archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology",[12,0.623,98,3.76,102,1.536,107,1.939,108,1.384,112,1.327,118,3.277,119,3.848,130,3.939,199,2.507,216,2.797,218,3.433,269,4.849,279,4.411,321,3.051,361,3.966,589,6.407,607,7.54,679,5.584,724,7.54,725,5.879,726,5.342,727,8.35,728,7.279,729,7.279,730,7.279]],["title/archive/api/sql/GeoSparkSQL-Function/#st_geometrytype",[626,5.741]],["text/archive/api/sql/GeoSparkSQL-Function/#st_geometrytype",[7,1.177,12,0.598,34,1.376,102,1.64,103,1.927,107,1.68,108,1.478,111,1.319,112,1.417,119,4.004,125,3.185,130,4.206,216,2.987,218,3.666,519,2.915,604,6.06,626,7.847,627,7.772,628,7.772,629,7.772]],["title/archive/api/sql/GeoSparkSQL-Function/#st_linemerge",[648,6.012]],["text/archive/api/sql/GeoSparkSQL-Function/#st_linemerge",[12,0.54,91,2.704,97,1.59,102,1.553,103,2.423,107,1.952,108,1.399,112,1.342,168,3.586,176,3.527,216,2.827,230,4.536,272,5.257,273,6.649,295,4.496,326,6.057,350,5.736,648,7.949,649,7.357,650,5.399,651,4.822,652,8.229,653,7.357,654,5.257,1287,5.257]],["title/archive/api/sql/GeoSparkSQL-Function/#st_azimuth",[245,5.624]],["text/archive/api/sql/GeoSparkSQL-Function/#st_azimuth",[7,1.073,12,0.652,34,1.255,102,1.497,103,1.759,108,1.348,111,1.204,112,1.293,178,5.443,179,3.649,199,3.684,245,5.839,246,6.6,247,3.027,248,3.275,249,6.6,250,4.261,251,4.261,252,6.6,253,6.6,254,5.529,255,2.566,256,6.6,1287,5.067]],["title/archive/api/sql/GeoSparkSQL-Function/#st_x",[428,5.624]],["text/archive/api/sql/GeoSparkSQL-Function/#st_x",[7,1.144,12,0.63,34,1.338,102,1.595,103,1.874,108,1.437,111,1.283,112,1.378,178,4.661,179,3.485,180,4.58,199,3.405,248,3.491,250,4.542,251,4.542,254,5.894,255,2.735,303,2.954,428,6.224,429,7.035,430,6.495,1287,5.401]],["title/archive/api/sql/GeoSparkSQL-Function/#st_y",[438,5.624]],["text/archive/api/sql/GeoSparkSQL-Function/#st_y",[7,1.144,12,0.63,34,1.338,102,1.595,103,1.874,108,1.437,111,1.283,112,1.378,178,4.661,179,3.485,181,4.836,199,3.405,248,3.491,250,4.542,251,4.542,254,5.894,255,2.735,303,2.954,438,6.224,439,7.035,440,7.035,1287,5.401]],["title/archive/api/sql/GeoSparkSQL-Function/#st_startpoint",[731,6.012]],["text/archive/api/sql/GeoSparkSQL-Function/#st_startpoint",[7,1.144,12,0.591,34,1.338,102,1.595,103,1.874,107,1.634,108,1.437,111,1.283,112,1.378,155,3.885,168,3.685,179,2.869,248,3.491,255,2.735,617,6.654,618,7.035,619,5.996,620,7.035,621,6.224,622,7.035,623,6.353,633,3.815,644,6.353,731,6.654,732,7.559,733,7.559,1287,5.401]],["title/archive/api/sql/GeoSparkSQL-Function/#st_endpoint",[615,6.012]],["text/archive/api/sql/GeoSparkSQL-Function/#st_endpoint",[7,1.144,12,0.591,34,1.338,102,1.595,103,1.874,107,1.634,108,1.437,111,1.283,112,1.378,155,3.885,168,3.685,179,2.869,248,3.491,255,2.735,373,5.626,615,6.654,616,7.559,617,6.654,618,7.035,619,5.996,620,7.035,621,6.224,622,7.035,623,7.716,624,7.559,1287,5.401]],["title/archive/api/sql/GeoSparkSQL-Function/#st_boundary",[257,5.624]],["text/archive/api/sql/GeoSparkSQL-Function/#st_boundary",[7,1.102,12,0.582,34,1.288,102,1.536,103,1.805,106,4.139,107,1.939,108,1.384,111,1.236,112,1.327,155,3.741,168,3.548,198,3.328,199,3.349,255,2.634,257,5.993,258,6.775,259,6.775,260,6.775,564,6.775,565,6.775,1287,5.201]],["title/archive/api/sql/GeoSparkSQL-Function/#st_exteriorring",[290,5.624]],["text/archive/api/sql/GeoSparkSQL-Function/#st_exteriorring",[7,1.011,12,0.559,34,1.182,102,1.41,103,2.108,107,2.021,108,1.27,111,1.134,112,1.218,116,3.379,125,2.737,155,3.433,168,3.256,174,3.201,176,3.202,198,3.362,199,3.636,250,4.013,255,2.417,264,5.124,290,5.499,291,6.216,292,5.045,304,4.712,625,6.678,1287,4.772]],["title/archive/api/sql/GeoSparkSQL-Function/#st_geometryn",[323,5.624]],["text/archive/api/sql/GeoSparkSQL-Function/#st_geometryn",[7,1.057,12,0.598,34,1.236,102,1.474,103,2.168,107,2.063,108,1.328,111,1.185,112,1.274,129,4.99,132,4.972,155,3.589,174,2.63,175,3.996,179,2.651,198,2.64,250,4.196,251,4.196,255,2.527,306,3.779,323,5.75,324,3.754,325,5.75,326,5.75,327,6.5,328,6.5,329,6.5,330,6.312,331,6.5,332,5.64,333,6.5,334,4.927,335,4.653,336,5.056,1287,4.99]],["title/archive/api/sql/GeoSparkSQL-Function/#st_interiorringn",[337,5.624]],["text/archive/api/sql/GeoSparkSQL-Function/#st_interiorringn",[7,0.875,12,0.557,34,1.023,102,1.22,103,1.918,107,1.885,108,1.099,111,0.981,112,1.054,116,3.075,129,4.131,132,5.679,155,2.971,168,3.771,174,3.993,175,4.798,198,3.305,199,3.44,248,2.67,250,3.474,255,2.092,292,4.367,304,4.079,306,5.038,325,4.76,332,6.248,337,4.76,338,4.968,339,3.893,340,2.727,341,5.38,1287,4.131]],["title/archive/api/sql/GeoSparkSQL-Function/#st_dump",[602,6.012]],["text/archive/api/sql/GeoSparkSQL-Function/#st_dump",[7,1.001,12,0.557,34,1.171,59,2.948,102,1.396,103,2.095,107,2.191,108,1.258,111,1.123,112,1.206,116,2.629,155,3.4,168,3.224,179,3.847,255,2.394,279,5.943,281,6.4,363,5.684,419,5.246,581,5.157,586,5.353,602,5.822,603,6.614,604,5.157,605,6.614,606,5.684,607,5.559,608,6.614,609,7.779,610,6.836,1287,4.726]],["title/archive/api/sql/GeoSparkSQL-Function/#st_dumppoints",[611,6.012]],["text/archive/api/sql/GeoSparkSQL-Function/#st_dumppoints",[7,1.068,12,0.573,34,1.249,102,1.489,103,1.75,107,1.902,108,1.341,111,1.198,112,1.287,155,3.626,168,3.439,179,3.999,198,3.227,199,3.752,255,2.553,611,6.21,612,3.604,613,5.178,614,7.055,1287,5.041]],["title/archive/api/sql/GeoSparkSQL-Function/#st_isclosed",[342,5.326]],["text/archive/api/sql/GeoSparkSQL-Function/#st_isclosed",[7,1.144,12,0.591,34,1.338,98,3.168,102,1.595,103,1.874,107,1.634,108,1.437,111,1.283,112,1.378,155,3.885,168,3.685,179,2.869,198,2.986,199,3.162,255,2.735,342,5.894,343,3.057,344,3.838,345,4.542,346,7.035,347,5.472,422,3.03,1287,5.401]],["title/archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings",[365,5.624]],["text/archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings",[7,1.063,12,0.572,34,1.242,102,1.481,103,1.741,107,1.896,108,1.334,111,1.192,112,1.28,116,3.486,155,3.608,174,3.774,198,3.224,199,3.624,255,2.54,292,5.302,306,5.423,338,6.032,361,3.824,365,5.779,366,6.533,1287,5.015]],["title/archive/api/sql/GeoSparkSQL-Function/#st_addpoint",[554,6.012]],["text/archive/api/sql/GeoSparkSQL-Function/#st_addpoint",[7,0.886,12,0.641,28,3.086,34,1.036,102,1.236,103,1.452,107,2.023,108,1.483,111,0.994,112,1.423,155,4.81,168,2.854,176,2.807,179,3.552,198,3.279,199,3.58,248,2.704,255,2.119,345,3.518,347,6.774,394,3.71,554,6.867,555,3.987,556,2.41,557,6.704,558,3.676,559,7.801,560,7.801,561,8.237,562,6.301,1287,4.183]],["title/archive/api/sql/GeoSparkSQL-Function/#st_removepoint",[721,6.012]],["text/archive/api/sql/GeoSparkSQL-Function/#st_removepoint",[7,1.063,12,0.599,34,1.242,102,1.481,103,1.741,107,1.896,108,1.668,111,1.192,112,1.28,155,3.608,176,3.365,179,2.665,198,3.115,199,3.451,248,3.242,255,2.54,347,6.35,373,5.225,394,4.448,556,2.889,557,7.537,587,6.754,658,3.276,721,6.179,722,6.114,723,8.771,1287,5.015]],["title/archive/api/sql/GeoSparkSQL-Function/#st_isring",[351,5.624]],["text/archive/api/sql/GeoSparkSQL-Function/#st_isring",[7,1.132,12,0.588,34,1.323,102,1.578,103,1.854,107,1.616,108,1.421,111,1.269,112,1.363,155,3.843,168,3.645,198,3.094,199,3.618,255,2.706,342,5.83,343,3.688,347,5.413,351,6.156,352,5.648,353,6.959,1287,5.342]],["title/archive/api/sql/GeoSparkSQL-Function/#st_numgeometries",[362,5.624]],["text/archive/api/sql/GeoSparkSQL-Function/#st_numgeometries",[12,0.596,102,1.622,103,2.47,107,2.288,108,1.461,112,1.402,198,2.321,216,2.954,295,5.668,326,6.328,361,5.053,362,7.635,363,6.604,364,4.276,1287,5.492]],["title/archive/api/sql/GeoSparkSQL-Optimizer/",[318,1.388,777,1.81,778,3.073]],["text/archive/api/sql/GeoSparkSQL-Optimizer/",[6,1.689,7,1.12,12,0.671,19,0.886,34,1.31,53,1.311,54,2.544,59,1.903,84,0.819,85,1.394,91,0.96,98,1.789,102,1.143,107,1.994,111,0.919,112,1.35,113,4.855,119,3.616,120,4.454,174,1.607,184,4.359,188,1.582,197,3.2,198,0.789,199,2.154,213,3.491,215,2.154,239,1.181,248,1.206,266,1.842,267,1.61,287,2.68,288,1.972,303,1.02,318,2.452,340,2.554,343,1.056,354,2.036,356,1.556,390,0.645,392,1.302,397,1.721,398,1.413,422,1.711,456,1.496,457,0.755,458,2.785,461,4.781,465,2.375,471,1.596,480,1.463,516,1.423,538,4.272,633,1.318,777,3.309,778,4.166,779,1.596,780,1.624,781,3.973,782,2.503,783,2.129,784,3.05,785,2.195,786,5.256,787,2.611,788,1.866,789,5.87,790,5.87,791,3.328,792,5.82,793,5.82,794,3.204,795,3.973,796,7.906,797,4.766,798,3.973,799,3.973,800,3.973,801,5.87,802,3.973,803,3.973,804,5.505,805,2.611,806,1.943,807,3.133,808,2.609,809,6.017,810,6.017,811,4.268,812,4.268,813,2.298,814,4.268,815,4.268,816,2.036,817,2.611,818,2.611,819,2.611,820,1.799,821,1.82,822,2.611,823,2.731,824,1.778,825,1.866,826,1.219,859,2.298,860,3.757,861,2.43,862,2.43,863,2.43,1270,2.97,1288,2.9]],["title/archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer",[318,1.388,778,3.073,1270,2.531]],["text/archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer",[6,3.059,19,2.623,53,2.374,54,5.545,213,3.645,318,3.119,340,3.645,390,1.911,456,4.428,457,2.235,461,4.993,465,4.3,480,4.331,777,3.651,778,6.651,779,4.724,780,4.808,781,7.193]],["title/archive/api/sql/GeoSparkSQL-Optimizer/#range-join",[340,2.598,777,2.161]],["text/archive/api/sql/GeoSparkSQL-Optimizer/#range-join",[6,2.047,7,1.086,12,0.669,34,1.269,59,2.306,91,1.901,102,1.092,107,2.018,111,0.878,112,1.501,113,5.757,119,4.143,120,5.318,184,5.738,197,3.057,215,2.611,318,1.557,340,2.44,422,2.074,461,4.633,471,3.161,538,4.14,777,3.23,782,3.033,783,2.58,784,3.696,785,4.347,786,4.347,787,5.172,788,3.696,789,5.688,790,5.688,791,4.033,792,6.675,793,6.675,794,3.105,795,4.814,796,7.954,797,4.553,798,4.814,799,4.814,800,4.814,801,5.688,802,4.814,803,4.814,804,4.553,805,5.172,1270,3.934]],["title/archive/api/sql/GeoSparkSQL-Optimizer/#distance-join",[213,2.598,777,2.161]],["text/archive/api/sql/GeoSparkSQL-Optimizer/#distance-join",[7,1.061,12,0.662,34,1.24,53,1.537,59,2.23,84,1.569,85,2.672,98,2.097,102,1.056,107,2.067,111,0.849,112,1.278,174,2.638,213,4.133,215,2.525,239,2.264,266,3.53,267,3.085,287,4.399,288,3.779,303,1.955,343,2.023,354,3.901,356,2.982,392,2.496,397,3.298,398,2.708,465,2.784,516,2.726,538,4.045,782,2.934,783,2.496,784,3.575,786,6.797,789,5.558,790,5.558,794,3.034,796,7.214,797,4.404,801,5.558,804,6.168,806,3.724,807,5.142,808,4.283,809,8.43,810,8.43,811,7.007,812,7.007,813,4.404,814,7.007,815,7.007,816,3.901,817,5.003,818,5.003,819,5.003,820,3.446,821,3.487,822,5.003,823,4.483,824,3.407,825,3.575,826,2.335]],["title/archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown",[461,3.558,781,5.126]],["text/archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown",[7,1.121,12,0.671,34,1.31,98,2.27,102,1.143,107,1.6,111,0.92,112,0.988,113,4.411,119,3.617,120,4.782,184,3.776,188,3.282,197,4.376,198,1.636,199,3.122,248,2.502,318,2.228,422,2.172,458,4.831,461,4.782,538,4.274,633,2.734,777,2.905,789,5.872,790,5.872,791,4.224,792,6.89,793,6.89,794,3.205,795,5.042,796,8.067,797,4.768,798,5.042,799,5.042,800,5.042,801,5.872,802,5.042,803,5.042,804,4.768,859,4.768,860,6.516,861,5.042,862,5.042,863,5.042,1288,6.016]],["title/archive/api/sql/GeoSparkSQL-Overview/",[344,2.796,865,4.099]],["text/archive/api/sql/GeoSparkSQL-Overview/",[6,2.395,7,0.618,12,0.657,34,1.276,35,2.864,53,1.254,60,2.21,80,5.072,92,2.013,100,3.765,101,2.812,102,0.862,103,2.112,104,3.039,105,2.339,106,2.322,107,1.841,111,1.354,118,1.838,121,2.339,123,1.38,125,2.955,135,2.21,156,2.166,158,2.433,176,1.957,197,2.413,213,1.926,215,4.298,228,2.086,247,1.743,248,4.119,287,2.563,288,3.084,303,1.595,318,1.229,343,2.447,344,2.073,370,2.099,390,1.009,422,2.426,423,1.957,450,3.084,451,3.084,452,3.084,456,3.467,457,1.75,458,3.949,459,4.402,460,2.664,461,2.638,462,3.362,463,3.8,464,2.375,465,2.272,466,2.073,467,3.69,480,2.288,481,2.288,487,4.038,612,2.086,778,2.72,794,1.768,865,3.039,866,2.996,867,3.084,868,3.039,869,3.039,870,3.8,871,3.508,876,5.799,879,2.846,880,2.225,881,3.432,882,2.517,883,2.584,884,1.696,885,2.495,886,2.495,887,4.441,888,2.996,889,2.517,890,3.699,891,2.375,893,2.339,895,1.947,896,2.72,898,2.517,903,2.72,1270,3.956,1289,4.324,1290,2.563,1291,3.872,1292,3.184,1293,4.083,1294,3.594]],["title/archive/api/sql/GeoSparkSQL-Overview/#introduction",[102,1.442]],["text/archive/api/sql/GeoSparkSQL-Overview/#introduction",[]],["title/archive/api/sql/GeoSparkSQL-Overview/#function-list",[35,1.977,612,2.813]],["text/archive/api/sql/GeoSparkSQL-Overview/#function-list",[6,2.846,12,0.532,34,1.46,35,2.962,80,5.316,92,2.56,100,4.473,101,3.576,103,2.318,104,3.864,105,2.975,106,2.952,107,2.021,111,1.511,118,2.337,121,2.975,123,1.755,125,3.38,135,2.81,156,2.754,158,3.094,197,3.069,213,2.449,215,4.719,228,2.652,247,2.216,248,4.467,287,3.26,288,3.922,303,2.029,318,1.563,343,2.908,370,2.669,390,1.284,422,2.883,450,3.922,451,3.922,452,3.922,456,4.119,457,1.501,458,4.692,459,4.728,460,3.388,461,3.354,462,4.275,463,4.832,464,3.021,465,2.889,466,2.636,467,4.693,480,2.909,481,2.909,487,2.462,778,3.459,866,3.81,867,3.922,868,3.864,869,3.864,870,4.832,871,4.461,876,6.367,1270,3.945]],["title/archive/api/sql/GeoSparkSQL-Overview/#quick-start",[344,2.796,865,4.099]],["text/archive/api/sql/GeoSparkSQL-Overview/#quick-start",[7,0.96,12,0.673,53,1.948,60,3.431,80,3.605,176,3.039,423,3.039,457,1.833,487,4.577,794,2.745,879,4.419,880,3.454,881,5.329,882,3.909,883,3.51,884,2.633,885,3.875,886,3.875,887,6.033,888,4.653,889,3.909,890,5.025,891,3.689,893,3.632,895,3.023,896,4.224,898,3.909,903,4.224,1270,3.478,1289,5.874,1290,3.98,1291,5.259,1292,4.943,1293,6.34,1294,5.581]],["title/archive/api/sql/GeoSparkSQL-Parameter/",[408,4.005]],["text/archive/api/sql/GeoSparkSQL-Parameter/",[6,2.488,12,0.661,34,1.113,53,1.321,60,2.327,95,2.806,96,3.296,97,1.359,198,1.299,213,2.028,232,2.562,318,1.892,340,2.028,343,3.306,361,2.343,370,4.824,389,1.907,390,2.15,394,2.725,401,5.653,408,2.521,422,1.724,464,2.502,483,1.77,487,3.524,488,2.962,519,2.358,556,2.588,679,3.299,777,3.208,826,2.007,828,5.895,830,4.102,843,5.454,869,3.2,879,2.997,889,2.651,890,4.542,891,2.502,893,2.463,895,2.05,896,2.865,898,2.651,904,3.155,905,3.473,907,4.145,908,2.778,909,2.238,911,4.3,912,4.3,913,6.333,915,6.002,917,3.473,918,2.962,920,5.614,921,2.343,922,3.113,923,6,924,4.436,926,3.473,927,2.865,929,4.3,930,3.41,1270,3.449,1289,4.492,1290,2.699,1291,4.022,1292,3.353,1293,4.3,1295,7.783,1296,6.917,1297,4.775,1298,4.775,1299,4.775,1300,4.775,1301,4.775,1302,4.775]],["title/archive/api/sql/GeoSparkSQL-Parameter/#usage",[904,5.013]],["text/archive/api/sql/GeoSparkSQL-Parameter/#usage",[6,2.431,12,0.677,60,3.324,232,3.66,343,2.484,370,3.157,389,2.724,408,3.602,464,3.573,483,2.528,487,4.26,488,4.231,826,2.866,869,4.572,889,3.787,890,5.491,891,3.573,893,3.519,895,2.928,896,4.092,898,3.787,905,4.961,907,4.049,908,3.968,909,3.196,911,6.142,912,6.142,1270,4.418,1289,5.754,1290,3.856,1291,5.152,1292,4.789,1293,6.142,1295,6.432,1296,8.362]],["title/archive/api/sql/GeoSparkSQL-Parameter/#explanation",[879,4.761]],["text/archive/api/sql/GeoSparkSQL-Parameter/#explanation",[6,2.223,34,1.343,53,1.725,95,3.664,96,3.811,97,1.64,198,1.696,213,2.649,318,2.283,340,2.649,343,3.474,361,3.06,370,5.09,390,2.376,394,3.559,401,6.161,422,2.251,519,2.845,556,3.123,679,4.308,777,3.611,828,6.815,830,4.616,843,6.305,907,3.702,913,6.903,915,6.939,917,4.536,918,3.868,920,6.49,921,3.06,922,4.066,923,6.752,924,5.353,926,4.536,927,3.741,929,5.615,930,4.454,1295,7.945,1297,6.237,1298,6.237,1299,6.237,1300,6.237,1301,6.237,1302,6.237]],["title/archive/api/sql/GeoSparkSQL-Predicate/",[461,4.413]],["text/archive/api/sql/GeoSparkSQL-Predicate/",[7,1.225,12,0.679,34,1.432,102,1.786,103,2.098,108,1.609,111,1.373,112,1.543,113,5.698,114,5.509,133,2.981,138,3.819,188,4.902,197,3.656,198,2.443,199,3.622,200,4.821,201,4.6,202,5.509,215,4.271,216,3.252,217,5.217,267,1.964,343,3.422,356,1.898,465,2.785,466,2.542,471,3.78,475,2.616,788,4.419,931,5.198,932,3.185,933,3.065,934,3.065,935,5.198,936,5.198,937,3.185,938,5.198,939,3.185]],["title/archive/api/sql/GeoSparkSQL-Predicate/#st_contains",[197,4.037]],["text/archive/api/sql/GeoSparkSQL-Predicate/#st_contains",[7,1.073,12,0.666,34,1.255,102,1.497,103,1.759,108,1.348,111,1.204,112,1.293,113,5.26,114,4.829,188,4.297,197,5.218,198,2.142,199,3.464,200,4.226,201,4.033,202,4.829,215,3.579,216,2.725,217,4.372,343,2.868,465,3.946,466,3.601,475,2.999]],["title/archive/api/sql/GeoSparkSQL-Predicate/#st_intersects",[471,4.175]],["text/archive/api/sql/GeoSparkSQL-Predicate/#st_intersects",[7,1.079,12,0.666,34,1.262,102,1.504,103,1.768,108,1.355,111,1.21,112,1.3,113,5.277,114,4.854,188,4.319,198,2.153,199,3.47,200,4.248,201,4.054,202,4.854,215,3.598,216,2.739,217,4.395,343,2.883,356,4.248,471,5.413,475,3.015]],["title/archive/api/sql/GeoSparkSQL-Predicate/#st_within",[788,4.881]],["text/archive/api/sql/GeoSparkSQL-Predicate/#st_within",[7,1.073,12,0.666,34,1.255,102,1.497,103,1.759,108,1.348,111,1.204,112,1.293,113,5.26,114,4.829,188,4.297,198,2.142,199,3.464,200,4.226,201,4.033,202,4.829,215,3.579,216,2.725,217,4.372,343,2.868,465,3.946,466,3.601,475,2.999,788,6.308]],["title/archive/api/sql/GeoSparkSQL-Predicate/#st_equals",[935,5.741]],["text/archive/api/sql/GeoSparkSQL-Predicate/#st_equals",[7,1.079,12,0.666,34,1.262,102,1.504,103,1.768,108,1.355,111,1.21,112,1.3,113,5.277,114,4.854,138,3.884,188,4.319,198,2.153,199,3.47,200,4.248,201,4.054,202,4.854,215,3.598,216,2.739,217,4.395,267,4.395,343,2.883,935,7.443]],["title/archive/api/sql/GeoSparkSQL-Predicate/#st_crosses",[931,5.741]],["text/archive/api/sql/GeoSparkSQL-Predicate/#st_crosses",[7,1.079,12,0.666,34,1.262,102,1.504,103,1.768,108,1.355,111,1.21,112,1.3,113,5.277,114,4.854,138,3.884,188,4.319,198,2.153,199,3.47,200,4.248,201,4.054,202,4.854,215,3.598,216,2.739,217,4.395,343,2.883,931,7.443,932,7.128]],["title/archive/api/sql/GeoSparkSQL-Predicate/#st_touches",[938,5.741]],["text/archive/api/sql/GeoSparkSQL-Predicate/#st_touches",[12,0.667,102,1.528,103,1.796,108,1.377,112,1.32,113,5.329,114,4.931,138,3.945,188,4.388,198,2.187,199,3.49,200,4.315,201,4.118,202,4.931,215,3.655,216,2.783,217,4.464,343,2.928,938,7.516,939,7.24]],["title/archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps",[936,5.741]],["text/archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps",[7,1.163,12,0.643,34,1.36,102,1.622,103,1.906,108,1.461,111,1.305,112,1.402,133,4.801,138,4.188,215,3.879,216,2.954,217,4.739,343,3.108,933,7.395,934,7.395,936,7.794,937,7.685]],["title/archive/api/sql/GeoSparkSQL-javadoc/",[90,5.869]],["text/archive/api/sql/GeoSparkSQL-javadoc/",[12,0.445,27,4.585,40,4.428,49,5.457,53,3.016,69,2.918,91,2.734,92,3.667,93,5.071,94,6.25,95,4.852,96,4.032,97,1.608,98,3.117,1259,6.671,1260,3.971,1270,4.08,1303,8.259]],["title/archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api",[27,2.017,40,1.997,93,2.288]],["text/archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api",[27,4.504,40,4.292,49,5.578,53,3.045,69,2.983,91,2.794,92,3.748,93,4.915,94,6.388,95,4.96,96,4.086,97,1.643,98,3.185,1259,6.76,1260,4.059,1270,4.17,1303,8.441]],["title/archive/api/viz/Babylon-Scala-and-Java-API/",[1183,2.85]],["text/archive/api/viz/Babylon-Scala-and-Java-API/",[12,0.457,27,4.512,40,4.469,53,2.348,91,2.81,92,3.768,93,5.119,94,6.424,95,4.987,96,4.1,97,1.652,98,3.203,1183,3.189,1188,3.684,1202,5.217,1304,8.488]],["title/archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd",[27,1.735,40,1.719,93,1.968,1183,1.656]],["text/archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd",[27,4.396,40,4.354,53,2.415,91,2.89,92,3.876,93,4.987,94,6.607,95,5.13,96,4.17,97,1.699,98,3.295,1188,3.79,1202,5.306,1304,8.73]],["title/archive/api/viz/sql/",[1184,6.357]],["text/archive/api/viz/sql/",[7,1.173,12,0.665,19,0.869,32,2.049,34,1.298,35,2.22,53,0.787,60,1.387,80,2.39,84,1.318,85,2.245,91,1.545,93,2.084,98,1.074,100,2.615,101,1.765,102,1.441,103,1.693,108,1.394,111,1.373,112,1.338,118,1.154,119,1.099,125,2.534,126,1.165,138,3.719,175,1.171,176,1.228,180,3.238,181,3.419,185,1.786,216,0.985,224,1.624,236,3.277,248,2.856,297,3.7,303,1.643,344,1.301,364,1.426,370,2.16,390,1.529,394,1.624,423,1.228,445,3.533,457,0.741,479,0.973,487,3.237,499,1.377,508,2.29,519,0.961,525,1.998,545,2.216,573,1.055,612,1.309,634,2.154,660,2.07,783,1.278,794,1.109,807,1.88,865,1.907,868,1.907,879,1.786,883,1.794,884,1.064,885,1.566,886,1.566,887,3.085,888,1.88,889,1.58,890,2.569,891,1.491,893,1.468,895,1.222,896,1.707,898,1.58,903,2.8,943,2.147,963,1.831,995,3.043,1012,1.566,1013,2.032,1027,3.799,1046,3.912,1052,2.032,1062,2.385,1077,1.998,1084,2.032,1150,5.415,1185,1.396,1186,2.385,1192,2.07,1193,4.821,1194,6.257,1195,6.581,1196,2.07,1197,2.256,1198,2.256,1199,1.689,1200,2.562,1201,2.154,1202,3.017,1203,2.562,1204,2.562,1205,2.256,1206,2.256,1207,2.316,1208,2.385,1209,5.755,1210,4.668,1211,2.846,1212,1.998,1213,1.726,1214,1.936,1215,2.846,1216,1.765,1217,2.256,1218,2.846,1219,1.998,1220,2.846,1221,2.846,1222,2.846,1223,2.846,1224,2.846,1225,2.154,1226,4.492,1227,3.533,1228,3.912,1229,2.11,1230,2.385,1231,1.707,1232,2.562,1233,1.368,1234,2.562,1235,3.978,1236,1.855,1238,2.562,1239,2.562,1240,2.562,1241,3.7,1242,4.167,1243,4.5,1244,3.277,1245,2.569,1246,4.203,1247,2.562,1248,3.912,1249,2.562,1250,3.869,1251,3.395,1254,2.562,1256,4.203,1257,2.562,1270,1.406,1289,3.003,1290,1.609,1291,2.689,1294,2.256,1305,2.256,1306,2.846,1307,2.562]],["title/archive/api/viz/sql/#quick-start",[344,2.796,865,4.099]],["text/archive/api/viz/sql/#quick-start",[7,0.93,12,0.675,53,1.887,60,3.324,80,3.493,176,2.945,390,1.518,423,2.945,457,1.776,487,4.695,794,2.659,879,4.281,883,3.438,884,2.551,885,3.754,886,3.754,887,5.909,888,4.507,889,3.787,890,4.922,891,3.573,893,3.519,895,2.928,896,4.092,898,3.787,903,5.365,1185,3.346,1186,5.717,1202,3.467,1270,3.37,1289,5.754,1290,3.856,1291,5.152,1294,5.406,1305,5.406,1306,6.821,1307,6.142]],["title/archive/api/viz/sql/#regular-functions",[35,1.977,1192,4.448]],["text/archive/api/viz/sql/#regular-functions",[]],["title/archive/api/viz/sql/#st_pixelize",[1235,5.084]],["text/archive/api/viz/sql/#st_pixelize",[7,1.126,12,0.652,34,1.316,101,5.122,102,1.569,103,1.844,108,1.414,111,1.262,112,1.356,119,3.19,138,4.052,185,5.183,216,2.858,248,3.434,508,4.953,1150,4.167,1235,6.766,1236,5.384,1238,7.436,1239,7.436,1240,7.436,1241,8.001]],["title/archive/api/viz/sql/#st_tilename",[1242,5.326]],["text/archive/api/viz/sql/#st_tilename",[7,1.001,12,0.606,32,3.224,34,1.171,84,2.075,85,3.532,91,2.431,102,1.396,103,1.64,108,1.606,111,1.123,112,1.206,125,2.71,138,3.604,175,3.023,180,5.64,181,5.955,248,3.055,297,7.436,303,3.301,445,7.1,995,4.149,1150,4.734,1209,6.156,1242,6.587,1243,6.681,1244,6.587,1245,5.163,1246,8.448,1247,6.614,1248,6.156,1249,6.614]],["title/archive/api/viz/sql/#st_colorize",[1193,5.326]],["text/archive/api/viz/sql/#st_colorize",[91,2.62,100,4.435,102,1.504,103,1.768,108,1.355,125,2.921,126,3.242,138,3.884,248,3.292,370,4.552,390,2.382,394,4.517,479,2.706,499,3.832,519,2.673,525,5.558,573,2.934,783,3.556,1013,5.654,1046,6.635,1150,3.995,1193,5.558,1194,7.152,1195,6.862,1196,5.757,1197,6.275,1198,6.275,1199,4.699,1200,7.128,1201,5.991,1202,4.024,1203,7.128,1204,7.128]],["title/archive/api/viz/sql/#st_encodeimage",[1226,5.741]],["text/archive/api/viz/sql/#st_encodeimage",[7,1.114,12,0.584,19,2.496,34,1.302,93,3.648,102,1.553,103,1.824,108,1.399,111,1.533,112,1.342,125,3.7,138,4.008,224,4.662,943,4.613,1027,8.161,1062,6.847,1084,5.835,1202,4.153,1226,7.59,1227,6.183,1228,6.847,1229,6.057,1230,6.847,1231,4.901,1232,7.357,1233,3.929,1234,7.357]],["title/archive/api/viz/sql/#aggregate-functions",[35,1.977,100,3.426]],["text/archive/api/viz/sql/#aggregate-functions",[]],["title/archive/api/viz/sql/#st_render",[1250,4.945]],["text/archive/api/viz/sql/#st_render",[7,1.108,12,0.636,34,1.295,93,3.629,102,1.544,103,1.815,108,1.391,111,1.242,112,1.334,138,3.987,248,3.38,364,4.071,1150,5.699,1195,6.129,1209,6.811,1227,6.15,1228,6.811,1248,6.811,1250,6.516,1251,7.269,1254,7.317,1256,9,1257,7.317]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/",[303,1.803,1308,2.224,1309,2.749]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/",[5,1.722,7,1.154,12,0.632,14,2.511,19,1.919,34,0.66,38,4.338,46,1.941,48,5.143,53,3.228,69,4.075,84,1.773,343,2.287,386,2.204,410,1.421,422,1.495,457,1.974,480,4.831,693,2.817,770,2.599,883,2.915,884,2.348,885,4.658,886,4.658,1082,3.282,1188,3.949,1259,7.069,1310,3.37,1311,2.545,1312,7.268,1313,7.584,1314,7.268,1315,6.984,1316,5.921,1317,4.409,1318,4.141,1319,4.655,1320,4.141,1321,4.141,1322,4.141,1323,4.141,1324,5.44,1325,6.356,1326,4.141,1327,3.134,1328,3.471,1329,3.729,1330,4.141,1331,7.584,1332,3.07,1333,4.141,1334,4.141,1335,5.921,1336,7.093,1337,3.942,1338,2.06,1339,4.141,1340,4.141,1341,2.775,1342,5.654,1343,3.729,1344,3.729,1345,3.729,1346,3.729]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-2x-versions",[7,0.601,19,1.347,69,1.558,1310,3.587]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-2x-versions",[84,2.714,457,2.501,883,3.694,885,5.288,886,5.288,1311,3.895]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core",[53,1.692,884,2.287]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core",[53,2.658,69,3.395,1312,6.264,1313,6.536,1314,6.264,1315,6.746]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-sql",[34,0.975,53,1.692]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-sql",[]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23",[38,4.225,480,3.086]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23",[53,2.641,69,3.374,1312,6.224,1313,6.495,1314,6.224,1315,6.704,1316,9.004]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22",[480,3.086,1317,4.294]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22",[53,2.641,69,3.374,1312,6.224,1313,6.495,1314,6.224,1315,6.704,1318,9.549]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21",[480,3.086,1319,4.534]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21",[53,2.641,69,3.374,1312,6.224,1313,6.495,1314,6.224,1315,6.704,1320,9.549]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-120-and-later",[14,2.673,53,1.219,770,2.767,1188,1.913]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-120-and-later",[]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23_1",[38,4.225,480,3.086]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23_1",[53,2.641,69,3.374,1312,6.224,1313,6.495,1314,6.224,1315,6.704,1321,9.549]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22_1",[480,3.086,1317,4.294]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22_1",[53,2.641,69,3.374,1312,6.224,1313,6.495,1314,6.224,1315,6.704,1322,9.549]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21_1",[480,3.086,1319,4.534]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21_1",[53,2.641,69,3.374,1312,6.224,1313,6.495,1314,6.224,1315,6.704,1323,9.549]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-113-and-earlier",[53,1.219,1082,3.494,1188,1.913,1324,3.819]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-113-and-earlier",[53,2.641,69,3.374,1188,4.145,1312,6.224,1313,6.495,1314,6.224,1324,8.273]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-1x-versions",[7,0.601,19,1.347,69,1.558,1325,3.694]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-1x-versions",[84,2.714,457,2.501,883,3.694,885,5.288,886,5.288,1311,3.895]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core_1",[53,1.692,884,2.287]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core_1",[7,1.293,53,2.625,69,3.353,1312,6.186,1313,6.455,1314,6.186,1325,7.953,1326,9.489]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz",[53,1.692,1188,2.655]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz",[7,1.293,69,3.353,1312,6.186,1313,6.455,1314,6.186,1325,7.953,1327,7.181,1328,7.953]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions",[69,2.161,1259,4.041]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions",[5,3.292,46,3.71,48,4.475,53,3.096,69,3.954,386,4.213,410,2.717,457,2.061,693,5.385,883,3.043,885,4.357,886,4.357,1188,3.436,1259,7.751,1312,6.975,1313,7.278,1314,6.975,1316,7.465,1329,7.128,1330,7.917,1331,10.699]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#buildsbt",[886,4.175]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#buildsbt",[12,0.623,1259,6.271,1332,7.035,1333,9.489,1334,9.489,1335,8.948]],["title/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml",[885,4.175]],["text/archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml",[48,6.468,343,3.725,422,3.047,1259,6.76,1335,7.96,1336,9.59,1337,5.329,1338,4.199,1339,8.441,1340,8.441,1341,5.657,1342,9.211,1343,7.6,1344,7.6,1345,7.6,1346,7.6]],["title/archive/download/GeoSpark-All-Modules-Release-notes/",[5,2.543,91,2.024]],["text/archive/download/GeoSpark-All-Modules-Release-notes/",[5,1.276,6,2.667,7,0.633,12,0.637,14,0.459,15,1.749,16,0.858,18,0.475,19,0.787,25,0.662,27,2.46,28,0.359,30,0.958,31,1.683,34,0.882,35,2.268,38,0.988,40,1.004,43,1.174,51,0.438,52,1.925,53,2.893,54,0.767,55,0.771,57,0.35,59,0.816,65,0.945,69,2.129,80,0.732,83,3.976,84,1.108,85,0.688,88,1.246,89,1.159,90,0.585,92,1.561,93,1.15,96,2.58,97,1.077,98,0.286,103,0.319,105,0.39,106,0.732,107,0.684,108,0.9,110,0.39,111,0.846,115,0.54,116,0.728,118,1.743,121,2.396,125,0.528,126,0.31,136,1.98,138,0.371,162,0.493,163,0.436,168,0.628,169,0.409,174,1.962,175,0.588,178,0.42,179,0.695,198,1.35,199,0.235,200,0.406,204,0.413,213,1.826,214,0.767,226,0.507,228,0.348,230,0.794,235,0.573,239,2.989,244,0.481,247,0.99,250,1.394,255,1.145,266,0.481,301,0.6,302,0.406,303,1.746,318,2.287,321,1.327,324,0.692,340,2.108,349,0.371,350,0.531,352,0.515,356,0.406,357,1.021,360,0.54,361,0.701,364,0.716,370,1.192,371,0.897,378,0.531,390,1.878,392,0.642,398,1.495,401,1.139,404,0.487,405,0.92,406,0.573,407,0.573,408,2.452,409,0.416,410,1.594,412,0.487,414,0.454,420,0.432,421,0.464,423,0.327,426,0.531,435,0.515,450,0.515,451,0.515,452,0.515,457,0.372,460,0.445,464,0.396,465,0.379,466,1.178,471,0.787,475,0.288,476,0.573,477,0.6,478,1.841,479,0.489,480,0.721,482,1.624,483,2.774,484,0.464,491,0.965,501,0.516,503,0.573,504,1.04,505,1.427,508,0.371,510,0.475,519,1.036,520,1.091,522,0.573,528,0.523,533,0.55,538,0.393,541,1.874,544,0.413,545,1.223,555,0.877,556,1.303,558,2.805,573,1.721,596,0.573,601,0.481,619,0.54,621,0.561,623,0.573,626,0.573,632,0.573,633,0.344,637,1.261,638,0.54,639,0.738,640,0.523,643,0.585,644,0.573,645,0.616,650,0.5,654,1.308,658,0.601,673,0.399,677,0.54,686,0.658,716,0.573,717,0.945,722,1.925,724,0.573,725,1.04,767,0.515,768,1.073,777,2.645,778,0.454,779,0.416,780,2.408,783,0.642,785,0.573,791,0.531,794,0.295,806,0.958,813,1.611,816,0.531,820,1.598,821,0.475,823,0.436,824,0.464,825,0.487,826,1.649,828,1.021,830,1.942,831,1.04,856,1.082,860,0.6,872,0.6,877,1.378,879,0.475,883,2.76,884,2.069,895,0.325,899,0.282,901,0.445,904,1.343,905,0.55,908,0.44,917,0.55,921,0.701,923,0.5,924,0.481,926,0.55,931,0.573,935,0.573,936,0.573,938,0.573,943,2.283,945,0.585,947,0.515,958,1.637,961,0.406,966,0.634,968,2.18,971,1.887,999,0.344,1012,0.416,1048,1.343,1051,0.54,1085,0.515,1150,0.382,1183,2.348,1185,0.997,1188,2.016,1192,1.04,1193,0.531,1199,0.849,1201,0.573,1202,1.787,1212,1.004,1213,0.867,1226,0.573,1233,0.977,1235,0.507,1236,0.493,1242,0.531,1243,0.449,1245,0.416,1250,0.493,1253,0.515,1260,0.364,1261,0.523,1263,0.932,1264,0.973,1272,0.616,1274,0.634,1296,1.198,1308,1.526,1309,0.767,1310,0.616,1311,1.044,1317,0.531,1319,0.561,1327,3.756,1328,0.634,1332,0.561,1337,0.352,1338,1.011,1347,0.681,1348,0.507,1349,1.598,1350,4.057,1351,4.474,1352,0.403,1353,0.481,1354,0.681,1355,0.5,1356,0.681,1357,5.607,1358,0.681,1359,2.274,1360,1.993,1361,0.681,1362,0.681,1363,0.681,1364,0.681,1365,0.681,1366,0.681,1367,0.6,1368,0.681,1369,0.6,1370,0.681,1371,0.681,1372,0.681,1373,0.681,1374,0.681,1375,0.681,1376,0.681,1377,0.634,1378,0.681,1379,0.681,1380,0.634,1381,0.681,1382,0.681,1383,0.681,1384,0.92,1385,1.082,1386,0.681,1387,0.681,1388,0.634,1389,0.634,1390,0.681,1391,0.681,1392,0.681,1393,0.681,1394,1.133,1395,1.133,1396,0.681,1397,0.681,1398,0.634,1399,0.634,1400,0.681,1401,0.681,1402,1.198,1403,0.988,1404,0.988,1405,0.681,1406,0.681,1407,0.681,1408,0.681,1409,1.021,1410,1.308,1411,0.655,1412,0.428,1413,0.897,1414,0.634,1415,0.681,1416,0.681,1417,0.681,1418,0.988,1419,0.681,1420,0.681,1421,0.681,1422,0.681,1423,0.681,1424,0.681,1425,0.573,1426,0.6,1427,0.681,1428,0.681,1429,0.585,1430,1.004,1431,0.681,1432,0.681,1433,0.681,1434,0.897,1435,0.681,1436,0.681,1437,1.164,1438,0.655,1439,1.276,1440,0.681,1441,0.681,1442,0.681,1443,0.681,1444,1.183,1445,1.057,1446,1.06,1447,0.585,1448,0.681,1449,0.681,1450,0.681,1451,0.681,1452,0.681,1453,0.681,1454,0.681,1455,0.681,1456,0.681,1457,0.681,1458,0.681,1459,0.681,1460,0.681,1461,0.681,1462,0.681,1463,0.681,1464,0.681,1465,0.681,1466,0.634,1467,0.681,1468,1.198,1469,1.736,1470,0.681,1471,0.681,1472,1.873,1473,0.681,1474,1.04,1475,0.973,1476,1.325,1477,0.681,1478,1.287,1479,1.287,1480,1.133,1481,1.538,1482,1.287,1483,1.082,1484,0.634,1485,1.198,1486,1.383,1487,0.573,1488,0.681,1489,0.681,1490,0.681,1491,1.164,1492,0.681,1493,0.681,1494,0.681,1495,0.681,1496,0.958,1497,0.681,1498,0.481,1499,0.973,1500,0.681,1501,0.54,1502,0.634,1503,0.767,1504,0.681,1505,0.531,1506,1.198,1507,2.916,1508,2.206,1509,2.081,1510,0.681,1511,0.585,1512,1.83,1513,0.681,1514,0.681,1515,0.92,1516,0.634,1517,1.082,1518,0.681,1519,0.634,1520,1.246,1521,0.681,1522,0.681,1523,0.681,1524,0.616,1525,0.681,1526,0.681,1527,0.681,1528,0.681,1529,0.487,1530,0.877,1531,1.548,1532,0.681,1533,0.531,1534,0.755,1535,0.681,1536,0.681,1537,0.681,1538,0.681,1539,0.681,1540,0.681,1541,0.655,1542,1.276,1543,1.091,1544,0.6,1545,0.681,1546,0.655,1547,0.984,1548,0.681,1549,0.459,1550,0.681,1551,0.681,1552,1.164,1553,0.681,1554,0.681,1555,0.681,1556,0.681,1557,0.6,1558,1.082,1559,0.634,1560,0.515,1561,0.681,1562,1.198,1563,1.287,1564,0.55,1565,1.198,1566,1.3,1567,0.681,1568,0.681,1569,0.276,1570,0.355,1571,0.681,1572,0.681,1573,1.287,1574,1.198,1575,1.198,1576,0.681,1577,0.454,1578,0.681,1579,0.681,1580,0.681,1581,0.681,1582,0.816,1583,0.6,1584,0.634,1585,0.681,1586,2.755,1587,0.988,1588,0.681,1589,0.681,1590,0.681,1591,0.681,1592,0.487,1593,0.681,1594,0.616,1595,1.04,1596,0.655,1597,0.507,1598,0.681,1599,0.681,1600,0.681,1601,0.681,1602,0.681,1603,1.287,1604,0.681,1605,0.523,1606,2.571,1607,1.06,1608,0.681,1609,0.681,1610,0.634,1611,0.681,1612,0.681,1613,1.427,1614,0.681,1615,1.611,1616,0.988,1617,1.383,1618,0.6,1619,0.634,1620,0.681,1621,0.634,1622,0.681,1623,0.681,1624,1.198,1625,0.681,1626,0.681,1627,0.6,1628,0.634,1629,0.55,1630,0.634,1631,0.681,1632,1.478,1633,0.616,1634,0.681,1635,0.573,1636,0.5,1637,1.287,1638,0.945,1639,0.352,1640,0.6,1641,0.681,1642,0.681,1643,1.164,1644,1.198,1645,1.198,1646,1.343,1647,0.681,1648,0.681,1649,0.681,1650,2.391,1651,2.711,1652,0.487,1653,0.681,1654,0.681,1655,0.655,1656,0.681,1657,0.54,1658,0.515,1659,0.523,1660,0.396,1661,0.681,1662,0.681,1663,0.681,1664,0.681,1665,0.681,1666,0.531,1667,1.287,1668,0.767,1669,0.531,1670,0.481,1671,0.681,1672,1.287,1673,0.475,1674,0.655,1675,0.681,1676,0.681,1677,0.681,1678,0.681,1679,0.681,1680,0.585,1681,0.475,1682,0.464,1683,0.681,1684,1.198,1685,0.681,1686,0.616,1687,0.487,1688,0.487,1689,0.681,1690,0.681,1691,0.416,1692,0.681,1693,0.6,1694,0.681,1695,0.681,1696,0.681,1697,0.573,1698,0.531,1699,0.573,1700,0.681,1701,0.54,1702,0.681,1703,0.681,1704,0.681,1705,0.681,1706,0.55,1707,0.6,1708,1.287,1709,0.6,1710,0.55,1711,0.681,1712,0.681,1713,1.082,1714,0.681,1715,0.681,1716,0.681,1717,0.681,1718,0.681,1719,0.681,1720,0.655,1721,0.616]],["title/archive/download/GeoSpark-All-Modules-Release-notes/#v131",[1347,6.83]],["text/archive/download/GeoSpark-All-Modules-Release-notes/#v131",[5,1.908,12,0.661,27,1.806,34,1.081,35,2.88,43,3.408,53,2.847,65,3.032,69,1.621,83,4.511,97,0.893,107,0.893,136,3.421,228,2.111,250,2.483,360,3.277,361,2.251,370,2.124,435,3.121,466,2.098,476,3.473,483,3.302,491,2.178,528,3.17,626,3.473,677,3.277,724,3.473,780,3.798,877,2.061,883,1.764,884,1.716,904,3.032,921,2.251,1183,1.724,1188,1.992,1202,2.332,1308,1.992,1311,1.86,1332,3.402,1337,2.137,1348,3.075,1349,5.002,1350,4.57,1351,4.426,1352,2.442,1353,2.915,1354,4.132,1355,3.032,1356,4.132,1357,7.322,1358,4.132,1359,3.402,1360,5.247,1361,4.132,1362,4.132,1363,4.132,1364,4.132,1365,4.132,1366,4.132,1367,3.637,1368,4.132,1369,3.637,1370,4.132,1371,4.132,1372,4.132,1373,4.132,1374,4.132,1375,4.132,1376,4.132,1377,3.846,1378,4.132,1379,4.132,1380,3.846,1381,4.132,1382,4.132,1383,4.132,1384,2.952,1385,3.473,1386,4.132,1387,4.132,1388,3.846,1389,3.846,1390,4.132,1391,4.132,1392,4.132,1393,4.132,1394,3.637,1395,3.637,1396,4.132,1397,4.132,1398,3.846,1399,3.846,1400,4.132,1401,4.132,1402,3.846,1403,3.17,1404,3.17,1405,4.132,1406,4.132,1407,4.132,1408,4.132]],["title/archive/download/GeoSpark-All-Modules-Release-notes/#v130",[110,3.913]],["text/archive/download/GeoSpark-All-Modules-Release-notes/#v130",[5,3.971,43,3.653,53,2.641,1349,5.923,1350,4.591,1409,6.82,1410,6.144]],["title/archive/download/GeoSpark-All-Modules-Release-notes/#v120",[138,3.722]],["text/archive/download/GeoSpark-All-Modules-Release-notes/#v120",[6,2.62,7,0.537,12,0.616,14,2.388,19,1.203,27,2.379,31,1.335,34,1.172,35,3.036,53,2.971,54,2.113,69,2.135,83,4.416,84,2.077,88,4.509,89,2.719,96,1.573,97,0.767,111,0.602,115,2.813,136,4.161,178,2.187,214,2.113,239,1.605,244,2.502,250,3.27,303,2.126,352,2.679,357,4.316,370,2.797,390,0.877,410,2.074,466,1.801,479,2.066,483,3.48,491,2.868,519,1.33,520,2.113,538,2.047,541,2.887,639,2.032,716,2.981,816,2.765,820,3.748,826,3.466,828,2.813,883,3.42,884,1.473,904,2.603,931,2.981,935,2.981,936,2.981,938,2.981,943,1.812,945,3.047,971,3.536,1150,1.987,1183,1.48,1188,1.71,1193,2.765,1202,3.072,1226,2.981,1233,3.536,1235,2.64,1242,2.765,1250,2.567,1261,2.721,1263,2.567,1272,3.205,1308,2.623,1350,4.277,1351,3.841,1357,5.306,1359,5.452,1360,4.676,1385,2.981,1394,3.122,1395,3.122,1402,3.301,1403,2.721,1404,2.721,1411,3.412,1412,2.226,1413,3.793,1414,3.301,1415,3.546,1416,3.546,1417,3.546,1418,4.175,1419,3.546,1420,3.546,1421,3.546,1422,3.546,1423,3.546,1424,3.546,1425,2.981,1426,3.122,1427,3.546,1428,3.546,1429,3.047,1430,2.765,1431,3.546,1432,3.546,1433,3.546,1434,2.472,1435,3.546,1436,3.546,1437,4.918,1438,3.412,1439,2.472,1440,3.546,1441,3.546,1442,3.546,1443,3.546,1444,2.291,1445,2.047,1446,4.48,1447,3.047,1448,3.546,1449,3.546,1450,3.546,1451,3.546,1452,3.546,1453,3.546,1454,3.546,1455,3.546,1456,3.546,1457,3.546,1458,3.546,1459,3.546,1460,3.546,1461,3.546,1462,3.546,1463,3.546,1464,3.546,1465,3.546]],["title/archive/download/GeoSpark-All-Modules-Release-notes/#v113",[1274,6.357]],["text/archive/download/GeoSpark-All-Modules-Release-notes/#v113",[12,0.586,27,3.233,34,1.309,53,3.136,69,2.903,83,3.507,107,1.599,239,3.347,390,1.829,466,3.756,520,4.408,884,3.763,971,3.95,1183,3.086,1188,3.565,1350,3.95,1351,4.686,1357,5.285,1466,6.884,1467,7.396,1468,6.884,1469,4.058,1470,7.396,1471,7.396,1472,7.317]],["title/archive/download/GeoSpark-All-Modules-Release-notes/#v112",[1473,6.83]],["text/archive/download/GeoSpark-All-Modules-Release-notes/#v112",[6,1.871,7,0.716,12,0.655,34,0.837,53,2.409,59,2.108,69,2.642,83,4.282,96,2.097,97,1.456,107,1.456,108,0.899,118,2.129,121,2.709,125,1.938,162,3.423,163,3.025,174,2.535,199,1.628,239,4.37,321,1.982,350,3.687,361,2.576,466,2.401,471,2.89,482,2.69,519,2.525,541,2.508,545,2.492,558,4.923,601,3.336,654,3.378,725,3.819,791,3.687,830,2.372,856,5.659,884,1.964,961,2.818,1183,1.973,1188,2.279,1199,3.117,1350,2.525,1351,4.419,1357,6.901,1468,4.401,1469,2.594,1472,3.819,1474,5.438,1475,3.572,1476,3.423,1477,4.728,1478,6.732,1479,6.732,1480,5.927,1481,6.59,1482,6.732,1483,5.659,1484,4.401,1485,4.401,1486,3.572,1487,3.974,1488,4.728,1489,4.728,1490,4.728,1491,4.273,1492,4.728,1493,4.728,1494,4.728,1495,4.728,1496,3.519,1497,4.728,1498,3.336,1499,3.572,1500,4.728,1501,3.75,1502,4.401,1503,2.818,1504,4.728]],["title/archive/download/GeoSpark-All-Modules-Release-notes/#v111",[533,5.517]],["text/archive/download/GeoSpark-All-Modules-Release-notes/#v111",[5,3.971,908,5.555,1308,4.145,1309,5.124,1409,6.82,1410,6.144,1496,6.4]],["title/archive/download/GeoSpark-All-Modules-Release-notes/#v110",[673,4.005]],["text/archive/download/GeoSpark-All-Modules-Release-notes/#v110",[6,3.109,7,1.189,12,0.655,19,2.29,25,3.469,34,0.84,35,1.704,38,5.178,53,2.778,69,2.649,83,4.456,107,1.026,118,2.136,174,1.786,239,4.374,303,1.854,404,3.39,405,3.39,406,3.988,407,3.988,408,2.782,471,2.9,478,2.76,480,2.659,519,1.779,522,3.988,556,3.522,596,3.988,639,2.718,645,4.288,820,4.649,883,3.354,884,1.97,1048,3.482,1051,3.763,1188,2.287,1202,2.678,1308,2.287,1309,2.827,1351,4.676,1357,6.714,1359,3.906,1430,3.699,1434,3.307,1505,3.699,1506,4.416,1507,5.584,1508,4.704,1509,5.051,1510,4.744,1511,4.077,1512,7.855,1513,4.744,1514,4.744,1515,3.39,1516,4.416,1517,2.804,1518,4.744,1519,4.416,1520,3.231,1521,4.744,1522,4.744,1523,4.744,1524,4.288,1525,4.744,1526,4.744,1527,4.744]],["title/archive/download/GeoSpark-All-Modules-Release-notes/#v101",[640,5.24]],["text/archive/download/GeoSpark-All-Modules-Release-notes/#v101",[6,2.992,7,1.144,12,0.615,34,1.625,53,3.159,83,4.354,303,2.954,480,4.236,558,4.746,623,6.353,884,3.139,1188,3.644,1308,3.644,1317,5.894,1319,6.224,1351,4.748,1472,6.105,1499,5.71,1528,7.559,1529,5.401]],["title/archive/download/GeoSpark-All-Modules-Release-notes/#v100",[475,2.889]],["text/archive/download/GeoSpark-All-Modules-Release-notes/#v100",[5,3.453,6,2.959,34,1.614,53,3.147,89,2.738,125,3.064,390,1.848,450,5.648,451,5.648,452,5.648,465,4.16,883,3.192,884,3.105,905,6.039,1188,4.396,1202,5.148,1260,3.993,1296,8.488,1327,6.284,1530,5.092,1531,4.19,1532,7.476,1533,5.83,1534,4.384]],["title/archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core",[53,1.417,884,1.916,1535,4.613]],["text/archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core",[6,2.583,12,0.603,27,1.979,31,1.704,35,1.625,53,1.39,55,1.906,59,2.017,83,3.094,85,2.417,89,1.657,97,0.978,103,1.122,107,0.978,116,1.799,118,2.038,179,2.477,213,4.362,239,2.952,247,1.932,266,3.193,318,3.161,321,1.897,340,4.362,370,2.326,378,3.529,390,1.119,401,2.816,457,1.887,478,3.796,482,1.553,483,1.863,508,2.466,544,2.743,556,1.863,558,2.841,638,3.59,643,3.889,644,3.804,658,2.112,717,3.321,722,3.155,767,3.419,777,3.829,780,2.816,828,3.59,830,2.271,831,3.655,883,2.786,923,3.321,924,3.193,958,3.375,1350,2.417,1351,3.957,1357,4.663,1469,2.483,1476,3.277,1491,4.091,1506,4.213,1507,4.258,1508,3.155,1509,3.508,1515,3.234,1520,4.444,1536,4.526,1537,4.526,1538,4.526,1539,4.526,1540,4.526,1541,4.355,1542,3.155,1543,3.889,1544,3.984,1545,4.526,1546,4.355,1547,2.433,1548,4.526,1549,3.048,1550,4.526,1551,4.526,1552,4.091,1553,4.526,1554,4.526,1555,4.526,1556,4.526,1557,3.984,1558,3.804,1559,4.213,1560,3.419,1561,4.526,1562,6.073,1563,6.525,1564,3.655,1565,4.213,1566,2.536]],["title/archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core",[53,1.417,884,1.916,1567,4.613]],["text/archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core",[12,0.533,35,2.586,83,3.416,92,3.551,96,3.195,239,3.259,250,4.328,302,4.292,390,1.781,408,4.224,478,4.191,482,3.058,483,2.965,558,4.522,821,5.021,830,3.614,877,3.593,901,4.7,1048,5.286,1183,3.005,1350,4.76,1351,4.61,1445,4.158,1568,7.203,1569,2.913,1570,3.749,1571,7.203,1572,7.203,1573,8.913,1574,6.704,1575,6.704,1576,7.203,1577,4.799]],["title/archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core",[53,1.417,884,1.916,1578,4.613]],["text/archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core",[12,0.46,35,2.76,53,2.361,92,3.789,96,3.409,121,4.403,174,2.894,198,2.321,398,4.159,412,5.492,501,3.081,504,6.207,505,7.231,541,4.077,632,6.46,968,5.294,971,4.104,1338,5.123,1350,4.104,1351,4.796,1517,4.543,1579,7.685,1580,7.685]],["title/archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core",[53,1.417,884,1.916,1581,4.613]],["text/archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core",[6,1.325,7,0.507,12,0.599,27,2.275,35,1.869,40,2.254,52,3.628,53,2.812,55,1.41,69,1.314,83,2.468,84,1.05,92,1.651,93,2.581,96,4.061,97,1.557,105,1.918,106,2.96,108,1.369,111,1.324,118,2.343,121,3.659,174,1.96,198,1.572,200,1.995,204,2.029,213,2.455,239,1.515,247,1.429,301,2.947,318,2.816,340,1.579,371,3.628,390,2.356,408,4.843,410,3.286,414,2.23,426,2.61,460,2.185,464,1.948,477,2.947,478,3.028,482,2.191,483,2.142,503,2.814,504,2.704,505,2.61,519,1.256,541,1.776,555,2.28,558,3.268,573,2.965,633,1.69,637,4.399,658,1.562,686,2.659,722,3.628,768,3.052,777,3.498,780,3.973,806,2.492,826,1.562,830,3.204,831,2.704,872,2.947,877,2.596,883,1.429,895,1.596,917,2.704,921,1.824,958,1.731,1085,2.529,1183,3.005,1350,2.779,1351,2.692,1439,3.628,1469,2.856,1486,2.529,1507,4.7,1508,4.451,1531,2.917,1552,3.026,1566,1.876,1582,2.122,1583,2.947,1584,3.116,1585,3.348,1586,4.979,1587,3.993,1588,3.348,1589,3.348,1590,3.348,1591,3.348,1592,2.392,1593,3.348,1594,3.026,1595,2.704,1596,3.221,1597,2.492,1598,3.348,1599,3.348,1600,3.348,1601,3.348,1602,3.348,1603,5.205,1604,3.348,1605,2.568,1606,6.704,1607,4.285,1608,3.348,1609,3.348,1610,3.116,1611,3.348,1612,3.348,1613,4.979,1614,3.348,1615,2.947,1616,3.993,1617,4.824,1618,2.947,1619,3.116,1620,3.348,1621,3.116]],["title/archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07",[1622,5.507,1623,5.507]],["text/archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07",[5,1.072,6,2.934,7,0.586,12,0.558,15,3.214,16,2.58,18,1.617,19,0.787,27,3.054,28,1.223,31,2.791,35,1.789,40,1.005,51,1.319,52,1.617,53,2.687,54,1.383,57,1.193,59,1.034,65,1.703,69,1.955,80,2.202,83,2.759,84,1.214,85,1.239,90,1.994,92,2.457,93,1.151,96,1.718,97,0.502,98,0.973,103,0.575,108,1.106,111,0.987,116,1.539,118,2.243,121,3.333,126,1.055,136,1.3,168,1.888,169,1.394,174,2.631,175,1.77,179,0.881,198,2.11,214,1.383,226,1.727,230,2.387,235,1.95,239,1.05,247,0.991,255,1.803,303,2.73,318,2.103,321,2.438,324,2.081,340,2.35,349,1.264,356,1.383,390,2.243,392,1.931,398,3.148,401,2.409,405,1.658,408,1.361,409,1.418,420,1.47,421,1.58,423,1.112,482,1.329,483,2.394,484,1.58,501,0.93,510,1.617,520,1.383,541,2.054,545,2.041,555,1.58,556,0.955,558,2.431,573,2.662,619,1.841,650,1.703,654,1.658,717,1.703,722,2.699,725,1.874,768,1.361,777,2.742,778,1.546,780,1.444,783,1.931,785,1.95,794,1.005,806,1.727,813,4.386,823,1.485,824,1.58,825,1.658,826,1.807,830,1.943,860,2.043,877,1.157,879,1.617,883,2.983,899,0.959,904,1.703,926,1.874,947,1.753,958,2.577,966,2.16,968,4.455,971,2.068,999,1.171,1012,1.418,1048,1.703,1183,2.915,1185,2.11,1192,3.127,1199,1.53,1201,1.95,1245,1.418,1263,1.68,1264,2.925,1310,2.097,1311,2.243,1327,4.889,1338,1.282,1350,4.309,1351,4.613,1410,1.658,1444,2.502,1445,1.34,1469,1.273,1475,1.753,1476,1.68,1485,2.16,1486,1.753,1503,1.383,1517,1.372,1531,1.3,1534,1.361,1542,1.617,1543,1.383,1547,2.081,1558,1.95,1565,2.16,1566,2.17,1574,2.16,1575,2.16,1586,3.885,1595,1.874,1606,2.16,1615,2.043,1624,2.16,1625,2.32,1626,2.32,1627,2.043,1628,2.16,1629,1.874,1630,2.16,1631,2.32,1632,3.127,1633,2.097,1634,2.32,1635,1.95,1636,1.703,1637,3.872,1638,2.842,1639,1.2,1640,2.043,1641,2.32,1642,2.32,1643,2.097,1644,2.16,1645,2.16,1646,3.657,1647,2.32,1648,2.32,1649,2.32,1650,4.394,1651,4.463,1652,1.658,1653,2.32,1654,2.32,1655,2.233,1656,2.32,1657,1.841,1658,1.753,1659,1.78,1660,1.35,1661,2.32,1662,2.32,1663,2.32,1664,2.32,1665,2.32,1666,1.809,1667,3.872,1668,1.383,1669,1.809,1670,1.637,1671,2.32,1672,3.872,1673,1.617,1674,2.233,1675,2.32,1676,2.32,1677,2.32,1678,2.32,1679,2.32,1680,1.994,1681,1.617,1682,1.58,1683,2.32,1684,3.604,1685,2.32,1686,2.097,1687,1.658,1688,1.658,1689,2.32,1690,2.32,1691,1.418,1692,2.32,1693,2.043,1694,2.32,1695,2.32,1696,2.32,1697,1.95,1698,1.809,1699,1.95,1700,2.32,1701,1.841]],["title/archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old",[52,3.216,53,1.417,1188,2.224]],["text/archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old",[6,3.239,12,0.576,15,3.931,27,3.111,30,5.296,31,1.926,40,2.215,52,3.565,55,2.153,69,2.792,83,2.425,84,1.604,93,2.536,96,2.269,97,1.538,108,1.353,111,1.208,174,1.926,198,1.545,247,2.184,255,2.961,364,3.959,483,3.641,545,2.696,621,4.211,654,3.655,779,3.126,780,3.182,883,2.184,943,5.225,1185,2.787,1212,5.548,1213,4.792,1236,3.703,1243,3.372,1253,3.864,1327,7.815,1328,4.761,1350,3.8,1351,3.68,1384,3.655,1530,3.483,1531,2.866,1542,3.565,1582,3.241,1586,3.988,1615,4.502,1624,4.761,1632,4.131,1643,4.623,1644,4.761,1645,4.761,1650,5.375,1651,6.278,1668,3.048,1702,5.115,1703,5.115,1704,5.115,1705,5.115,1706,4.131,1707,4.502,1708,7.115,1709,4.502,1710,4.131,1711,5.115,1712,5.115,1713,5.981,1714,5.115,1715,5.115,1716,5.115,1717,5.115,1718,5.115,1719,5.115,1720,4.921,1721,4.623]],["title/archive/download/cluster/",[7,0.601,389,1.761,686,2.028,1722,4.408]],["text/archive/download/cluster/",[7,1.549,12,0.521,19,2.138,31,2.373,46,3.279,53,1.936,59,2.809,60,2.334,63,3.484,84,1.353,176,2.068,200,2.57,201,2.453,251,2.592,266,4.446,318,1.897,321,3.12,339,2.905,344,3.2,389,3.632,390,1.558,401,2.683,404,3.082,408,3.695,410,2.402,412,5.32,423,2.068,453,5.547,456,2.471,457,1.247,501,2.526,517,2.217,518,2.417,526,3.165,556,1.775,586,2.733,612,2.203,637,2.971,686,3.219,693,4.76,726,3.165,770,3.006,777,1.693,784,3.082,830,2.164,831,3.484,883,2.69,908,2.787,917,3.484,921,2.35,958,2.231,1010,2.4,1048,4.624,1077,3.363,1083,3.006,1173,2.614,1196,3.484,1260,3.365,1444,4.071,1509,2.319,1517,2.55,1543,4.437,1547,2.319,1570,4.261,1592,3.082,1607,3.551,1638,3.165,1659,3.309,1698,4.913,1723,4.313,1724,5.547,1725,5.865,1726,6.301,1727,4.313,1728,3.625,1729,1.972,1730,4.313,1731,3.484,1732,3.551,1733,4.313,1734,3.258,1735,2.874,1736,4.313,1737,4.313,1738,6.301,1739,4.313,1740,6.301,1741,6.301,1742,4.313,1743,4.313,1744,5.865,1745,5.415,1746,3.797,1747,3.363,1748,6.301,1749,4.313,1750,3.123,1751,4.313,1752,3.898,1753,3.123,1754,4.313,1755,3.484,1756,2.937,1757,4.014,1758,2.874,1759,3.082,1760,4.014,1761,3.123,1762,4.313,1763,4.313]],["title/archive/download/cluster/#set-up-your-apache-spark-cluster",[7,0.527,19,1.182,389,1.545,686,1.779,1570,1.812]],["text/archive/download/cluster/#set-up-your-apache-spark-cluster",[7,1.5,12,0.514,46,5.156,1010,4.784,1083,5.993]],["title/archive/download/cluster/#preliminary",[1723,6.83]],["text/archive/download/cluster/#preliminary",[7,1.468,12,0.287,31,2.56,53,2.089,59,3.031,60,2.594,63,3.872,84,1.504,176,2.298,200,2.857,201,2.726,251,2.881,266,4.797,318,2.046,321,3.311,339,3.229,389,3.505,390,1.681,401,2.982,404,3.426,408,3.987,410,2.592,412,5.646,423,2.298,453,5.985,456,2.747,457,1.386,501,2.726,517,2.464,518,2.687,556,1.973,586,3.038,612,2.449,637,3.302,686,2.449,693,5.136,726,3.518,770,3.342,777,1.881,784,3.426,830,2.405,831,3.872,883,2.903,908,3.097,917,3.872,921,2.612,958,2.479,1048,4.99,1077,3.738,1196,3.872,1444,4.393,1509,2.577,1517,2.834,1543,4.708,1547,2.577,1570,2.495,1592,3.426,1607,3.947,1638,3.518,1659,3.678,1698,5.302,1724,5.985,1725,6.328,1726,6.799,1727,4.794,1728,4.029,1729,2.191,1730,4.794,1731,3.872,1732,3.947,1733,4.794,1734,3.621,1735,3.194,1736,4.794,1737,4.794,1738,6.799,1739,4.794,1740,6.799,1741,6.799,1742,4.794,1743,4.794,1744,6.328,1745,5.843,1746,4.22,1747,3.738,1748,6.799,1749,4.794,1750,3.471,1751,4.794,1752,4.333,1753,3.471,1754,4.794,1755,3.872,1756,3.265,1757,4.462,1758,3.194]],["title/archive/download/cluster/#start-your-cluster",[344,2.796,1570,2.866]],["text/archive/download/cluster/#start-your-cluster",[7,1.463,19,2.795,344,4.183,526,6.045,1173,4.992,1260,5.161,1570,4.287,1759,5.886,1760,7.667,1761,5.964,1762,8.237,1763,8.237]],["title/archive/download/compile/",[50,2.262,51,1.571,1639,2.386]],["text/archive/download/compile/",[12,0.554,19,2.072,34,0.731,46,3.177,47,2.618,48,2.594,50,4.664,51,3.24,52,2.88,53,3.116,56,2.618,59,1.842,84,2.278,87,2.753,88,2.814,89,1.513,93,2.049,98,1.732,126,1.879,175,2.791,349,4.37,410,1.575,457,1.195,501,2.448,516,2.251,517,3.732,518,4.069,610,2.88,633,3.082,686,2.111,722,2.88,794,2.644,823,4.646,826,1.928,876,4.945,884,1.716,895,1.97,908,2.669,942,3.075,957,5.402,961,2.462,993,2.669,1173,4.4,1188,1.992,1219,4.761,1260,4.57,1308,2.943,1341,3.075,1352,3.609,1409,3.277,1412,5.973,1547,2.221,1549,2.783,1569,2.469,1610,3.846,1638,3.032,1639,5.11,1697,3.473,1729,3.319,1758,4.838,1761,2.991,1764,4.589,1765,3.473,1766,3.337,1767,3.222,1768,3.637,1769,2.846,1770,4.206,1771,4.796,1772,4.843,1773,4.931,1774,4.931,1775,3.032,1776,3.277,1777,4.132,1778,8.374,1779,4.132,1780,7.261,1781,2.618,1782,3.402]],["title/archive/download/compile/#compile-geospark",[53,1.692,1639,2.848]],["text/archive/download/compile/#compile-geospark",[12,0.549,46,4.778,47,4.79,50,5.042,51,3.502,53,3.237,410,2.881,633,3.815,826,3.528,961,4.505,1341,5.626,1610,7.035,1639,3.909,1764,8.395,1765,6.353,1766,6.105,1767,5.894]],["title/archive/download/compile/#compile-the-source-code",[50,2.262,51,1.571,1639,2.386]],["text/archive/download/compile/#compile-the-source-code",[19,2.618,34,1.019,52,4.012,53,2.673,56,3.648,59,2.566,84,2.419,87,3.835,93,2.855,98,2.413,126,2.618,175,3.526,349,4.74,457,1.664,501,2.308,516,3.137,517,4.472,518,4.875,610,4.012,633,2.906,686,2.941,722,4.012,794,3.34,823,5.566,884,2.391,957,6.259,1173,3.488,1188,2.775,1219,6.015,1260,4.119,1308,3.719,1409,4.566,1412,6.501,1547,3.094,1549,3.877,1569,2.328,1638,4.225,1639,4.807,1729,3.526,1761,4.168,1768,5.067,1769,3.965,1770,3.965,1771,5.208,1772,6.119,1773,6.23,1774,6.23,1775,4.225,1776,4.566]],["title/archive/download/compile/#compile-the-documentation",[876,3.75,1639,2.848]],["text/archive/download/compile/#compile-the-documentation",[12,0.505,48,4.153,50,4.563,51,3.17,53,2.86,84,2.075,88,4.504,89,2.422,349,3.604,501,2.652,876,5.753,895,3.154,908,4.273,942,4.923,993,4.273,1173,5.119,1260,4.971,1352,4.994,1569,2.675,1639,4.369,1697,5.559,1729,3.023,1758,6.201,1770,4.556,1771,3.707,1777,6.614,1778,9.388,1779,6.614,1780,9.308,1781,4.191,1782,5.446]],["title/archive/download/overview/",[344,2.796,865,4.099]],["text/archive/download/overview/",[5,4.009,7,1.314,12,0.609,19,2.61,35,2.058,40,3.759,46,2.983,47,4.875,48,3.599,50,2.81,51,1.952,53,3.219,57,3.954,80,3.26,91,2.828,93,3.815,96,2.543,97,1.239,247,2.447,293,3.949,344,3.906,355,4.096,410,2.185,419,4.547,466,2.911,483,2.36,517,2.946,518,3.212,529,3.236,544,3.474,658,2.675,794,3.331,1225,6.465,1308,2.763,1309,3.416,1444,3.704,1569,2.318,1570,2.983,1639,3.978,1728,4.818,1729,2.62,1750,5.569,1753,4.15,1769,3.949,1783,9.642,1784,5.732,1785,4.547,1786,3.504,1787,5.516,1788,6.004,1789,4.72,1790,6.004,1791,3.996,1792,6.004,1793,3.236]],["title/archive/download/overview/#direct-download",[46,2.866,1728,4.629]],["text/archive/download/overview/#direct-download",[5,4.534,12,0.612,47,5.76,48,4.669,50,3.646,51,2.533,53,3.278,57,4.672,80,4.229,91,3.341,1225,7.64,1308,3.585,1309,4.431,1639,4.701,1783,10.903]],["title/archive/download/overview/#install-geospark",[53,1.692,1729,2.517]],["text/archive/download/overview/#install-geospark",[7,1.428,12,0.407,19,2.92,35,2.446,40,4.086,53,2.644,93,4.268,96,3.021,97,1.472,247,2.908,293,4.691,344,4.37,355,4.867,410,2.596,419,5.402,466,3.458,483,2.803,517,3.501,518,3.817,529,3.845,544,4.127,658,3.178,794,3.726,1444,4.4,1569,2.754,1570,3.544,1750,6.231,1753,4.931,1769,4.691,1784,6.81,1785,5.402,1786,4.163,1787,6.553,1788,7.133,1789,5.608,1790,7.133,1791,4.747,1792,7.133,1793,3.845]],["title/archive/download/project/",[355,3.296,466,2.342,794,1.997]],["text/archive/download/project/",[6,1.041,7,1.42,12,0.651,28,1.387,34,0.963,35,0.945,40,2.357,41,2.051,46,1.369,50,1.29,51,0.896,53,2.79,56,1.667,57,4.345,60,3.4,69,1.032,84,1.347,89,0.963,91,1.579,92,2.118,93,2.699,97,1.925,98,1.103,111,0.729,112,0.783,123,0.889,232,1.568,247,1.123,302,3.744,303,1.028,318,0.792,344,2.181,355,3.889,389,1.167,392,1.312,410,2.639,423,2.059,457,0.761,462,2.166,464,1.531,466,3.19,481,1.474,487,2.581,501,2.518,516,1.434,517,2.797,518,3.05,529,1.485,556,1.083,658,1.228,694,1.905,718,3.349,722,1.834,768,1.543,782,1.543,794,4.209,826,2.004,865,1.958,877,1.312,879,1.834,880,1.434,883,1.834,884,1.093,885,3.839,886,3.839,889,1.622,890,2.625,891,1.531,893,1.507,895,2.595,896,1.753,898,1.622,958,1.361,961,2.56,964,1.667,1010,2.39,1052,2.087,1077,2.051,1173,1.594,1260,3.355,1270,2.356,1289,3.069,1290,1.652,1291,2.748,1292,2.051,1308,3.337,1309,1.568,1311,3.679,1337,4.226,1338,1.454,1352,1.555,1430,2.051,1498,1.856,1505,2.051,1533,2.051,1547,1.414,1569,3.169,1570,2.833,1597,3.197,1636,3.994,1639,4.052,1731,3.469,1757,2.449,1758,1.753,1759,1.88,1769,1.812,1771,2.407,1781,3.981,1789,2.166,1793,3.907,1794,3.61,1795,5.674,1796,4.396,1797,4.133,1798,4.133,1799,5.066,1800,1.753,1801,2.449,1802,2.378,1803,2.532,1804,2.087,1805,2.449,1806,2.631,1807,3.031,1808,1.834,1809,2.922,1810,2.211,1811,2.631,1812,1.931,1813,4.77,1814,2.631,1815,2.261,1816,5.442,1817,4.77,1818,4.77,1819,1.987,1820,1.717,1821,1.931,1822,2.922,1823,2.922,1824,2.922,1825,2.211,1826,2.922]],["title/archive/download/project/#self-contained-spark-projects",[7,0.601,355,2.836,466,2.015,794,1.719]],["text/archive/download/project/#self-contained-spark-projects",[7,1.157,12,0.457,40,3.309,53,2.839,93,3.79,97,1.652,123,2.584,355,6.604,410,2.913,462,6.293,466,4.693,501,3.064,658,3.567,694,5.533,718,5.959,794,4.002,880,4.164,883,3.263,885,4.671,886,4.671,1311,3.441,1338,4.222,1597,5.689]],["title/archive/download/project/#quick-start",[344,2.796,865,4.099]],["text/archive/download/project/#quick-start",[7,1.474,12,0.388,28,3.421,53,2.992,57,4.289,60,3.512,84,2.035,89,2.376,91,2.386,97,1.804,303,2.536,344,3.295,423,3.111,457,1.876,517,4.289,518,4.677,794,3.994,879,4.523,883,2.77,1010,3.611,1052,5.147,1173,3.932,1260,3.465,1308,4.023,1309,3.867,1311,3.757,1569,2.624,1570,3.377,1636,6.125,1639,4.316,1758,4.324,1771,3.637,1781,5.289,1793,3.663,1794,5.454,1795,6.02,1796,5.241,1797,6.244,1798,6.244,1799,6.04]],["title/archive/download/project/#how-to-use-geospark-in-an-ide",[53,1.417,97,0.997,1337,2.386]],["text/archive/download/project/#how-to-use-geospark-in-an-ide",[]],["title/archive/download/project/#select-an-ide",[112,1.004,1337,2.848]],["text/archive/download/project/#select-an-ide",[6,3.059,40,3.346,53,2.374,93,4.614,97,2.012,232,4.606,392,3.855,794,3.346,961,4.606,1308,4.485,1311,3.479,1498,5.453,1597,5.753,1769,5.324,1794,6.496,1800,5.149,1801,7.193,1802,6.985,1803,7.436,1804,6.13,1805,7.193,1806,7.728]],["title/archive/download/project/#open-geospark-template-project",[53,1.219,794,1.719,1781,2.515,1807,2.8]],["text/archive/download/project/#open-geospark-template-project",[12,0.457,40,3.309,50,3.747,51,2.603,53,2.839,97,1.652,111,1.297,112,1.394,466,3.881,501,3.064,556,3.146,794,4.302,886,4.671,961,4.555,1260,4.081,1270,4.193,1311,3.441,1337,4.78,1352,4.518,1547,4.108,1781,4.843,1807,5.393,1808,5.327]],["title/archive/download/project/#try-geospark-sql-functions",[34,0.703,35,1.425,53,1.219,1789,3.268]],["text/archive/download/project/#try-geospark-sql-functions",[34,1.441,111,1.382,302,4.851,318,2.45,410,3.103,501,3.847,826,3.799,895,3.881,1337,4.963,1569,3.881,1809,9.04,1810,6.842,1811,8.14]],["title/archive/download/project/#package-the-project",[794,2.384,1793,3.109]],["text/archive/download/project/#package-the-project",[7,1.453,12,0.669,34,0.82,46,2.411,56,2.936,57,3.41,60,3.591,69,1.818,84,1.453,92,2.284,97,1.434,98,1.942,247,1.978,302,2.761,389,2.055,410,2.955,423,2.221,464,2.695,481,2.596,487,3.676,516,2.524,517,2.381,518,2.596,529,2.615,718,3.612,722,3.229,768,2.717,794,3.879,826,2.162,877,2.311,884,1.924,885,4.055,886,4.055,889,2.856,890,4.055,891,2.695,893,2.654,895,2.209,896,3.086,898,2.856,958,2.396,1010,2.578,1270,2.542,1289,4.741,1290,2.908,1291,4.245,1292,3.612,1308,2.233,1311,3.49,1337,3.432,1430,3.612,1505,3.612,1569,3.423,1570,2.411,1636,3.4,1639,4.378,1731,5.359,1757,4.312,1771,2.596,1793,4.376,1795,4.33,1812,3.4,1813,7.369,1814,4.632,1815,3.981,1816,7.752,1817,7.369,1818,7.369,1819,3.5,1820,3.023,1821,3.4]],["title/archive/download/project/#submit-the-compiled-jar",[57,2.371,1639,2.386,1795,3.01]],["text/archive/download/project/#submit-the-compiled-jar",[7,1.079,12,0.53,41,5.558,57,5.179,60,3.858,91,2.62,92,3.515,97,1.914,302,5.277,782,4.18,885,4.357,895,3.399,964,4.517,1077,5.558,1260,4.729,1533,5.558,1570,3.71,1759,5.093,1795,6.575,1796,7.152,1797,6.859,1798,6.859,1799,8.242,1822,7.917,1823,7.917,1824,7.917,1825,5.991,1826,7.917]],["title/archive/download/scalashell/",[7,0.698,40,1.997,293,3.178]],["text/archive/download/scalashell/",[5,2.118,7,1.482,12,0.504,40,3.338,46,4.835,47,2.906,50,2.248,51,2.626,53,3.148,54,3.926,57,5.126,60,4.56,96,2.034,126,2.996,293,6.972,302,5.318,349,3.589,389,2.922,410,2.511,458,2.993,651,2.449,686,3.365,877,2.288,884,1.905,895,3.141,907,3.024,1010,2.552,1188,3.176,1202,2.589,1216,4.538,1225,3.855,1308,2.211,1309,2.733,1338,2.534,1445,3.803,1569,2.664,1570,4.835,1577,3.056,1639,3.407,1729,2.096,1731,5.321,1753,3.32,1761,3.32,1766,3.704,1767,3.576,1771,2.57,1772,3.638,1773,3.704,1774,3.704,1785,5.225,1793,4.756,1796,7.504,1827,5.094,1828,7.316,1829,7.316,1830,7.316,1831,6.131,1832,4.269,1833,5.094,1834,7.316,1835,7.316]],["title/archive/download/scalashell/#spark-scala-shell",[7,0.698,40,1.997,293,3.178]],["text/archive/download/scalashell/#spark-scala-shell",[7,1.218,40,4.126,51,2.74,53,2.471,96,3.568,293,5.542,302,4.794,458,5.25,651,4.296,877,4.013,884,3.341,907,5.304,1010,4.476,1202,4.541,1338,4.445,1753,5.824,1761,5.824]],["title/archive/download/scalashell/#download-geospark-jar-automatically",[46,2.066,53,1.219,54,2.365,57,2.04]],["text/archive/download/scalashell/#download-geospark-jar-automatically",[7,1.432,46,3.562,53,2.652,54,4.079,57,3.518,60,4.672,126,3.113,293,6.841,302,5.145,349,3.729,389,3.036,410,2.609,686,3.497,895,3.263,1216,4.715,1308,3.299,1309,4.079,1445,3.952,1569,2.768,1570,4.922,1731,5.528,1771,3.836,1785,5.429,1793,5.606,1796,7.638,1827,7.602,1828,9.588,1829,9.588,1830,9.588,1831,6.371]],["title/archive/download/scalashell/#download-geospark-jar-manually",[46,2.066,53,1.219,57,2.04,1577,2.644]],["text/archive/download/scalashell/#download-geospark-jar-manually",[5,2.888,7,1.372,12,0.374,46,4.717,47,3.963,50,3.066,51,2.775,53,3.136,57,5.248,60,4.409,126,2.844,293,6.614,302,4.856,349,3.407,389,2.774,410,2.384,686,3.195,895,2.982,1188,3.928,1216,4.308,1225,5.256,1445,3.61,1569,2.529,1570,4.717,1639,4.214,1729,2.858,1731,5.051,1766,5.051,1767,4.876,1772,4.96,1773,5.051,1774,5.051,1785,4.96,1796,7.32,1831,5.821,1832,5.821,1833,6.945,1834,9.049,1835,9.049]],["title/archive/download/zeppelin/",[53,1.417,1233,2.463,1729,2.109]],["text/archive/download/zeppelin/",[6,1.729,7,0.963,12,0.613,14,2.942,15,2.413,19,2.158,32,3.656,34,0.773,53,3.23,59,1.947,83,3.016,84,1.995,89,1.599,91,1.606,92,3.136,97,0.944,107,0.944,116,1.736,123,2.535,125,1.79,126,2.892,174,2.395,176,2.094,179,2.414,198,1.319,204,2.647,223,3.009,239,1.976,321,2.665,410,2.424,457,1.263,501,2.55,516,2.38,519,1.638,612,2.231,692,4.065,826,2.038,859,3.845,883,2.715,884,2.641,995,1.947,1173,2.647,1185,4.488,1188,2.106,1202,3.59,1206,3.845,1212,3.406,1213,5.05,1214,3.3,1233,5.681,1260,4.399,1270,2.396,1311,1.966,1319,3.596,1352,3.759,1410,3.121,1413,3.045,1503,2.603,1682,2.975,1729,2.907,1750,3.162,1759,3.121,1793,2.466,1807,3.082,1836,4.368,1837,4.368,1838,3.3,1839,3.009,1840,4.368,1841,3.753,1842,3.671,1843,6.653,1844,5.345,1845,4.368,1846,3.596,1847,5.236,1848,4.851,1849,4.065,1850,4.368,1851,4.368,1852,4.368,1853,4.368,1854,3.729,1855,4.368,1856,3.251,1857,4.065,1858,4.065]],["title/archive/download/zeppelin/#install-geospark-zeppelin",[53,1.417,1233,2.463,1729,2.109]],["text/archive/download/zeppelin/#install-geospark-zeppelin",[12,0.438,32,4.752,53,2.248,59,3.262,83,4.268,84,2.295,97,1.582,107,1.582,116,2.909,125,2.999,176,3.508,179,3.417,223,5.041,516,3.987,884,3.039,1185,3.987,1202,4.131,1206,6.441,1212,5.706,1213,6.565,1233,4.806,1410,5.229,1682,4.983,1836,7.317,1837,7.317,1838,5.528,1839,5.041,1840,7.317]],["title/archive/download/zeppelin/#compatibility",[1841,5.869]],["text/archive/download/zeppelin/#compatibility",[7,1.247,14,5.548,19,3.279,34,1.458,53,3.25,884,3.421,1188,3.971,1233,4.399,1319,6.782,1842,6.923]],["title/archive/download/zeppelin/#installation",[1729,3.122]],["text/archive/download/zeppelin/#installation",[53,2.561,91,3.065,174,3.139,198,2.518,239,3.772,410,3.178,612,4.259,1233,5.197,1503,4.968,1793,4.706,1843,6.734]],["title/archive/download/zeppelin/#create-helium-folder-optional",[123,1.342,126,1.805,1260,2.119,1843,3.206]],["text/archive/download/zeppelin/#create-helium-folder-optional",[92,4.239,123,2.907,1173,5.21,1233,4.591,1260,5.291,1843,6.944]],["title/archive/download/zeppelin/#add-geospark-zeppelin-description-optional",[53,1.07,126,1.584,883,1.487,1233,1.86,1844,2.927]],["text/archive/download/zeppelin/#add-geospark-zeppelin-description-optional",[6,2.866,12,0.535,53,2.98,92,3.57,123,2.448,174,2.726,204,4.388,410,2.76,457,2.093,501,3.585,519,2.715,826,3.379,859,6.374,995,3.228,1185,4.872,1214,5.47,1233,5.181,1260,3.867,1413,5.047,1844,6.086,1845,7.24,1846,5.962,1847,7.362,1848,8.041,1849,6.739,1850,7.24,1851,7.24,1852,7.24,1853,7.24]],["title/archive/download/zeppelin/#enable-geospark-zeppelin",[53,1.417,1233,2.463,1854,2.705]],["text/archive/download/zeppelin/#enable-geospark-zeppelin",[53,2.609,1233,5.546,1807,5.992,1843,6.858,1854,4.979,1855,8.491,1856,6.321]],["title/archive/download/zeppelin/#add-geospark-dependencies-in-zeppelin-spark-interpreter",[7,0.47,53,0.953,692,2.888,883,1.325,1233,1.657,1311,1.397]],["text/archive/download/zeppelin/#add-geospark-dependencies-in-zeppelin-spark-interpreter",[]],["title/archive/download/zeppelin/#visualize-geosparksql-results",[321,1.933,1185,2.514,1270,2.531]],["text/archive/download/zeppelin/#visualize-geosparksql-results",[]],["title/archive/download/zeppelin/#display-geosparkviz-results",[321,1.933,1202,2.604,1857,4.294]],["text/archive/download/zeppelin/#display-geosparkviz-results",[15,4.663,53,2.593,84,2.647,89,3.09,1233,4.507,1352,5.794,1750,6.11,1759,6.031,1858,7.855]],["title/archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/",[53,1.219,882,2.447,1183,1.656,1859,2.913]],["text/archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/",[5,0.949,6,0.813,7,0.993,12,0.616,19,1.547,27,2.636,31,1.316,35,0.737,49,1.507,50,1.007,52,1.432,53,2.639,55,2.539,59,1.557,66,3.037,69,3.298,83,0.974,84,1.43,89,0.752,91,1.676,92,1.013,95,1.34,96,2.386,97,1.857,98,1.464,105,1.177,106,1.987,111,0.774,118,0.925,121,3.455,125,1.432,126,0.934,174,0.773,179,0.78,213,2.15,222,1.159,230,1.266,232,2.717,239,0.929,247,0.877,318,2.72,335,1.368,340,2.15,344,1.043,355,1.468,361,2.484,371,2.435,386,1.214,390,2.317,394,3.821,408,2.049,410,1.738,415,2.822,425,2.28,457,1.01,458,1.34,460,2.28,461,1.327,466,2.732,482,2.528,483,1.438,484,4.467,488,2.407,510,1.432,517,1.796,518,1.958,529,1.972,545,1.841,555,1.399,556,2.881,573,1.438,633,1.763,635,1.507,636,1.856,637,2.407,639,1.177,658,1.63,660,1.659,693,1.551,777,2.891,779,2.135,780,3.347,783,2.274,807,2.564,826,3.266,830,3.026,858,1.368,866,3.346,867,1.551,877,2.274,882,2.154,895,0.979,913,1.432,920,2.639,922,1.487,927,2.328,957,1.383,958,1.062,971,1.866,1012,2.787,1183,3.95,1217,1.808,1229,1.691,1245,4.009,1285,1.576,1325,3.252,1350,1.097,1351,1.062,1352,2.065,1384,1.468,1434,1.432,1474,4.345,1475,1.551,1476,1.487,1503,1.224,1509,1.104,1517,3.18,1531,3.015,1542,1.432,1543,2.717,1547,1.104,1558,1.726,1566,2.555,1577,2.328,1582,1.301,1586,2.724,1592,1.468,1605,1.576,1613,3.555,1616,1.576,1617,3.444,1618,1.808,1619,1.912,1659,2.68,1669,5.115,1687,2.496,1693,1.808,1699,2.936,1770,1.415,1785,1.629,1789,1.691,1800,1.368,1808,2.435,1810,2.936,1812,1.507,1821,3.948,1842,2.936,1859,2.564,1860,1.808,1861,2.936,1862,2.054,1863,4.243,1864,2.281,1865,2.281,1866,2.054,1867,1.765,1868,2.281,1869,2.054,1870,2.054,1871,1.912,1872,4.013,1873,2.054,1874,2.054,1875,1.659,1876,1.601,1877,4.426,1878,2.639,1879,3.494,1880,3.494,1881,2.936,1882,2.936,1883,2.771,1884,3.075,1885,3.075,1886,3.494,1887,2.054,1888,1.659,1889,3.494,1890,2.054,1891,2.054,1892,1.576,1893,3.075,1894,2.054,1895,2.054,1896,4.559,1897,3.494,1898,3.075,1899,2.054,1900,3.494,1901,2.054,1902,1.912,1903,1.551,1904,3.494,1905,2.936,1906,2.054,1907,2.054,1908,2.054,1909,2.054,1910,2.054,1911,2.054,1912,1.808,1913,2.054,1914,2.054,1915,2.054,1916,1.912,1917,2.054,1918,2.054,1919,2.054]],["title/archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application",[53,0.953,882,1.913,920,2.344,1183,1.294,1352,1.834,1859,2.277]],["text/archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application",[35,2.976,53,2.546,84,2.599,517,4.26,518,4.644,529,4.678,895,3.951,920,6.26,1352,4.899,1474,6.693,1770,5.709,1789,6.823,1860,7.295]],["title/archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version",[53,1.219,69,1.558,1808,2.767,1861,3.336]],["text/archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version",[5,2.453,6,2.102,7,0.804,27,4.12,49,3.898,52,3.703,53,2.992,69,4.136,84,1.666,89,1.945,91,1.953,95,3.466,96,3.24,98,2.226,239,2.404,410,2.025,466,4.565,483,3.007,510,3.703,517,2.73,518,2.977,529,2.999,555,3.618,633,2.681,635,3.898,660,4.29,779,4.464,780,5.194,826,4.545,922,3.846,957,3.578,1245,5.953,1325,6.799,1350,2.837,1351,2.747,1434,3.703,1475,4.013,1586,5.696,1659,4.075,1785,4.213,1800,3.539,1821,6.598,1842,6.139,1861,4.465,1862,5.312,1863,7.77,1864,5.9,1865,5.9,1866,5.312,1867,4.565,1868,5.9,1869,5.312,1870,5.312,1871,4.944,1872,7.349,1873,5.312,1874,5.312,1875,4.29,1876,4.142]],["title/archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor",[121,1.995,390,0.861,1183,1.453,1605,2.672,1808,2.428]],["text/archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor",[7,0.972,12,0.652,19,2.178,31,1.666,50,2.169,53,2.546,55,1.863,59,1.972,66,5.033,92,2.181,97,1.388,105,2.535,106,3.65,111,1.09,118,1.992,121,4.328,125,2.63,126,2.012,179,1.679,213,2.087,222,2.497,247,1.889,318,1.932,344,2.246,361,2.411,371,4.474,390,1.587,394,5.576,408,2.594,415,5.184,425,4.188,457,1.856,460,2.887,482,2.843,484,4.371,488,4.421,637,4.421,658,2.065,777,2.519,783,2.207,830,3.221,867,3.342,877,3.768,927,2.947,971,2.362,1012,2.704,1183,2.678,1285,3.394,1384,3.161,1474,5.184,1531,4.233,1547,2.378,1577,4.276,1582,2.804,1592,3.161,1613,5.89,1616,3.394,1617,5.706,1618,3.894,1619,4.118,1659,3.394,1669,3.45,1687,3.161,1693,3.894,1877,6.081,1878,3.342,1879,6.418,1880,6.418,1881,5.395,1882,5.395,1883,5.091,1884,5.65,1885,5.65,1886,6.418,1887,4.424,1888,3.573,1889,6.418,1890,4.424,1891,4.424,1892,3.394,1893,3.894,1894,4.424]],["title/archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used",[97,0.753,390,0.861,1183,1.453,1669,2.716,1895,3.483]],["text/archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used",[7,0.943,12,0.559,31,1.599,55,3.422,59,1.893,83,2.014,84,1.332,91,2.29,96,1.884,97,2.115,98,1.78,121,2.433,213,2.938,232,4.397,318,3.127,340,3.48,355,3.034,386,2.51,390,2.568,410,2.375,460,2.771,461,2.744,482,2.138,484,5.535,545,3.284,556,3.848,573,2.564,639,2.433,658,1.982,777,3.55,783,3.107,830,2.131,858,2.829,866,5.415,882,2.618,913,2.96,927,2.829,971,2.268,1012,2.596,1183,4.297,1217,3.738,1229,3.497,1474,3.43,1517,3.682,1543,3.713,1558,3.569,1566,4.135,1669,5.753,1687,3.034,1699,5.236,1810,5.236,1877,3.116,1878,3.208,1896,7.378,1897,6.23,1898,5.484,1899,4.246,1900,6.23,1901,4.246,1902,3.953,1903,3.208,1904,6.23,1905,5.236,1906,4.246,1907,4.246,1908,4.246,1909,4.246,1910,4.246,1911,4.246,1912,3.738,1913,4.246,1914,4.246,1915,4.246]],["title/archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions",[390,0.981,830,1.991,1183,1.656,1916,3.694]],["text/archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions",[7,1.079,19,2.419,96,3.162,97,1.541,111,1.21,174,2.684,230,4.395,335,4.749,361,4.825,408,4.18,458,4.651,482,3.038,633,3.598,636,6.443,693,5.385,780,4.435,807,6.499,826,3.327,830,3.577,958,3.687,1012,4.357,1183,2.974,1476,5.161,1503,4.248,1509,3.832,1517,5.235,1531,3.995,1542,4.969,1543,4.248,1669,5.558,1812,5.231,1859,5.231,1893,6.275,1917,7.128,1918,7.128,1919,7.128]],["title/archive/tutorial/GeoSpark-Runnable-DEMO/",[53,1.417,794,1.997,1781,2.923]],["text/archive/tutorial/GeoSpark-Runnable-DEMO/",[12,0.46,51,3.158,53,2.849,87,5.12,466,3.902,794,4.478,895,3.664,908,4.965,1202,4.338,1216,5.294,1270,4.216,1569,3.108,1639,3.975,1781,6.554,1793,4.338,1920,8.049,1921,6.207,1922,8.049]],["title/archive/tutorial/benchmark/",[1923,6.012]],["text/archive/tutorial/benchmark/",[6,2.669,12,0.403,49,4.949,53,3.035,69,3.356,83,3.198,84,2.946,97,2.135,480,4.793,556,2.776,717,4.949,768,3.955,779,5.228,780,4.195,807,4.949,884,2.801,1270,3.7,1410,4.819,1509,3.625,1520,4.593,1543,4.019,1544,5.936,1570,3.51,1682,4.593,1688,4.819,1756,4.593,1807,4.758,1812,4.949,1923,8.268,1924,5.447,1925,5.936,1926,6.095,1927,6.277,1928,5.668,1929,5.936,1930,6.744,1931,4.758,1932,6.744]],["title/archive/tutorial/benchmark/#benchmark",[1923,6.012]],["text/archive/tutorial/benchmark/#benchmark",[6,2.696,49,4.998,53,3.045,69,3.377,83,3.23,84,2.959,97,2.143,480,4.823,556,2.803,717,4.998,768,3.994,779,5.26,780,4.237,807,4.998,884,2.829,1270,3.736,1410,4.867,1509,3.661,1520,4.638,1543,4.059,1544,5.995,1570,3.544,1682,4.638,1688,4.867,1756,4.638,1807,4.806,1812,4.998,1923,7.576,1924,5.501,1925,5.995,1926,6.156,1927,6.339,1928,5.724,1929,5.995,1930,6.81,1931,4.806,1932,6.81]],["title/archive/tutorial/faq/",[1933,5.567,1934,3.877,1935,4.439]],["text/archive/tutorial/faq/",[12,0.505,15,4.663,47,5.348,53,2.593,83,4.002,84,2.647,89,3.09,99,8.839,1936,7.093,1937,10.184]],["title/archive/tutorial/geospark-core-python/",[43,1.96,390,1.14,1183,1.925]],["text/archive/tutorial/geospark-core-python/",[6,0.655,7,0.628,8,0.467,12,0.673,14,0.41,15,0.639,19,0.207,25,0.85,27,0.506,28,0.321,31,0.793,32,1.228,34,0.205,35,1.166,38,0.467,40,0.264,43,1.762,44,0.567,48,0.727,50,0.567,51,1.98,53,2.005,54,0.363,55,1.22,57,1.835,59,1.724,69,0.649,83,0.785,84,1.018,87,0.406,89,1.189,91,0.926,96,0.513,97,1.679,98,0.883,102,0.129,103,0.625,105,1.444,107,1.383,108,0.883,111,0.428,112,0.111,116,1.152,118,0.521,121,0.663,123,1.207,125,0.678,126,0.526,133,1.998,134,0.467,136,1.412,156,1.337,158,0.363,162,0.441,163,1.348,168,1.027,169,1.742,170,0.386,174,0.623,176,0.292,179,2.076,180,2.344,199,0.868,201,0.346,204,0.369,213,1.188,214,0.363,215,1.063,222,0.344,224,0.734,226,0.453,230,0.375,236,0.475,239,0.276,247,1.651,248,0.535,255,1.175,295,0.707,306,0.33,318,2.243,321,2.214,340,1.367,343,1.97,344,0.309,349,0.332,356,0.363,389,1.286,390,1.863,398,0.33,410,0.441,420,0.386,422,2.038,424,0.874,456,0.349,457,1.77,459,1.382,465,1.172,478,0.673,479,0.8,480,0.341,482,2.837,484,0.788,485,0.888,486,1.591,487,0.549,488,0.419,491,1.328,493,0.39,500,0.441,501,2.799,507,0.986,508,1.148,516,0.332,519,1.981,520,0.69,538,0.955,539,0.935,540,0.41,541,1.337,544,0.369,556,2.393,571,1.019,573,2.736,575,0.788,586,2.058,604,0.475,612,1.287,613,0.849,633,0.307,634,0.512,635,0.447,638,0.483,639,0.349,650,0.447,651,0.883,658,0.983,670,0.866,686,0.311,691,0.849,703,0.849,768,0.679,777,1.995,782,0.97,783,1.051,784,0.435,808,0.707,829,0.475,830,1.941,841,0.567,843,0.849,876,0.788,877,1.051,880,1.148,882,0.375,884,0.875,889,0.375,890,0.372,891,0.354,893,0.349,895,0.29,898,0.375,899,3.081,901,1.08,903,0.406,907,0.401,913,1.153,915,0.492,918,1.736,921,0.631,923,0.849,924,0.817,942,0.453,944,0.453,951,0.874,957,0.78,964,0.386,971,1.734,993,0.748,994,0.903,995,0.939,999,3.161,1010,2.828,1014,1.153,1085,0.46,1173,0.369,1183,2.12,1214,0.46,1216,0.419,1245,1.011,1263,0.838,1265,0.838,1266,0.838,1270,1.382,1290,0.382,1291,0.741,1292,0.475,1308,0.558,1311,0.745,1315,1.29,1317,0.475,1337,0.315,1338,0.914,1348,0.862,1349,0.797,1353,0.43,1367,0.536,1369,0.536,1384,0.435,1412,0.382,1425,0.973,1426,1.019,1439,0.807,1445,0.668,1469,1.59,1472,0.935,1496,0.453,1499,0.46,1507,2.119,1508,0.807,1509,1.354,1517,0.36,1530,1.434,1542,0.424,1543,0.363,1547,0.889,1564,0.492,1566,1.624,1569,0.852,1582,0.386,1587,0.467,1592,0.435,1613,0.903,1646,1.849,1652,2.071,1660,1.889,1668,1.935,1670,1.486,1673,2.889,1687,0.827,1688,0.435,1691,1.011,1701,0.483,1706,0.492,1729,1.632,1734,0.874,1735,1.403,1771,0.341,1786,0.707,1793,1.422,1812,0.447,1819,0.46,1820,0.755,1825,0.512,1854,0.679,1859,0.447,1860,0.536,1876,0.475,1877,2.127,1878,0.874,1881,0.512,1882,1.77,1883,1.671,1884,2.218,1885,0.536,1898,1.019,1921,0.492,1931,0.817,1938,1.157,1939,1.077,1940,0.995,1941,0.523,1942,0.609,1943,0.973,1944,1.998,1945,1.077,1946,1.654,1947,6.682,1948,0.609,1949,1.077,1950,1.077,1951,0.935,1952,1.198,1953,0.415,1954,0.609,1955,0.609,1956,0.609,1957,1.269,1958,0.676,1959,0.567,1960,0.609,1961,0.586,1962,2.345,1963,0.523,1964,1.114,1965,1.114,1966,0.586,1967,0.501,1968,0.55,1969,0.512,1970,0.523,1971,0.453,1972,1.312,1973,0.567,1974,0.536,1975,0.523,1976,1.157,1977,1.157,1978,1.157,1979,0.483,1980,0.501,1981,0.475,1982,0.419,1983,0.475,1984,0.827,1985,0.492,1986,1.157,1987,0.973,1988,2.935,1989,2.106,1990,0.567,1991,0.567,1992,2.106,1993,0.492,1994,0.567,1995,0.567,1996,0.609,1997,1.157,1998,1.157,1999,0.609,2000,2.106,2001,3.001,2002,1.286,2003,0.676,2004,0.817,2005,2.339,2006,0.567,2007,0.536,2008,1.286,2009,0.735,2010,4.031,2011,1.046,2012,0.676,2013,0.735,2014,0.676,2015,0.609,2016,0.43,2017,0.46,2018,0.492,2019,0.609,2020,4.857,2021,1.854,2022,1.212,2023,2.858,2024,1.701,2025,1.904,2026,0.918,2027,0.918,2028,0.918,2029,0.918,2030,2.939,2031,1.198,2032,1.778,2033,3.783,2034,1.81,2035,1.269,2036,0.512,2037,0.467,2038,2.19,2039,2.551,2040,1.25,2041,0.536,2042,0.609,2043,0.609,2044,0.609,2045,0.609,2046,0.609,2047,1.157,2048,0.609,2049,0.609,2050,0.609,2051,0.888,2052,1.019,2053,0.973,2054,0.609,2055,0.536,2056,1.182,2057,0.536,2058,1.701,2059,0.827,2060,0.903,2061,0.903,2062,0.827,2063,0.903,2064,0.935,2065,2.584,2066,0.838,2067,2.903,2068,3.251,2069,1.778,2070,1.019,2071,0.536,2072,0.523,2073,0.935,2074,1.456,2075,0.536,2076,0.536,2077,0.536,2078,0.609,2079,2.424,2080,0.523,2081,2.106,2082,0.609,2083,0.609,2084,0.609,2085,0.609,2086,1.854,2087,0.609,2088,4.404,2089,0.609,2090,0.676,2091,1.157,2092,1.046,2093,0.609,2094,0.609,2095,0.536,2096,0.46,2097,1.998,2098,0.441,2099,0.609,2100,0.735,2101,2.798,2102,2.798,2103,0.567,2104,0.676,2105,1.837,2106,0.676,2107,1.654,2108,0.609,2109,2.027,2110,0.609,2111,0.609,2112,0.609,2113,1.077,2114,0.609,2115,0.609,2116,0.676,2117,0.609,2118,0.609,2119,0.501,2120,0.676]],["title/archive/tutorial/geospark-core-python/#spatial-rdd-applications-in-python",[43,1.687,390,0.981,882,2.447,1183,1.656]],["text/archive/tutorial/geospark-core-python/#spatial-rdd-applications-in-python",[]],["title/archive/tutorial/geospark-core-python/#introduction",[102,1.442]],["text/archive/tutorial/geospark-core-python/#introduction",[12,0.356,27,2.604,31,2.243,35,2.139,43,3.353,53,3.094,96,2.642,97,1.288,107,1.288,121,3.412,125,2.441,133,3.804,174,2.243,224,5,236,4.644,482,3.036,508,3.245,539,4.81,573,3.643,658,2.78,670,4.133,691,4.371,877,3.936,884,3.277,899,2.463,913,4.151,971,4.725,993,3.848,1338,3.29,1349,4.103,1412,3.739,1469,4.329,1499,4.499,1509,3.202,1530,5.374,1646,5.791,1687,4.256,1735,3.968,1786,3.64,1877,4.371,1878,4.499,1938,7.891,1939,5.543,1940,5.118,1941,5.118,1942,5.956,1943,5.006,1944,4.724,1945,5.543,1946,5.956,1947,6.153,1948,5.956,1949,7.344,1950,5.543,1951,4.81]],["title/archive/tutorial/geospark-core-python/#installing-the-package",[1729,2.517,1793,3.109]],["text/archive/tutorial/geospark-core-python/#installing-the-package",[7,1.224,12,0.623,34,0.886,35,3.146,40,2.166,43,2.977,48,3.141,53,2.692,54,2.982,57,5.148,84,2.198,91,1.839,97,1.894,111,0.849,174,1.884,204,3.032,226,3.724,239,2.264,410,2.671,457,1.447,487,3.323,501,4.015,639,2.867,651,2.672,768,2.934,884,2.078,889,3.085,890,3.058,898,3.085,899,3.344,903,3.333,913,3.487,944,3.724,1014,3.487,1214,3.779,1216,3.446,1270,3.844,1308,3.378,1311,3.641,1353,3.53,1445,2.888,1517,2.957,1592,3.575,1786,3.058,1793,4.946,1854,2.934,1921,4.041,1952,3.622,1953,3.407,1954,5.003,1955,5.003,1956,5.003,1957,6.204,1958,5.556,1959,4.657,1960,5.003,1961,4.814,1962,8.585,1963,4.299,1964,6.742,1965,6.742,1966,4.814,1967,4.119,1968,4.522,1969,4.205,1970,4.299]],["title/archive/tutorial/geospark-core-python/#installing-from-pypi-repositories",[48,2.896,1729,2.109,1971,3.434]],["text/archive/tutorial/geospark-core-python/#installing-from-pypi-repositories",[53,2.641,84,2.697,97,1.859,1014,5.993,1729,3.93,1771,4.818,1972,6.82]],["title/archive/tutorial/geospark-core-python/#installing-from-wheel-file",[501,1.849,1729,2.109,1973,4.294]],["text/archive/tutorial/geospark-core-python/#installing-from-wheel-file",[43,3.419,1315,7.431,1472,7.697,1569,3.253,1729,4.356,1972,7.559,1974,7.082,1975,6.913,1976,9.53,1977,9.53,1978,9.53]],["title/archive/tutorial/geospark-core-python/#installing-from-source",[50,2.7,1729,2.517]],["text/archive/tutorial/geospark-core-python/#installing-from-source",[1729,4.031,1979,6.994,1980,7.261]],["title/archive/tutorial/geospark-core-python/#geospark-serializers",[53,1.692,1509,2.96]],["text/archive/tutorial/geospark-core-python/#geospark-serializers",[12,0.66,53,2.26,107,1.59,222,4.153,389,4.005,556,3.028,891,4.28,893,4.215,993,4.753,1290,4.619,1291,5.777,1292,5.736,1509,4.854,1543,4.384,1819,5.557,1820,4.801,1854,4.314,1981,5.736,1982,5.068,1983,5.736,1984,6.452]],["title/archive/tutorial/geospark-core-python/#create-a-spatialrdd",[123,1.862,482,1.89]],["text/archive/tutorial/geospark-core-python/#create-a-spatialrdd",[]],["title/archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd",[123,1.56,482,1.583,519,1.73]],["text/archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd",[12,0.673,27,1.916,35,1.573,50,2.148,51,2.171,53,2.308,84,1.374,87,2.919,97,1.378,108,1.212,121,2.511,136,2.456,156,2.325,163,2.803,174,1.65,179,1.663,199,2.195,343,1.772,344,2.225,420,2.777,424,4.815,459,3.039,478,2.549,482,2.578,488,3.018,538,3.68,541,2.325,691,3.216,877,2.186,884,1.82,899,3.106,957,2.951,964,2.777,1245,4.592,1263,3.172,1338,3.521,1439,3.054,1530,4.341,1613,4.97,1668,2.611,1687,3.131,1735,2.919,1877,6.433,1878,3.31,1881,3.683,1882,6.934,1883,6.543,1884,7.716,1885,3.857,1939,4.078,1940,3.765,1943,3.683,1944,3.476,1945,4.078,1946,4.382,1952,4.615,1985,3.539,1986,6.374,1987,3.683,1988,3.96,1989,8.249,1990,4.078,1991,4.078,1992,8.249,1993,3.539,1994,4.078,1995,4.078,1996,4.382,1997,6.374,1998,6.374,1999,4.382,2000,7.512,2001,4.854]],["title/archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd",[89,1.689,482,1.583,971,2.463]],["text/archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd",[12,0.643,32,3.37,51,2.355,59,3.873,96,3.066,97,1.495,107,1.495,125,2.833,180,5.265,343,2.796,389,3.066,390,1.709,457,1.999,482,2.372,484,4.708,520,4.12,650,5.073,783,3.448,971,4.639,994,6.774,995,3.082,1085,5.222,1263,5.005,1265,5.005,1266,5.005,1646,6.376,1691,4.225,1951,5.584,2016,4.878,2017,5.222,2018,5.584,2019,6.913,2020,5.146,2021,6.085]],["title/archive/tutorial/geospark-core-python/#write-a-spatial-range-query",[318,1.195,340,1.872,390,0.981,880,2.163]],["text/archive/tutorial/geospark-core-python/#write-a-spatial-range-query",[12,0.671,103,1.732,105,5.009,422,3.505,465,3.886,899,3.615,1660,4.063,2010,5.539,2022,7.314,2023,6.147,2024,7.062,2025,7.902,2026,5.539,2027,5.539,2028,5.539,2029,5.539,2030,7.199,2031,5.056,2032,4.927,2033,6.508,2034,6.001,2035,5.358]],["title/archive/tutorial/geospark-core-python/#range-query-window",[318,1.388,340,2.176,1660,2.684]],["text/archive/tutorial/geospark-core-python/#range-query-window",[51,2.618,53,2.361,84,2.41,105,4.403,107,1.662,116,3.055,123,3.135,168,3.747,179,3.52,318,2.791,340,4.374,457,2.681,508,5.053,519,2.882,876,5.234,1348,5.721,1660,5.395,1734,5.806,2036,6.46]],["title/archive/tutorial/geospark-core-python/#use-spatial-indexes",[97,0.997,390,1.14,556,1.899]],["text/archive/tutorial/geospark-core-python/#use-spatial-indexes",[12,0.666,25,2.829,51,1.874,53,2.299,59,2.453,97,1.19,103,1.365,105,4.287,247,2.349,318,2.252,340,2.596,343,3.026,389,2.441,390,2.102,422,3,457,1.591,465,3.062,482,1.888,519,2.806,556,3.756,777,2.16,830,2.761,843,4.039,877,2.745,895,2.624,899,3.516,901,3.591,921,2.999,1445,3.177,1507,5.548,1508,3.836,1569,2.226,1660,3.202,1988,4.974,2010,5.936,2022,5.763,2023,4.844,2024,6.044,2025,6.763,2026,4.365,2027,4.365,2028,4.365,2029,4.365,2030,6.161,2031,3.984,2032,3.883,2033,5.57,2034,4.729,2035,4.222,2037,4.222,2038,5.653,2039,6.587,2040,4.157]],["title/archive/tutorial/geospark-core-python/#output-format",[108,1.047,255,1.993]],["text/archive/tutorial/geospark-core-python/#output-format",[7,0.847,12,0.674,32,4.179,43,2.377,97,1.854,107,1.209,108,1.063,111,0.949,133,4.428,180,5.815,255,2.024,318,1.683,321,2.344,340,2.638,390,1.383,398,3.027,459,2.667,573,3.114,586,5.433,613,4.104,638,4.436,899,2.312,1183,3.577,1469,3.068,1646,4.104,1947,4.361,2021,6.66,2034,6.501,2035,4.291,2041,4.923,2042,5.593,2043,5.593,2044,5.593,2045,5.593,2046,5.593,2047,7.565,2048,5.593,2049,5.593,2050,5.593,2051,5.804,2052,6.66,2053,6.359,2054,5.593]],["title/archive/tutorial/geospark-core-python/#write-a-spatial-knn-query",[318,1.195,390,0.981,880,2.163,1566,2.224]],["text/archive/tutorial/geospark-core-python/#write-a-spatial-knn-query",[12,0.658,15,3.439,51,2.12,55,2.621,83,2.952,97,1.346,107,1.346,118,2.803,179,3.871,201,3.54,318,2.885,321,2.609,390,2.008,422,2.496,457,1.8,482,2.787,507,3.71,519,2.335,782,3.65,899,3.359,1183,2.597,1547,3.346,1566,3.489,1673,7.108,2020,4.634,2023,5.48,2033,6.047,2055,5.48,2056,5.805,2057,5.48,2058,6.561,2059,4.448,2060,4.854,2061,4.854,2062,4.448,2063,4.854]],["title/archive/tutorial/geospark-core-python/#query-center-geometry",[107,0.997,318,1.388,703,3.385]],["text/archive/tutorial/geospark-core-python/#query-center-geometry",[53,2.471,84,2.523,116,3.788,123,2.72,168,4.646,179,3.054,318,2.421,457,2.326,508,4.383,519,3.017,573,3.311,703,5.904,876,5.479,1348,5.988,1566,4.508,1734,6.077]],["title/archive/tutorial/geospark-core-python/#use-spatial-indexes_1",[97,0.997,390,1.14,556,1.899]],["text/archive/tutorial/geospark-core-python/#use-spatial-indexes_1",[6,2.367,12,0.669,25,3.075,51,2.037,97,1.293,179,3.583,306,3.237,318,2.669,321,2.507,343,3.2,389,2.653,390,2.192,422,2.398,457,1.729,516,3.259,556,3.257,777,2.347,899,3.667,901,3.903,915,4.831,1507,3.903,1566,4.435,1569,2.419,1673,6.181,1988,5.406,2010,6.277,2023,5.265,2033,5.89,2038,5.978,2039,6.966,2040,4.519,2056,4.274,2058,6.392,2059,4.274,2060,4.664,2061,4.664,2062,4.274,2063,4.664]],["title/archive/tutorial/geospark-core-python/#output-format_1",[108,1.047,255,1.993]],["text/archive/tutorial/geospark-core-python/#output-format_1",[12,0.651,108,1.461,111,1.305,255,2.781,318,2.313,321,3.221,390,1.9,573,3.817,612,4.737,1566,4.307,1673,5.357,1947,8.483]],["title/archive/tutorial/geospark-core-python/#write-a-spatial-join-query",[318,1.195,390,0.981,777,1.558,880,2.163]],["text/archive/tutorial/geospark-core-python/#write-a-spatial-join-query",[12,0.662,15,2.715,51,1.674,55,2.069,59,3.084,83,2.33,97,1.062,98,2.059,103,1.219,107,1.981,118,2.212,215,4.042,247,2.954,318,2.41,321,3.356,356,2.928,390,2.149,422,2.774,457,1.421,465,2.734,482,1.686,507,2.928,519,3.003,586,3.114,612,2.51,613,3.606,777,2.715,782,2.881,899,2.861,918,3.385,1183,2.887,1547,2.641,1652,4.944,1660,2.859,1670,3.467,1735,3.274,1931,4.882,1947,8.526,1988,4.441,2020,6.47,2023,4.325,2030,5.697,2032,4.882,2033,5.15,2064,3.969,2065,5.009,2066,3.557,2067,4.561,2068,5.815,2069,3.467,2070,6.09]],["title/archive/tutorial/geospark-core-python/#use-spatial-partitioning",[97,0.997,390,1.14,830,2.315]],["text/archive/tutorial/geospark-core-python/#use-spatial-partitioning",[12,0.664,25,3.259,28,3.342,53,1.948,97,1.371,98,2.657,215,3.2,247,2.707,318,1.908,390,2.032,482,2.821,544,3.842,633,3.2,686,3.239,777,2.488,830,5.018,918,5.663,957,4.27,1469,4.51,1507,5.953,1508,4.419,1542,4.419,1564,5.121,1587,4.864,2020,6.791,2065,5.952,2067,6.364,2068,7.668,2069,5.801,2071,5.581]],["title/archive/tutorial/geospark-core-python/#use-spatial-indexes_2",[97,0.997,390,1.14,556,1.899]],["text/archive/tutorial/geospark-core-python/#use-spatial-indexes_2",[12,0.671,51,2.02,55,2.497,97,1.282,247,2.532,318,2.368,321,2.485,343,3.804,389,2.63,390,1.945,457,1.715,482,2.7,556,3.239,658,2.768,777,3.088,843,4.352,899,3.651,901,3.87,918,4.085,921,3.231,942,4.414,1569,2.398,1652,5.622,1825,4.984,1988,7.111,2020,6.573,2023,5.22,2033,5.857,2038,5.944,2039,6.926,2040,4.48,2065,5.696,2067,5.187,2068,7.422,2069,4.184,2072,5.096]],["title/archive/tutorial/geospark-core-python/#output-format_2",[108,1.047,255,1.993]],["text/archive/tutorial/geospark-core-python/#output-format_2",[12,0.62,59,3.777,108,1.264,111,1.128,247,2.837,255,2.405,318,2,321,2.785,390,1.643,573,4.044,586,4.212,658,3.955,777,2.608,784,4.749,923,6.219,924,5.979,1947,8.675,2020,4.947,2064,5.368,2068,5.586,2073,6.844,2074,8.212,2075,5.85,2076,5.85,2077,5.85]],["title/archive/tutorial/geospark-core-python/#write-a-distance-join-query",[213,1.872,318,1.195,777,1.558,880,2.163]],["text/archive/tutorial/geospark-core-python/#write-a-distance-join-query",[12,0.668,51,1.768,59,2.314,83,2.462,97,1.554,98,2.176,103,1.288,107,1.783,116,2.064,123,1.755,176,2.489,179,1.971,213,4.199,247,3.07,248,3.321,318,2.483,321,2.176,390,1.284,422,2.883,457,1.501,465,2.889,507,3.094,519,2.696,777,2.822,782,3.044,808,3.173,899,3.41,918,3.576,1183,2.166,1547,2.791,1652,5.138,1660,3.021,1670,5.073,1701,4.118,1735,3.459,1944,6.542,1946,5.192,1988,4.693,2010,7.415,2020,6.627,2023,4.57,2030,5.92,2031,3.759,2032,3.663,2033,5.352,2065,5.205,2066,3.759,2067,4.74,2069,3.663,2078,5.192,2079,8.995,2080,4.461]],["title/archive/tutorial/geospark-core-python/#output-format_3",[108,1.047,255,1.993]],["text/archive/tutorial/geospark-core-python/#output-format_3",[12,0.666,31,2.444,32,3.163,111,1.102,116,2.579,133,3.128,180,5.057,199,2.235,247,2.77,318,1.953,321,4.081,456,3.718,571,7.346,573,2.671,586,5.289,612,4.263,808,3.966,913,4.523,1183,3.482,1860,5.712,1947,7.855,1950,6.04,1987,5.454,2021,5.712,2081,9.738,2082,6.489,2083,6.489,2084,6.489,2085,6.489]],["title/archive/tutorial/geospark-core-python/#save-to-permanent-storage",[999,2.328,1668,2.749,2086,2.951]],["text/archive/tutorial/geospark-core-python/#save-to-permanent-storage",[91,2.794,136,4.259,156,4.032,390,1.879,482,3.161,501,3.047,520,4.529,573,3.129,783,4.595,971,4.059,995,3.388,999,4.649,1010,4.229,1265,5.503,1266,5.503,1384,5.431,1582,4.816,1668,5.489,1688,5.431,1691,4.645,1706,6.139,1812,5.578,2086,5.893]],["title/archive/tutorial/geospark-core-python/#save-an-spatialrdd-not-indexed",[482,1.583,556,1.899,999,2.328]],["text/archive/tutorial/geospark-core-python/#save-an-spatialrdd-not-indexed",[55,3.62,482,3.399,519,3.224,999,4.34,1668,5.124,2086,5.501]],["title/archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed",[482,1.583,556,1.899,999,2.328]],["text/archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed",[55,3.468,482,3.519,501,3.303,519,3.089,556,3.978,573,3.391,999,4.158,1010,4.583,1668,4.909,1691,5.035,2086,5.27]],["title/archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed",[482,1.195,556,1.434,999,1.758,2067,2.296,2095,3.066]],["text/archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed",[7,1.183,98,3.276,230,4.819,318,2.353,321,3.276,390,1.932,651,4.174,777,3.067,829,6.095,830,4.7,999,3.945,1183,4.185,1337,4.043,1496,5.818,1668,4.658,1820,5.101,1859,5.736,1876,6.095,2086,5.001,2096,5.905]],["title/archive/tutorial/geospark-core-python/#reload-a-saved-spatialrdd",[482,1.583,999,2.328,2097,3.659]],["text/archive/tutorial/geospark-core-python/#reload-a-saved-spatialrdd",[12,0.511,482,2.932,501,3.426,573,3.517,999,4.313,1010,4.754,2097,6.777,2098,6.186]],["title/archive/tutorial/geospark-core-python/#read-from-other-geometry-files",[89,1.689,107,0.997,501,1.849]],["text/archive/tutorial/geospark-core-python/#read-from-other-geometry-files",[35,2.994,97,1.802,103,2.068,390,2.406,482,2.861,573,3.432,604,6.501,777,3.272,783,4.159,1014,5.811,1469,4.574]],["title/archive/tutorial/geospark-core-python/#read-from-wkt-file",[89,1.689,156,2.447,501,1.849]],["text/archive/tutorial/geospark-core-python/#read-from-wkt-file",[12,0.656,199,2.755,343,3.235,422,3.207,486,6.042,899,3.307,1425,7.982,2001,5.167,2107,7.998,2108,7.998,2109,7.696,2110,7.998]],["title/archive/tutorial/geospark-core-python/#read-from-wkb-file",[89,1.689,163,2.951,501,1.849]],["text/archive/tutorial/geospark-core-python/#read-from-wkb-file",[12,0.656,199,2.755,343,3.235,422,3.207,486,6.042,899,3.307,1426,8.36,2001,5.167,2107,7.998,2109,7.696,2111,7.998,2112,7.998]],["title/archive/tutorial/geospark-core-python/#read-from-geojson-file",[89,1.689,136,2.585,501,1.849]],["text/archive/tutorial/geospark-core-python/#read-from-geojson-file",[12,0.634,486,6.26,899,3.426,2001,5.354,2107,8.287,2109,7.974,2113,9.027,2114,8.287,2115,8.287]],["title/archive/tutorial/geospark-core-python/#read-from-shapefile",[89,2.016,478,3.204]],["text/archive/tutorial/geospark-core-python/#read-from-shapefile",[12,0.634,485,7.44,486,6.26,899,3.426,2001,5.354,2109,7.974,2116,9.204,2117,8.287,2118,8.287]],["title/archive/tutorial/geospark-core-python/#supported-versions",[6,2.18,69,2.161]],["text/archive/tutorial/geospark-core-python/#supported-versions",[6,3.361,7,1.285,43,4.18,53,2.609,69,3.332,457,2.455,907,5.598,1349,5.849]],["title/archive/tutorial/geospark-core-python/#apache-spark",[7,0.834,19,1.869]],["text/archive/tutorial/geospark-core-python/#apache-spark",[8,6.765,38,6.765,1317,6.876]],["title/archive/tutorial/geospark-core-python/#geospark",[53,2.098]],["text/archive/tutorial/geospark-core-python/#geospark",[14,5.977,1315,6.92]],["title/archive/tutorial/geospark-core-python/#python",[43,2.902]],["text/archive/tutorial/geospark-core-python/#python",[44,8.002,69,3.374,91,3.161,349,4.685,651,4.591,2119,7.079,2120,9.549]],["title/archive/tutorial/geospark-sql-python/",[34,0.817,43,1.96,390,1.14]],["text/archive/tutorial/geospark-sql-python/",[6,0.793,7,1.271,8,0.579,12,0.682,14,0.508,19,0.256,27,0.33,28,1.804,31,2.309,34,0.606,35,1.811,38,0.579,40,0.327,43,2.143,44,0.702,48,0.89,50,0.37,51,0.257,53,1.938,54,0.45,57,2.137,58,0.609,65,0.554,69,0.992,79,0.532,84,1.404,88,0.514,89,0.734,91,0.277,96,0.335,97,1.433,102,0.159,103,0.497,107,1.433,108,0.143,111,0.646,112,0.366,116,2.005,123,1.157,125,0.581,126,1.15,133,2.004,168,1.462,170,0.898,174,1.797,176,0.68,179,2.01,198,2.574,199,2.51,204,0.457,214,0.45,226,0.562,239,0.641,279,3.349,281,3.114,295,0.866,306,1.085,324,1.84,334,0.532,335,0.503,336,0.546,343,1.022,361,0.411,370,0.388,371,0.988,390,0.496,394,0.898,398,0.408,410,0.288,422,2.123,457,0.731,459,0.36,460,0.492,464,0.439,478,0.439,479,2.098,487,1.623,493,1.617,499,2.565,500,0.546,501,1.913,508,3.239,519,0.948,528,1.538,538,1.46,540,0.955,541,1.063,555,0.514,561,0.664,562,0.609,573,2.364,581,2.338,586,0.898,609,4.199,610,3.121,612,1.024,639,0.432,651,0.757,652,2.422,670,1.792,691,0.554,717,0.554,725,1.145,768,0.442,772,0.503,775,2.265,777,0.296,789,0.598,790,0.598,791,0.588,794,0.614,801,0.598,808,0.461,876,0.514,877,0.376,880,0.411,882,0.874,884,0.589,888,0.554,889,1.236,890,1.545,891,0.439,892,0.546,893,0.432,898,1.236,899,2.677,903,1.336,904,0.554,907,0.497,913,1.397,927,0.503,944,0.562,951,1.071,963,0.539,964,0.478,985,0.634,992,2.922,995,0.336,1014,0.988,1173,0.457,1213,0.508,1214,0.57,1270,2.905,1290,0.474,1291,0.907,1292,0.588,1308,0.364,1311,1.138,1315,1.563,1317,0.588,1324,0.726,1337,2.316,1338,1.107,1348,0.562,1349,0.976,1353,1.414,1355,0.554,1360,0.648,1412,0.89,1445,0.818,1469,2.089,1472,1.145,1483,0.634,1509,1.359,1517,0.446,1530,2.331,1543,0.45,1569,0.305,1577,0.503,1592,0.539,1729,1.9,1745,1.218,1758,0.503,1771,0.423,1786,0.461,1793,1.932,1856,0.562,1921,0.609,1931,1.414,1949,1.319,1952,1.026,1953,2.331,1954,0.754,1955,0.754,1956,0.754,1957,1.087,1959,0.702,1960,0.754,1961,1.364,1962,3.185,1963,1.723,1964,2.433,1965,3.293,1966,1.364,1967,1.65,1968,1.281,1969,1.191,1970,0.648,1971,0.562,1972,1.59,1973,0.702,1974,0.664,1975,0.648,1976,1.417,1977,1.417,1978,1.417,1979,0.598,1980,0.621,1987,0.634,1993,1.619,2004,3.559,2051,3.435,2052,1.765,2053,2.876,2059,2.445,2098,0.546,2119,0.621,2121,0.838,2122,0.726,2123,1.364,2124,0.838,2125,1.484,2126,1.929,2127,0.838,2128,0.838,2129,0.461,2130,0.838,2131,0.838,2132,2.576,2133,1.319,2134,1.812,2135,1.281,2136,1.484,2137,0.838,2138,0.754,2139,0.838,2140,0.702,2141,1.417,2142,0.838,2143,0.754,2144,1.319,2145,0.702,2146,0.754,2147,0.754,2148,0.754,2149,1.319,2150,2.791,2151,2.004,2152,1.319,2153,0.754,2154,0.754,2155,0.754,2156,0.754,2157,0.754,2158,0.754,2159,0.754,2160,0.754,2161,0.754,2162,0.754,2163,1.866,2164,1.319,2165,2.004,2166,3.051,2167,2.791,2168,0.754,2169,1.319,2170,0.754,2171,1.319,2172,1.319,2173,0.754,2174,1.319,2175,1.319,2176,0.754,2177,2.353,2178,1.319,2179,0.754,2180,1.319,2181,0.754,2182,2.004,2183,2.004,2184,0.754,2185,0.754,2186,0.702,2187,0.754,2188,0.754,2189,1.417,2190,0.754,2191,0.754,2192,1.417,2193,0.754,2194,0.754,2195,0.754,2196,0.754,2197,0.754,2198,0.838,2199,0.754,2200,0.754,2201,0.754,2202,0.754,2203,1.417,2204,0.754,2205,0.754,2206,1.417,2207,0.754,2208,0.702,2209,0.754,2210,0.754,2211,0.754,2212,0.754,2213,0.754,2214,4.382,2215,0.754,2216,0.754,2217,0.754,2218,0.609,2219,0.754,2220,0.754,2221,0.754,2222,0.754,2223,0.754,2224,2.528,2225,0.754,2226,0.754,2227,0.754,2228,0.754,2229,0.754,2230,0.754,2231,0.754,2232,0.754,2233,0.754,2234,0.754,2235,0.754,2236,0.754,2237,0.634,2238,1.574,2239,0.754,2240,0.702,2241,1.218,2242,1.812,2243,1.218,2244,0.754,2245,0.754,2246,0.754,2247,0.754,2248,0.754,2249,0.754,2250,2.004,2251,0.754,2252,0.754,2253,0.702,2254,1.417,2255,1.417,2256,1.417,2257,1.417,2258,1.417,2259,1.417,2260,2.528,2261,2.528,2262,1.417,2263,1.417,2264,1.417,2265,1.417,2266,0.754,2267,1.417,2268,0.754,2269,1.417,2270,1.417,2271,3.757,2272,1.417]],["title/archive/tutorial/geospark-sql-python/#spatial-sql-application-in-python",[34,0.703,43,1.687,390,0.981,882,2.447]],["text/archive/tutorial/geospark-sql-python/#spatial-sql-application-in-python",[]],["title/archive/tutorial/geospark-sql-python/#introduction",[102,1.442]],["text/archive/tutorial/geospark-sql-python/#introduction",[7,1.409,12,0.505,28,3.486,31,2.491,34,1.171,35,2.375,43,3.59,48,4.153,53,2.86,79,4.667,84,2.075,96,2.934,97,1.43,107,1.826,111,1.123,123,2.236,390,1.635,398,3.579,479,3.723,501,3.387,508,5.072,541,3.509,555,4.504,573,3.477,670,4.424,877,3.299,1270,3.629,1338,4.667,1348,4.923,1349,4.556,1745,5.684,1793,3.734,1856,4.923,1953,4.504,2051,5.074,2098,4.788,2121,7.346,2122,6.364,2123,6.364]],["title/archive/tutorial/geospark-sql-python/#installation",[1729,3.122]],["text/archive/tutorial/geospark-sql-python/#installation",[7,1.264,12,0.63,34,0.94,35,2.998,40,2.3,43,3.104,53,2.762,54,3.166,57,5.006,84,2.291,91,1.953,97,1.805,111,0.902,174,2,204,3.219,226,3.954,239,2.404,410,2.025,457,1.536,487,3.464,501,3.905,651,2.837,768,3.115,889,3.275,890,3.247,898,3.275,899,3.452,903,3.539,913,3.703,944,3.954,1014,3.703,1214,4.013,1270,2.914,1308,2.561,1311,3.758,1353,3.748,1445,3.067,1517,3.14,1592,3.796,1786,3.247,1793,5.075,1921,4.29,1952,3.846,1953,3.618,1954,5.312,1955,5.312,1956,5.312,1957,5.604,1959,4.944,1960,5.312,1961,5.111,1962,8.368,1963,4.565,1964,7.028,1965,7.028,1966,5.111,1967,4.374,1968,4.801,1969,4.465,1970,4.565,2124,5.9]],["title/archive/tutorial/geospark-sql-python/#installing-from-pypi-repositories",[48,2.896,1729,2.109,1971,3.434]],["text/archive/tutorial/geospark-sql-python/#installing-from-pypi-repositories",[53,2.641,84,2.697,97,1.859,1014,5.993,1729,3.93,1771,4.818,1972,6.82]],["title/archive/tutorial/geospark-sql-python/#installing-from-wheel-file",[501,1.849,1729,2.109,1973,4.294]],["text/archive/tutorial/geospark-sql-python/#installing-from-wheel-file",[43,3.419,1315,7.431,1472,7.697,1569,3.253,1729,4.356,1972,7.559,1974,7.082,1975,6.913,1976,9.53,1977,9.53,1978,9.53]],["title/archive/tutorial/geospark-sql-python/#installing-from-source",[50,2.7,1729,2.517]],["text/archive/tutorial/geospark-sql-python/#installing-from-source",[1729,4.031,1979,6.994,1980,7.261]],["title/archive/tutorial/geospark-sql-python/#core-classes-and-methods",[884,1.916,1469,2.531,1530,3.142]],["text/archive/tutorial/geospark-sql-python/#core-classes-and-methods",[7,1.337,12,0.562,28,4.147,35,3.171,43,2.52,53,2.889,57,3.048,69,2.327,84,1.86,97,2.033,103,1.951,107,1.282,125,3.224,214,3.534,464,3.45,508,3.231,519,2.224,528,6.036,725,6.355,884,2.463,888,4.352,892,4.293,1270,4.845,1353,4.184,1360,5.096,1412,3.723,1469,3.253,1509,4.747,1530,6.405,1793,3.348,1931,4.184,1949,7.323,1953,4.038,1961,5.706,1962,5.52,1966,5.706,1967,4.883,1968,5.36,1969,4.984,2125,6.21,2126,7.571,2127,6.586,2128,6.586,2129,3.625,2130,6.586,2131,6.586,2132,5.096,2133,5.52,2134,5.36,2135,5.36,2136,6.21,2137,6.586]],["title/archive/tutorial/geospark-sql-python/#writing-application",[880,3.001,882,3.395]],["text/archive/tutorial/geospark-sql-python/#writing-application",[7,1.285,12,0.634,28,2.889,35,3.047,51,1.867,53,1.684,57,2.817,84,2.341,88,3.733,97,2.175,103,1.359,107,1.185,111,0.93,123,1.853,239,2.48,324,2.947,457,1.585,479,3.458,508,4.623,528,4.205,573,3.493,586,3.474,717,4.023,890,5.186,891,3.189,893,3.141,927,3.652,992,3.577,1270,4.094,1290,3.441,1291,4.775,1292,4.274,1353,3.868,1445,3.165,1469,4.655,1530,3.733,1543,3.267,1577,3.652,1931,5.266,1952,3.968,1953,3.733,1962,5.102,1967,4.513,1987,4.607,2051,4.205,2125,5.74,2126,5.274,2132,4.71,2134,4.954,2135,4.954,2136,5.74,2138,5.481,2139,6.088,2140,5.102,2141,7.463,2142,6.088,2143,5.481,2144,5.102,2145,5.102,2146,5.481,2147,5.481,2148,5.481]],["title/archive/tutorial/geospark-sql-python/#examples",[111,1.159]],["text/archive/tutorial/geospark-sql-python/#examples",[]],["title/archive/tutorial/geospark-sql-python/#geosparksql",[1270,3.747]],["text/archive/tutorial/geospark-sql-python/#geosparksql",[7,1.037,12,0.683,27,1.337,28,1.612,34,0.858,35,1.098,43,1.299,53,0.939,58,2.47,69,1.2,84,0.959,89,1.12,97,0.661,107,1.718,108,0.581,111,0.519,112,0.884,126,2.204,170,1.938,174,1.151,179,3.018,198,0.923,281,1.995,306,3.259,334,2.157,336,2.214,343,1.96,361,1.666,371,3.379,390,0.756,422,2.414,460,1.995,493,3.853,499,3.237,538,3.477,540,2.059,612,1.562,639,1.752,777,1.2,789,2.425,790,2.425,791,2.384,794,2.099,801,2.425,808,1.869,876,2.082,899,1.264,1270,3.304,1311,1.377,1355,2.244,1483,2.57,1758,2.037,1953,2.082,1993,2.47,2004,5.877,2051,2.346,2053,4.074,2149,2.846,2150,5.605,2151,6.022,2152,2.846,2153,3.058,2154,3.058,2155,3.058,2156,3.058,2157,3.058,2158,3.058,2159,3.058,2160,3.058,2161,3.058,2162,3.058,2163,2.846,2164,2.846,2165,6.022,2166,2.244,2167,6.378,2168,3.058,2169,2.846,2170,3.058,2171,2.846,2172,2.846,2173,3.058,2174,2.846,2175,2.846,2176,3.058,2177,5.605,2178,2.846,2179,3.058,2180,2.846,2181,3.058,2182,6.022,2183,6.022,2184,3.058,2185,3.058,2186,2.846,2187,3.058,2188,3.058,2189,4.847,2190,3.058,2191,3.058,2192,4.847,2193,3.058,2194,3.058,2195,3.058,2196,3.058,2197,3.058,2198,3.396,2199,3.058,2200,3.058,2201,3.058,2202,3.058,2203,4.847,2204,3.058,2205,3.058,2206,4.847,2207,3.058,2208,2.846,2209,3.058,2210,3.058,2211,3.058,2212,3.058,2213,3.058]],["title/archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely",[65,3.385,508,2.514,2051,3.539]],["text/archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely",[7,1.414,12,0.682,31,2.393,34,0.588,53,1.59,89,1.895,97,0.719,107,1.681,111,0.564,112,0.606,123,1.75,126,2.354,170,2.106,279,2.014,295,3.163,324,3.417,335,2.214,343,2.093,370,1.708,459,1.585,478,1.934,479,1.965,487,3.402,493,2.126,499,1.787,501,1.332,508,1.811,538,1.919,540,2.238,541,2.746,573,2.616,670,2.711,691,2.439,889,3.191,898,3.191,899,3.405,903,3.448,913,3.607,995,1.481,1213,2.238,1338,1.836,1469,1.823,1509,1.787,1745,2.856,1953,2.263,1963,4.447,1964,4.98,1965,6.903,1993,4.18,2004,5.062,2051,5.965,2052,5.595,2053,6.03,2123,3.198,2133,3.093,2134,3.004,2144,3.093,2149,3.093,2150,4.817,2152,3.093,2163,4.817,2164,3.093,2166,2.439,2167,3.093,2169,3.093,2171,3.093,2172,3.093,2174,3.093,2175,3.093,2177,3.093,2178,3.093,2180,3.093,2214,5.126,2215,3.323,2216,3.323,2217,3.323,2218,2.684,2219,3.323,2220,3.323,2221,3.323,2222,3.323,2223,3.323,2224,7.174,2225,3.323,2226,3.323,2227,3.323,2228,3.323,2229,3.323,2230,3.323,2231,3.323,2232,3.323,2233,3.323,2234,3.323,2235,3.323,2236,3.323]],["title/archive/tutorial/geospark-sql-python/#creating-spark-dataframe-based-on-shapely-objects",[7,0.47,123,1.049,324,1.668,479,1.178,508,1.69,573,1.277]],["text/archive/tutorial/geospark-sql-python/#creating-spark-dataframe-based-on-shapely-objects",[]],["title/archive/tutorial/geospark-sql-python/#supported-shapely-objects",[6,1.826,508,2.514,573,1.899]],["text/archive/tutorial/geospark-sql-python/#supported-shapely-objects",[7,1.191,12,0.656,28,3.126,84,1.86,97,1.282,107,1.909,116,2.357,123,2.005,133,2.859,168,2.891,179,2.251,324,3.188,394,3.758,422,3.154,457,1.715,479,2.987,508,4.811,519,3.312,573,3.635,581,4.624,586,3.758,612,4.02,651,3.167,652,4.79,670,4.121,772,3.951,775,4.48,899,3.253,963,4.237,964,3.758,992,5.134,1337,4.069,1412,3.723,1469,3.253,2132,7.588,2237,4.984,2238,8.739,2239,5.93,2240,5.52,2241,6.761,2242,7.981,2243,6.761]],["title/archive/tutorial/geospark-sql-python/#example-usage-for-shapely-objects",[111,0.674,508,2.163,573,1.634,904,2.913]],["text/archive/tutorial/geospark-sql-python/#example-usage-for-shapely-objects",[]],["title/archive/tutorial/geospark-sql-python/#point",[179,2.593]],["text/archive/tutorial/geospark-sql-python/#point",[7,0.861,12,0.683,31,2.88,107,1.229,133,3.688,179,3.51,198,2.611,394,3.603,422,3.067,499,3.056,500,4.116,561,5.004,562,4.592,899,2.351,951,5.779,985,4.778,992,3.71,1173,3.445,1337,3.956,2059,4.062,2166,4.172,2214,6.178,2244,5.685,2245,5.685,2246,5.685,2247,5.685,2248,5.685,2249,5.685,2250,8.645,2251,5.685,2252,5.685,2253,5.292]],["title/archive/tutorial/geospark-sql-python/#multipoint",[581,5.326]],["text/archive/tutorial/geospark-sql-python/#multipoint",[7,0.996,12,0.681,31,3.171,133,3.173,198,2.805,422,2.639,499,3.538,581,7.241,899,2.722,992,4.295,1337,3.404,2059,4.704,2166,4.831,2214,4.704,2254,8.422,2255,8.422,2256,8.422,2257,8.422]],["title/archive/tutorial/geospark-sql-python/#linestring",[168,3.33]],["text/archive/tutorial/geospark-sql-python/#linestring",[7,0.917,12,0.683,31,3.006,133,2.922,168,4.351,176,3.827,198,2.696,279,5.748,281,5.824,422,2.43,499,3.258,609,7.524,610,6.222,899,2.506,992,3.955,1337,3.135,2059,4.331,2166,4.448,2214,5.704]],["title/archive/tutorial/geospark-sql-python/#multilinestring",[652,5.517]],["text/archive/tutorial/geospark-sql-python/#multilinestring",[7,0.82,12,0.683,31,2.787,133,2.611,198,2.547,279,6.187,281,6.393,422,2.172,499,2.912,609,8.099,610,6.829,652,6.811,899,2.24,992,3.535,1337,2.801,2059,3.87,2166,3.975,2214,5.29,2258,7.402,2259,7.402]],["title/archive/tutorial/geospark-sql-python/#polygon",[116,2.715]],["text/archive/tutorial/geospark-sql-python/#polygon",[7,0.871,12,0.683,31,2.905,116,3.852,133,2.775,198,2.627,422,2.308,499,3.094,899,2.38,992,3.756,1337,2.977,2059,4.113,2166,4.225,2214,5.512,2260,9.294,2261,9.294,2262,7.714,2263,7.714,2264,7.714,2265,7.714,2266,5.756,2267,7.714,2268,5.756]],["title/archive/tutorial/geospark-sql-python/#multipolygon",[775,5.16]],["text/archive/tutorial/geospark-sql-python/#multipolygon",[7,0.641,12,0.684,31,2.34,116,3.226,133,2.041,174,3.607,198,3.279,199,3.75,422,1.697,499,2.276,775,5.564,899,1.75,992,2.763,1337,2.19,2059,3.025,2166,3.107,2214,4.441,2269,6.216,2270,6.216,2271,8.658,2272,6.216]],["title/archive/tutorial/geospark-sql-python/#supported-versions",[6,2.18,69,2.161]],["text/archive/tutorial/geospark-sql-python/#supported-versions",[6,3.361,7,1.285,43,4.18,53,2.609,69,3.332,457,2.455,907,5.598,1349,5.849]],["title/archive/tutorial/geospark-sql-python/#apache-spark",[7,0.834,19,1.869]],["text/archive/tutorial/geospark-sql-python/#apache-spark",[8,6.765,38,6.765,1317,6.876]],["title/archive/tutorial/geospark-sql-python/#geosparksql_1",[1270,3.747]],["text/archive/tutorial/geospark-sql-python/#geosparksql_1",[14,5.939,1315,6.876,1324,8.485]],["title/archive/tutorial/geospark-sql-python/#python",[43,2.902]],["text/archive/tutorial/geospark-sql-python/#python",[44,8.26,2119,7.307]],["title/archive/tutorial/rdd/",[390,1.14,882,2.844,1183,1.925]],["text/archive/tutorial/rdd/",[6,0.166,7,0.23,12,0.676,15,0.838,19,0.399,25,0.605,27,0.184,28,0.222,31,1.012,32,0.205,34,0.325,35,0.151,40,0.182,51,1.921,52,0.566,53,1.489,55,1.688,59,1.701,79,0.297,80,0.863,83,0.72,84,0.255,85,0.433,89,0.783,91,0.988,92,0.4,93,0.208,96,0.186,97,1.513,98,1.425,103,0.6,105,0.674,107,1.482,108,0.762,111,0.258,112,0.39,116,1.594,118,0.962,123,1.688,125,1.301,126,0.836,132,2.28,133,0.732,134,0.322,136,1.78,138,0.229,156,1.804,158,0.25,162,0.304,163,1.368,168,0.74,169,1.284,174,0.805,175,0.694,176,1.408,179,1.205,197,0.248,198,0.555,199,1.901,201,0.461,204,0.92,205,0.566,211,0.293,213,1.705,215,1.221,222,0.237,228,0.415,230,0.259,232,0.25,239,0.19,247,1.356,248,0.375,251,0.253,255,0.876,261,0.404,267,0.936,279,0.92,287,0.509,292,0.613,295,0.496,302,0.25,303,2.838,306,1.157,318,2.306,321,1.014,324,0.816,336,0.852,340,1.604,343,1.544,344,0.597,345,0.253,356,0.484,361,0.229,364,0.234,373,0.604,385,0.714,386,0.48,389,1.508,390,1.796,392,0.757,398,0.439,410,0.16,420,0.514,421,0.553,422,1.53,423,0.564,425,0.274,427,0.318,434,0.304,457,1.937,459,2.163,465,1.022,466,0.597,471,0.496,478,0.684,479,0.447,480,0.659,481,2.139,482,2.786,483,2.618,484,1.251,485,0.322,486,0.889,487,0.871,488,1.266,489,0.755,491,0.428,493,0.269,494,0.566,498,0.28,501,2.686,502,0.322,503,0.353,504,0.339,505,0.328,506,0.391,507,1.095,508,0.229,509,1.095,510,0.293,511,0.391,512,0.391,513,0.391,514,0.391,515,0.391,516,1.001,517,0.216,518,0.236,519,2.351,520,0.701,521,0.391,522,0.353,523,0.391,524,0.391,525,0.328,526,0.308,528,1.41,529,0.237,530,0.391,531,0.391,532,0.391,538,1.551,540,0.283,541,0.975,544,0.713,545,0.428,556,2.169,573,1.651,575,1.033,601,0.297,612,0.415,633,0.594,638,0.644,639,0.465,650,0.308,651,0.433,658,0.549,670,0.425,686,0.415,694,0.304,703,0.596,768,0.69,775,0.318,777,1.96,779,0.928,782,1.077,783,0.587,784,0.58,786,0.353,788,0.3,796,0.346,808,0.496,820,0.29,821,0.293,823,0.971,824,0.553,825,0.58,826,0.379,829,0.328,830,1.593,841,0.755,843,0.596,858,0.28,877,0.405,880,0.827,883,0.502,884,0.888,885,0.257,886,0.257,891,0.472,893,0.465,895,0.387,901,0.768,905,0.339,909,4.267,915,0.339,918,1.045,921,0.641,923,0.596,924,0.83,942,0.313,947,0.318,957,1.022,958,0.217,968,1.045,971,0.81,993,0.524,994,0.633,995,1.415,999,2.591,1010,2.231,1013,0.933,1083,0.293,1085,0.318,1183,1.226,1202,0.237,1217,0.37,1263,0.852,1265,0.587,1266,0.587,1270,1.173,1271,0.85,1276,0.42,1289,1.084,1290,0.509,1291,0.971,1292,0.328,1305,0.37,1308,0.203,1309,0.25,1311,0.962,1337,0.785,1338,0.232,1355,0.308,1367,0.37,1369,0.37,1384,0.3,1425,0.353,1445,0.243,1469,0.445,1496,0.604,1503,0.484,1505,0.328,1507,1.579,1508,0.566,1509,0.988,1511,0.697,1515,0.3,1517,0.48,1520,0.553,1531,0.236,1534,0.476,1542,0.293,1543,0.25,1547,0.988,1549,0.283,1564,0.339,1566,1.356,1569,0.743,1570,0.219,1582,0.266,1587,0.322,1597,0.313,1632,0.339,1646,0.596,1652,0.841,1658,2.399,1660,1.979,1668,1.274,1670,0.573,1673,2.213,1682,0.286,1687,0.841,1688,0.3,1691,0.928,1701,0.333,1706,0.339,1734,0.613,1735,0.541,1756,0.286,1765,0.353,1768,0.37,1775,0.596,1787,0.404,1791,0.293,1800,0.541,1807,0.297,1808,0.293,1812,0.596,1819,0.318,1820,0.768,1825,0.353,1839,1.045,1854,0.69,1859,0.308,1876,0.328,1877,1.971,1878,1.388,1881,1.275,1882,0.989,1883,1.695,1898,0.37,1903,0.318,1928,0.353,1931,0.297,1941,0.361,1943,0.353,1944,1.695,1951,0.339,1981,0.328,1982,0.29,1983,0.328,1984,1.92,1985,1.955,1990,0.755,1991,0.391,1993,0.95,1994,1.095,1995,1.095,2001,1.898,2015,0.42,2016,0.297,2017,1.615,2018,0.339,2024,0.655,2026,0.644,2027,0.644,2028,0.644,2029,0.644,2031,1.099,2032,1.296,2035,0.623,2036,0.353,2037,0.322,2038,0.889,2040,0.889,2041,0.37,2055,0.37,2056,1.084,2057,0.37,2058,0.655,2060,0.917,2061,0.917,2062,0.841,2063,0.633,2064,0.655,2065,1.099,2066,2.462,2067,2.242,2069,1.296,2070,0.37,2071,0.37,2072,0.361,2073,0.655,2074,1.036,2075,0.37,2076,0.37,2077,0.37,2080,0.361,2086,1.368,2087,0.42,2088,3.175,2089,0.42,2091,0.42,2092,0.733,2093,0.42,2094,0.42,2095,0.37,2096,0.318,2097,1.457,2098,0.304,2099,0.42,2113,0.391,2273,0.38,2274,0.42,2275,0.467,2276,0.42,2277,1.685,2278,1.685,2279,0.901,2280,0.901,2281,0.901,2282,0.901,2283,0.901,2284,1.176,2285,1.176,2286,1.518,2287,4.139,2288,0.467,2289,0.467,2290,0.901,2291,1.685,2292,1.685,2293,1.685,2294,1.685,2295,0.467,2296,0.901,2297,0.901,2298,0.901,2299,1.306,2300,0.467,2301,0.42,2302,0.901,2303,0.467,2304,0.42,2305,0.467,2306,0.901,2307,0.467,2308,0.467,2309,0.467,2310,0.467,2311,0.467,2312,0.467,2313,0.391,2314,0.391,2315,0.467,2316,1.71,2317,0.467,2318,0.901,2319,1.685,2320,1.685,2321,0.467,2322,0.467,2323,0.901,2324,1.685,2325,1.518,2326,1.685,2327,0.467,2328,1.685,2329,0.467,2330,1.685,2331,1.685,2332,0.467,2333,1.685,2334,0.467,2335,1.685,2336,1.685,2337,1.685,2338,0.467,2339,1.685,2340,0.467,2341,0.811,2342,0.811,2343,0.42,2344,0.42,2345,0.42,2346,0.42,2347,0.467,2348,0.467,2349,0.467,2350,0.467,2351,0.467,2352,0.467,2353,0.467,2354,0.467,2355,0.467,2356,0.467,2357,0.467,2358,0.467,2359,0.467,2360,0.467,2361,0.467,2362,0.467,2363,0.467,2364,0.467,2365,0.467,2366,0.467,2367,0.467,2368,0.467,2369,0.467,2370,0.467,2371,0.467,2372,0.467,2373,0.467,2374,0.467,2375,0.467,2376,0.467,2377,0.467,2378,0.467,2379,0.467,2380,0.467,2381,0.467,2382,0.467,2383,0.467,2384,0.467,2385,0.467,2386,0.467,2387,0.467,2388,0.467,2389,0.467,2390,0.467,2391,0.467,2392,0.467,2393,0.467,2394,0.467,2395,0.467,2396,0.467,2397,0.467,2398,0.467,2399,0.467,2400,0.467,2401,0.467,2402,0.811,2403,0.811,2404,0.42,2405,0.42,2406,0.42,2407,0.42,2408,0.467,2409,0.467,2410,0.467,2411,0.467,2412,0.467,2413,0.467,2414,0.467,2415,0.467,2416,0.467,2417,0.467,2418,0.467,2419,0.467,2420,0.467,2421,0.467,2422,0.467,2423,0.467,2424,0.467,2425,0.467,2426,0.467,2427,0.467,2428,0.467,2429,0.467,2430,0.467,2431,0.467,2432,0.467,2433,0.467,2434,0.467,2435,0.467,2436,0.467,2437,0.467,2438,0.467,2439,0.467,2440,0.467,2441,0.467,2442,0.467,2443,0.467,2444,0.467,2445,0.467,2446,0.467,2447,0.467,2448,0.467,2449,0.467,2450,0.467,2451,0.467,2452,0.467,2453,0.467,2454,0.467,2455,0.467,2456,0.467,2457,0.467,2458,0.467,2459,0.467,2460,0.467,2461,0.467,2462,0.467,2463,0.467,2464,0.467,2465,0.467,2466,0.467,2467,0.467,2468,0.467,2469,0.467,2470,0.467,2471,0.467,2472,0.467,2473,0.467,2474,0.467,2475,0.467,2476,0.467,2477,0.467,2478,0.467,2479,0.467,2480,0.467,2481,0.467,2482,0.467,2483,0.467,2484,0.467,2485,0.467,2486,0.467,2487,0.467,2488,0.467,2489,0.467,2490,0.811,2491,0.811,2492,0.42,2493,0.42,2494,0.42,2495,0.42,2496,0.467,2497,0.467,2498,0.467,2499,0.467,2500,0.467,2501,0.467,2502,0.467,2503,0.467,2504,0.467,2505,0.467,2506,0.467,2507,0.467,2508,0.467,2509,0.467,2510,0.467,2511,0.467,2512,0.467,2513,0.467,2514,0.467,2515,0.467,2516,0.467,2517,0.467,2518,0.467,2519,0.467,2520,0.467,2521,0.467,2522,0.467,2523,0.467,2524,0.467,2525,0.901,2526,0.901,2527,0.467,2528,0.467,2529,0.467,2530,0.467,2531,0.467,2532,0.467,2533,0.467,2534,0.467,2535,0.467,2536,0.467,2537,0.467,2538,0.467,2539,0.467,2540,0.467,2541,0.467,2542,0.467,2543,0.467,2544,0.467,2545,0.467,2546,0.467,2547,0.467,2548,0.467,2549,0.361,2550,0.467,2551,0.467,2552,0.901,2553,0.467,2554,0.467,2555,0.44,2556,0.313,2557,0.811,2558,0.633,2559,0.811,2560,0.361,2561,0.42,2562,0.353,2563,0.42,2564,0.811,2565,0.42,2566,1.412,2567,3.029,2568,0.755,2569,0.42,2570,0.42,2571,3.525,2572,1.617,2573,1.036,2574,0.37,2575,0.42,2576,0.391,2577,0.42,2578,0.42,2579,1.882,2580,0.37,2581,0.42,2582,0.42,2583,1.518,2584,0.42,2585,0.42,2586,0.353,2587,1.99,2588,1.99,2589,0.733,2590,0.755,2591,0.42,2592,0.811,2593,0.811,2594,0.37,2595,0.42,2596,0.467,2597,2.688,2598,2.041]],["title/archive/tutorial/rdd/#set-up-dependencies",[389,2.046,686,2.357,1311,2.077]],["text/archive/tutorial/rdd/#set-up-dependencies",[7,1.448,12,0.629,19,3.246,35,2.52,53,3.079,89,2.57,91,2.58,112,1.28,211,4.893,228,3.586,303,2.743,480,3.933,883,3.744,884,4.162,885,4.29,886,4.29,1202,3.962,1270,3.851,1308,3.384,1309,4.183,1311,4.307,1682,4.78,1800,4.676,1839,6.042]],["title/archive/tutorial/rdd/#initiate-sparkcontext",[488,3.793,1531,3.086]],["text/archive/tutorial/rdd/#initiate-sparkcontext",[12,0.675,53,2.7,84,1.581,97,1.09,107,1.09,176,2.416,222,2.845,247,2.152,302,3.003,389,3.899,457,1.457,483,2.899,488,3.472,516,2.746,556,2.074,768,2.955,826,2.352,858,3.358,883,2.152,891,4.098,893,4.035,895,2.403,905,4.07,909,3.665,993,3.256,995,2.246,1289,6.281,1290,4.422,1291,5.623,1292,3.93,1305,4.436,1311,2.269,1509,4.725,1515,3.601,1520,4.796,1543,3.003,1549,3.394,1569,2.038,1570,2.623,1800,3.358,1808,3.513,1819,3.807,1820,3.289,1839,3.472,1854,4.761,1981,3.93,1982,3.472,1983,3.93,1984,7.17,2001,3.256,2274,5.04,2275,5.597,2276,5.04]],["title/archive/tutorial/rdd/#create-a-spatialrdd",[123,1.862,482,1.89]],["text/archive/tutorial/rdd/#create-a-spatialrdd",[]],["title/archive/tutorial/rdd/#create-a-typed-spatialrdd",[123,1.56,482,1.583,519,1.73]],["text/archive/tutorial/rdd/#create-a-typed-spatialrdd",[12,0.478,53,2.457,108,1.521,136,4.482,156,4.243,163,5.117,478,4.653,482,2.744,538,4.618,541,4.243,877,3.99,884,3.322,957,5.387,1632,6.46,1687,5.715,1877,5.87,1878,6.042,1943,6.722,1985,6.46]],["title/archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120",[55,1.306,123,1.049,138,1.69,482,1.065,826,1.448,2300,3.446]],["text/archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120",[12,0.549,31,2.846,55,3.183,107,1.985,116,3.004,118,3.403,156,4.01,168,3.685,466,4.662,482,2.594,501,3.681,519,3.857,775,5.71,786,6.353,957,5.091,958,3.909,1338,4.176,1765,6.353,1768,6.654,1807,5.333,1931,5.333,2301,7.559]],["title/archive/tutorial/rdd/#transform-the-coordinate-reference-system",[85,2.119,303,1.551,392,1.98,398,2.148]],["text/archive/tutorial/rdd/#transform-the-coordinate-reference-system",[12,0.659,51,1.859,53,2.286,59,2.434,79,3.852,85,2.915,97,1.609,98,2.288,107,1.609,123,1.846,213,2.575,251,3.281,303,2.908,318,1.643,321,2.288,324,4.889,392,2.723,398,2.955,420,4.716,421,5.069,423,2.617,425,3.563,427,4.124,457,1.579,481,3.06,482,3.12,483,2.247,516,2.975,670,2.859,820,3.761,821,3.806,823,5.418,824,5.069,825,5.318,909,3.873,924,3.852,947,4.124,968,6.265,1496,4.064,1511,6.396,1820,3.563,1877,4.007,2001,3.527,2017,4.124,2284,5.459,2285,5.459,2286,5.459,2287,6.214,2556,4.064,2557,7.442,2558,5.803,2559,7.442,2560,4.692,2561,5.459,2562,4.589]],["title/archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd",[89,1.689,482,1.583,971,2.463]],["text/archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd",[12,0.657,32,3.24,51,2.264,59,3.777,96,2.948,97,1.437,107,1.437,125,3.823,343,2.688,389,2.948,390,1.643,457,1.922,482,2.28,484,4.526,520,3.961,650,4.877,783,3.315,909,3.459,971,4.525,994,6.607,995,2.963,1085,5.021,1183,2.773,1263,4.812,1265,4.812,1266,4.812,1646,6.219,1691,4.062,1951,5.368,2016,4.689,2017,5.021,2018,5.368,2287,4.877,2563,6.646,2564,8.474,2565,6.646]],["title/archive/tutorial/rdd/#write-a-spatial-range-query",[318,1.195,340,1.872,390,0.981,880,2.163]],["text/archive/tutorial/rdd/#write-a-spatial-range-query",[12,0.664,15,2.969,34,0.951,51,1.83,55,2.263,83,2.549,91,1.976,97,1.162,103,2.083,105,3.079,107,1.592,111,0.912,112,0.98,118,2.42,267,3.314,318,3.012,340,4.261,343,2.173,356,4.388,389,2.384,390,2.234,422,2.952,457,2.129,465,4.097,471,4.5,481,3.012,482,2.882,483,2.212,507,3.203,519,2.016,639,3.079,788,3.84,909,4.371,1547,2.889,1658,6.345,1660,5.256,2024,4.341,2026,4.263,2027,4.263,2028,4.263,2029,4.263,2031,3.891,2032,5.195,2035,4.123,2316,6.853,2566,6.853,2567,5.562,2568,5.002,2569,5.374]],["title/archive/tutorial/rdd/#range-query-window",[318,1.388,340,2.176,1660,2.684]],["text/archive/tutorial/rdd/#range-query-window",[12,0.681,51,2.334,53,1.152,98,1.571,105,2.148,116,1.49,123,2.316,125,1.536,132,5.65,174,2.138,175,2.595,176,1.797,179,1.423,198,1.715,199,3.376,205,2.613,292,2.832,303,4.235,306,2.029,318,1.709,340,2.678,373,2.791,385,4.997,386,2.216,457,1.981,483,4.179,519,1.406,575,3.866,633,1.892,909,4.81,1660,3.303,1734,2.832,2036,3.151,2060,2.923,2061,2.923,2570,3.749,2571,7.953,2572,3.3,2573,3.3,2574,3.3,2575,3.749,2576,3.49,2577,3.749,2578,3.749]],["title/archive/tutorial/rdd/#use-spatial-indexes",[97,0.997,390,1.14,556,1.899]],["text/archive/tutorial/rdd/#use-spatial-indexes",[12,0.663,25,2.659,31,1.948,51,1.762,53,2.203,59,2.306,97,1.78,103,1.283,105,2.963,116,2.056,125,2.12,176,2.48,247,2.208,318,2.158,340,2.44,343,2.9,389,2.294,390,2.197,422,2.875,457,1.495,465,2.878,481,2.899,482,2.824,483,2.129,519,2.689,556,4.077,777,2.03,830,2.595,843,3.796,877,2.58,895,2.466,901,3.375,909,4.626,921,3.907,1445,2.986,1505,4.033,1507,5.371,1508,3.605,1517,4.239,1547,2.78,1569,2.092,1597,3.85,1658,5.417,1660,3.009,1928,4.347,2024,4.178,2026,4.103,2027,4.103,2028,4.103,2029,4.103,2031,3.745,2032,3.65,2035,3.968,2037,3.968,2038,3.907,2040,3.907,2566,6.675,2567,5.417,2568,4.814,2579,6.313,2580,4.553,2581,5.172]],["title/archive/tutorial/rdd/#output-format",[108,1.047,255,1.993]],["text/archive/tutorial/rdd/#output-format",[108,1.635,255,3.111,318,2.588,340,4.055,390,2.126,482,2.95,2041,7.568]],["title/archive/tutorial/rdd/#write-a-spatial-knn-query",[318,1.195,390,0.981,880,2.163,1566,2.224]],["text/archive/tutorial/rdd/#write-a-spatial-knn-query",[12,0.666,15,2.836,34,0.909,51,1.748,55,2.161,83,2.435,91,1.887,97,1.11,103,1.273,107,1.11,112,0.936,118,2.311,179,2.708,201,2.919,213,3.365,267,3.165,287,3.223,303,2.006,306,3.861,318,2.802,321,2.152,386,3.035,390,2.19,422,2.058,457,2.063,482,2.448,483,2.937,507,3.059,519,1.925,639,2.941,782,3.01,909,4.846,995,2.288,1183,2.142,1547,2.76,1566,3.998,1673,6.718,1756,3.496,2055,4.519,2056,5.859,2057,4.519,2058,4.146,2060,4.003,2061,4.003,2062,5.098,2063,4.003,2287,3.768,2316,4.778,2567,5.389,2571,6.891,2572,6.28,2573,4.519,2582,5.134,2583,8.86,2584,5.134,2585,5.134,2586,4.315]],["title/archive/tutorial/rdd/#query-center-geometry",[107,0.997,318,1.388,703,3.385]],["text/archive/tutorial/rdd/#query-center-geometry",[12,0.478,53,2.457,116,3.775,123,2.704,168,4.63,179,3.036,239,3.619,318,2.859,340,3.773,519,2.999,573,3.292,703,5.87,1566,4.482,1660,4.653,1734,6.042,1791,5.575]],["title/archive/tutorial/rdd/#use-spatial-indexes_1",[97,0.997,390,1.14,556,1.899]],["text/archive/tutorial/rdd/#use-spatial-indexes_1",[6,2.298,12,0.672,25,2.984,51,1.977,97,1.255,201,3.301,303,2.269,318,2.63,321,2.433,343,3.137,389,2.575,390,2.16,422,2.327,457,1.678,483,3.193,516,3.163,556,3.193,777,2.278,901,3.788,909,5.204,915,4.689,1507,3.788,1566,4.347,1569,2.348,1673,6.09,2038,4.385,2040,4.385,2056,4.148,2058,4.689,2060,4.526,2061,4.526,2062,4.148,2063,4.526,2287,5.693,2567,5.86,2571,7.343,2572,6.829,2573,5.11,2579,6.829]],["title/archive/tutorial/rdd/#output-format_1",[108,1.047,255,1.993]],["text/archive/tutorial/rdd/#output-format_1",[107,2.112,108,1.595,255,3.036,318,2.525,390,2.074,573,3.453,612,4.99,1566,4.701,1673,5.847]],["title/archive/tutorial/rdd/#write-a-spatial-join-query",[318,1.195,390,0.981,777,1.558,880,2.163]],["text/archive/tutorial/rdd/#write-a-spatial-join-query",[12,0.667,15,2.805,34,0.899,51,1.729,55,2.138,59,3.633,83,2.408,91,1.866,97,1.098,98,2.128,103,1.259,107,1.906,112,0.926,118,2.286,133,3.413,197,3.001,215,4.114,247,3.022,267,3.13,318,2.791,321,2.128,390,2.292,422,2.838,457,2.047,465,2.825,482,1.742,507,3.026,519,3.057,777,3.198,782,4.151,909,4.242,918,3.497,995,2.263,1183,2.118,1547,2.729,1652,3.628,1658,5.348,1660,2.954,1670,3.582,1735,3.382,2031,3.676,2032,3.582,2064,4.1,2065,3.676,2066,5.901,2067,4.667,2069,3.582,2070,4.469,2287,6.471,2567,5.348,2587,7.586,2588,7.586,2589,4.589,2590,4.725]],["title/archive/tutorial/rdd/#use-spatial-partitioning",[97,0.997,390,1.14,830,2.315]],["text/archive/tutorial/rdd/#use-spatial-partitioning",[12,0.664,25,3.259,28,3.342,53,1.948,97,1.371,98,2.657,215,3.2,247,2.707,318,1.908,390,2.032,482,2.821,544,3.842,633,3.2,686,3.239,777,2.488,830,5.018,918,5.663,957,4.27,1469,4.51,1507,5.953,1508,4.419,1542,4.419,1564,5.121,1587,4.864,2065,5.952,2066,6.605,2067,6.364,2069,5.801,2071,5.581,2287,6.695]],["title/archive/tutorial/rdd/#use-spatial-indexes_2",[97,0.997,390,1.14,556,1.899]],["text/archive/tutorial/rdd/#use-spatial-indexes_2",[12,0.671,51,2.092,55,2.586,97,1.328,247,2.622,318,2.424,321,2.574,343,3.633,389,2.724,390,1.991,457,1.776,482,2.763,556,3.315,658,2.866,777,3.16,843,4.507,901,4.008,909,4.676,921,3.346,942,4.572,1569,2.484,1652,4.389,1658,4.64,1825,5.162,2038,4.64,2040,4.64,2066,6.504,2067,5.309,2069,4.334,2072,5.278,2287,6.593,2567,6.083,2579,7.088,2591,6.142]],["title/archive/tutorial/rdd/#output-format_2",[108,1.047,255,1.993]],["text/archive/tutorial/rdd/#output-format_2",[12,0.442,59,4.038,107,2.117,108,1.406,247,3.158,255,2.677,318,2.226,390,1.829,573,4.031,658,4.228,777,2.903,784,5.285,923,6.649,924,6.392,2064,5.974,2066,5.355,2073,7.317,2074,8.621,2075,6.511,2076,6.511,2077,6.511,2287,5.428]],["title/archive/tutorial/rdd/#write-a-distance-join-query",[213,1.872,318,1.195,777,1.558,880,2.163]],["text/archive/tutorial/rdd/#write-a-distance-join-query",[12,0.667,15,2.297,34,0.736,51,1.416,55,1.75,59,3.248,80,4.575,83,1.971,91,1.528,97,1.575,98,2.57,103,1.031,107,1.739,108,0.79,112,0.758,118,1.871,123,1.405,133,2.956,213,4.495,215,3.678,247,2.618,248,2.832,255,1.504,267,2.563,279,3.716,287,2.61,318,2.978,321,1.742,390,2.121,422,2.459,423,2.94,457,1.773,465,2.313,482,1.426,483,1.711,507,2.477,519,2.733,556,1.711,601,2.933,777,3.74,782,3.596,808,3.748,823,2.659,830,2.086,909,4.187,918,2.863,995,1.853,1183,1.734,1355,3.051,1547,2.235,1652,2.97,1658,4.633,1660,2.418,1670,2.933,1701,3.297,1735,2.769,1944,7.121,2031,3.009,2032,2.933,2065,3.009,2066,3.009,2067,4.043,2069,2.933,2080,3.572,2567,4.633,2587,6.783,2588,6.783,2589,3.757,2590,3.869,2592,6.132,2593,6.132,2594,3.659,2595,4.157]],["title/archive/tutorial/rdd/#save-to-permanent-storage",[999,2.328,1668,2.749,2086,2.951]],["text/archive/tutorial/rdd/#save-to-permanent-storage",[91,2.794,136,4.259,156,4.032,390,1.879,482,3.161,501,3.047,520,4.529,573,3.129,783,4.595,971,4.059,995,3.388,999,4.649,1010,4.229,1265,5.503,1266,5.503,1384,5.431,1582,4.816,1668,5.489,1688,5.431,1691,4.645,1706,6.139,1812,5.578,2086,5.893]],["title/archive/tutorial/rdd/#save-an-spatialrdd-not-indexed",[482,1.583,556,1.899,999,2.328]],["text/archive/tutorial/rdd/#save-an-spatialrdd-not-indexed",[55,3.62,482,3.399,519,3.224,999,4.34,1668,5.124,2086,5.501]],["title/archive/tutorial/rdd/#save-an-spatialrdd-indexed",[482,1.583,556,1.899,999,2.328]],["text/archive/tutorial/rdd/#save-an-spatialrdd-indexed",[55,3.468,482,3.519,501,3.303,519,3.089,556,3.978,573,3.391,999,4.158,1010,4.583,1668,4.909,1691,5.035,2086,5.27]],["title/archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed",[482,1.195,556,1.434,999,1.758,2067,2.296,2095,3.066]],["text/archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed",[7,1.183,98,3.276,230,4.819,318,2.353,321,3.276,390,1.932,651,4.174,777,3.067,829,6.095,830,4.7,999,3.945,1183,4.185,1337,4.043,1496,5.818,1668,4.658,1820,5.101,1859,5.736,1876,6.095,2086,5.001,2096,5.905]],["title/archive/tutorial/rdd/#reload-a-saved-spatialrdd",[482,1.583,999,2.328,2097,3.659]],["text/archive/tutorial/rdd/#reload-a-saved-spatialrdd",[12,0.511,482,2.932,501,3.426,573,3.517,999,4.313,1010,4.754,2097,6.777,2098,6.186]],["title/archive/tutorial/sql/",[34,0.817,390,1.14,882,2.844]],["text/archive/tutorial/sql/",[6,0.388,7,0.274,12,0.674,14,2.108,19,1.062,27,1.603,28,0.953,31,0.948,34,0.874,35,1.773,40,0.424,50,0.48,51,1.797,53,2.016,54,0.584,58,0.791,59,0.437,60,0.53,64,0.709,79,0.691,80,1.028,84,1.15,85,0.965,89,1.932,91,1.348,92,0.483,93,0.486,96,1.116,97,1.462,98,0.758,100,0.609,103,0.243,107,1.799,108,0.186,111,0.307,112,0.832,116,2.949,118,0.441,119,0.42,121,1.442,123,1.542,125,2.288,126,0.822,136,1.013,156,0.959,158,0.584,170,0.621,176,0.866,197,1.068,204,0.594,211,0.683,213,1.953,214,0.584,218,1.187,222,0.553,228,0.923,232,1.077,239,0.818,247,0.418,248,0.835,255,1.327,279,0.594,287,0.615,302,0.584,303,1.433,306,0.978,318,2.035,321,0.758,324,1.683,340,0.853,343,1.845,364,0.545,386,0.579,389,0.434,390,1.221,392,0.902,397,1.659,398,0.978,410,0.689,420,1.595,421,1.714,422,0.725,423,1.206,424,1.365,425,0.639,427,0.74,450,0.74,451,0.74,452,0.74,456,1.442,457,1.695,459,3.537,460,0.639,471,0.599,478,1.052,479,3.048,480,1.013,481,2.957,482,2.382,483,0.403,484,0.667,487,3.293,491,2.603,492,1.409,493,2.347,494,5.522,496,1.822,497,1.996,498,2.444,499,1.972,500,0.709,501,1.009,507,0.584,516,0.985,519,2.198,520,1.077,529,1.767,538,0.565,539,0.791,540,0.66,541,2.62,545,0.516,556,0.403,573,0.403,633,1.27,635,0.719,651,0.965,658,0.457,670,2.586,686,0.5,695,0.862,768,0.574,772,0.653,777,1.625,778,0.653,782,0.574,783,1.562,788,0.7,808,0.599,820,0.675,821,0.683,823,1.61,824,1.231,825,1.291,826,1.174,858,0.653,866,0.719,867,1.365,868,0.729,869,0.729,870,0.912,871,0.842,877,0.902,883,1.337,884,1.3,885,0.599,886,0.599,887,0.719,889,0.604,890,1.913,891,1.052,893,1.036,895,0.467,896,0.653,898,0.604,903,0.653,921,0.534,947,0.74,951,3.731,958,0.935,961,0.584,963,1.291,964,0.621,968,2.853,971,1.959,992,0.639,993,1.168,995,1.122,999,1.58,1044,0.791,1083,0.683,1173,0.594,1183,1.306,1192,0.791,1199,0.646,1202,0.553,1261,0.751,1265,1.309,1266,1.309,1270,3.989,1289,2.237,1290,1.135,1291,2.003,1292,0.764,1294,0.862,1305,0.862,1308,0.472,1309,0.584,1311,1.651,1338,0.541,1445,1.043,1469,0.537,1501,0.777,1503,0.584,1509,1.683,1515,0.7,1520,1.231,1531,1.013,1543,0.584,1549,0.66,1566,0.549,1569,1.266,1570,0.51,1582,0.621,1629,0.791,1660,0.57,1668,1.5,1682,0.667,1688,1.798,1747,0.764,1756,0.667,1769,0.675,1775,0.719,1791,0.683,1800,1.204,1808,0.683,1819,0.74,1820,0.639,1839,1.734,1854,1.476,1859,0.719,1876,0.764,1903,0.74,1953,0.667,1981,0.764,1982,0.675,1983,0.764,2004,5.019,2006,0.912,2007,1.591,2011,0.885,2016,1.275,2017,1.365,2018,0.791,2056,0.7,2062,0.7,2073,0.791,2086,1.61,2129,1.538,2218,3.685,2273,0.885,2555,1.026,2556,0.729,2558,1.409,2562,0.823,2574,0.862,2586,0.823,2599,0.823,2600,0.912,2601,0.862,2602,0.912,2603,2.516,2604,1.807,2605,4.016,2606,4.016,2607,4.016,2608,4.016,2609,0.912,2610,3.414,2611,0.979,2612,3.02,2613,3.229,2614,3.229,2615,1.682,2616,1.682,2617,1.682,2618,1.682,2619,1.682,2620,1.682,2621,1.682,2622,1.682,2623,2.215,2624,5.384,2625,3.855,2626,3.855,2627,1.682,2628,1.682,2629,1.682,2630,2.215,2631,1.682,2632,1.682,2633,1.682,2634,2.215,2635,1.682,2636,1.682,2637,1.682,2638,2.215,2639,1.682,2640,1.682,2641,1.682,2642,1.682,2643,0.979,2644,0.979,2645,0.862,2646,1.682,2647,0.912,2648,2.072,2649,0.979,2650,0.979,2651,0.979,2652,0.979,2653,0.979,2654,0.979,2655,0.912,2656,0.912,2657,0.912,2658,0.912,2659,0.885,2660,0.979,2661,1.807,2662,0.979,2663,2.007,2664,1.088,2665,0.979,2666,1.088,2667,0.912,2668,1.088,2669,0.823,2670,1.807,2671,2.274,2672,1.088,2673,0.979,2674,0.979,2675,0.979]],["title/archive/tutorial/sql/#set-up-dependencies",[389,2.046,686,2.357,1311,2.077]],["text/archive/tutorial/sql/#set-up-dependencies",[7,1.307,12,0.648,19,3.37,35,2.458,53,3.051,89,2.506,91,2.516,112,1.248,211,4.771,228,3.497,303,2.675,480,4.838,883,3.686,884,4.125,885,4.183,886,4.183,1202,3.864,1270,4.737,1308,3.299,1309,4.079,1311,4.258,1682,4.661,1800,4.56,1839,5.947]],["title/archive/tutorial/sql/#initiate-sparksession",[487,2.612,1531,3.086]],["text/archive/tutorial/sql/#initiate-sparksession",[12,0.676,51,1.742,53,2.718,60,2.768,84,1.604,97,1.538,107,1.106,176,2.452,222,2.887,247,2.184,302,3.048,457,2.057,481,2.866,487,3.88,516,2.787,556,2.105,768,2.999,826,2.387,858,3.408,883,2.184,889,3.154,890,5.407,891,4.14,893,4.077,895,2.439,896,3.408,898,3.154,993,3.304,995,2.28,1289,6.321,1290,4.467,1291,5.659,1292,3.988,1305,4.502,1311,2.303,1509,4.755,1515,3.655,1520,4.846,1531,2.866,1543,3.048,1549,3.445,1569,2.068,1570,2.662,1800,3.408,1808,3.565,1819,3.864,1820,3.338,1839,3.523,1854,4.798,1981,3.988,1982,3.523,1983,3.988,2599,4.299,2600,4.761]],["title/archive/tutorial/sql/#register-geosparksql",[1270,3.021,2129,3.366]],["text/archive/tutorial/sql/#register-geosparksql",[12,0.598,35,3.353,53,2.388,96,4.141,176,3.726,318,2.339,457,2.247,487,4.427,519,2.915,777,3.05,778,5.178,883,3.318,887,5.704,903,5.178,963,6.671,1294,6.842,2129,4.75,2601,6.842]],["title/archive/tutorial/sql/#load-data-from-files",[31,1.737,501,1.849,541,2.447]],["text/archive/tutorial/sql/#load-data-from-files",[12,0.677,31,1.639,51,1.483,89,1.594,97,0.941,108,0.828,116,3.838,123,1.472,126,2.885,156,2.31,170,2.759,204,2.638,232,2.595,255,1.576,422,1.746,457,1.834,459,2.076,479,1.653,481,2.44,487,2.065,493,2.786,499,2.341,501,2.544,507,2.595,538,2.514,539,3.517,540,2.932,541,3.366,995,1.941,2004,6.813,2218,6.046,2602,4.053,2603,7.485,2604,6.344,2605,6.589,2606,6.589,2607,6.589,2608,6.589,2609,4.053,2610,7.655,2611,4.354,2612,3.585,2613,3.833,2614,3.833,2615,4.053,2616,4.053,2617,4.053,2618,4.053,2619,4.053,2620,4.053,2621,4.053,2622,4.053,2623,3.833,2624,7.24,2625,6.967,2626,6.967,2627,4.053,2628,4.053,2629,4.053,2630,3.833,2631,4.053,2632,4.053,2633,4.053,2634,3.833,2635,4.053,2636,4.053,2637,4.053,2638,3.833,2639,4.053,2640,4.053,2641,4.053,2642,4.053]],["title/archive/tutorial/sql/#create-a-geometry-type-column",[107,0.858,123,1.342,459,1.892,519,1.488]],["text/archive/tutorial/sql/#create-a-geometry-type-column",[12,0.673,27,1.608,34,0.651,35,1.321,51,1.253,64,2.663,84,1.154,89,1.347,91,1.352,97,0.795,98,1.542,107,1.76,112,1.021,116,3.008,118,1.656,121,2.108,123,1.892,125,3.654,218,3.195,232,2.192,255,2.025,279,2.229,318,1.107,343,3.606,410,1.402,422,1.475,456,2.108,457,1.064,459,3.229,479,2.124,481,2.062,487,1.745,493,2.354,494,5.676,496,4.052,497,4.439,498,2.451,499,1.978,500,2.663,519,2.838,529,2.077,545,1.939,573,1.514,826,1.717,867,2.779,877,1.835,951,6.941,958,1.903,971,1.965,992,2.401,1044,2.971,1173,2.229,1199,2.425,1270,3.716,1629,2.971,1903,2.779,1953,2.505,2004,5.34,2006,3.424,2007,3.238,2218,4.52,2562,3.092,2574,3.238,2605,4.926,2606,4.926,2607,4.926,2608,4.926,2610,3.424,2612,4.608,2613,4.926,2614,4.926,2615,3.424,2616,3.424,2617,3.424,2618,3.424,2619,3.424,2620,3.424,2621,3.424,2622,3.424,2623,3.238,2624,6.663,2625,6.304,2626,6.304,2627,3.424,2628,3.424,2629,3.424,2630,3.238,2631,3.424,2632,3.424,2633,3.424,2634,3.238,2635,3.424,2636,3.424,2637,3.424,2638,3.238,2639,3.424,2640,3.424,2641,3.424,2642,3.424,2643,3.679,2644,3.679,2645,3.238,2646,3.424]],["title/archive/tutorial/sql/#load-shapefile-and-geojson",[136,2.585,478,2.684,541,2.447]],["text/archive/tutorial/sql/#load-shapefile-and-geojson",[12,0.609,84,2.538,89,2.963,97,1.749,136,4.535,478,4.708,479,3.63,482,3.281,491,4.265,541,5.073,670,4.238,1183,3.376]],["title/archive/tutorial/sql/#transform-the-coordinate-reference-system",[85,2.119,303,1.551,392,1.98,398,2.148]],["text/archive/tutorial/sql/#transform-the-coordinate-reference-system",[12,0.667,34,0.768,50,2.128,51,2.545,53,1.333,79,3.063,85,2.318,97,0.938,98,1.819,107,2.035,112,0.792,116,3.471,123,1.467,213,2.047,255,1.571,303,2.92,324,4.415,392,2.165,397,4.926,398,2.349,420,4.735,421,5.088,423,2.081,424,4.782,425,2.832,427,3.279,457,1.255,459,3.563,487,2.058,493,2.777,494,6.086,496,3.142,497,3.443,498,2.892,499,2.333,529,2.45,633,2.191,635,3.185,670,2.273,695,3.821,820,2.99,821,3.025,823,4.78,824,4.311,825,4.523,826,2.026,947,3.279,964,2.75,968,6.28,1270,2.381,2004,5.795,2007,3.821,2218,5.113,2556,3.231,2558,4.936,2605,5.572,2606,5.572,2607,5.572,2608,5.572,2612,5.212,2613,5.572,2614,5.572,2623,3.821,2624,7.229,2630,3.821,2634,3.821,2638,3.821,2646,4.04,2647,4.04,2648,3.574,2649,4.34,2650,4.34,2651,4.34,2652,4.34,2653,4.34,2654,4.34]],["title/archive/tutorial/sql/#run-spatial-queries",[318,1.388,390,1.14,1569,1.866]],["text/archive/tutorial/sql/#run-spatial-queries",[107,1.859,123,2.907,318,2.588,390,2.126,459,4.099,519,3.224,1569,3.477]],["title/archive/tutorial/sql/#range-query",[318,1.658,340,2.598]],["text/archive/tutorial/sql/#range-query",[12,0.664,27,2.864,34,1.16,89,2.399,91,2.408,97,1.416,107,1.416,111,1.112,112,1.195,116,2.604,121,3.754,123,2.215,197,4.963,248,3.026,318,2.527,340,3.09,364,3.645,457,1.894,459,3.124,471,4.004,487,3.107,493,4.191,494,7.043,498,4.365,499,3.522,519,2.457,782,3.842,788,4.681,808,4.004,1270,3.594,1569,2.649,1660,3.812,1747,5.108,1791,4.566,2004,4.622,2648,5.394,2655,6.098]],["title/archive/tutorial/sql/#knn-query",[318,1.658,1566,3.086]],["text/archive/tutorial/sql/#knn-query",[12,0.661,34,1.224,51,2.355,97,1.495,103,1.714,112,1.261,116,2.748,213,4.701,248,3.193,287,4.34,306,4.702,386,4.086,457,1.999,460,4.511,487,3.278,493,4.423,494,7.158,498,4.606,499,3.716,1756,4.708,2056,4.94,2062,4.94,2586,5.811,2648,5.692,2656,6.435,2657,6.435,2658,6.435]],["title/archive/tutorial/sql/#join-query",[318,1.658,777,2.161]],["text/archive/tutorial/sql/#join-query",[12,0.511,28,4.504,80,4.859,318,2.971,423,4.096,777,3.874]],["title/archive/tutorial/sql/#other-queries",[318,2.056]],["text/archive/tutorial/sql/#other-queries",[12,0.499,35,3.701,84,2.615,89,3.053,100,5.187,318,2.509,1270,5.339,2018,6.734,2659,7.535]],["title/archive/tutorial/sql/#save-to-permanent-storage",[999,2.328,1668,2.749,2086,2.951]],["text/archive/tutorial/sql/#save-to-permanent-storage",[12,0.658,34,0.951,35,1.93,51,1.83,59,2.396,91,1.976,96,2.384,97,1.816,107,2.164,112,0.98,119,2.305,125,3.442,156,2.851,158,3.203,255,1.945,390,1.329,457,1.554,459,4.308,479,3.593,481,3.012,487,3.492,498,3.581,519,2.761,541,3.906,633,2.713,651,2.87,670,3.856,772,3.581,783,3.673,877,2.681,921,2.928,958,2.78,961,3.203,999,4.239,1192,4.341,1469,2.949,1501,4.263,1582,3.406,1668,4.388,1688,6.002,1775,3.944,1859,3.944,1876,4.191,2086,4.711,2129,3.285,2660,5.374,2661,7.363,2662,5.374,2663,8.177,2664,5.969,2665,5.374,2666,5.969,2667,5.002,2668,5.969,2669,4.517]],["title/archive/tutorial/sql/#convert-between-dataframe-and-spatialrdd",[214,2.365,479,1.507,482,1.362,670,2.079]],["text/archive/tutorial/sql/#convert-between-dataframe-and-spatialrdd",[]],["title/archive/tutorial/sql/#dataframe-to-spatialrdd",[479,2.091,482,1.89]],["text/archive/tutorial/sql/#dataframe-to-spatialrdd",[12,0.652,14,6.28,27,2.538,53,2.865,54,3.459,58,4.689,84,1.821,89,2.126,91,2.134,97,1.677,107,2.016,121,3.326,390,1.918,410,2.213,459,4.634,479,3.54,481,4.347,482,3.503,483,2.389,484,3.953,491,4.605,494,5.407,516,3.163,519,2.177,520,4.623,529,4.379,633,2.93,658,2.709,670,3.04,995,2.588,1183,2.422,1261,4.454,1270,4.256,1338,3.207,2011,5.247,2555,6.08,2670,7.757,2671,5.247,2672,6.447]],["title/archive/tutorial/sql/#spatialrdd-to-dataframe",[479,2.091,482,1.89]],["text/archive/tutorial/sql/#spatialrdd-to-dataframe",[12,0.637,89,2.708,97,1.599,239,3.347,479,3.718,481,4.145,482,3.36,487,3.507,491,4.775,492,5.767,494,5.155,670,3.874,783,3.689,971,4.838,1183,3.086,1265,5.355,1266,5.355,1270,4.058,1445,4.27,2016,5.219,2017,5.587,2671,6.685]],["title/archive/tutorial/sql/#spatialpairrdd-to-dataframe",[479,2.091,2673,5.507]],["text/archive/tutorial/sql/#spatialpairrdd-to-dataframe",[12,0.632,89,2.61,213,3.362,239,3.225,318,2.665,321,3.712,390,1.762,479,3.657,481,3.995,482,2.446,487,3.38,491,4.668,492,5.558,670,3.733,777,3.475,783,3.556,971,4.729,1183,2.974,1265,5.161,1266,5.161,1270,3.911,1445,4.115,2016,5.03,2017,5.385,2073,5.757,2671,6.443,2674,7.128,2675,7.128]],["title/archive/tutorial/viz/",[390,1.14,479,1.751,1185,2.514]],["text/archive/tutorial/viz/",[6,0.598,7,0.229,12,0.666,14,1.018,15,1.479,16,1.784,18,1.054,19,0.909,27,2.178,31,2.074,32,4.208,35,0.543,40,0.655,51,0.912,53,1.531,55,2.509,60,0.818,79,1.067,84,1.13,89,1.32,91,0.556,93,0.75,96,1.933,97,1.446,98,2.088,100,3.707,101,1.042,106,1.523,107,0.327,108,0.287,111,0.455,112,1.322,123,2.532,140,1.765,175,1.224,176,0.725,178,0.932,185,3.84,228,0.772,232,1.596,234,1.221,239,0.684,244,1.067,251,0.909,281,1.747,302,0.901,303,1.046,324,1.439,339,1.018,344,0.768,345,0.909,364,3.065,371,1.054,378,1.179,389,1.188,390,1.904,392,0.754,397,2.376,409,0.924,410,2.1,420,1.697,421,2.454,423,1.284,456,0.866,457,1.441,459,1.718,466,0.768,479,2.091,480,0.847,481,2.02,482,0.519,483,0.622,487,2.826,496,1.939,508,2.374,516,0.824,519,1.004,541,0.802,544,0.916,545,1.411,551,2.054,552,2.023,553,2.088,573,1.483,633,2.199,639,0.866,651,0.807,658,1.682,670,0.792,686,0.772,690,1.299,694,1.095,770,1.867,771,4.161,778,1.007,783,1.798,794,0.655,824,1.03,826,0.706,877,1.336,880,0.824,881,2.251,882,0.932,883,1.143,884,1.112,887,1.11,889,0.932,890,1.637,891,0.88,893,0.866,895,0.721,896,1.007,898,0.932,903,1.784,922,1.095,943,4.522,946,3.172,958,0.782,961,0.901,963,1.081,993,0.977,995,1.606,1012,0.924,1083,1.054,1084,1.199,1107,2.088,1150,5.316,1183,1.117,1185,3.644,1193,2.088,1194,4.45,1195,4.323,1196,2.163,1197,1.331,1198,1.331,1202,4.094,1205,1.331,1206,1.331,1208,1.407,1212,1.179,1213,1.803,1214,1.142,1227,1.271,1235,2.683,1236,2.609,1241,2.357,1242,1.179,1243,4.937,1244,2.81,1245,2.203,1250,3.155,1251,2.911,1253,3.292,1264,2.023,1270,1.977,1285,1.16,1289,1.913,1290,0.949,1291,1.713,1294,1.331,1305,1.331,1307,1.512,1308,0.729,1309,0.901,1311,0.681,1338,0.835,1352,1.583,1355,2.645,1444,0.977,1445,0.873,1469,0.83,1486,2.722,1487,1.271,1503,1.596,1505,1.179,1509,1.439,1515,1.913,1517,0.894,1520,1.03,1531,1.501,1534,3.723,1547,0.813,1549,1.018,1569,2.015,1570,0.787,1583,1.331,1616,1.16,1617,1.142,1627,1.331,1670,1.067,1681,1.054,1691,2.663,1707,3.836,1710,2.163,1746,1.331,1756,1.03,1765,1.271,1771,2.792,1781,0.958,1800,1.007,1808,1.054,1821,1.11,1838,1.142,1844,1.271,1854,0.887,1875,1.221,1953,1.03,1982,1.845,2096,1.142,2129,2.203,2273,1.367,2313,1.407,2314,1.407,2599,1.271,2600,1.407,2676,1.407,2677,1.679,2678,1.512,2679,1.679,2680,1.679,2681,1.825,2682,1.825,2683,1.407,2684,1.512,2685,1.512,2686,1.407,2687,1.512,2688,1.512,2689,1.512,2690,2.911,2691,1.331,2692,1.407,2693,1.512,2694,1.512,2695,1.512,2696,1.512,2697,1.271,2698,1.512,2699,1.512,2700,1.407,2701,1.512,2702,1.512,2703,1.679,2704,1.407,2705,1.512,2706,1.512,2707,1.512,2708,4.323,2709,3.029,2710,1.679,2711,1.512,2712,1.512,2713,1.512,2714,1.512,2715,1.512,2716,5.127,2717,1.512,2718,2.492,2719,1.512,2720,1.512,2721,1.512,2722,1.512,2723,1.512,2724,1.512,2725,1.512,2726,1.512,2727,1.512,2728,2.492]],["title/archive/tutorial/viz/#why-scalable-map-visualization",[32,2.249,1185,2.514,1838,3.485]],["text/archive/tutorial/viz/#why-scalable-map-visualization",[16,5.318,18,4.225,31,3.572,32,4.805,55,2.552,96,3.541,100,3.77,234,4.895,378,4.726,389,2.688,390,1.498,409,3.704,423,2.906,456,3.472,694,4.388,783,3.023,1150,3.396,1185,5.169,1202,3.421,1236,4.388,1244,4.726,1245,3.704,1253,4.578,1264,6.03,1285,4.65,1338,3.348,1444,3.916,1487,5.094,1503,3.612,1515,4.331,1517,3.583,1547,3.258,1569,2.451,1627,5.335,1670,4.276,1681,4.225,1710,4.895,1746,5.335,1756,4.127,1765,5.094,1821,4.448,1982,4.175,2096,4.578,2683,5.641,2684,6.061,2685,6.061,2686,5.641,2687,6.061,2688,6.061,2689,6.061,2690,4.895,2691,5.335,2692,5.641,2693,6.061,2694,6.061,2695,6.061,2696,6.061,2697,5.094,2698,6.061,2699,6.061,2700,5.641]],["title/archive/tutorial/viz/#visualize-spatialrdd",[482,1.89,1185,3.001]],["text/archive/tutorial/viz/#visualize-spatialrdd",[12,0.493,27,3.601,53,2.531,79,5.812,111,1.398,794,3.567,881,6.923,1183,3.437,1202,4.65,1352,4.869,1355,6.045,1781,5.22,2701,8.237,2702,8.237]],["title/archive/tutorial/viz/#set-up-dependencies",[389,2.046,686,2.357,1311,2.077]],["text/archive/tutorial/viz/#set-up-dependencies",[7,1.211,12,0.627,19,3.223,53,2.918,89,2.929,303,3.126,480,4.482,883,3.415,884,3.945,1202,4.515,1270,4.388,1308,3.856,1309,4.766]],["title/archive/tutorial/viz/#initiate-sparksession",[487,2.612,1531,3.086]],["text/archive/tutorial/viz/#initiate-sparksession",[12,0.677,51,2.14,53,1.93,60,3.4,97,1.358,302,3.744,457,1.816,481,3.52,487,4.307,826,2.932,889,3.873,890,4.995,891,3.655,893,3.599,895,2.995,896,4.185,898,3.873,995,2.8,1289,5.839,1290,3.944,1291,5.228,1305,5.53,1509,4.393,1515,4.489,1520,4.278,1531,3.52,1549,4.231,1569,2.541,1570,3.269,1808,4.379,1854,3.684,2129,3.84,2599,5.28,2600,5.847,2703,6.977]],["title/archive/tutorial/viz/#register-geosparksql-and-geosparkviz",[1202,2.604,1270,2.531,2129,2.82]],["text/archive/tutorial/viz/#register-geosparksql-and-geosparkviz",[12,0.644,35,2.775,96,3.428,176,3.705,457,2.235,487,4.734,778,5.149,883,3.299,887,5.672,903,6.199,963,5.523,1202,4.363,1270,4.24,1294,6.803,1307,7.728,2129,4.724,2704,7.193]],["title/archive/tutorial/viz/#create-spatial-dataframe",[123,1.56,390,1.14,479,1.751]],["text/archive/tutorial/viz/#create-spatial-dataframe",[12,0.671,31,2.262,53,1.846,84,1.884,89,2.2,107,1.299,108,1.142,112,1.096,123,2.683,140,5.232,178,3.704,185,6.589,232,3.58,281,5.179,390,1.962,410,2.29,457,1.737,459,2.865,479,3.013,496,5.746,508,3.273,519,2.253,541,3.187,545,3.167,551,6.089,552,5.995,553,6.188,633,3.032,771,3.738,877,2.997,880,3.273,882,3.704,1205,5.288,1469,3.296,1534,3.523,1616,4.609,2313,5.592,2314,5.592,2705,6.008,2706,6.008,2707,6.008,2708,4.091]],["title/archive/tutorial/viz/#generate-a-single-image",[55,1.942,364,2.567,943,2.357]],["text/archive/tutorial/viz/#generate-a-single-image",[239,3.866,339,5.754,364,4.754,390,2.112,943,4.365,961,5.092,1012,5.222,1617,6.455]],["title/archive/tutorial/viz/#pixelize-spatial-objects",[390,1.14,573,1.899,1150,2.585]],["text/archive/tutorial/viz/#pixelize-spatial-objects",[12,0.654,32,3.678,97,1.631,101,3.837,106,3.168,112,1.56,123,2.551,185,5.259,251,3.347,303,2.177,345,3.347,390,1.865,397,5.64,410,2.123,420,4.781,421,5.827,459,2.656,508,4.662,516,3.035,573,2.293,633,3.808,670,2.917,770,3.883,771,5.323,783,2.778,943,3.854,946,6.641,1084,4.418,1150,5.37,1185,3.035,1214,4.208,1235,5.616,1236,4.033,1241,6.641,1250,4.033,1352,3.293,1534,4.424,1569,2.253,1583,4.903,1800,3.711,1875,4.499,1953,3.793,2690,4.499,2708,5.138,2709,6.341,2710,6.186,2711,5.57,2712,5.57,2713,5.57,2714,5.57,2715,5.57]],["title/archive/tutorial/viz/#aggregate-pixels",[100,3.426,1150,3.086]],["text/archive/tutorial/viz/#aggregate-pixels",[12,0.598,15,3.858,98,2.927,100,5.938,112,1.274,123,2.361,232,4.162,324,3.754,371,4.868,390,2.473,410,2.662,573,2.875,639,4.001,770,4.868,771,4.344,783,3.483,824,4.756,922,5.056,1150,5.889,1194,7.062,1195,4.756,1196,7.062,1197,6.147,1198,6.147,1251,5.64,1534,4.095,2708,4.756,2716,5.64,2717,6.983]],["title/archive/tutorial/viz/#colorize-pixels",[1150,3.086,1195,3.75]],["text/archive/tutorial/viz/#colorize-pixels",[12,0.643,27,3.182,84,2.283,89,2.665,112,1.636,123,2.461,324,3.913,423,3.49,457,2.105,771,4.528,1150,5.027,1193,6.995,1194,7.854,1195,6.109,1208,6.775,1534,4.268,1569,2.944,1771,4.079,1844,6.118,2708,4.957,2716,7.854,2718,6.775]],["title/archive/tutorial/viz/#render-the-image",[943,2.813,1253,4.16]],["text/archive/tutorial/viz/#render-the-image",[12,0.649,97,1.565,106,4.118,112,1.631,123,2.448,244,5.109,364,4.029,459,3.452,466,3.677,479,2.749,519,2.715,658,3.379,771,4.505,943,5.318,946,6.374,1150,5.011,1195,4.931,1213,4.876,1250,6.474,1534,4.246,2708,4.931,2709,6.086,2716,5.848]],["title/archive/tutorial/viz/#store-the-image-on-disk",[943,2.357,1486,3.485,1691,2.82]],["text/archive/tutorial/viz/#store-the-image-on-disk",[12,0.664,97,1.557,392,3.593,479,2.734,481,4.995,483,2.965,690,6.189,943,5.167,1107,5.616,1202,4.066,1227,6.054,1486,5.441,1691,4.402,1707,8.903,2719,7.203,2720,7.203,2721,7.203,2722,7.203,2723,7.203,2724,7.203]],["title/archive/tutorial/viz/#generate-map-tiles",[32,2.249,55,1.942,1243,3.041]],["text/archive/tutorial/viz/#generate-map-tiles",[32,4.987,55,3.448,123,2.768,410,3.121,545,4.316,1243,6.745,1244,6.385,1245,5.005,2725,8.188,2726,8.188,2727,8.188]],["title/archive/tutorial/viz/#pixelization-and-pixel-aggregation",[100,2.87,1150,3.707]],["text/archive/tutorial/viz/#pixelization-and-pixel-aggregation",[55,3.407,84,2.538,97,1.749,98,3.392,100,5.034,364,4.502,410,3.084,633,4.084,943,4.134,1150,5.359,1235,6.023,1236,5.858,1445,4.672,1505,6.31,1771,4.535,1982,5.574]],["title/archive/tutorial/viz/#create-tile-name",[123,1.56,995,2.056,1243,3.041]],["text/archive/tutorial/viz/#create-tile-name",[12,0.629,32,3.665,112,1.371,123,2.542,175,4.182,457,2.174,771,4.677,995,3.351,1150,5.528,1194,6.072,1242,5.862,1243,6.032,1244,5.862,1245,4.595,1534,4.408,1569,3.04,1771,4.213,2690,6.072,2708,5.119,2716,7.39,2728,6.997]],["title/archive/tutorial/viz/#colorize-pixels_1",[1150,3.086,1195,3.75]],["text/archive/tutorial/viz/#colorize-pixels_1",[55,3.575,97,1.836,98,3.559,364,4.725,943,4.338,1195,5.783,1355,6.232,1771,4.759,2718,7.904]],["title/archive/tutorial/viz/#render-map-tiles",[32,2.249,1243,3.041,1253,3.485]],["text/archive/tutorial/viz/#render-map-tiles",[12,0.596,15,4.246,32,3.747,112,1.402,123,2.598,410,2.929,771,4.781,943,5.088,1150,5.197,1195,5.234,1243,6.114,1250,5.564,1251,7.49,1253,5.806,1534,4.507,1710,6.207,2708,5.234,2716,6.207,2728,7.153]],["title/archive/tutorial/viz/#store-map-tiles-on-disk",[32,1.935,1243,2.617,1486,2.998,1691,2.426]],["text/archive/tutorial/viz/#store-map-tiles-on-disk",[32,4.064,55,3.51,97,1.802,98,3.494,364,4.639,658,4.542,943,4.259,1107,6.501,1243,5.496,1691,5.096,1771,4.672]],["title/archive/tutorial/zeppelin/",[53,1.219,526,2.913,1233,2.119,1569,1.605]],["text/archive/tutorial/zeppelin/",[7,1.184,12,0.614,14,2.266,16,3.481,19,1.773,31,3.252,32,3.812,34,1.384,35,1.208,40,2.262,46,1.751,53,2.542,55,1.416,84,2.265,89,2.345,97,1.789,106,2.971,107,1.13,112,1.575,118,1.515,123,2.441,125,1.379,133,1.622,156,1.785,179,1.277,185,2.345,198,1.016,201,1.913,204,2.039,214,2.005,247,1.436,344,1.708,345,2.021,349,1.833,361,1.833,390,2.046,392,1.678,410,1.991,457,0.973,459,3.054,479,1.983,498,3.481,501,1.349,507,2.005,525,2.623,544,2.039,573,2.637,633,2.637,635,2.469,658,1.57,670,1.762,703,2.469,771,3.25,783,1.678,877,2.606,899,1.391,943,4.56,958,1.74,1000,2.77,1006,5.638,1010,1.872,1048,2.469,1107,4.074,1185,4.705,1202,5.039,1213,3.519,1216,2.317,1233,5.449,1311,1.515,1338,1.859,1418,2.581,1444,3.375,1475,3.947,1534,3.064,1570,1.751,1657,2.668,1681,5.033,1729,2.388,1771,1.885,1781,2.132,1791,2.345,1815,2.891,1821,2.469,1838,2.541,1839,2.317,1843,2.717,1934,2.828,2096,2.541,2098,2.436,2549,2.891,2708,3.558,2709,2.828,2729,4.302,2730,3.736,2731,3.736,2732,3.736,2733,3.736,2734,3.736,2735,4.863,2736,3.364,2737,3.131,2738,2.828,2739,3.364,2740,2.961,2741,5.816,2742,6.721,2743,5.224,2744,3.364,2745,3.364,2746,3.364,2747,3.364,2748,3.364,2749,3.364,2750,2.77,2751,3.364,2752,3.131,2753,2.961]],["title/archive/tutorial/zeppelin/#small-scale-without-geosparkviz",[1202,2.24,1216,2.734,1475,2.998,1681,2.767]],["text/archive/tutorial/zeppelin/#small-scale-without-geosparkviz",[7,1.184,12,0.622,16,3.917,19,1.995,31,2.946,34,1.556,40,2.546,84,1.844,89,2.153,97,1.691,107,1.691,112,1.603,123,2.645,125,2.409,133,2.834,156,3.119,179,2.232,185,4.098,201,3.343,345,3.533,361,3.204,390,1.934,410,2.241,457,1.7,459,4.192,479,2.232,498,3.917,507,3.504,573,2.42,670,3.079,771,3.658,783,2.933,1000,4.841,1006,5.175,1107,4.584,1185,4.263,1202,3.319,1213,3.96,1233,4.695,1418,4.511,1444,3.798,1475,4.441,1534,3.448,1681,4.098,1771,3.295,1838,4.441,2096,4.441,2708,4.004,2736,5.879,2737,5.472,2738,4.942,2739,5.879,2740,5.175,2741,3.96,2742,7.282,2743,7.823,2744,5.879]],["title/archive/tutorial/zeppelin/#large-scale-with-geosparkviz",[1202,2.604,1444,2.98,1681,3.216]],["text/archive/tutorial/zeppelin/#large-scale-with-geosparkviz",[7,0.898,12,0.585,16,3.951,31,2.963,32,3.836,34,1.393,40,2.568,53,1.822,84,1.86,89,2.171,97,1.701,106,4.474,112,1.715,123,2.66,198,1.791,390,1.945,392,2.958,479,2.251,498,3.951,525,4.624,544,3.594,573,2.441,633,2.993,703,4.352,771,3.689,943,5.244,958,3.067,1010,3.299,1048,4.352,1107,4.624,1185,4.811,1202,5.309,1233,4.715,1311,2.67,1338,3.276,1534,3.477,1570,3.086,1681,4.134,1821,4.352,1934,4.984,2098,4.293,2708,4.038,2709,4.984,2735,5.52,2741,3.994,2742,7.323,2745,5.93,2746,5.93,2747,5.93,2748,5.93,2749,5.93]],["title/archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo",[7,0.601,1233,2.119,1815,3.411,2741,2.673]],["text/archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo",[7,1.138,12,0.45,31,3.445,35,2.699,46,3.912,53,2.309,84,2.358,97,1.625,118,3.384,204,4.555,349,4.096,410,2.865,501,3.014,877,3.75,899,3.108,1233,5.267,1781,4.764,1839,5.178,2549,6.46,2741,6.913,2750,6.19,2751,7.517,2752,6.997,2753,6.617]],["title/asf/asf/",[2754,5.741]],["text/asf/asf/",[2,1.892,4,5.232,12,0.558,19,3.7,70,5.293,794,3.365,2129,4.75,2754,7.847,2755,7.28,2756,8.632,2757,10.369,2758,9.336]],["title/asf/asf/#apache-software-foundation",[19,1.565,2754,3.877,2755,3.597]],["text/asf/asf/#apache-software-foundation",[2,1.936,4,5.304,12,0.476,19,3.678,70,5.415,794,3.443,2129,4.86,2754,6.683,2755,6.2,2756,8.831,2757,10.511,2758,9.464]],["title/asf/disclaimer/",[2759,5.869]],["text/asf/disclaimer/",[2,1.674,4,5.575,12,0.518,18,4.795,19,3.216,51,2.343,70,6.455,409,4.204,465,3.827,517,3.536,613,5.048,794,4.104,922,6.27,1434,4.795,1595,5.556,2754,5.781,2755,5.364,2759,5.911,2760,7.64,2761,7.64,2762,7.64,2763,6.402,2764,6.055,2765,6.878,2766,6.217,2767,6.878,2768,4.854,2769,6.402,2770,9.618,2771,7.64,2772,6.402,2773,6.402,2774,7.64,2775,6.878,2776,7.64]],["title/asf/disclaimer/#disclaimer",[2759,5.869]],["text/asf/disclaimer/#disclaimer",[2,1.691,4,5.596,12,0.415,18,4.843,19,3.231,51,2.366,70,6.485,409,4.247,465,3.866,517,3.571,613,5.099,794,4.123,922,6.31,1434,4.843,1595,5.612,2754,5.84,2755,5.418,2760,7.717,2761,7.717,2762,7.717,2763,6.467,2764,6.116,2765,6.948,2766,6.28,2767,6.948,2768,4.903,2769,6.467,2770,9.679,2771,7.717,2772,6.467,2773,6.467,2774,7.717,2775,6.948,2776,7.717]],["title/community/contact/",[2768,4.819]],["text/community/contact/",[2,2.189,5,2.161,12,0.608,19,2.268,50,2.294,51,1.594,55,1.97,64,4.839,79,4.716,83,4.436,84,1.468,97,1.685,272,3.344,426,3.649,457,1.353,483,1.926,529,2.642,612,3.983,632,3.933,726,3.434,779,4.085,794,3.682,807,3.434,876,3.187,877,3.334,927,4.453,958,2.42,1012,2.86,1052,3.712,1120,4.503,1219,5.211,1350,5.257,1351,2.42,1476,3.388,1481,5.618,1498,4.716,1517,2.766,1586,3.649,1605,3.59,1795,5.087,1832,4.356,1892,5.128,1924,3.78,1925,4.119,1935,4.503,2686,4.356,2740,4.119,2768,4.716,2777,5.197,2778,5.197,2779,4.503,2780,3.649,2781,6.041,2782,5.197,2783,5.197,2784,7.796,2785,7.002,2786,4.839,2787,4.68,2788,5.197,2789,4.356,2790,5.197,2791,7.046,2792,5.618,2793,7,2794,6.041,2795,4.68,2796,5.197,2797,5.197,2798,5.197,2799,5.197,2800,5.197,2801,5.197,2802,5.197,2803,6.184,2804,5.197,2805,5.197,2806,4.68,2807,5.197,2808,5.197,2809,4.23,2810,3.649]],["title/community/contact/#community",[2768,4.819]],["text/community/contact/#community",[51,2.589,97,1.991,457,2.198,794,3.988,876,5.176,877,4.595,1012,4.645,1052,6.029,1350,4.059,1481,6.388,1605,5.831,1795,4.96,1925,6.69,2768,5.363,2777,8.441,2778,8.441,2779,7.313,2780,5.926,2781,8.325,2782,8.441,2783,8.441,2784,7.6,2785,6.258,2786,5.503]],["title/community/contact/#feedback",[2784,6.83]],["text/community/contact/#feedback",[2,2.106,19,2.936,272,6.182,1476,6.264,2686,8.053,2784,8.652]],["title/community/contact/#twitter",[2787,6.83]],["text/community/contact/#twitter",[19,3.011,2788,9.857]],["title/community/contact/#gitter-chat",[2789,5.126,2790,6.116]],["text/community/contact/#gitter-chat",[]],["title/community/contact/#mailing-list",[612,2.813,2791,4.977]],["text/community/contact/#mailing-list",[2,2.328,12,0.572,55,3.407,97,1.749,612,4.885,794,4.141,1498,5.71,1892,6.208,1935,7.786,2786,5.858,2791,8.644,2792,6.801]],["title/community/contact/#issue-tracker",[83,2.612,2793,5.767]],["text/community/contact/#issue-tracker",[]],["title/community/contact/#bug-reports",[1350,2.941,2785,4.534]],["text/community/contact/#bug-reports",[2,1.683,50,3.389,64,6.29,79,6.13,83,4.727,84,2.168,426,5.39,529,3.902,632,5.811,726,5.073,807,5.073,927,5.788,1219,5.39,1350,5.597,1351,3.575,1481,5.811,1498,4.878,1517,4.086,1795,5.669,1832,6.435,1892,5.304,2740,6.085,2785,7.153,2793,7.24,2794,6.248,2795,6.913,2796,7.678,2797,7.678,2798,7.678,2799,7.678,2800,7.678,2801,7.678,2802,7.678]],["title/community/contact/#feature-requests",[779,3.366,2803,4.368]],["text/community/contact/#feature-requests",[2,1.925,5,3.651,83,3.749,483,3.254,779,4.832,958,4.089,1120,7.607,1219,6.165,1586,6.165,1924,6.386,2792,6.645,2794,7.146,2803,7.481,2804,8.781,2805,8.781,2806,7.906,2807,8.781,2808,8.781,2809,7.146,2810,6.165]],["title/community/contributor/",[612,2.813,2811,4.041]],["text/community/contributor/",[2,2.076,4,3.555,5,0.526,7,0.172,12,0.52,15,0.629,18,1.446,19,2.752,28,0.6,47,3.187,48,1.302,51,0.973,54,0.678,55,1.203,62,1.675,64,2.069,66,0.758,68,1.783,69,0.447,70,4.647,77,1.029,80,2.004,82,1.095,83,1.355,84,1.441,85,0.608,89,0.417,91,0.763,92,1.023,95,0.743,96,1.268,97,0.885,111,0.193,123,0.966,126,0.518,132,0.647,135,1.123,174,1.076,175,1.611,198,1.739,199,0.984,205,1.992,222,1.171,228,1.46,232,0.678,239,1.293,247,0.486,272,2.042,321,2.108,324,0.612,339,0.767,344,0.578,345,1.246,349,0.62,373,0.847,378,0.887,386,1.226,389,0.92,409,0.696,410,1.751,419,0.903,423,0.546,425,0.743,454,1.095,457,1.454,464,0.662,483,3.547,499,0.612,501,0.456,507,0.678,508,0.62,517,1.811,526,0.835,529,0.643,544,0.69,545,0.6,551,1.591,555,0.775,557,1.783,601,1.464,604,0.887,606,0.978,607,0.957,610,0.793,612,2.092,637,1.969,651,1.882,654,0.813,656,1.059,658,0.968,686,1.06,726,1.522,770,0.793,771,1.291,794,3.651,807,0.835,808,1.268,872,1.002,876,0.775,877,0.568,880,0.62,883,1.961,899,0.858,901,0.743,907,1.368,908,0.735,927,0.758,958,0.589,961,0.678,972,1.138,995,3.041,1077,0.887,1081,1.875,1083,1.446,1084,1.645,1159,1.059,1201,0.957,1219,1.617,1245,1.268,1263,0.824,1285,1.591,1336,1.059,1337,2.375,1348,0.847,1353,1.464,1385,3.442,1388,1.059,1389,1.059,1394,1.002,1395,1.002,1398,1.059,1399,1.059,1403,0.873,1404,0.873,1411,1.095,1413,1.446,1434,3.201,1480,1.002,1481,2.961,1498,0.803,1503,1.703,1517,1.226,1542,0.793,1547,0.612,1560,6.212,1569,0.46,1605,0.873,1616,1.591,1635,2.961,1650,1.567,1657,0.903,1680,2.456,1724,1.002,1725,1.059,1728,0.957,1732,2.353,1744,1.059,1747,0.887,1750,0.824,1753,2.069,1755,0.919,1758,0.758,1759,0.813,1769,2.821,1775,0.835,1776,0.903,1781,1.315,1791,0.793,1795,1.865,1854,2.402,1888,2.308,1892,3.524,1903,0.86,1905,0.957,1924,1.675,1925,1.826,1927,1.059,1929,1.002,1934,0.957,2037,2.193,2140,1.059,2304,1.138,2560,2.456,2594,1.826,2667,1.059,2669,0.957,2676,1.059,2678,1.138,2691,1.826,2697,0.957,2750,0.937,2758,1.138,2764,1.002,2766,1.029,2767,1.138,2768,4.476,2769,1.059,2772,1.059,2779,1.996,2780,4.49,2781,3.185,2785,0.937,2786,4.169,2789,1.059,2791,1.029,2792,2.402,2795,1.138,2803,3.249,2809,4.545,2810,4.946,2811,7.113,2812,1.374,2813,6.444,2814,2.172,2815,1.875,2816,3.941,2817,2.172,2818,1.264,2819,1.264,2820,1.138,2821,1.264,2822,1.264,2823,1.264,2824,1.264,2825,1.264,2826,1.264,2827,1.138,2828,1.095,2829,1.264,2830,1.264,2831,1.138,2832,1.264,2833,1.264,2834,1.264,2835,1.264,2836,1.264,2837,1.264,2838,1.029,2839,1.029,2840,2.304,2841,2.304,2842,1.264,2843,1.264,2844,1.264,2845,1.138,2846,1.138,2847,1.264,2848,1.264,2849,1.264,2850,1.138,2851,1.095,2852,1.095,2853,1.264,2854,1.264,2855,3.941,2856,1.264,2857,1.264,2858,1.264,2859,1.264,2860,1.264,2861,1.264,2862,1.264,2863,1.264,2864,1.264,2865,1.264,2866,1.264,2867,1.264,2868,1.264,2869,1.264,2870,1.264,2871,3.702,2872,1.264,2873,1.264,2874,1.264,2875,1.264,2876,2.172,2877,1.264,2878,1.264,2879,2.961,2880,1.264,2881,1.996,2882,2.75,2883,1.264,2884,6.441,2885,1.264,2886,3.69,2887,1.264,2888,2.172,2889,1.095,2890,1.095,2891,2.993,2892,1.264,2893,3.69,2894,5.359,2895,1.264,2896,1.264,2897,1.029,2898,3.185,2899,2.304,2900,1.264,2901,1.875,2902,1.264,2903,1.374,2904,2.583,2905,1.374,2906,2.304,2907,3.71,2908,1.374,2909,1.374,2910,1.192,2911,2.304,2912,1.264,2913,1.264,2914,5.204,2915,1.264,2916,2.75,2917,6.713,2918,1.264,2919,1.264,2920,3.523,2921,1.138,2922,3.39,2923,1.095,2924,1.264,2925,2.402,2926,1.264,2927,1.095,2928,1.095,2929,1.138,2930,1.264,2931,1.138,2932,1.264,2933,1.264,2934,2.172,2935,1.264,2936,1.264,2937,2.304,2938,2.304,2939,3.523,2940,1.264,2941,1.826,2942,1.138,2943,1.264,2944,2.304,2945,3.69,2946,2.074,2947,2.858,2948,1.138,2949,1.264,2950,1.264,2951,2.304,2952,1.264,2953,3.913,2954,1.264,2955,1.264,2956,2.304,2957,1.264,2958,1.264,2959,1.264,2960,1.264,2961,1.264,2962,1.138,2963,1.095,2964,1.264,2965,1.264,2966,1.138,2967,2.172,2968,1.138,2969,1.264,2970,3.913,2971,1.264,2972,1.264,2973,1.264,2974,1.264,2975,1.264,2976,1.138,2977,1.264,2978,1.264,2979,1.264,2980,1.264,2981,6.006,2982,1.264,2983,2.304,2984,0.957,2985,1.138,2986,1.264,2987,1.138,2988,1.264,2989,1.264,2990,1.264,2991,1.264,2992,1.264,2993,1.264,2994,1.095,2995,1.264,2996,1.264,2997,1.264,2998,1.059,2999,1.264,3000,1.138,3001,1.264,3002,1.264,3003,1.138,3004,0.978,3005,2.074,3006,1.138,3007,1.138,3008,1.138,3009,2.074,3010,1.138,3011,1.059,3012,1.059,3013,1.095,3014,1.138,3015,1.996,3016,1.138,3017,1.264,3018,1.138,3019,1.138,3020,1.264,3021,1.138,3022,1.138]],["title/community/contributor/#committers",[2813,5.013]],["text/community/contributor/#committers",[2,2.361,48,5.203,51,2.822,880,4.515,1385,6.965,1744,7.713,2697,6.965,2786,6,2813,7.117,2814,8.679,2815,7.49]],["title/community/contributor/#project-management-committee-pmc",[794,1.719,1769,2.734,2811,2.913,2816,3.819]],["text/community/contributor/#project-management-committee-pmc",[2,1.529,19,2.132,82,6.045,457,1.816,607,5.28,794,2.72,907,4.142,995,2.8,1337,3.249,1388,5.847,1389,5.847,1394,5.53,1395,5.53,1398,5.847,1399,5.847,1403,4.819,1404,4.819,1560,6.173,1650,4.746,1929,5.53,2768,4.433,2811,5.997,2813,4.61,2814,6.579,2817,6.579,2818,6.977,2819,6.977,2820,6.282,2821,6.977,2822,6.977,2823,6.977,2824,6.977,2825,6.977,2826,6.977,2827,6.282,2828,6.045,2829,6.977,2830,6.977,2831,6.282,2832,6.977,2833,6.977,2834,6.977,2835,6.977,2836,6.977,2837,6.977,2838,5.678,2839,5.678,2840,9.076,2841,9.076,2842,6.977,2843,6.977,2844,6.977,2845,6.282,2846,6.282,2847,6.977,2848,6.977,2849,6.977,2850,6.282,2851,6.045,2852,6.045,2853,6.977,2854,6.977]],["title/community/contributor/#mentors",[2855,6.572]],["text/community/contributor/#mentors",[4,4.236,19,3.355,457,2.185,508,4.119,544,4.58,794,3.273,995,3.369,1337,3.909,1480,6.654,1750,5.472,1892,5.799,2140,7.035,2855,8.833,2856,8.395,2857,8.395,2858,8.395,2859,8.395,2860,8.395,2861,8.395,2862,8.395,2863,8.395,2864,8.395,2865,8.395,2866,8.395,2867,8.395,2868,8.395]],["title/community/contributor/#become-a-committer",[1635,4.629,2813,4.041]],["text/community/contributor/#become-a-committer",[2,2.133,5,2.311,7,0.757,12,0.419,19,2.744,54,2.982,83,2.373,96,2.219,111,0.849,135,2.708,222,3.955,228,3.58,324,2.689,339,3.369,344,2.54,349,2.726,419,3.968,457,1.447,483,3.329,499,2.689,517,2.572,555,3.407,612,2.556,726,3.672,794,3.794,876,3.407,883,3.452,907,3.298,958,2.588,1081,4.522,1263,3.622,1385,5.889,1413,3.487,1481,6.797,1547,2.689,1560,6.619,1650,3.779,1753,3.622,1791,3.487,1795,4.572,1892,6.204,2667,4.657,2678,5.003,2758,5.003,2766,4.522,2768,5.706,2779,4.814,2786,6.921,2789,4.657,2791,4.522,2811,7.35,2813,7.203,2855,4.814,2869,5.556,2870,5.556,2871,7.309,2872,5.556,2873,5.556,2874,5.556,2875,5.556,2876,5.24,2877,5.556,2878,5.556,2879,4.205,2880,5.556,2881,4.814,2882,6.742,2883,5.556,2884,3.487,2885,5.556,2886,5.24,2887,5.556,2888,5.24,2889,4.814,2890,4.814]],["title/community/contributor/#nominate-a-committer-or-pmc-member",[1560,2.998,2811,2.913,2813,2.913,2891,4.157]],["text/community/contributor/#nominate-a-committer-or-pmc-member",[92,4.062,174,3.102,198,2.488,205,5.742,321,3.452,457,2.382,483,3.391,557,7.079,1503,4.909,2780,6.423,2813,6.045,2884,6.736,2892,9.149]],["title/community/contributor/#call-for-a-vote",[92,2.715,2884,3.839]],["text/community/contributor/#call-for-a-vote",[4,4.236,70,5.148,84,2.371,89,2.768,175,3.455,198,2.283,321,3.168,483,3.111,557,6.495,658,3.528,1569,3.057,1854,4.432,1927,7.035,2813,5.547,2884,6.892,2893,10.355,2894,7.035,2895,8.395,2896,8.395,2897,6.832,2898,6.832,2899,8.395,2900,8.395,2901,6.832,2902,8.395]],["title/community/contributor/#close-a-vote",[205,3.839,2884,3.839]],["text/community/contributor/#close-a-vote",[15,3.858,77,6.312,198,3.021,199,3.287,205,4.868,321,3.664,345,4.196,483,3.599,637,6.575,794,3.024,995,3.113,2772,6.5,2785,5.75,2810,5.445,2811,6.416,2884,7.514,2894,6.5,2898,6.312,2904,6.312,2907,5.64,2912,7.756,2913,7.756,2914,9.041,2915,7.756]],["title/community/contributor/#send-a-notice-to-ipmc",[1888,3.726,2809,4.169,2916,4.439]],["text/community/contributor/#send-a-notice-to-ipmc",[2,1.983,12,0.487,18,4.359,19,2.765,85,3.339,91,2.299,272,4.469,321,3.798,457,1.808,483,3.73,601,4.412,899,2.586,995,3.632,1560,6.846,1888,6.581,1925,5.505,2779,6.017,2780,4.876,2809,7.364,2811,5.979,2884,6.693,2888,6.549,2891,6.549,2898,7.364,2907,5.051,2916,7.84,2917,8.369,2918,6.945,2919,6.945,2920,8.148,2921,6.253,2922,6.017,2923,6.017,2924,6.945,2925,5.256,2926,6.945,2927,6.017,2928,6.017,2929,6.253,2930,6.945,2931,6.253,2932,6.945,2933,6.945,2934,6.549]],["title/community/contributor/#send-the-invitation",[2780,4.294,2809,4.977]],["text/community/contributor/#send-the-invitation",[2,2.038,4,4.691,19,2.388,51,1.335,55,1.65,62,3.166,66,2.612,69,1.538,70,2.67,83,1.859,84,1.229,91,1.441,123,1.325,135,2.121,228,2.003,232,2.336,272,2.801,378,3.057,410,1.494,483,2.417,507,2.336,545,2.066,551,3.007,651,3.135,770,2.732,771,2.439,794,4.148,807,2.877,808,2.396,883,1.674,899,1.621,995,1.747,1201,3.295,1219,3.057,1245,3.588,1285,3.007,1348,2.918,1434,4.092,1517,2.317,1542,2.732,1560,7.076,1616,3.007,1657,3.109,1732,4.834,1747,3.057,1753,4.25,1769,4.044,1775,2.877,1903,2.961,1924,3.166,2594,5.168,2676,3.649,2750,3.228,2768,5.906,2769,3.649,2780,3.057,2781,6.362,2795,3.92,2810,4.578,2811,7.159,2813,2.877,2816,5.649,2817,4.105,2871,5.306,2876,4.105,2881,3.772,2882,3.772,2884,6.53,2886,7.371,2894,5.464,2906,4.354,2914,7.566,2917,8.431,2922,3.772,2934,4.105,2935,4.354,2936,4.354,2937,6.52,2938,6.52,2939,5.871,2940,4.354,2941,5.168,2942,3.92,2943,4.354,2944,6.52,2945,7.371,2946,5.871,2947,7.038,2948,3.92,2949,4.354,2950,4.354,2951,6.52,2952,4.354,2953,8.68,2954,4.354,2955,4.354,2956,6.52,2957,4.354,2958,4.354,2959,4.354,2960,4.354,2961,4.354,2962,3.92,2963,3.772,2964,4.354,2965,4.354,2966,3.92]],["title/community/contributor/#pmc-accept-and-icla-instruction",[68,3.411,1434,2.767,2811,2.913,2967,4.157]],["text/community/contributor/#pmc-accept-and-icla-instruction",[2,1.627,4,3.745,19,2.645,28,2.467,51,1.594,55,1.97,70,6.37,80,2.661,83,2.219,84,2.096,95,3.054,96,2.965,97,1.685,174,1.762,198,1.413,239,2.118,386,2.766,409,2.86,410,2.548,425,3.054,483,2.751,517,3.435,529,2.642,606,4.022,612,3.983,651,3.569,726,3.434,771,2.911,794,2.894,808,2.86,872,4.119,877,2.334,972,4.68,995,2.086,1077,3.649,1081,4.23,1337,2.42,1353,3.302,1385,3.933,1413,3.262,1498,3.302,1503,2.789,1517,2.766,1605,3.59,1635,5.618,1680,4.022,1732,3.853,1758,3.118,1795,3.054,1854,2.744,1924,3.78,1934,3.933,2304,4.68,2560,5.743,2669,3.933,2691,5.883,2768,3.302,2780,3.649,2781,4.23,2786,3.388,2792,5.618,2809,7.046,2810,6.079,2811,5.722,2813,5.722,2879,5.618,2893,4.901,2894,7.256,2907,3.78,2911,5.197,2920,6.683,2922,4.503,2968,4.68,2969,5.197,2970,9.445,2971,5.197,2972,5.197,2973,5.197,2974,5.197,2975,5.197,2976,4.68,2977,5.197,2978,5.197,2979,5.197,2980,5.197,2981,4.119,2982,5.197,2983,7.423,2984,3.933,2985,4.68,2986,5.197,2987,4.68,2988,5.197,2989,5.197,2990,5.197,2991,5.197,2992,5.197,2993,5.197,2994,4.503,2995,5.197,2996,5.197]],["title/community/contributor/#create-asf-account",[70,3.142,123,1.56,2981,4.061]],["text/community/contributor/#create-asf-account",[2,2.288,55,3.31,70,5.353,97,1.699,272,5.617,483,3.236,501,3.152,517,4.041,2037,7.211,2803,8.265,2811,5.769,2855,7.564,2945,8.233,2967,8.233,2981,8.274,2997,8.73]],["title/community/contributor/#pmc-annoucement",[2811,4.041,2998,5.126]],["text/community/contributor/#pmc-annoucement",[2,2.025,12,0.498,18,4.502,19,2.192,80,3.673,84,2.026,123,2.184,410,2.462,423,3.097,454,6.215,483,4.001,526,4.74,656,6.012,794,3.985,883,2.757,995,3.709,1084,5.123,1434,4.502,1481,5.429,1560,4.879,1635,5.429,1680,7.15,1728,5.429,1759,4.615,1769,5.731,1854,4.879,1892,4.955,1905,5.429,2037,4.955,2780,5.036,2786,4.676,2792,5.429,2810,5.036,2811,6.755,2813,7.134,2816,6.215,2879,5.429,2907,5.217,2917,5.429,2939,6.459,2981,5.686,2999,7.173,3000,6.459,3001,7.173]],["title/community/contributor/#committer-done-template",[1781,2.923,2560,3.964,2813,3.385]],["text/community/contributor/#committer-done-template",[2,1.923,12,0.543,19,2.917,47,6.144,48,3.01,62,3.872,64,5.72,68,4.12,70,5.38,80,2.726,84,1.504,97,1.036,126,2.18,132,2.726,174,1.805,175,3.108,198,1.448,239,2.169,247,2.047,389,3.016,410,1.827,457,1.966,464,2.789,483,3.252,601,3.383,604,3.738,610,3.342,654,3.426,686,3.473,794,2.076,901,3.128,908,3.097,961,2.857,995,3.031,1084,3.802,1159,4.462,1219,3.738,1336,4.462,1337,4.086,1353,3.383,1434,4.739,1503,2.857,1560,3.621,1616,3.678,1724,4.22,1725,4.462,1755,3.872,1776,3.802,1854,2.811,2767,4.794,2780,6.161,2803,3.802,2810,6.161,2811,5.798,2813,5.798,2815,4.333,2816,4.613,2894,4.462,2907,3.872,2917,5.715,2922,4.613,2925,5.715,2939,4.794,2981,8.721,3002,5.324,3003,4.794,3004,4.12,3005,6.799,3006,4.794,3007,4.794,3008,4.794,3009,6.799,3010,4.794,3011,4.462,3012,4.462,3013,4.613,3014,4.794,3015,6.542,3016,4.794,3017,5.324,3018,4.794,3019,4.794,3020,5.324,3021,4.794,3022,4.794]],["title/community/develop/",[1498,4.819]],["text/community/develop/",[2,2.112,4,2.124,12,0.662,25,1.948,40,1.641,43,1.611,57,1.948,79,2.674,84,1.189,87,2.525,111,0.643,112,0.691,176,1.817,204,2.297,339,2.553,349,5.053,364,2.109,410,1.445,412,4.09,414,2.525,423,3.307,457,1.994,467,3.426,499,2.038,510,3.99,517,1.948,518,2.124,651,2.024,722,2.642,741,3.426,768,2.223,794,3.9,823,4.413,826,2.672,885,4.697,899,2.852,908,2.449,921,2.065,924,4.039,927,2.525,944,2.821,958,3.975,1012,4.697,1014,2.642,1173,4.18,1260,4.406,1308,1.827,1337,4.796,1351,1.96,1412,2.38,1498,5.423,1547,2.038,1569,3.75,1597,2.821,1605,4.392,1639,1.96,1657,3.007,1659,2.908,1666,5.378,1729,3.153,1759,4.929,1761,2.744,1772,4.541,1773,4.623,1774,3.061,1776,3.007,1795,2.473,1801,3.528,1802,3.426,1807,4.039,1934,3.186,1936,4.811,2097,5.471,2669,4.811,2729,3.121,2889,3.647,2890,3.647,2946,3.79,3023,6.908,3024,4.574,3025,3.528,3026,3.97,3027,6.908,3028,4.574,3029,4.574,3030,4.574,3031,4.574,3032,5.679,3033,3.528,3034,4.574,3035,4.574,3036,3.97,3037,4.21,3038,4.21]],["title/community/develop/#develop-sedona",[2,1.341,1498,3.886]],["text/community/develop/#develop-sedona",[]],["title/community/develop/#scalajava-developers",[87,3.669,1498,3.886]],["text/community/develop/#scalajava-developers",[]],["title/community/develop/#ide",[1337,3.533]],["text/community/develop/#ide",[40,3.746,1666,6.746,1729,3.955,1801,8.053,1802,7.82,2729,7.124]],["title/community/develop/#import-the-project",[794,2.384,899,2.277]],["text/community/develop/#import-the-project",[]],["title/community/develop/#run-unit-tests",[349,2.514,823,2.951,1569,1.866]],["text/community/develop/#run-unit-tests",[]],["title/community/develop/#python-developers",[43,2.34,1498,3.886]],["text/community/develop/#python-developers",[423,4.228,958,4.561,1936,7.411]],["title/community/develop/#ide_1",[1337,3.533]],["text/community/develop/#ide_1",[1666,6.92,3037,9.857]],["title/community/develop/#import-the-project_1",[794,2.384,899,2.277]],["text/community/develop/#import-the-project_1",[]],["title/community/develop/#r-developers",[25,2.831,1498,3.886]],["text/community/develop/#r-developers",[423,4.228,958,4.561,1936,7.411]],["title/community/develop/#ide_2",[1337,3.533]],["text/community/develop/#ide_2",[1666,6.92,3038,9.857]],["title/community/develop/#import-the-project_2",[794,2.384,899,2.277]],["text/community/develop/#import-the-project_2",[]],["title/community/publication/",[66,4.551]],["text/community/publication/",[2,0.588,6,0.955,7,1.311,12,0.505,16,4.404,18,2.789,19,2.865,31,3.453,32,1.177,53,2.818,63,1.95,66,3.415,67,1.882,84,1.607,91,0.887,92,1.19,104,1.797,181,1.544,198,0.729,205,1.683,213,1.139,233,2.125,318,1.204,324,1.298,390,2.025,392,4.086,425,1.575,457,0.698,502,1.852,553,1.882,651,2.737,660,1.95,777,0.947,780,1.502,806,5.617,857,3.85,884,1.662,920,1.824,921,2.18,942,1.797,1010,1.343,1012,1.475,1185,3.883,1202,3.366,1352,3.029,1403,6.284,1404,6.284,1444,1.56,1516,2.247,1519,2.247,1529,1.725,1531,1.353,1557,5.248,1569,0.976,1570,2.083,1595,1.95,1628,2.247,1639,1.249,1681,1.683,1710,1.95,1750,1.748,1752,5.389,1769,4.909,1770,1.663,1815,3.439,1821,1.772,1838,4.504,1839,4.107,1928,2.029,1929,2.125,1936,2.029,2237,4.308,2602,2.247,2690,3.232,2738,5.011,2750,3.295,2827,2.414,2828,4.931,2838,7.404,2839,7.404,2845,4.001,2846,4.001,2851,3.85,2852,3.85,2941,2.125,2948,2.414,3036,2.528,3039,2.681,3040,2.681,3041,4.191,3042,4.191,3043,6.856,3044,8.773,3045,5.692,3046,5.962,3047,5.692,3048,6.244,3049,6.244,3050,7.546,3051,7.546,3052,5.962,3053,2.414,3054,2.681,3055,2.681,3056,2.681,3057,2.414,3058,2.681,3059,4.191,3060,2.681,3061,2.681,3062,2.681,3063,2.681,3064,2.681,3065,2.681,3066,2.681,3067,2.681,3068,2.681,3069,2.681,3070,2.681,3071,2.681,3072,5.367,3073,2.681,3074,4.001,3075,2.681,3076,2.681,3077,2.681,3078,2.681,3079,2.681,3080,2.681,3081,2.681,3082,2.681,3083,2.414,3084,2.681,3085,2.681,3086,2.681,3087,4.191,3088,6.36,3089,6.856,3090,2.681,3091,6.856,3092,4.77,3093,5.125,3094,4.444,3095,2.681,3096,2.681,3097,2.414,3098,4.444,3099,2.681,3100,4.444,3101,2.681,3102,2.681,3103,2.681,3104,2.681,3105,2.681,3106,2.681,3107,2.414,3108,2.681,3109,2.681,3110,2.681,3111,2.681,3112,2.681,3113,2.681,3114,5.692,3115,5.692,3116,2.681,3117,2.681,3118,2.681,3119,2.681,3120,2.681,3121,2.681,3122,2.681,3123,2.681]],["title/community/publication/#publication",[66,4.551]],["text/community/publication/#publication",[2,2.017,12,0.496,19,2.812,31,3.12,53,2.546,92,4.086,392,4.134,1531,4.644,1929,7.295,2827,8.287,2828,7.974,3039,9.204,3040,9.204]],["title/community/publication/#key-publications",[66,3.669,67,4.294]],["text/community/publication/#key-publications",[7,1.36,16,4.092,19,3.048,31,3.032,32,2.994,53,3.121,84,2.818,104,4.572,390,1.518,392,4.481,651,4.797,884,2.551,921,3.346,1185,4.895,1202,3.467,1752,5.551,1769,4.231,1838,4.64,1839,6.189,2237,7.551,2738,5.162,3041,6.432,3042,6.432,3043,8.644,3044,9.456,3045,9.978,3046,8.052,3047,9.978,3048,6.432,3049,6.432,3050,8.984,3051,8.984,3052,6.142]],["title/community/publication/#third-party-evaluation",[660,3.726,857,4.439,3053,4.613]],["text/community/publication/#third-party-evaluation",[7,0.905,53,2.724,91,2.199,181,3.827,198,1.807,205,4.169,213,2.821,318,2.382,390,2.333,392,3.947,457,1.729,502,4.589,553,4.664,777,2.347,780,3.721,857,5.756,884,2.484,1012,3.656,1516,5.568,1519,5.568,1529,4.274,1557,5.265,1569,2.419,1595,4.831,1639,3.094,1750,4.331,1770,4.121,1928,5.028,1936,5.028,2828,7.614,2941,5.265,2948,5.982,3036,6.264,3044,8.254,3054,6.643,3055,6.643,3056,6.643,3057,5.982,3058,6.643,3059,6.264,3060,6.643,3061,6.643,3062,6.643,3063,6.643,3064,6.643,3065,6.643,3066,6.643,3067,6.643,3068,6.643,3069,6.643,3070,6.643,3071,6.643,3072,6.264,3073,6.643,3074,7.913,3075,6.643,3076,6.643,3077,6.643,3078,6.643,3079,6.643,3080,6.643,3081,6.643,3082,6.643,3083,5.982,3084,6.643,3085,6.643]],["title/community/publication/#full-publications",[66,3.669,1839,3.793]],["text/community/publication/#full-publications",[]],["title/community/publication/#geospark-ecosystem",[53,1.692,3046,5.507]],["text/community/publication/#geospark-ecosystem",[7,0.89,18,5.453,19,1.995,31,3.529,53,2.701,233,5.175,390,2.174,392,2.933,425,3.837,806,5.823,920,4.441,1403,6.746,1404,6.746,1444,3.798,1570,4.072,1628,5.472,1681,4.098,1769,4.05,1815,5.052,1821,4.315,2602,5.472,2690,6.319,2738,6.576,2750,4.841,2838,7.947,2839,7.947,2845,7.823,2846,7.823,2851,5.657,2852,5.657,3041,6.157,3042,6.157,3043,5.657,3044,8.184,3086,6.53,3087,6.157,3088,5.657,3089,7.528,3090,6.53,3091,7.528,3092,5.472,3093,5.879,3094,8.689,3095,6.53,3096,6.53,3097,5.879,3098,8.689,3099,6.53,3100,8.689,3101,6.53,3102,6.53,3103,6.53]],["title/community/publication/#geosparkviz-visualization-system",[392,2.301,1185,2.514,1202,2.604]],["text/community/publication/#geosparkviz-visualization-system",[6,2.63,7,1.006,16,5.646,19,2.255,31,3.513,63,5.368,392,3.315,806,6.307,942,4.947,1185,4.617,1202,4.783,1403,6.501,1404,6.501,1557,5.85,1769,4.578,1815,5.711,1838,5.021,2738,5.586,2838,7.659,2839,7.659,2851,6.395,2852,6.395,3043,6.395,3044,7.887,3046,6.646,3072,8.874,3088,6.395,3089,8.154,3091,8.154,3092,6.186,3093,6.646,3104,7.381,3105,7.381,3106,7.381,3107,6.646,3108,7.381,3109,7.381,3110,7.381,3111,7.381,3112,7.381]],["title/community/publication/#geosparksim-traffic-simulator",[3050,4.613,3051,4.613,3052,4.613]],["text/community/publication/#geosparksim-traffic-simulator",[7,1.351,12,0.362,19,3.029,31,2.282,324,3.258,390,1.498,806,5.942,921,3.302,1010,3.372,1403,6.848,1404,6.848,1557,7.027,1710,4.895,1752,8.067,1769,4.175,1838,6.03,2750,4.99,2838,8.067,2839,8.067,3043,5.832,3044,7.43,3048,9.348,3049,9.348,3050,8.925,3051,8.925,3052,7.982,3059,6.347,3087,6.347,3088,7.681,3089,5.832,3091,5.832,3113,6.731,3114,9.913,3115,9.913,3116,6.731,3117,6.731,3118,6.731,3119,6.731,3120,6.731,3121,6.731,3122,6.731,3123,6.731]],["title/community/publication/#a-tutorial-about-geospatial-data-management-in-spark",[7,0.527,16,2.32,31,1.311,1352,2.059,1769,2.399]],["text/community/publication/#a-tutorial-about-geospatial-data-management-in-spark",[7,1.218,16,5.36,19,2.73,31,3.589,806,5.988,1352,5.633,1403,6.172,1404,6.172,1769,5.542,2838,7.271,2839,7.271,3088,7.741,3089,7.741,3091,7.741,3092,7.488,3093,8.045]],["title/community/publish/",[51,1.876,1529,3.935]],["text/community/publish/",[2,2.479,3,7.174,4,5.53,5,3.337,7,0.448,8,1.653,12,0.587,15,1.19,18,0.571,19,3.078,25,1.391,29,1.724,31,0.16,34,0.914,40,1.281,41,0.925,42,1.604,43,2.752,46,1.121,47,2.434,48,0.266,50,0.908,51,0.631,54,0.707,55,1.699,56,0.752,57,0.421,60,0.23,61,1.851,62,0.661,64,1.341,66,0.79,67,2.11,68,1.02,69,1.062,70,2.616,71,0.704,72,3.835,73,2.819,75,0.424,76,3.92,80,1.225,84,1.431,85,1.15,88,0.808,89,0.434,90,1.592,91,0.896,92,0.585,93,0.21,95,0.277,97,0.872,104,0.316,123,0.824,132,0.466,174,0.918,175,1.115,198,1.219,199,0.409,204,0.257,205,2.062,228,0.606,230,0.505,239,0.692,247,0.507,272,0.303,321,0.343,334,0.299,335,0.283,339,0.286,343,0.331,344,0.215,345,0.492,373,0.316,389,0.526,390,0.105,392,0.408,409,0.259,410,0.583,412,0.585,422,0.328,423,0.734,434,0.307,435,0.896,457,0.925,464,1.078,483,0.488,491,3.268,501,2.816,517,1.521,518,1.517,520,0.488,526,0.311,529,0.67,540,0.551,551,1.174,555,0.289,558,2.649,601,0.299,610,0.296,612,1.101,633,0.772,637,0.292,639,0.243,654,0.303,658,0.198,678,1.851,679,2.453,686,0.217,690,0.704,718,0.331,782,0.249,783,0.212,794,0.354,826,1.381,829,0.331,858,0.283,868,0.316,877,0.212,878,1.63,880,0.231,883,0.653,884,2.2,885,0.259,895,0.202,899,1.504,901,0.277,907,0.54,921,1.009,927,0.79,930,3.746,944,0.609,945,0.365,957,0.286,958,0.219,961,0.488,995,0.365,998,0.704,1000,0.349,1010,0.236,1013,0.336,1014,0.827,1049,0.424,1052,0.336,1061,0.395,1063,2.605,1083,1.067,1159,0.395,1173,0.496,1188,3.035,1207,0.74,1219,0.638,1229,2.008,1233,0.634,1259,2.171,1260,1.58,1285,0.628,1308,1.039,1332,0.349,1336,0.395,1337,1.654,1341,2.859,1350,0.437,1351,0.219,1352,0.251,1410,0.303,1412,0.745,1418,0.628,1434,0.827,1439,1.7,1444,0.274,1447,0.365,1480,0.373,1503,1.104,1507,0.999,1517,0.251,1529,3.015,1534,0.48,1549,0.551,1560,0.32,1569,0.871,1570,0.221,1577,0.283,1639,0.791,1650,0.32,1651,1.421,1680,0.704,1681,0.296,1697,0.357,1724,4.291,1729,1.352,1755,0.343,1758,1.625,1761,0.593,1766,1.496,1767,1.193,1770,0.292,1772,3.619,1773,2.186,1774,3.55,1776,0.336,1778,1.044,1782,1.26,1793,0.462,1795,0.534,1802,0.383,1807,1.08,1846,1.525,1847,0.674,1854,0.249,1856,0.609,1863,0.762,1867,0.365,1872,0.373,1892,0.325,1912,1.044,1920,0.857,1941,0.365,1957,1.174,1967,4.134,1971,0.316,1975,3.467,1979,0.336,1980,0.349,2016,0.299,2037,0.628,2560,0.365,2690,0.343,2691,0.373,2729,1.525,2737,0.395,2759,1.315,2764,1.347,2768,0.837,2773,0.395,2780,0.925,2785,0.674,2787,0.424,2789,0.395,2791,0.383,2792,0.688,2810,2.307,2811,1.123,2813,0.311,2815,0.383,2879,0.997,2884,4.796,2897,0.74,2898,1.947,2901,1.072,2904,1.383,2907,1.496,2910,1.603,2914,1.383,2916,0.408,2917,0.997,2921,0.424,2923,0.788,2925,1.557,2927,1.472,2928,1.472,2946,0.424,2963,0.788,2968,0.819,2976,0.424,2981,1.044,2998,0.395,3000,0.424,3003,4.875,3004,3.467,3005,0.819,3006,0.424,3007,0.424,3008,0.424,3009,0.819,3010,0.424,3011,0.395,3012,0.395,3013,0.788,3014,0.424,3015,4.544,3018,0.424,3019,0.424,3021,0.424,3022,0.424,3025,1.424,3032,0.349,3124,2.382,3125,0.857,3126,4.436,3127,0.471,3128,0.788,3129,0.788,3130,0.424,3131,0.424,3132,0.471,3133,0.857,3134,0.471,3135,0.471,3136,0.471,3137,0.471,3138,0.471,3139,0.471,3140,0.471,3141,0.471,3142,0.909,3143,0.909,3144,0.471,3145,1.186,3146,0.471,3147,0.871,3148,3.859,3149,1.847,3150,1.432,3151,3.266,3152,3.266,3153,2.943,3154,0.988,3155,1.603,3156,2.834,3157,1.603,3158,0.424,3159,0.909,3160,1.871,3161,2.543,3162,2.706,3163,0.471,3164,0.909,3165,1.318,3166,6.388,3167,1.852,3168,0.471,3169,0.471,3170,0.471,3171,0.471,3172,0.424,3173,0.471,3174,0.857,3175,0.857,3176,0.471,3177,0.857,3178,0.424,3179,0.471,3180,0.471,3181,0.471,3182,0.471,3183,0.471,3184,0.373,3185,1.699,3186,4.787,3187,0.988,3188,0.988,3189,0.988,3190,0.512,3191,0.512,3192,1.709,3193,2.6,3194,2.6,3195,2.235,3196,2.235,3197,0.857,3198,0.788,3199,0.471,3200,1.104,3201,0.471,3202,0.424,3203,0.471,3204,0.471,3205,0.471,3206,1.142,3207,4.06,3208,0.471,3209,0.819,3210,0.909,3211,3.077,3212,2.938,3213,1.318,3214,1.318,3215,3.756,3216,1.318,3217,3.552,3218,1.318,3219,1.318,3220,1.603,3221,1.186,3222,0.909,3223,3.077,3224,0.819,3225,0.819,3226,2.604,3227,2.604,3228,4.881,3229,3.81,3230,2.346,3231,2.346,3232,0.471,3233,0.857,3234,1.186,3235,1.94,3236,0.857,3237,1.243,3238,0.857,3239,1.243,3240,0.788,3241,0.857,3242,0.788,3243,2.073,3244,0.857,3245,0.857,3246,0.857,3247,2.834,3248,2.834,3249,0.857,3250,0.857,3251,0.857,3252,0.857,3253,0.857,3254,0.857,3255,0.471,3256,0.471,3257,0.471,3258,0.471,3259,0.471,3260,0.471,3261,0.471,3262,0.471,3263,0.471,3264,0.471,3265,0.471,3266,0.909,3267,0.471,3268,0.471,3269,0.471,3270,0.471,3271,2.708,3272,5.021,3273,2.393,3274,0.909,3275,0.471,3276,0.471,3277,0.909,3278,0.471,3279,0.471,3280,0.909,3281,0.471,3282,1.142,3283,0.512,3284,0.512,3285,0.512,3286,0.512,3287,2.6,3288,2.6,3289,3.859,3290,6.873,3291,5.549,3292,9.081,3293,7.92,3294,3.859,3295,5.549,3296,3.349,3297,4.885,3298,0.512,3299,0.988,3300,0.512,3301,0.512,3302,0.988,3303,0.988,3304,7.363,3305,0.512,3306,7.239,3307,7.239,3308,0.988,3309,1.94,3310,0.988,3311,1.94,3312,4.219,3313,4.869,3314,4.226,3315,1.699,3316,0.424,3317,0.471,3318,0.512,3319,0.512,3320,0.512,3321,0.512,3322,0.471,3323,0.424,3324,0.424,3325,0.471,3326,0.471,3327,0.471,3328,0.471,3329,0.909,3330,0.471,3331,0.471,3332,0.471,3333,0.471,3334,0.471,3335,0.471,3336,0.424]],["title/community/publish/#publish-sedona",[2,1.341,1529,3.935]],["text/community/publish/#publish-sedona",[2,2.42,5,3.996,1083,6.031,1529,6.182,2917,7.272]],["title/community/publish/#obtain-write-access-to-sedona-github-repo",[2,0.755,47,1.966,880,1.69,1052,2.461,1341,2.309,2815,2.804]],["text/community/publish/#obtain-write-access-to-sedona-github-repo",[2,2.013,19,3.287,47,6.356,64,6.634,97,1.383,175,2.925,239,2.895,247,2.732,464,3.723,601,4.515,610,4.46,654,4.572,901,4.176,1159,5.956,1219,4.989,1336,5.956,1337,4.739,1434,5.765,1560,4.834,1755,5.168,1776,5.076,1854,3.752,2780,7.145,2810,4.989,2813,4.696,2917,6.951,2925,5.378,2981,8.066,3005,8.27,3006,6.399,3007,6.399,3008,6.399,3009,8.27,3010,6.399,3011,5.956,3012,5.956,3013,6.157,3014,6.399,3018,6.399,3019,6.399,3021,6.399,3022,6.399]],["title/community/publish/#prepare-secret-gpg-key",[67,3.095,3124,3.494,3125,4.157,3126,3.411]],["text/community/publish/#prepare-secret-gpg-key",[55,3.131,62,6.006,67,7.087,72,6.25,80,4.229,84,2.332,198,2.246,457,2.15,483,3.061,529,4.198,612,3.799,1447,6.39,1503,4.431,1729,4.487,2016,5.247,3125,7.788,3126,7.811,3127,8.259,3128,7.155,3129,7.155,3130,7.436,3131,7.436,3132,8.259,3133,7.788,3134,8.259,3135,8.259,3136,8.259,3137,8.259]],["title/community/publish/#set-up-asf-username-for-maven",[70,2.372,389,1.545,686,1.779,1308,1.679,3003,3.483]],["text/community/publish/#set-up-asf-username-for-maven",[70,5.119,84,2.87,123,2.542,389,4.059,457,2.174,501,3.014,658,3.508,883,3.209,927,5.008,1229,8.809,1337,3.888,1534,4.408,1724,6.617,1846,6.19,3138,8.349,3139,8.349,3140,8.349,3141,8.349,3142,10.162,3143,10.162,3144,8.349]],["title/community/publish/#publish-snapshots",[1259,4.041,1529,3.935]],["text/community/publish/#publish-snapshots",[]],["title/community/publish/#publish-maven-snapshots",[1259,3.385,1308,2.224,1529,3.296]],["text/community/publish/#publish-maven-snapshots",[70,5.783,409,5.19,423,4.071,1259,6.232,1503,5.06,1529,6.068,1758,5.657,3145,8.491,3146,9.431]],["title/community/publish/#check-asf-copyright-in-all-file-headers",[70,2.372,464,2.026,501,1.396,540,2.345,3158,3.483]],["text/community/publish/#check-asf-copyright-in-all-file-headers",[2,2.15,4,4.409,5,3.634,12,0.471,19,2.67,46,3.086,50,2.907,51,2.02,55,3.313,56,3.758,57,4.044,60,3.209,61,5.096,70,6.405,73,7.27,84,1.86,89,2.881,91,2.18,93,2.941,174,2.233,175,2.711,198,1.791,457,2.275,501,3.771,517,3.048,518,3.323,540,3.994,633,2.993,1010,3.299,1549,3.994,1569,2.398,1761,4.293,1766,4.79,1767,6.135,1912,5.22,2785,4.883,2884,4.134,2910,9.85,3004,5.096,3159,8.739,3160,4.55,3161,5.096,3162,5.93,3163,6.586,3164,6.586,3165,9.807,3166,7.868,3167,5.93,3168,6.586,3169,6.586,3170,6.586,3171,6.586,3172,5.93]],["title/community/publish/#publish-releases",[5,2.543,1529,3.935]],["text/community/publish/#publish-releases",[]],["title/community/publish/#update-mkdocsyml",[1651,4.225,1782,4.534]],["text/community/publish/#update-mkdocsyml",[12,0.596,55,3.236,69,3.016,84,2.41,612,3.926,826,4.328,895,3.664,961,4.58,1083,5.357,1529,5.492,1639,3.975,1697,6.46,1758,5.12,1778,6.765,1782,6.328,3160,5.896,3173,8.535,3174,8.049,3175,8.049,3176,8.535,3177,8.049,3178,7.685,3179,8.535]],["title/community/publish/#update-sedona-python-r-and-zeppelin-versions",[2,0.755,25,1.595,43,1.318,69,1.218,1233,1.657,1651,2.38]],["text/community/publish/#update-sedona-python-r-and-zeppelin-versions",[2,1.936,3,5.478,4,5.304,25,4.087,43,3.379,69,3.714,91,2.923,457,2.299,501,3.188,517,4.087,518,4.456,3004,8.684,3180,8.831,3181,8.831,3182,8.831,3183,8.831]],["title/community/publish/#stage-the-release-candidate",[5,2.131,930,3.659,2904,4.169]],["text/community/publish/#stage-the-release-candidate",[5,4.047,930,6.95,1503,5.222,3145,8.762]],["title/community/publish/#upload-release-candidate",[5,2.131,1967,3.798,2904,4.169]],["text/community/publish/#upload-release-candidate",[2,2.643,3,7.567,4,6.12,5,0.881,12,0.55,19,3.644,61,1.64,66,1.272,67,3.365,70,1.3,73,5.191,76,7.718,97,0.413,123,1.459,132,1.866,174,2.174,175,0.872,199,0.657,228,0.975,247,0.815,434,1.382,435,2.479,457,0.949,501,3.098,517,0.981,518,1.07,529,1.077,558,4.237,633,0.963,718,1.488,783,0.952,899,2.607,1229,1.571,1260,2.736,1341,1.421,1529,1.364,1549,1.285,1569,0.772,1650,1.442,1729,1.973,1766,2.65,1767,1.488,1772,3.423,1773,3.486,1774,3.486,1912,1.68,1920,3.436,1967,1.571,1975,5.799,2879,1.604,2884,1.33,2904,1.725,3004,1.64,3015,7.436,3126,2.82,3133,1.999,3160,2.517,3161,3.709,3162,1.908,3166,7.448,3167,4.316,3186,3.901,3197,1.999,3198,1.836,3199,2.12,3200,1.776,3201,2.12,3202,1.908,3203,2.12,3204,2.12,3205,2.12,3206,3.157,3207,6.493,3208,2.12,3209,3.281,3210,3.644,3211,6.066,3212,5.092,3213,4.793,3214,4.793,3215,7.964,3216,4.793,3217,7.532,3218,4.793,3219,4.793,3220,4.52,3221,4.316,3222,3.644,3223,6.066,3224,3.281,3225,3.281,3226,4.93,3227,4.93,3228,3.644,3229,6.602,3230,4.153,3231,4.153]],["title/community/publish/#vote-in-dev-sedonaapacheorg",[2879,3.877,2884,3.216,2923,4.439]],["text/community/publish/#vote-in-dev-sedonaapacheorg",[2,1.996,3,5.945,4,5.175,5,4.14,12,0.621,15,3.13,19,2.59,46,1.946,47,2.369,48,2.347,50,2.778,51,1.93,55,2.385,56,2.369,64,2.707,66,2.491,67,2.915,68,3.213,71,3.213,72,3.143,80,3.222,84,2.394,85,3.653,91,1.374,92,2.793,175,2.59,198,2.477,199,1.288,205,3.949,228,1.91,230,2.305,239,1.692,345,2.247,410,1.425,423,1.792,435,2.824,464,2.175,520,2.228,551,4.346,612,1.91,637,2.576,639,2.142,679,4.346,690,3.213,826,3.192,883,1.596,907,2.465,921,2.037,930,5.426,995,1.667,998,3.213,1063,3.291,1207,3.379,1285,2.868,1341,4.217,1412,2.347,1434,2.606,1439,5.32,1529,2.672,1807,3.998,1847,3.079,1867,3.213,2759,4.869,2764,4.987,2768,2.638,2773,3.48,2810,5.334,2811,4.158,2884,7.136,2897,3.379,2898,3.379,2901,5.121,2907,4.576,2914,5.121,2916,3.598,2925,3.143,2927,5.451,2928,5.451,2963,3.598,3004,5.878,3025,5.273,3126,3.213,3186,7.412,3192,2.966,3200,3.48,3207,3.598,3232,4.152,3233,3.916,3234,3.739,3235,5.933,3236,3.916,3237,3.916,3238,3.916,3239,3.916,3240,3.598,3241,3.916,3242,3.598,3243,6.582,3244,3.916,3245,3.916,3246,3.916,3247,5.933,3248,5.933,3249,3.916,3250,3.916,3251,3.916,3252,3.916,3253,3.916,3254,3.916,3255,4.152]],["title/community/publish/#vote-in-general-incubatorapacheorg",[55,1.942,2884,3.216,2921,4.613]],["text/community/publish/#vote-in-general-incubatorapacheorg",[2,2.194,3,6.355,4,5.434,5,4.261,12,0.604,15,1.76,18,2.22,19,2.871,31,1.199,46,2.605,47,2.018,50,2.454,51,1.705,55,2.604,56,2.018,64,2.306,66,2.122,67,2.484,68,2.737,71,2.737,72,2.677,80,3.517,84,2.199,85,3.303,91,1.84,92,1.57,175,2.288,198,2.301,199,1.097,205,2.22,228,1.627,230,1.964,321,2.098,344,1.617,345,1.914,390,0.787,392,1.589,410,1.214,423,1.527,517,1.637,520,1.898,551,3.841,555,2.169,612,2.557,679,3.841,690,2.737,826,2.886,883,1.36,907,2.1,921,1.735,995,1.42,998,2.737,1063,2.804,1207,2.879,1285,2.444,1352,1.883,1439,4.311,1444,2.058,1480,2.804,1529,2.276,1570,1.658,1680,4.302,1681,2.22,1758,2.122,1807,3.532,1847,2.622,1892,2.444,2037,2.444,2560,2.737,2690,2.573,2691,2.804,2759,4.302,2764,4.407,2768,3.532,2785,2.622,2787,3.185,2789,2.965,2791,2.879,2792,4.208,2810,5.941,2811,3.674,2884,6.982,2897,2.879,2898,6.887,2901,2.879,2907,4.995,2914,4.525,2925,4.208,2927,4.817,2928,4.817,2963,3.065,2998,2.965,3004,6.548,3013,3.065,3025,4.659,3126,2.737,3186,6.887,3192,2.526,3200,2.965,3207,3.065,3233,3.336,3234,3.185,3235,6.477,3236,3.336,3237,5.243,3238,3.336,3239,5.243,3240,3.065,3241,3.336,3242,3.065,3243,5.951,3244,3.336,3245,3.336,3246,3.336,3247,8.471,3248,8.471,3249,3.336,3250,3.336,3251,3.336,3252,3.336,3253,3.336,3254,3.336,3256,3.537,3257,3.537,3258,3.537,3259,3.537,3260,3.537,3261,3.537,3262,3.537,3263,3.537,3264,3.537,3265,3.537]],["title/community/publish/#failed-vote",[1418,4.225,2884,3.839]],["text/community/publish/#failed-vote",[3,4.962,4,4.036,5,4.116,12,0.533,55,3.033,84,2.259,97,1.927,483,3.669,517,3.702,518,4.036,612,3.68,633,3.635,826,3.361,858,4.799,930,5.713,945,6.189,1063,6.34,1308,3.472,1341,5.361,1418,5.526,1503,4.292,1782,5.93,1863,6.704,2729,5.93,2884,5.021,2904,6.51,3160,5.526,3174,7.543,3175,7.543,3185,7.999,3266,7.999,3267,7.999,3268,7.999,3269,7.999]],["title/community/publish/#release-the-package",[5,2.543,1793,3.109]],["text/community/publish/#release-the-package",[2,2.587,3,7.274,4,6.034,5,1.352,12,0.568,15,1.617,19,3.306,25,3.437,29,6.806,43,1.244,46,2.437,47,1.855,54,1.745,61,2.516,68,2.516,73,3.855,84,0.918,89,1.072,97,1.012,123,0.99,174,1.102,198,0.884,205,3.264,272,2.092,392,1.46,423,1.404,464,1.703,501,3.283,526,2.149,558,5.34,794,1.268,829,2.283,883,1.25,899,3.225,921,1.595,930,3.714,958,1.514,1014,2.041,1083,3.264,1233,2.5,1260,1.563,1341,3.485,1529,4.778,1766,2.365,1767,2.283,1793,1.653,1795,3.055,1872,2.577,1912,2.577,1967,2.41,1971,2.179,1975,7.036,1979,2.322,1980,2.41,2729,2.41,2737,2.725,2925,2.461,3000,2.928,3004,2.516,3015,8.185,3145,2.928,3161,5.028,3162,2.928,3166,8.188,3167,2.928,3186,2.646,3197,3.066,3198,2.817,3206,2.817,3207,7.504,3211,6.433,3212,5.4,3220,3.066,3223,6.433,3226,6.433,3227,6.433,3229,8.167,3230,6.433,3231,6.433,3234,2.928,3270,3.251,3271,9.094,3272,7.798,3273,8.661,3274,5.2,3275,3.251,3276,3.251,3277,5.2,3278,3.251,3279,3.251,3280,5.2,3281,3.251,3282,2.817]],["title/community/publish/#publish-the-doc-website",[88,3.142,1529,3.296,1758,3.073]],["text/community/publish/#publish-the-doc-website",[2,2.063,4,3.724,5,3.069,47,5.37,54,3.961,61,8.017,69,3.856,70,6.353,91,2.443,95,4.337,97,1.437,339,4.476,464,3.867,921,3.621,930,6.721,944,4.947,961,3.961,1173,4.027,1260,3.549,1534,3.897,1569,2.688,1651,7.157,1758,5.646,1778,5.85,1782,5.472,1846,8.089,1957,6.501,1967,5.472,2923,6.395,2968,8.474,3177,6.96,3315,10.361,3316,6.646,3317,7.381]],["title/community/publish/#javadoc-and-scaladoc",[90,4.732,878,4.848]],["text/community/publish/#javadoc-and-scaladoc",[]],["title/community/publish/#compile-r-html-docs",[25,2.04,88,2.703,1061,3.694,1639,2.053]],["text/community/publish/#compile-r-html-docs",[2,2.076,12,0.59,25,3.449,55,2.826,123,2.269,198,2.027,335,4.471,517,3.449,518,3.761,944,4.995,1014,4.678,1049,6.711,1173,4.067,1260,3.584,1507,6.434,1569,2.714,1729,4.284,1770,4.623,2879,5.64,2976,6.711,3128,6.457,3129,6.457,3160,5.149,3161,5.767,3212,6.887,3312,6.711,3322,7.453,3323,6.711,3324,6.711,3325,7.453,3326,7.453,3327,7.453,3328,7.453,3329,9.469,3330,7.453,3331,7.453,3332,7.453,3333,7.453,3334,7.453,3335,7.453,3336,6.711]],["title/community/rule/",[1546,6.572]],["text/community/rule/",[2,2.15,12,0.553,19,2.297,35,1.074,40,2.063,47,3.761,50,1.466,51,3.009,54,1.783,59,1.333,61,4.093,62,2.416,63,2.416,70,2.037,84,2.318,89,1.744,91,1.1,93,1.483,97,1.03,98,1.254,104,2.227,111,0.508,123,1.61,174,1.126,198,1.793,228,3.032,264,2.295,321,1.254,349,4.5,390,0.739,409,3.628,410,1.14,423,2.284,425,1.952,457,1.716,464,2.771,483,1.231,501,1.199,517,3.051,540,2.015,544,1.813,558,2.991,601,2.111,654,3.404,693,2.26,718,2.332,777,1.174,783,1.492,785,2.514,794,1.295,816,2.332,823,3.797,826,4.001,829,2.332,876,5.362,879,2.085,884,1.242,899,1.237,921,1.63,926,2.416,927,1.993,958,3.501,995,1.333,1012,1.828,1013,2.373,1260,1.597,1332,4.887,1337,1.547,1338,1.653,1341,3.546,1350,2.544,1351,3.07,1353,2.111,1357,6.313,1413,2.085,1430,4.628,1434,2.085,1466,2.784,1469,1.641,1484,2.784,1498,4.188,1530,2.037,1560,2.26,1595,2.416,1639,2.464,1651,2.295,1657,2.373,1735,3.174,1758,1.993,1759,2.137,1775,2.195,1781,1.896,1782,2.463,1791,2.085,1795,3.108,1800,1.993,1808,2.085,1858,2.784,1861,4.004,1924,3.847,1935,2.878,2556,2.227,2750,3.922,2754,4.989,2755,2.332,2763,2.784,2764,2.633,2766,6.117,2768,4.188,2769,2.784,2773,2.784,2781,2.704,2785,2.463,2786,6.693,2792,2.514,2794,6.117,2803,5.369,2813,4.967,2820,2.991,2871,2.704,2881,2.878,2901,2.704,2907,3.847,2929,2.991,2941,2.633,2942,2.991,2966,2.991,2985,2.991,2987,2.991,2994,5.711,2998,2.784,3016,2.991,3025,2.784,3083,2.991,3192,4.708,3242,2.878,3316,4.763,3337,6.879,3338,3.322,3339,2.991,3340,2.878,3341,7.088,3342,3.322,3343,3.322,3344,3.322,3345,3.322,3346,3.322,3347,3.322,3348,6.216,3349,3.322,3350,3.322,3351,3.322,3352,3.322,3353,3.322,3354,3.322,3355,2.784,3356,3.322,3357,3.322,3358,3.322,3359,2.991,3360,3.322,3361,3.322,3362,3.322,3363,3.322,3364,3.322]],["title/community/rule/#contributing-to-apache-sedona",[2,1.123,19,1.565,2786,3.34]],["text/community/rule/#contributing-to-apache-sedona",[2,2.304,12,0.476,47,5.039,51,2.708,457,2.299,517,4.087,794,3.443,876,5.415,1341,5.919,1353,5.611,1595,6.422,1924,6.422,2786,7.316,2803,6.307,3337,7.401,3338,8.831,3339,7.952]],["title/community/rule/#pick-annouce-a-task-using-jira",[12,0.186,97,0.671,1861,2.608,2794,2.804,2942,3.102,2998,2.888]],["text/community/rule/#pick-annouce-a-task-using-jira",[54,4.851,123,2.752,483,3.351,899,3.366,927,5.423,1434,5.674,1861,6.842,2786,5.893,2792,6.842,2794,8.674,3340,7.832,3341,10.688,3342,9.04]],["title/community/rule/#develop-a-code-contribution",[51,1.571,1498,3.255,2786,3.34]],["text/community/rule/#develop-a-code-contribution",[2,2.063,19,2.255,35,2.387,40,3.669,51,3.177,59,2.963,93,3.296,228,4.329,349,5.654,410,2.533,423,3.186,457,1.922,501,2.665,540,4.476,816,5.182,823,5.969,829,5.182,876,5.771,926,5.368,1012,4.062,1013,5.272,1338,3.672,1350,4.525,1351,4.383,1413,4.633,1469,3.646,1530,4.526,1651,5.099,1735,4.428,1759,4.749,2750,6.977,2786,6.135,2941,5.85,3016,6.646,3192,5.272,3343,7.381,3344,7.381]],["title/community/rule/#develop-a-document-contribution",[876,3.142,1498,3.255,2786,3.34]],["text/community/rule/#develop-a-document-contribution",[2,1.86,50,3.747,51,2.603,84,2.397,89,2.798,91,2.81,111,1.297,409,4.671,423,3.664,457,2.21,558,4.798,718,5.959,785,6.424,826,3.567,876,6.294,879,5.327,1260,4.081,1639,4.78,1735,5.092,1758,5.092,1782,6.293,1791,5.327,1808,5.327,2763,7.114,2786,5.533]],["title/community/rule/#make-a-pull-request",[517,2.371,2803,3.659,3337,4.294]],["text/community/rule/#make-a-pull-request",[2,1.7,12,0.418,47,5.541,63,5.64,84,2.994,97,1.51,123,2.361,198,2.109,464,5.087,544,4.232,783,3.483,921,3.805,995,3.113,1337,3.612,1341,5.198,1351,3.612,1357,7.509,1498,4.927,1781,4.425,1795,5.705,1935,6.719,2773,6.5,2785,5.75,2786,5.056,2794,6.312,2803,5.539,2907,5.64,2966,6.983,3192,5.539,3337,6.5,3341,7.314,3345,7.756,3346,7.756,3347,7.756]],["title/community/rule/#review-a-pull-request",[2766,4.169,2803,3.659,3337,4.294]],["text/community/rule/#review-a-pull-request",[2,1.867,61,6.592,62,4.611,98,2.393,104,4.249,174,2.15,198,2.317,228,2.916,321,2.393,349,3.11,390,1.411,409,4.688,517,2.934,558,3.584,601,4.028,654,5.481,693,4.312,777,2.24,826,4.745,884,2.371,958,4.791,1332,7.133,1357,6.191,1430,6.755,1466,5.313,1560,4.312,1657,4.528,1775,4.19,1800,3.803,1858,5.313,1924,4.611,2764,5.025,2766,7.83,2768,5.413,2769,5.313,2813,6.798,2901,5.16,2907,4.611,2985,5.709,3025,5.313,3083,5.709,3192,4.528,3242,5.493,3316,7.671,3337,5.313,3348,8.034,3349,6.34,3350,6.34,3351,6.34,3352,6.34,3353,6.34,3354,6.34,3355,5.313,3356,6.34,3357,6.34,3358,6.34,3359,5.709,3360,6.34,3361,6.34,3362,6.34]],["title/community/rule/#code-of-conduct",[51,1.876,2994,5.299]],["text/community/rule/#code-of-conduct",[12,0.455,19,3.126,51,3.137,70,5.176,84,2.384,89,2.783,264,5.831,425,4.96,1484,7.074,2556,5.657,2754,8.33,2755,5.926,2768,5.363,2781,6.87,2820,7.6,2871,6.87,2881,7.313,2929,7.6,2987,7.6,2994,8.863,3348,7.96,3363,8.441,3364,8.441]],["title/community/vote/",[5,2.543,2884,3.839]],["text/community/vote/",[2,2.4,4,4.088,5,2.749,12,0.578,14,4.366,18,1.4,19,3.226,31,1.291,46,2.334,50,3.178,51,2.208,54,1.197,59,0.895,64,3.838,67,5.398,69,2.717,71,3.854,72,6.831,73,1.654,77,1.816,84,1.075,92,0.99,93,1.7,96,1.521,97,0.97,132,2.55,169,1.207,174,1.291,176,2.15,198,1.354,211,1.4,228,2.291,232,1.197,239,2.029,247,0.858,255,1.919,345,1.207,349,1.095,361,1.095,386,1.187,401,1.25,409,1.228,457,1.721,458,1.311,464,4.028,501,2.599,507,2.043,516,1.868,518,1.126,529,1.134,545,1.059,558,1.261,637,1.384,679,2.63,686,1.026,722,1.4,784,1.435,794,1.484,826,2.093,858,1.338,877,1.71,895,0.958,899,0.831,907,1.324,921,1.095,922,2.482,995,0.895,998,2.946,1014,2.39,1083,1.4,1231,1.338,1260,1.831,1308,1.653,1319,1.654,1337,1.773,1403,1.541,1404,1.541,1409,1.593,1418,1.541,1439,2.39,1503,2.673,1534,1.178,1569,1.814,1577,1.338,1638,1.474,1639,2.319,1640,1.768,1657,1.593,1728,1.688,1729,3.164,1735,1.338,1750,3.247,1760,1.87,1761,3.838,1770,1.384,1772,2.719,1773,1.622,1774,1.622,1789,1.654,1846,3.693,1847,1.654,1888,2.769,1936,1.688,1941,1.726,1957,1.541,1979,3.557,2016,1.417,2237,1.688,2562,1.688,2669,1.688,2755,2.673,2759,2.946,2768,1.417,2772,3.191,2810,1.566,2831,5.952,2850,2.009,2884,4.149,2897,1.816,2917,1.688,2925,1.688,3126,8.304,3128,4.315,3129,3.299,3130,2.009,3131,2.009,3147,1.474,3160,5.311,3161,2.946,3186,1.816,3192,3.557,3198,6.237,3200,1.87,3202,3.428,3209,2.009,3211,6.237,3212,1.622,3223,5.727,3224,3.428,3225,3.428,3226,3.299,3227,3.299,3230,3.299,3231,3.299,3240,1.933,3243,3.299,3272,6.923,3365,3.59,3366,2.231,3367,2.231,3368,2.231,3369,2.231,3370,2.009,3371,8.101,3372,9.977,3373,5.888,3374,2.231,3375,2.231,3376,2.231,3377,2.231,3378,2.231,3379,2.231,3380,7.689,3381,3.428,3382,2.231,3383,2.231,3384,2.231,3385,4.981,3386,2.231,3387,3.808,3388,3.808,3389,3.808,3390,3.808,3391,2.231,3392,3.808,3393,3.808,3394,3.808,3395,3.808,3396,3.428,3397,3.808,3398,3.808,3399,3.808,3400,3.808,3401,3.808,3402,3.808,3403,3.808,3404,3.808,3405,3.808,3406,3.808,3407,3.808,3408,3.808,3409,3.808,3410,3.808,3411,3.808,3412,3.808,3413,3.808,3414,2.231,3415,3.808,3416,3.808,3417,2.231,3418,2.231,3419,1.87]],["title/community/vote/#vote-a-sedona-release",[2,1.123,5,2.131,2884,3.216]],["text/community/vote/#vote-a-sedona-release",[2,2.261,5,4.289,46,3.426,50,4.129,51,2.868,71,5.657,72,5.533,198,1.988,211,4.588,228,3.363,349,3.587,386,3.891,409,4.023,457,1.903,679,6.461,794,2.85,858,4.386,877,4.201,907,4.34,995,2.934,998,5.657,1014,5.87,1083,4.588,1439,4.588,1503,3.923,1639,3.404,1847,5.42,1888,5.317,2237,5.533,2759,5.657,2768,4.645,2810,5.133,2884,6.824,2897,5.949,2925,5.533,3160,5.05,3192,5.221,3200,6.127,3243,8.104,3365,6.894,3366,7.311,3367,7.311,3368,7.311]],["title/community/vote/#install-necessary-software",[1729,2.109,1735,3.073,2755,3.597]],["text/community/vote/#install-necessary-software",[12,0.616,19,2.192,69,3.948,93,4.126,97,1.396,232,3.849,401,4.018,464,5.656,518,3.62,529,3.646,545,3.404,1308,4.011,1409,5.123,1439,4.502,1503,3.849,1638,4.74,1640,5.686,1729,4.598,1761,7.038,1770,4.449,1772,5.123,1789,5.318,1936,5.429,1979,7.301,2755,5.036,3126,7.15,3128,8.856,3129,8.006,3130,6.459,3131,6.459,3365,6.764,3369,7.173,3370,6.459]],["title/community/vote/#run-the-verify-script",[64,3.34,1569,1.866,3160,3.539]],["text/community/vote/#run-the-verify-script",[2,2.449,4,4.532,5,1.183,12,0.549,14,4.94,18,1.786,19,3.367,31,1.583,46,1.334,50,2.62,51,1.82,54,1.527,59,1.142,64,3.869,67,6.04,69,1.006,71,3.612,72,7.244,73,2.11,77,2.316,84,1.318,92,1.263,96,1.864,97,0.909,132,3.039,169,1.54,174,1.583,176,2.562,198,1.269,228,1.309,239,2.418,247,1.094,255,2.238,345,1.54,361,1.396,457,1.788,458,1.672,501,2.142,507,2.505,516,2.29,558,1.609,637,1.765,722,1.786,784,1.831,794,1.109,826,2.494,895,1.222,899,1.059,921,1.396,922,3.043,998,2.202,1231,1.707,1260,1.368,1319,2.11,1337,2.174,1403,1.966,1404,1.966,1418,1.966,1503,1.527,1534,1.503,1569,1.7,1639,2.174,1657,2.032,1728,2.154,1729,1.171,1750,3.869,1760,2.385,1772,2.032,1773,2.07,1774,2.07,1846,4.4,1941,2.202,1957,1.966,2016,1.808,2562,2.154,2669,2.154,2772,3.912,2831,6.826,2850,2.562,2917,2.154,3126,8.588,3147,1.88,3160,5.237,3161,3.612,3186,2.316,3192,2.032,3198,7.057,3202,4.203,3209,2.562,3211,7.057,3212,2.07,3223,6.568,3224,4.203,3225,4.203,3226,4.044,3227,4.044,3230,4.044,3231,4.044,3240,2.466,3272,7.747,3371,8.982,3372,10.618,3373,6.867,3374,2.846,3375,2.846,3376,2.846,3377,2.846,3378,2.846,3379,2.846,3380,8.604,3381,4.203,3382,2.846,3383,2.846,3384,2.846,3385,5.935,3386,2.846,3387,4.668,3388,4.668,3389,4.668,3390,4.668,3391,2.846,3392,4.668,3393,4.668,3394,4.668,3395,4.668,3396,4.203,3397,4.668,3398,4.668,3399,4.668,3400,4.668,3401,4.668,3402,4.668,3403,4.668,3404,4.668,3405,4.668,3406,4.668,3407,4.668,3408,4.668,3409,4.668,3410,4.668,3411,4.668,3412,4.668,3413,4.668,3414,2.846,3415,4.668,3416,4.668,3417,2.846]],["title/community/vote/#check-files-manually",[464,2.684,501,1.849,1577,3.073]],["text/community/vote/#check-files-manually",[46,4.236,50,3.991,51,2.772,69,3.194,228,4.158,464,5.583,501,3.847,686,4.158,1260,4.347,1888,6.574,2759,6.995,3192,6.457,3418,9.04,3419,7.576]],["title/setup/cluster/",[7,0.601,389,1.761,686,2.028,1722,4.408]],["text/setup/cluster/",[2,1.534,7,1.549,12,0.521,19,2.138,31,2.373,46,3.279,59,2.809,60,2.334,63,3.484,84,1.353,176,2.068,200,2.57,201,2.453,251,2.592,266,4.446,318,1.897,321,3.12,339,2.905,344,3.2,389,3.632,390,1.558,401,2.683,404,3.082,408,3.695,410,2.402,412,5.32,423,2.068,453,5.547,456,2.471,457,1.247,501,2.526,517,2.217,518,2.417,526,3.165,556,1.775,586,2.733,612,2.203,637,2.971,686,3.219,693,4.76,726,3.165,770,3.006,777,1.693,784,3.082,830,2.164,831,3.484,883,2.69,908,2.787,917,3.484,921,2.35,958,2.231,1010,2.4,1048,4.624,1077,3.363,1083,3.006,1173,2.614,1196,3.484,1260,3.365,1444,4.071,1509,2.319,1517,2.55,1543,4.437,1547,2.319,1570,4.261,1592,3.082,1607,3.551,1638,3.165,1659,3.309,1698,4.913,1723,4.313,1724,5.547,1725,5.865,1726,6.301,1727,4.313,1728,3.625,1729,1.972,1730,4.313,1731,3.484,1732,3.551,1733,4.313,1734,3.258,1735,2.874,1736,4.313,1737,4.313,1738,6.301,1739,4.313,1740,6.301,1741,6.301,1742,4.313,1743,4.313,1744,5.865,1745,5.415,1746,3.797,1747,3.363,1748,6.301,1749,4.313,1750,3.123,1751,4.313,1752,3.898,1753,3.123,1754,4.313,1755,3.484,1756,2.937,1757,4.014,1758,2.874,1759,3.082,1760,4.014,1761,3.123,1762,4.313,1763,4.313]],["title/setup/cluster/#set-up-your-apache-spark-cluster",[7,0.527,19,1.182,389,1.545,686,1.779,1570,1.812]],["text/setup/cluster/#set-up-your-apache-spark-cluster",[7,1.5,12,0.514,46,5.156,1010,4.784,1083,5.993]],["title/setup/cluster/#preliminary",[1723,6.83]],["text/setup/cluster/#preliminary",[2,1.655,7,1.468,12,0.287,31,2.56,59,3.031,60,2.594,63,3.872,84,1.504,176,2.298,200,2.857,201,2.726,251,2.881,266,4.797,318,2.046,321,3.311,339,3.229,389,3.505,390,1.681,401,2.982,404,3.426,408,3.987,410,2.592,412,5.646,423,2.298,453,5.985,456,2.747,457,1.386,501,2.726,517,2.464,518,2.687,556,1.973,586,3.038,612,2.449,637,3.302,686,2.449,693,5.136,726,3.518,770,3.342,777,1.881,784,3.426,830,2.405,831,3.872,883,2.903,908,3.097,917,3.872,921,2.612,958,2.479,1048,4.99,1077,3.738,1196,3.872,1444,4.393,1509,2.577,1517,2.834,1543,4.708,1547,2.577,1570,2.495,1592,3.426,1607,3.947,1638,3.518,1659,3.678,1698,5.302,1724,5.985,1725,6.328,1726,6.799,1727,4.794,1728,4.029,1729,2.191,1730,4.794,1731,3.872,1732,3.947,1733,4.794,1734,3.621,1735,3.194,1736,4.794,1737,4.794,1738,6.799,1739,4.794,1740,6.799,1741,6.799,1742,4.794,1743,4.794,1744,6.328,1745,5.843,1746,4.22,1747,3.738,1748,6.799,1749,4.794,1750,3.471,1751,4.794,1752,4.333,1753,3.471,1754,4.794,1755,3.872,1756,3.265,1757,4.462,1758,3.194]],["title/setup/cluster/#start-your-cluster",[344,2.796,1570,2.866]],["text/setup/cluster/#start-your-cluster",[7,1.463,19,2.795,344,4.183,526,6.045,1173,4.992,1260,5.161,1570,4.287,1759,5.886,1760,7.667,1761,5.964,1762,8.237,1763,8.237]],["title/setup/compile/",[51,1.876,1639,2.848]],["text/setup/compile/",[2,2.068,3,1.693,7,0.912,8,3.115,12,0.542,19,1.378,34,0.435,40,3.112,41,1.916,42,3.863,43,3.853,45,2.111,46,2.701,47,1.557,48,1.543,50,3.272,51,2.59,52,1.713,54,2.42,55,1.035,56,1.557,57,4.088,58,1.985,59,1.81,62,3.28,63,1.985,69,1.594,76,2.111,80,2.309,84,1.628,87,2.705,88,1.673,89,0.9,91,0.903,93,2.574,97,0.531,98,1.03,111,0.417,126,1.117,132,1.397,174,0.925,175,1.856,181,1.572,228,1.255,236,1.916,306,1.33,334,1.734,349,4.493,364,1.367,389,1.801,401,1.529,410,0.937,414,1.637,457,1.174,491,3.177,501,1.628,517,2.667,518,2.908,545,1.295,610,1.713,633,1.24,686,2.651,794,1.758,823,3.856,866,1.803,876,3.534,884,1.021,895,1.936,908,1.587,930,1.949,942,3.863,964,1.557,993,1.587,1063,2.163,1173,3.145,1188,1.185,1216,1.693,1219,3.166,1231,1.637,1260,3.838,1308,2.502,1311,1.106,1352,2.4,1409,1.949,1412,4.993,1547,1.321,1549,1.655,1569,2.699,1630,2.287,1636,1.803,1638,1.803,1639,4.69,1660,1.43,1697,2.065,1729,4.532,1758,4.789,1759,1.756,1761,1.779,1766,1.985,1768,2.163,1769,1.693,1770,3.575,1771,4.028,1772,6.033,1773,6.143,1774,5.805,1775,1.803,1776,1.949,1777,2.457,1778,7.982,1779,2.457,1780,6.027,1781,1.557,1782,2.023,1786,1.502,1793,2.292,1847,2.023,1952,1.779,1957,1.885,1970,3.489,1972,5.294,1973,2.287,1974,6.327,1979,3.221,2119,3.343,2580,2.163,2729,3.343,2879,4.362,3032,2.023,3097,2.457,3147,2.98,3155,2.573,3156,4.253,3157,5.435,3184,2.163,3212,4.191,3215,2.287,3217,2.163,3221,2.457,3314,6.312,3323,6.674,3324,2.457,3370,2.457,3419,2.287,3420,2.729,3421,4.116,3422,6.027,3423,4.51,3424,2.729,3425,2.163,3426,2.287,3427,3.779,3428,2.729,3429,2.457,3430,2.457,3431,2.729,3432,2.729,3433,2.729,3434,6.694,3435,2.729,3436,2.729,3437,2.364,3438,2.729,3439,2.729,3440,2.729,3441,2.729]],["title/setup/compile/#compile-sedona-source-code",[2,0.966,50,1.946,51,1.352,1639,2.053]],["text/setup/compile/#compile-sedona-source-code",[]],["title/setup/compile/#compile-scala-java-source-code",[12,0.186,40,1.343,50,1.521,51,1.057,93,1.539,1639,1.605]],["text/setup/compile/#compile-scala-java-source-code",[2,2.004,7,0.783,19,2.433,34,0.916,40,2.24,42,3.85,43,2.198,51,1.762,52,3.605,56,3.278,57,4.231,59,2.306,84,2.249,87,4.778,91,1.901,93,2.565,98,2.168,175,2.364,236,4.033,349,5.087,364,2.878,401,3.218,457,1.495,491,2.726,501,2.074,517,4.231,518,4.613,610,3.605,633,2.611,686,2.642,794,3.105,823,5.687,866,3.796,884,2.148,1173,3.134,1188,2.493,1216,3.563,1219,5.592,1260,3.829,1308,3.968,1409,4.103,1412,6.34,1547,2.78,1549,3.483,1636,3.796,1638,3.796,1639,4.996,1660,3.009,1729,3.763,1761,3.745,1768,4.553,1769,3.563,1770,4.94,1771,4.981,1772,6.529,1773,6.648,1774,5.792,1776,4.103,1793,4.048,1979,4.103,3147,3.796,3370,5.172,3420,5.744,3421,5.688,3422,5.172]],["title/setup/compile/#compile-with-different-targets",[545,2.432,964,2.923,1639,2.386]],["text/setup/compile/#compile-with-different-targets",[2,1.626,7,1.415,8,6.521,12,0.559,40,4.049,41,5.207,42,6.327,43,2.838,57,4.369,126,3.037,228,3.412,414,4.449,491,3.52,1729,4.499,1771,3.743,1772,7.807,1773,7.949,1774,7.949,1775,4.901,2580,5.879,3147,4.901,3155,6.994,3156,8.902,3157,9.792,3421,5.297,3422,8.5,3423,9.44]],["title/setup/compile/#download-staged-jars",[46,2.401,57,2.371,930,3.659]],["text/setup/compile/#download-staged-jars",[2,1.97,46,4.211,47,5.128,54,4.822,55,3.407,57,4.915,58,6.536,62,6.536,63,6.536,80,4.602,97,1.749,1063,7.123,1759,5.782,1847,6.663,3032,6.663,3424,8.987]],["title/setup/compile/#run-python-test",[43,1.96,349,2.514,1569,1.866]],["text/setup/compile/#run-python-test",[2,1.769,3,3.631,40,2.282,43,4.428,45,4.53,51,1.795,69,2.851,76,4.53,93,2.614,111,0.895,132,2.998,174,1.985,175,2.41,181,3.373,306,2.853,334,3.719,349,3.959,389,3.223,457,1.524,491,3.83,686,3.712,1231,3.512,1260,2.815,1311,2.373,1569,2.938,1630,4.906,1639,2.726,1729,4.706,1786,3.222,1952,3.816,1957,4.044,1970,6.244,1972,4.181,1973,4.906,1974,8.553,1979,4.181,2119,5.982,2879,6.988,3184,4.64,3212,6.715,3215,4.906,3217,4.64,3221,5.271,3314,9.385,3323,9.399,3324,5.271,3422,5.271,3425,4.64,3426,4.906,3427,6.763,3428,5.854,3429,5.271,3430,5.271,3431,5.854,3432,5.854,3433,5.854,3434,9.952,3435,5.854,3436,5.854,3437,5.072,3438,5.854,3439,5.854]],["title/setup/compile/#compile-the-documentation",[876,3.75,1639,2.848]],["text/setup/compile/#compile-the-documentation",[46,4.419,54,5.06,59,3.785,62,6.858,80,4.829,942,7.322,1758,6.554]],["title/setup/compile/#mkdocs-website",[1758,3.669,1778,4.848]],["text/setup/compile/#mkdocs-website",[2,1.926,12,0.473,48,3.755,50,4.348,51,3.02,84,1.876,88,4.074,89,2.19,349,3.259,410,2.28,501,2.398,876,5.389,895,3.773,908,3.864,942,4.452,993,3.864,1173,4.795,1260,4.736,1352,4.678,1569,3.2,1639,4.093,1697,5.028,1729,4.487,1758,5.908,1766,4.831,1770,4.121,1771,3.352,1777,5.982,1778,9.531,1779,5.982,1780,9.437,1781,3.791,1782,4.925,1972,7.486,2729,6.516,3097,5.982,3419,5.568,3440,6.643,3441,6.643]],["title/setup/databricks/",[1729,2.517,3442,5.126]],["text/setup/databricks/",[2,2.45,3,3.576,4,3.571,5,0.899,6,1.321,7,1.303,12,0.644,19,1.486,21,4.832,22,3.959,24,4.193,27,0.851,28,1.026,34,0.919,35,2.447,37,1.713,39,1.873,40,0.843,43,3.192,46,1.737,51,1.136,55,1.405,57,3.696,69,2.292,83,1.582,91,0.715,97,1.473,107,0.721,123,2.304,126,1.992,174,0.733,175,0.89,176,0.933,198,0.588,279,1.179,303,0.761,336,2.416,344,1.694,372,1.812,386,2.589,401,3.23,410,2.226,434,2.416,457,0.965,458,2.177,491,2.737,501,0.78,502,1.493,505,3.415,519,1.643,526,4.287,541,1.033,545,1.026,558,2.75,639,1.115,651,1.039,656,1.812,675,2.805,677,1.544,686,2.238,727,1.812,766,1.759,875,3.211,883,1.425,890,2.04,891,2.548,892,2.416,893,2.51,894,2.748,899,1.38,900,1.946,901,1.27,902,2.805,903,2.223,908,4.403,920,3.922,944,3.864,994,1.518,998,2.868,1000,1.603,1012,1.19,1014,1.357,1081,3.016,1082,1.713,1188,2.112,1216,1.341,1231,1.297,1308,1.609,1311,0.876,1349,2.299,1410,1.391,1445,1.124,1469,1.068,1509,2.791,1517,1.15,1520,2.272,1530,2.983,1531,1.091,1569,1.35,1570,3.909,1577,1.297,1587,2.56,1594,3.959,1639,2.685,1666,2.602,1729,3.857,1786,4.394,1841,1.673,1854,1.957,1861,1.636,1903,1.47,1905,1.636,1916,1.812,1957,1.493,1971,2.484,2129,1.19,2133,1.812,2186,3.106,2325,1.946,2740,1.713,2741,2.247,2763,1.812,2765,1.946,2768,1.373,2871,3.959,2920,1.946,2931,1.946,2962,1.946,2984,1.636,3026,2.038,3033,5.437,3057,1.946,3147,1.428,3160,6.163,3161,1.673,3206,3.211,3215,1.812,3217,4.57,3282,4.215,3290,5.437,3296,3.495,3297,4.57,3312,4.38,3336,4.38,3381,1.946,3442,6.692,3443,2.162,3444,2.162,3445,5.841,3446,7.511,3447,3.495,3448,2.162,3449,2.162,3450,2.162,3451,2.162,3452,2.162,3453,2.162,3454,2.349,3455,2.349,3456,7.495,3457,2.349,3458,2.349,3459,2.349,3460,2.349,3461,4.587,3462,1.544,3463,1.673,3464,1.812,3465,1.603,3466,1.518,3467,4.587,3468,2.162,3469,2.162,3470,3.016,3471,1.713,3472,2.162,3473,3.495,3474,3.706,3475,6.487,3476,2.162,3477,3.706,3478,2.162,3479,2.162,3480,2.162,3481,3.706,3482,3.706,3483,2.162,3484,2.162,3485,4.865,3486,3.706,3487,2.162,3488,2.162,3489,2.162,3490,3.706,3491,4.38,3492,3.337,3493,2.162,3494,2.162,3495,2.162]],["title/setup/databricks/#community-edition-free-tier",[2768,2.8,3033,3.694,3443,4.408,3444,4.408]],["text/setup/databricks/#community-edition-free-tier",[2,2.352,43,3.5,57,4.234,97,1.781,401,5.125,410,3.14,651,4.399,1729,3.765,2984,6.923,3282,7.926,3442,8.995,3445,8.237]],["title/setup/databricks/#advanced-editions",[920,4.16,3033,5.126]],["text/setup/databricks/#advanced-editions",[2,2.383,4,3.323,5,2.739,7,1.554,12,0.614,21,7.323,22,7.111,24,4.79,34,1.05,35,2.825,37,5.22,39,5.706,55,3.313,69,3.465,83,3.731,97,1.282,279,3.594,336,4.293,372,5.52,434,4.293,458,3.87,545,3.126,558,3.723,656,5.52,675,4.984,677,4.704,766,5.36,994,4.624,1012,3.625,1082,5.22,1530,5.358,1594,7.981,1639,4.864,1666,4.624,1841,5.096,1916,5.52,2931,5.93,2962,5.93,3147,4.352,3442,5.52,3446,8.83,3447,6.21,3448,6.586,3449,6.586,3450,6.586,3451,6.586,3452,6.586,3453,6.586]],["title/setup/databricks/#install-sedona-from-the-web-ui",[2,0.966,1729,1.814,3282,3.819,3445,3.969]],["text/setup/databricks/#install-sedona-from-the-web-ui",[2,1.55,4,3.569,6,2.521,7,0.964,12,0.614,19,2.161,43,3.504,97,1.377,107,1.377,126,2.897,174,2.398,175,2.911,176,3.054,198,1.924,303,2.489,457,1.842,491,3.357,519,2.389,558,3.999,686,4.212,891,3.706,892,4.611,893,3.649,894,5.244,908,5.327,920,4.811,1081,5.757,1308,3.07,1469,3.494,1509,3.424,1570,3.315,1587,4.886,1729,3.769,1786,5.04,1854,3.735,1971,4.741,2740,5.607,2765,6.369,3033,5.928,3160,4.886,3446,8.245,3447,6.67,3456,6.129,3461,8.635,3462,5.052,3463,5.473,3464,5.928,3465,5.244,3466,4.966,3467,8.635]],["title/setup/databricks/#initialise",[3468,7.586]],["text/setup/databricks/#initialise",[2,2.156,7,1.341,12,0.661,19,2.419,34,1.262,35,2.56,40,3.086,43,3.029,51,2.428,344,3.619,519,2.673,875,6.859,899,3.661,900,7.128,901,4.651,902,7.443,903,5.9,1531,3.995,1569,2.883,1570,3.71,1729,3.258,1786,4.357,3469,7.917,3470,8.004]],["title/setup/databricks/#pure-sql-environment",[34,0.817,1231,3.073,3471,4.061]],["text/setup/databricks/#pure-sql-environment",[2,2.454,34,1.399,35,3.387,97,1.709,386,4.673,410,3.014,457,2.286,727,7.359,875,7.607,1216,5.446,1570,4.115,1729,3.614,1786,4.832,2129,4.832,3160,6.065,3456,7.607,3472,8.781,3473,8.28]],["title/setup/databricks/#install-sedona-via-init-script-for-dbrs-73",[2,0.62,526,1.869,1729,1.164,3160,1.954,3446,2.546,3456,2.45,3467,2.667,3496,3.073]],["text/setup/databricks/#install-sedona-via-init-script-for-dbrs-73",[2,2.346,3,5.081,4,1.962,6,1.386,7,0.994,12,0.641,19,1.188,24,4.352,28,1.845,35,1.935,43,3.134,46,2.804,51,1.192,57,4.323,91,1.287,123,2.962,126,2.45,344,1.778,386,2.07,401,3.352,410,1.335,434,2.535,458,2.285,491,3.462,501,1.404,502,2.686,505,5.122,526,4.82,541,1.857,558,2.198,639,2.006,883,2.3,890,3.293,891,3.135,892,2.535,893,3.087,894,2.883,908,5.145,920,4.07,944,5.49,1000,2.883,1188,3.166,1308,1.688,1311,1.576,1349,3.712,1445,2.021,1509,1.882,1517,2.07,1520,2.384,1530,2.384,1569,1.416,1570,4.377,1577,2.333,1729,3.372,1786,4.015,1854,2.053,1903,2.645,1957,2.686,1971,2.606,2186,5.015,2325,3.501,2741,3.629,2763,3.259,2871,4.87,3026,3.667,3033,5.015,3057,3.501,3160,6.722,3161,3.009,3206,5.185,3215,3.259,3217,6.493,3290,7.725,3296,5.643,3297,6.493,3312,6.568,3336,6.568,3381,3.501,3445,5.388,3456,8.092,3461,3.667,3473,3.667,3474,5.984,3475,8.845,3476,3.888,3477,5.984,3478,3.888,3479,3.888,3480,3.888,3481,5.984,3482,5.984,3483,3.888,3484,3.888,3485,7.295,3486,5.984,3487,3.888,3488,3.888,3489,3.888,3490,5.984,3491,6.568,3492,5.388,3493,3.888,3494,3.888,3495,3.888]],["title/setup/install-python/",[2,1.123,43,1.96,1729,2.109]],["text/setup/install-python/",[2,2.466,3,2.135,4,1.737,5,2.263,7,1.267,12,0.655,19,2.343,35,2.182,40,2.121,42,2.307,43,4.233,46,1.613,47,3.105,48,1.946,49,2.274,50,2.978,51,1.055,56,1.964,57,3.123,69,1.923,76,2.663,83,1.47,84,0.972,92,2.996,97,1.728,111,1.031,126,1.409,175,1.417,198,0.936,223,2.135,226,2.307,228,1.583,232,1.847,239,1.402,247,1.323,303,1.211,392,1.546,398,1.677,410,2.316,423,1.486,453,2.728,457,1.416,485,2.378,487,1.47,491,3.964,501,1.242,508,1.689,516,1.689,517,1.593,518,1.737,555,2.11,632,2.605,640,2.378,651,1.655,658,2.835,673,1.817,782,1.817,794,1.342,806,2.307,808,1.894,889,1.911,890,3.713,891,1.803,893,1.776,896,3.264,898,1.911,944,2.307,958,1.603,968,2.135,1082,2.728,1225,2.605,1231,3.264,1260,3.687,1290,1.946,1291,3.134,1308,1.494,1309,1.847,1311,2.206,1413,2.16,1469,2.688,1533,2.416,1569,2.457,1577,2.065,1639,1.603,1729,4.183,1735,2.065,1753,2.244,1759,3.501,1761,3.547,1767,2.416,1771,3.405,1786,2.994,1793,2.765,1921,2.503,1922,3.246,1936,2.605,1952,4.998,1957,4.661,1970,5.221,1971,3.647,1972,3.886,1979,2.458,1980,2.552,2697,2.605,2741,3.299,3032,2.552,3124,2.728,3147,2.274,3184,4.312,3192,2.458,3212,2.503,3217,2.728,3297,2.728,3421,2.458,3425,5.348,3426,4.56,3427,4.56,3429,3.099,3430,3.099,3462,2.458,3463,2.663,3464,2.884,3465,2.552,3466,2.416,3497,4.899,3498,3.886,3499,2.801,3500,3.74,3501,3.74,3502,3.442,3503,3.442,3504,3.442,3505,2.503,3506,3.442,3507,2.982,3508,4.428,3509,3.442]],["title/setup/install-python/#install-sedona",[2,1.341,1729,2.517]],["text/setup/install-python/#install-sedona",[2,2.592,7,1.451,12,0.573,19,2.757,43,4.225,47,3.945,48,3.908,49,4.569,50,3.983,51,2.12,69,2.443,83,2.952,97,1.346,126,2.831,223,4.288,232,3.71,457,1.8,632,5.232,640,4.776,658,2.905,673,3.65,782,3.65,1082,5.48,1225,5.232,1311,2.803,1569,2.518,1729,4.747,1759,4.448,1767,4.854,1771,3.489,1922,6.52,1936,5.232,1952,5.881,1971,6.047,1972,6.444,1979,4.938,1980,5.126,3212,5.028,3502,6.914]],["title/setup/install-python/#prepare-python-adapter-jar",[43,1.687,57,2.04,491,2.092,3124,3.494]],["text/setup/install-python/#prepare-python-adapter-jar",[2,2.184,3,3.202,4,2.605,5,3.072,7,1.176,12,0.665,19,1.577,35,2.388,40,2.88,42,3.46,43,3.966,46,2.419,47,2.946,50,2.279,56,2.946,57,2.389,69,1.824,84,1.458,92,3.83,97,1.939,111,0.789,175,2.125,198,1.404,228,2.375,303,1.816,398,2.515,410,1.772,423,2.228,453,4.092,457,1.344,485,3.566,487,2.204,491,4.094,501,1.864,516,2.533,517,2.389,518,2.605,555,3.165,651,2.482,658,3.104,794,2.013,806,3.46,808,2.841,889,2.866,890,4.747,891,2.704,893,2.663,896,4.431,898,2.866,944,3.46,958,2.404,968,3.202,1260,4.148,1290,2.918,1291,4.255,1308,2.241,1309,2.77,1413,3.24,1469,3.649,1533,3.624,1639,2.404,1759,3.321,1786,2.841,1921,3.754,1957,5.103,1970,5.716,2697,3.907,3147,3.411,3192,3.687,3217,4.092,3297,4.092,3421,3.687,3462,3.687,3463,3.994,3464,4.326,3465,3.827,3466,3.624,3503,5.162,3504,5.162,3505,3.754,3506,5.162,3507,4.473]],["title/setup/install-python/#setup-environment-variables",[1231,3.073,3184,4.061,3508,4.169]],["text/setup/install-python/#setup-environment-variables",[2,1.735,12,0.576,43,4.094,57,3.664,76,6.125,111,1.503,247,3.043,410,2.717,491,3.757,1231,4.749,1260,3.806,1569,3.581,1577,4.749,1761,6.411,1771,4.963,1957,5.469,1970,6.125,2741,4.801,3184,6.275,3425,8.48,3426,8.242,3427,8.242,3429,7.128,3430,7.128,3497,7.128,3498,5.654,3508,6.443,3509,7.917]],["title/setup/install-r/",[2,1.123,25,2.371,1729,2.109]],["text/setup/install-r/",[2,2.253,4,2.941,7,1.379,12,0.656,19,2.458,25,3.129,27,1.092,28,1.316,31,2.535,34,0.929,35,1.885,55,1.051,60,2.227,65,3.02,91,0.918,96,1.108,97,1.135,102,0.527,107,0.54,108,0.475,111,0.424,123,2.058,126,1.136,132,1.42,135,1.351,136,1.399,156,1.325,163,1.598,174,0.94,175,1.142,198,1.243,211,1.741,214,2.452,239,2.375,247,1.757,302,3.128,306,1.351,318,2.026,324,1.342,334,1.762,340,1.941,390,2.288,410,0.952,423,1.197,425,1.63,456,1.431,457,1.19,459,1.962,464,1.453,478,1.453,479,1.993,502,3.157,510,1.741,517,1.284,529,1.41,556,1.694,573,1.028,604,1.947,607,2.099,612,2.681,613,1.833,651,1.334,658,3.381,675,2.099,691,1.833,726,1.833,777,0.98,779,1.526,808,1.526,821,1.741,830,2.065,856,2.099,869,1.859,884,1.037,888,3.02,893,1.431,895,1.962,899,1.702,921,2.86,944,1.859,958,2.128,1010,1.389,1183,2.54,1185,1.361,1188,1.204,1189,2.017,1199,2.713,1230,2.324,1245,1.526,1264,4.598,1311,1.853,1359,2.056,1446,5.965,1501,5.746,1509,1.342,1531,2.941,1534,1.464,1547,1.342,1562,2.324,1566,1.399,1569,1.01,1584,2.324,1605,1.916,1617,1.886,1629,2.017,1666,1.947,1709,2.198,1747,1.947,1775,1.833,1786,3.721,1793,1.41,1806,2.497,1820,1.63,1854,1.464,1856,3.063,1871,2.324,1875,2.017,1902,2.324,1921,3.324,1931,1.762,1984,1.784,2001,3.933,2098,2.979,2122,3.96,2129,1.526,2556,3.907,2594,2.198,2667,2.324,2676,2.324,2692,3.83,2738,2.099,2890,2.403,3178,2.497,3339,2.497,3425,5.358,3462,4.163,3463,4.511,3464,2.324,3465,2.056,3466,1.947,3510,6.225,3511,2.773,3512,2.773,3513,6.728,3514,2.773,3515,2.773,3516,2.773,3517,2.773,3518,4.744,3519,2.773,3520,2.773,3521,2.773,3522,4.744,3523,2.773,3524,2.773,3525,2.497,3526,2.773,3527,2.773,3528,2.773,3529,5.249,3530,2.773,3531,2.497,3532,2.497,3533,5.497,3534,4.57,3535,4.57,3536,2.773,3537,2.773,3538,2.773,3539,2.773,3540,2.773,3541,2.773,3542,2.773,3543,3.623,3544,4.57,3545,2.773,3546,2.773,3547,2.773,3548,2.773,3549,2.773,3550,2.773,3551,2.773,3552,2.773,3553,2.773]],["title/setup/install-r/#introduction",[102,1.442]],["text/setup/install-r/#introduction",[2,2.323,7,1.056,12,0.523,19,2.633,25,3.989,27,1.69,28,2.037,31,3.133,34,1.028,35,2.506,55,1.627,65,4.263,96,1.714,97,1.509,107,0.836,108,0.735,123,1.307,126,1.758,135,2.092,136,2.166,156,2.05,163,2.473,214,3.462,239,1.749,247,2.48,302,3.462,318,2.504,324,2.078,340,2.74,390,2.525,423,1.853,456,2.214,457,1.68,459,2.77,478,2.249,479,2.649,502,2.965,510,2.694,517,1.987,556,2.391,604,3.014,607,3.248,612,1.974,613,2.836,651,2.064,658,3.622,691,2.836,777,1.517,779,2.362,808,2.362,821,2.694,830,2.915,856,3.248,869,2.877,899,2.402,921,3.803,958,1.999,1010,2.15,1183,3.238,1185,2.106,1245,2.362,1264,5.272,1359,3.182,1446,3.182,1501,6.599,1562,3.597,1566,2.166,1605,2.965,1617,2.92,1629,3.122,1709,3.402,1747,3.014,1806,3.865,1820,2.522,1854,2.266,1856,4.324,1875,3.122,2098,2.798,2122,3.719,2556,4.324,2667,3.597,2676,3.597,2692,5.407,2738,3.248,2890,3.719,3178,3.865,3339,3.865,3510,4.992,3511,4.292,3512,4.292,3513,6.523,3514,4.292,3515,4.292,3516,4.292,3517,4.292,3518,6.308,3519,4.292,3520,4.292,3521,4.292,3522,5.25,3523,4.292,3524,4.292,3525,3.865,3526,4.292,3527,4.292,3528,4.292,3529,6.979,3530,4.292,3531,3.865,3532,3.865,3533,4.048,3534,6.452,3535,6.452,3536,4.292,3537,4.292,3538,4.292]],["title/setup/install-r/#connect-to-spark",[7,0.834,1446,4.534]],["text/setup/install-r/#connect-to-spark",[2,2.058,4,3.999,7,1.459,12,0.672,19,2.027,34,0.71,60,3.232,91,1.475,111,0.681,123,2.413,132,2.281,174,1.51,175,1.834,198,1.804,211,2.796,239,2.703,302,2.391,306,2.171,334,2.83,410,1.529,425,2.618,464,2.334,502,3.077,529,2.264,573,1.651,612,3.051,658,2.788,675,3.372,726,2.944,884,1.666,888,4.383,893,2.298,895,2.848,944,2.986,958,2.075,1188,1.934,1189,3.24,1199,3.938,1230,3.734,1264,3.03,1311,2.689,1446,6.509,1501,3.182,1509,2.156,1531,3.999,1534,2.352,1547,2.156,1569,1.622,1584,3.734,1666,3.128,1775,2.944,1786,4.832,1793,2.264,1871,3.734,1902,3.734,1921,4.824,1931,2.83,1984,2.866,2001,5.108,2098,2.904,2122,3.86,2129,2.452,2556,2.986,2594,3.531,3425,6.959,3462,5.66,3463,6.132,3464,3.734,3465,3.303,3466,3.128,3510,6.794,3513,6.645,3522,3.626,3533,6.255,3539,4.455,3540,4.455,3541,4.455,3542,4.455,3543,5.258,3544,6.634,3545,4.455,3546,4.455,3547,4.455,3548,4.455,3549,4.455,3550,4.455,3551,4.455,3552,4.455,3553,4.455]],["title/setup/install-scala/",[2,1.123,87,3.073,1729,2.109]],["text/setup/install-scala/",[2,2.452,5,1.387,7,1.512,12,0.542,19,1.622,28,1.584,34,1.054,35,1.079,40,3.207,43,2.883,46,4.105,50,1.473,51,1.628,54,2.849,57,4.758,60,4.008,84,1.499,89,1.1,91,1.104,93,2.952,96,1.333,97,1.601,123,1.016,126,2.174,239,2.163,247,1.283,293,6.376,302,4.043,303,1.174,344,3.023,349,2.604,355,4.848,389,2.12,410,2.586,419,2.383,423,1.44,457,0.869,462,2.474,466,3.445,483,1.237,491,3.576,501,1.204,517,3.06,518,3.336,529,1.696,544,1.821,658,2.231,686,2.442,694,2.175,718,2.343,794,3.718,879,2.094,880,1.637,883,2.041,885,1.836,886,1.836,895,2.279,1010,1.672,1052,2.383,1173,1.821,1188,3.271,1216,3.293,1225,2.525,1231,2.002,1260,1.604,1308,2.304,1309,2.849,1311,2.68,1338,1.66,1444,1.941,1445,2.76,1569,2.744,1570,4.468,1577,2.002,1597,2.236,1636,3.508,1639,3.831,1731,3.861,1750,3.461,1753,2.175,1758,2.002,1766,2.426,1767,2.343,1769,2.07,1771,2.679,1781,3.029,1784,3.004,1785,4.722,1786,1.836,1787,2.891,1788,3.146,1789,2.474,1790,3.146,1791,2.094,1792,3.146,1793,4.453,1794,2.525,1795,3.884,1796,6.681,1797,2.891,1798,2.891,1799,2.796,1831,4.449,1832,2.796,3462,5.382,3463,7.378,3465,5.587,3466,5.291,3471,2.645,3554,3.337,3555,7.106,3556,6.529,3557,3.337]],["title/setup/install-scala/#spark-scala-shell",[7,0.698,40,1.997,293,3.178]],["text/setup/install-scala/#spark-scala-shell",[]],["title/setup/install-scala/#download-sedona-jar-automatically",[2,0.966,46,2.066,54,2.365,57,2.04]],["text/setup/install-scala/#download-sedona-jar-automatically",[2,2.013,7,1.387,43,3.514,46,3.33,54,3.813,57,3.289,60,4.476,126,2.91,293,6.673,302,4.928,349,3.487,389,2.838,410,2.439,491,4.359,686,3.269,895,3.051,1188,3.987,1216,4.408,1308,3.085,1309,3.813,1445,3.694,1569,2.588,1570,4.769,1731,5.168,1771,3.586,1785,5.076,1793,5.468,1796,7.401,1831,5.956,3462,6.56,3463,8.324,3465,6.809,3466,6.449,3554,7.107,3555,8.661,3556,7.958]],["title/setup/install-scala/#download-sedona-jar-manually",[2,0.966,46,2.066,57,2.04,1577,2.644]],["text/setup/install-scala/#download-sedona-jar-manually",[2,2.386,5,2.751,7,1.34,12,0.472,43,3.353,46,4.605,50,2.92,51,2.687,57,5.177,60,4.27,126,2.709,239,2.695,293,6.49,302,4.702,349,3.245,389,2.642,410,2.27,491,4.159,686,3.043,895,2.84,1188,3.804,1216,4.103,1225,5.006,1445,3.438,1569,2.409,1570,4.605,1639,4.577,1731,4.81,1766,4.81,1767,4.644,1785,4.724,1796,7.147,1831,5.543,1832,5.543,3462,6.259,3463,8.096,3465,6.497,3466,6.153,3555,8.264,3556,7.593,3557,6.615]],["title/setup/install-scala/#spark-sql-shell",[7,0.698,34,0.817,293,3.178]],["text/setup/install-scala/#spark-sql-shell",[2,2.093,34,1.522,84,2.697,97,1.859,239,3.89,1231,5.728,3471,7.568]],["title/setup/install-scala/#self-contained-spark-projects",[7,0.601,355,2.836,466,2.015,794,1.719]],["text/setup/install-scala/#self-contained-spark-projects",[2,2.431,7,1.469,12,0.463,28,3.047,40,2.503,57,3.976,60,3.128,84,1.813,89,2.117,91,2.125,93,2.867,97,1.885,123,1.954,303,2.259,344,2.935,355,5.528,410,2.203,423,2.771,457,1.671,462,4.76,466,3.928,501,2.318,517,3.976,518,4.335,658,2.698,694,4.185,718,4.507,794,4.202,879,4.029,880,3.15,883,3.302,885,3.533,886,3.533,1010,3.216,1052,4.585,1173,3.503,1260,3.087,1308,2.787,1309,3.445,1311,3.925,1338,3.194,1569,2.338,1570,3.008,1597,4.303,1636,5.677,1639,4.001,1758,3.851,1771,3.239,1781,4.902,1793,3.263,1794,4.859,1795,5.689,1796,4.669,1797,5.562,1798,5.562,1799,5.38]],["title/setup/maven-coordinates/",[303,1.803,1308,2.224,1309,2.749]],["text/setup/maven-coordinates/",[2,2.48,3,6.039,4,4.913,5,1.519,6,0.534,7,0.956,8,3.075,10,3.936,11,3.061,12,0.593,19,1.893,24,4.145,27,1.057,34,1.057,35,0.484,40,3.088,41,2.564,42,3.82,43,3.031,46,0.702,48,3.503,51,0.459,55,1.018,57,3.666,66,2.191,69,4.116,84,0.759,89,1.204,93,1.631,96,1.073,97,1.365,98,0.565,111,0.229,126,2.334,228,1.236,251,0.811,303,0.527,343,0.546,386,0.797,398,1.309,409,2.45,410,0.922,422,0.541,457,0.951,466,0.685,485,1.856,491,3.631,501,0.97,516,0.735,517,0.693,518,0.756,544,0.818,658,0.63,660,1.09,693,1.019,768,0.791,816,2.564,866,1.775,883,0.576,884,2.962,885,1.478,886,1.478,907,0.889,958,0.698,961,3.059,968,1.666,995,0.601,1000,1.111,1010,0.751,1188,2.878,1231,0.899,1259,4.095,1308,1.585,1309,1.442,1311,4.715,1312,7.605,1313,4.509,1314,7.605,1329,1.349,1332,1.111,1337,1.251,1341,1.004,1342,2.419,1343,1.349,1344,1.349,1345,1.349,1346,1.349,1348,2.984,1349,5.203,1353,0.952,1412,1.519,1413,4.612,1414,1.256,1429,3.445,1430,1.052,1499,1.827,1533,4.002,1582,0.855,1633,3.623,1636,2.413,1721,3.623,1786,3.41,1793,1.365,1805,2.251,1810,1.134,1849,1.256,1867,2.079,1926,2.186,2558,1.052,2669,2.033,2700,1.256,2754,1.134,2755,1.052,2806,1.349,2947,1.349,3053,1.349,3147,1.775,3291,4.615,3295,4.615,3297,5.557,3309,1.413,3311,1.413,3421,5.833,3466,4.002,3507,2.328,3558,0.99,3559,1.498,3560,1.498,3561,2.533,3562,2.533,3563,2.533,3564,2.533,3565,2.533,3566,9.078,3567,5.375,3568,1.498,3569,2.919,3570,2.687,3571,1.498,3572,1.498,3573,2.533,3574,1.498,3575,1.498,3576,1.498,3577,2.533,3578,2.251,3579,2.328,3580,1.349,3581,1.498,3582,1.498,3583,1.498,3584,5.7,3585,1.498,3586,1.256,3587,1.349,3588,1.498,3589,2.533]],["title/setup/maven-coordinates/#maven-coordinates",[303,2.152,1308,2.655]],["text/setup/maven-coordinates/#maven-coordinates",[2,2.715,7,0.973,10,5.469,12,0.601,34,1.718,43,4.268,51,2.19,57,4.72,97,1.39,228,3.284,491,5.294,658,3,866,6.088,884,4.03,958,3.325,961,3.831,1188,3.999,1412,5.208,1636,6.088,3558,4.718]],["title/setup/maven-coordinates/#use-sedona-fat-jars",[2,0.966,57,2.04,97,0.858,1636,2.913]],["text/setup/maven-coordinates/#use-sedona-fat-jars",[2,2.396,3,6.193,4,5.038,5,1.349,7,1.011,8,3.586,10,3.852,11,4.351,12,0.538,19,1.586,24,5.899,40,3.163,41,3.645,42,4.349,43,3.311,48,1.834,55,1.23,57,3.003,66,1.946,69,4.17,96,1.296,97,1.263,126,3.543,398,1.581,409,1.786,410,1.114,466,1.483,485,2.241,491,4.107,516,1.592,544,1.77,961,1.741,968,2.012,1000,2.405,1188,2.817,1231,1.946,1308,1.408,1309,1.741,1311,4.798,1312,7.692,1313,5.518,1314,7.692,1348,3.479,1349,6.326,1413,3.258,1430,2.278,1499,2.207,1533,2.278,1786,3.571,1793,1.649,1867,2.51,1926,2.64,2558,2.278,2669,2.455,3147,2.144,3291,4.674,3295,4.674,3297,5.144,3309,3.06,3311,3.06,3421,6.742,3466,5.695,3507,2.811,3559,3.245,3560,3.245,3561,3.06,3562,3.06,3563,3.06,3564,3.06,3565,3.06,3566,9.415,3567,7.65,3568,3.245]],["title/setup/maven-coordinates/#use-sedona-and-third-party-jars-separately",[2,0.755,57,1.595,97,0.671,660,2.506,1499,2.344,3053,3.102]],["text/setup/maven-coordinates/#use-sedona-and-third-party-jars-separately",[2,2.475,3,6.856,4,5.578,7,1.162,8,4.383,10,4.54,11,3.518,12,0.226,19,1.938,34,1.358,40,3.568,41,2.947,42,5.126,57,2.936,69,4.219,84,1.186,89,1.384,93,1.875,96,1.677,97,1.235,228,1.931,251,2.271,457,1.093,768,2.217,884,3.187,961,2.253,1188,3.32,1311,4.856,1312,7.783,1314,7.783,1353,2.667,1810,3.177,2806,3.78,2947,3.78,3147,2.774,3291,6.886,3295,6.886,3297,7.629,3566,10.423,3571,4.198]],["title/setup/maven-coordinates/#locationtech-jts-core-1180",[884,1.648,1429,3.411,3572,4.408,3573,4.157]],["text/setup/maven-coordinates/#locationtech-jts-core-1180",[12,0.549,66,5.036,69,3.603,816,5.894,884,3.813,1010,4.206,1311,4.133,1312,6.646,1314,6.646,1413,6.892,1429,6.495,1533,5.894,1805,8.545,1849,7.035,2700,7.035,3573,7.916,3574,8.395,3575,8.395,3576,8.395,3577,7.916]],["title/setup/maven-coordinates/#jts2geojson-0161",[3578,5.126,3579,5.299]],["text/setup/maven-coordinates/#jts2geojson-0161",[12,0.572,69,3.442,84,2.201,517,3.608,518,3.933,884,2.915,1311,3.949,1312,7.617,1314,7.617,1413,4.893,1414,6.533,1429,7.537,1533,5.473,1786,4.29,3577,7.351,3578,6.533,3579,6.754,3580,7.019,3581,7.795,3582,7.795,3583,7.795,3584,11.685,3585,7.795]],["title/setup/maven-coordinates/#geotools-240",[3421,4.368,3586,5.126]],["text/setup/maven-coordinates/#geotools-240",[2,1.618,5,3.069,12,0.507,24,5.368,48,4.173,55,2.798,57,4.356,66,4.428,69,3.325,97,1.437,398,3.597,409,4.062,485,5.099,961,3.961,968,4.578,1308,3.204,1309,3.961,1311,3.815,1312,6.135,1313,5.021,1314,6.135,1348,6.307,1349,6.426,1413,5.907,1533,5.182,1786,5.702,1793,3.752,1867,5.711,1926,6.007,2669,5.586,3421,7.793,3466,5.182,3507,6.395,3561,6.96,3562,6.96,3563,6.96,3564,6.96,3565,6.96,3567,6.96]],["title/setup/maven-coordinates/#sernetcdf-010_1",[1633,4.977,1721,4.977]],["text/setup/maven-coordinates/#sernetcdf-010_1",[12,0.594,19,2.593,27,3.341,40,3.309,69,3.627,89,2.798,93,3.79,409,4.671,501,3.064,816,5.959,961,4.555,1311,4.161,1312,6.691,1313,5.773,1314,6.691,1413,5.327,1533,5.959,1582,4.843,1633,6.908,1721,6.908,3570,8.488]],["title/setup/maven-coordinates/#snapshot-versions",[69,2.161,1259,4.041]],["text/setup/maven-coordinates/#snapshot-versions",[2,1.871,3,5.294,4,4.307,5,3.549,46,4,48,4.825,69,3.639,98,3.221,111,1.305,386,4.543,410,2.929,457,2.681,693,5.806,883,3.281,885,4.697,886,4.697,995,3.426,1259,7.59,1329,7.685,3587,7.685,3588,8.535]],["title/setup/maven-coordinates/#buildsbt",[886,4.175]],["text/setup/maven-coordinates/#buildsbt",[12,0.621,19,2.881,1259,6.232,1332,6.992,2754,7.137,2755,6.621,3589,8.893]],["title/setup/maven-coordinates/#pomxml",[885,4.175]],["text/setup/maven-coordinates/#pomxml",[48,6.604,343,3.273,422,3.244,1259,5.939,1337,4.946,1341,6.023,1342,9.563,1343,8.092,1344,8.092,1345,8.092,1346,8.092,3589,8.475]],["title/setup/modules/",[1412,4.288]],["text/setup/modules/",[2,2.076,7,1.016,12,0.651,19,3.18,25,3.449,27,3.727,28,3.537,34,1.659,43,2.852,87,4.471,102,1.416,318,2.02,390,1.659,456,3.845,479,2.548,482,2.303,881,7.166,884,3.541,995,2.991,1183,3.91,1184,6.246,1185,3.657,1188,4.11,1233,5.004,1412,4.213,1842,5.64,1856,4.995,2729,5.526,3590,7.453,3591,7.453]],["title/setup/modules/#sedona-modules-for-apache-spark",[2,0.966,7,0.601,19,1.347,1412,2.492]],["text/setup/modules/#sedona-modules-for-apache-spark",[2,1.85,19,3.126,27,3.323,34,1.63,102,1.604,318,2.288,390,1.879,456,4.355,479,2.885,482,2.608,881,7.742,884,3.826,995,3.388,1183,4.135,1185,4.141,1188,3.664,1233,5.293,1842,6.388,1856,5.657,2729,6.258]],["title/setup/modules/#api-availability",[27,2.407,28,2.903]],["text/setup/modules/#api-availability",[12,0.663,25,4.184,34,1.441,43,3.459,87,5.423,1184,7.576,1188,3.924,3590,9.04,3591,9.04]],["title/setup/overview/",[448,7.586]],["text/setup/overview/",[2,1.778,5,2.453,6,2.102,7,1.106,10,4.816,12,0.608,19,2.479,25,3.754,29,4.944,30,3.954,32,3.561,33,4.465,40,2.3,43,2.257,46,2.765,53,1.632,55,2.237,65,3.898,78,5.312,85,3.901,93,2.634,107,1.148,108,1.01,118,2.392,136,2.977,156,2.818,163,3.399,213,2.506,234,4.29,303,2.076,318,2.932,340,3.445,390,2.627,392,3.644,398,2.875,478,3.091,538,3.067,556,2.187,573,2.187,777,2.867,940,3.502,943,2.714,1010,4.064,1183,2.216,1184,4.944,1185,2.894,1186,4.944,1205,4.676,1233,2.837,1236,3.846,1308,2.561,1507,4.766,1508,3.703,1597,3.954,1617,4.013,1632,4.29,1673,3.703,1713,4.465,1971,3.954,1982,3.659,1985,4.29,2056,3.796,2062,3.796,3074,5.312,3107,5.312,3592,5.9,3593,5.9,3594,4.013,3595,5.9,3596,5.9,3597,5.9]],["title/setup/overview/#download-statistics",[46,2.866,3107,5.507]],["text/setup/overview/#download-statistics",[2,2.054,5,3.898,19,2.864,29,7.855,53,2.593,78,8.439,1308,4.068,1971,6.282,3592,9.373,3593,9.373]],["title/setup/overview/#what-can-sedona-do",[2,1.663]],["text/setup/overview/#what-can-sedona-do",[]],["title/setup/overview/#distributed-spatial-datasets",[390,1.14,1010,2.567,1617,3.485]],["text/setup/overview/#distributed-spatial-datasets",[7,1.473,10,6.416,390,2.626,1183,3.478,1184,7.76,3594,6.298,3595,9.259]],["title/setup/overview/#complex-spatial-objects",[390,1.14,573,1.899,1597,3.434]],["text/setup/overview/#complex-spatial-objects",[12,0.478,30,5.953,32,3.899,33,6.722,107,1.729,108,1.521,118,3.601,136,4.482,156,4.243,163,5.117,478,4.653,538,4.618,940,5.273,943,4.086,1205,7.04,1632,6.46,1713,6.722,1985,6.46,3596,8.883]],["title/setup/overview/#distributed-spatial-queries",[318,1.388,390,1.14,1010,2.567]],["text/setup/overview/#distributed-spatial-queries",[25,4.087,213,3.751,318,3.216,340,4.464,390,2.34,556,3.273,777,3.714,1507,6.176,1508,5.543,1673,5.543,2056,5.682,2062,5.682]],["title/setup/overview/#rich-spatial-analytics-tools",[234,3.206,390,0.981,3074,3.969,3597,4.408]],["text/setup/overview/#rich-spatial-analytics-tools",[6,3.094,12,0.467,19,2.652,25,4.018,32,3.81,40,3.384,43,3.321,55,3.291,65,5.736,85,5.003,93,3.876,303,3.055,390,2.316,392,4.673,398,4.23,1185,4.259,1186,7.275,1233,4.174,1236,5.659,1982,5.384]],["title/setup/platform/",[1349,3.793,1804,4.368]],["text/setup/platform/",[2,2.267,5,3.903,6,1.827,7,1.615,8,5.936,9,7.202,12,0.651,22,6.994,25,2.373,39,7.445,40,4.527,41,6.59,42,7.138,43,3.802,45,3.968,50,2.263,51,1.572,56,4.195,87,3.076,93,2.29,349,6.001,457,1.335,516,2.516,601,3.258,722,3.218,926,3.729,1044,3.729,1231,3.076,1310,4.173,1552,4.173,1638,3.388,1639,2.388,1841,3.968,1959,6.161,2119,3.802,3147,5.679,3437,4.443,3598,5.572,3599,6.932,3600,5.572]],["title/setup/release-notes/",[5,2.543,91,2.024]],["text/setup/release-notes/",[2,2.358,3,0.295,4,0.24,5,1.788,6,2.611,7,0.807,8,0.329,9,0.77,10,1.8,12,0.644,14,1.041,15,1.649,16,0.799,17,0.399,18,0.577,19,1.094,21,0.399,22,0.388,24,0.968,25,0.961,27,2.543,28,0.226,30,1.151,31,1.458,32,0.403,33,0.696,34,0.966,35,2.651,37,0.378,38,0.635,40,1.495,41,0.645,42,0.616,43,1.645,45,0.369,47,0.272,49,0.315,50,0.588,51,0.741,52,1.304,53,2.591,54,0.493,55,0.787,56,0.272,57,0.425,59,0.534,65,0.607,67,0.935,69,2.092,80,1.237,83,3.501,84,0.772,85,0.442,88,0.816,89,1.093,90,0.369,91,0.158,92,1.072,93,0.767,96,2.109,97,1.093,98,0.18,100,0.515,103,0.297,105,0.246,106,0.471,107,0.793,108,0.697,110,0.246,111,0.657,115,0.34,116,0.477,118,1.344,121,1.848,122,0.711,123,0.28,125,0.339,126,0.376,132,0.244,134,0.329,136,1.379,138,0.234,158,0.256,162,0.868,163,0.274,167,0.369,168,0.403,169,0.258,174,1.458,175,0.548,176,0.897,178,0.51,179,0.455,188,0.26,198,1.042,199,0.148,200,0.493,204,0.501,209,0.378,213,1.288,214,0.493,221,0.711,223,0.295,225,0.711,226,0.319,228,1.395,230,0.739,235,0.361,237,0.711,239,2.58,240,0.353,241,0.34,244,0.584,245,0.353,247,0.66,250,1.307,255,0.891,257,0.353,266,0.303,267,0.51,269,0.286,270,0.711,275,0.378,281,0.28,290,0.353,296,0.361,300,0.711,301,0.378,302,0.256,303,1.349,316,1.008,318,1.959,321,1.031,323,0.353,324,0.445,335,0.799,337,0.353,340,1.521,342,0.334,345,0.258,348,0.711,349,0.653,350,0.935,351,0.353,352,0.324,356,0.256,357,0.656,360,0.34,361,0.653,362,0.353,364,0.46,365,0.353,367,0.711,370,0.961,371,0.577,377,0.728,378,0.334,384,0.711,386,0.254,390,1.565,392,0.413,396,0.378,397,0.283,398,1.012,401,0.746,402,0.399,404,0.307,405,0.591,406,0.361,407,0.361,408,1.75,409,0.506,410,1.316,412,0.857,414,0.286,420,0.272,421,0.292,422,0.172,423,0.206,426,0.334,428,0.353,431,0.711,434,0.311,435,0.324,438,0.353,441,0.711,442,0.711,444,0.378,445,0.361,450,0.324,451,0.324,452,0.324,457,0.239,459,0.572,460,0.28,461,0.535,464,0.698,465,0.239,466,0.785,468,0.711,471,0.506,472,0.378,475,0.181,476,0.361,477,0.378,478,1.432,479,0.455,480,0.672,482,1.184,483,2.846,484,0.292,491,0.986,501,0.481,503,0.361,504,0.668,505,0.935,508,0.451,510,0.299,516,0.234,517,0.22,519,1.209,520,0.714,522,0.361,528,0.329,533,0.346,538,0.478,541,1.306,544,0.501,545,0.815,553,0.334,554,0.378,555,0.564,556,1.124,558,2.024,562,0.346,567,0.429,573,1.421,584,0.413,586,0.272,596,0.361,600,0.413,601,0.584,602,0.378,610,0.577,611,0.378,612,0.219,615,0.378,619,0.656,621,0.681,623,0.361,626,0.361,630,0.413,632,0.361,633,0.418,637,0.826,638,0.34,639,0.474,640,1.186,642,0.413,643,0.369,644,0.361,645,0.388,648,0.378,650,0.315,651,0.442,654,0.857,655,0.413,658,0.873,669,0.413,673,0.252,675,0.361,677,0.656,678,0.369,686,0.612,689,2.627,694,0.311,696,0.413,701,0.413,706,0.413,716,0.361,717,0.607,721,0.378,722,1.903,724,0.361,725,0.668,731,0.378,734,0.399,740,0.429,741,0.388,742,0.399,759,0.413,760,0.77,766,0.388,767,0.906,768,1.097,772,0.551,776,0.413,777,2.408,778,0.286,779,1.824,780,1.857,783,0.413,785,0.361,788,0.307,791,0.334,794,0.186,806,0.616,813,1.055,816,0.334,820,1.065,821,0.299,823,0.274,824,0.292,825,0.307,826,2.424,827,1.084,828,0.951,830,1.732,831,0.668,856,0.696,860,0.378,868,0.319,872,0.378,877,0.933,879,0.299,880,0.234,883,3.506,884,1.838,895,0.205,899,0.177,901,0.28,904,0.88,905,0.346,908,0.775,917,0.346,921,0.653,923,0.315,924,0.303,926,0.968,931,0.361,935,0.361,936,0.361,938,0.361,940,1.019,943,2.077,945,0.711,947,0.324,957,0.289,958,1.273,961,0.256,964,0.272,966,0.399,967,0.796,968,1.498,971,1.314,979,0.283,985,0.361,995,0.191,999,0.418,1012,0.506,1044,0.346,1048,0.88,1051,0.34,1085,0.324,1150,0.24,1183,1.917,1185,0.653,1188,1.768,1192,0.668,1193,0.334,1199,0.546,1201,0.361,1202,1.228,1212,0.645,1213,0.807,1226,0.361,1231,0.286,1233,0.64,1235,0.616,1236,0.311,1242,0.334,1243,0.283,1245,0.262,1250,0.599,1253,0.324,1260,0.229,1261,0.329,1263,0.599,1264,0.625,1272,0.388,1274,0.399,1296,0.77,1308,1.186,1309,0.714,1310,0.748,1311,1.743,1317,0.645,1319,0.353,1327,2.71,1328,0.399,1332,0.353,1337,0.222,1338,1.033,1347,0.429,1348,0.319,1349,1.498,1350,4.093,1351,4.478,1352,0.254,1353,0.303,1354,0.429,1355,0.315,1356,0.429,1357,5.186,1358,0.429,1359,1.791,1360,1.607,1361,0.429,1362,0.429,1363,0.429,1364,0.429,1365,0.429,1366,0.429,1367,0.378,1368,0.429,1369,0.378,1370,0.429,1371,0.429,1372,0.429,1373,0.429,1374,0.429,1375,0.429,1376,0.429,1377,1.116,1378,0.429,1379,0.429,1380,0.399,1381,0.429,1382,0.429,1383,0.429,1384,0.591,1385,0.696,1386,0.429,1387,0.429,1388,0.399,1389,0.399,1390,0.429,1391,0.429,1392,0.429,1393,0.429,1394,0.728,1395,0.728,1396,0.429,1397,0.429,1398,0.399,1399,0.399,1400,0.429,1401,0.429,1402,0.77,1403,0.635,1404,0.635,1405,0.429,1406,0.429,1407,0.429,1408,0.429,1409,0.951,1410,1.336,1411,0.413,1412,0.52,1413,0.836,1414,0.399,1415,0.429,1416,0.429,1417,0.429,1418,1.186,1419,0.429,1420,0.429,1421,0.429,1422,0.429,1423,0.429,1424,0.429,1425,0.361,1426,0.378,1427,0.429,1428,0.429,1429,1.03,1430,0.645,1431,0.429,1432,0.429,1433,0.429,1434,0.577,1435,0.429,1436,0.429,1437,1.69,1438,0.796,1439,0.836,1440,0.429,1441,0.429,1442,0.429,1443,0.429,1444,0.775,1445,0.692,1446,0.681,1447,0.369,1448,0.429,1449,0.429,1450,0.429,1451,0.429,1452,0.429,1453,0.429,1454,0.429,1455,0.429,1456,0.429,1457,0.429,1458,0.429,1459,0.429,1460,0.429,1461,0.429,1462,0.429,1463,0.429,1464,0.429,1465,0.429,1466,0.399,1467,0.429,1468,0.77,1469,1.193,1470,0.429,1471,0.429,1472,1.248,1473,0.429,1474,0.668,1475,0.625,1476,2.161,1477,0.429,1478,0.828,1479,0.828,1480,0.728,1481,1.008,1482,0.828,1483,0.696,1484,0.399,1485,0.77,1486,0.906,1487,0.361,1488,0.429,1489,0.429,1490,0.429,1491,1.397,1492,0.429,1493,0.429,1494,0.429,1495,0.429,1496,0.892,1497,0.429,1498,0.303,1499,0.906,1500,0.429,1501,0.34,1502,0.399,1503,0.493,1504,0.429,1505,0.334,1506,0.77,1507,2.104,1508,1.516,1509,1.604,1510,0.429,1511,0.711,1512,1.199,1513,0.429,1514,0.429,1515,0.591,1516,0.399,1517,0.914,1518,0.429,1519,0.399,1520,0.816,1521,0.429,1522,0.429,1523,0.429,1524,0.748,1525,0.429,1526,0.429,1527,0.429,1528,0.429,1529,0.307,1530,0.816,1531,1.048,1532,0.429,1533,0.334,1534,0.485,1535,0.429,1536,0.429,1537,0.429,1538,0.429,1539,0.429,1540,0.429,1541,0.796,1542,0.836,1543,0.714,1544,0.378,1545,0.429,1546,0.413,1547,0.644,1548,0.429,1549,0.289,1550,0.429,1551,0.429,1552,1.084,1553,0.429,1554,0.429,1555,0.429,1556,0.429,1557,0.378,1558,0.696,1559,0.399,1560,0.324,1561,0.429,1562,0.77,1563,0.828,1564,0.346,1565,0.77,1566,0.866,1567,0.429,1568,0.429,1569,0.173,1570,0.223,1571,0.429,1572,0.429,1573,0.828,1574,0.77,1575,0.77,1576,0.429,1577,0.799,1578,0.429,1579,0.429,1580,0.429,1581,0.429,1582,0.76,1583,0.378,1584,0.399,1585,0.429,1586,1.919,1587,0.92,1588,0.429,1589,0.429,1590,0.429,1591,0.429,1592,0.591,1593,0.429,1594,0.748,1595,0.668,1596,0.796,1597,0.319,1598,0.429,1599,0.429,1600,0.429,1601,0.429,1602,0.429,1603,0.828,1604,0.429,1605,0.329,1606,1.741,1607,1.54,1608,0.429,1609,0.429,1610,0.399,1611,0.429,1612,0.429,1613,0.935,1614,0.429,1615,1.055,1616,0.635,1617,0.906,1618,0.378,1619,0.399,1620,0.429,1621,1.116,1622,0.429,1623,0.429,1624,0.77,1625,0.429,1626,0.429,1627,0.378,1628,0.399,1629,0.346,1630,0.399,1631,0.429,1632,0.968,1633,0.388,1634,0.429,1635,0.361,1636,0.315,1637,0.828,1638,0.607,1639,0.799,1640,0.378,1641,0.429,1642,0.429,1643,1.084,1644,0.77,1645,0.77,1646,0.88,1647,0.429,1648,0.429,1649,0.429,1650,2.608,1651,2.474,1652,0.307,1653,0.429,1654,0.429,1655,0.413,1656,0.429,1657,0.34,1658,0.324,1659,0.329,1660,0.25,1661,0.429,1662,0.429,1663,0.429,1664,0.429,1665,0.429,1666,0.334,1667,0.828,1668,0.493,1669,0.334,1670,0.303,1671,0.429,1672,0.828,1673,0.299,1674,0.796,1675,0.429,1676,0.429,1677,0.429,1678,0.429,1679,0.429,1680,0.369,1681,0.299,1682,0.292,1683,0.429,1684,1.439,1685,0.429,1686,0.388,1687,0.307,1688,0.307,1689,0.429,1690,0.429,1691,0.262,1692,0.429,1693,0.378,1694,0.429,1695,0.429,1696,0.429,1697,0.361,1698,1.919,1699,0.361,1700,0.429,1701,0.34,1702,0.429,1703,0.429,1704,0.429,1705,0.429,1706,0.346,1707,0.378,1708,0.828,1709,0.378,1710,0.346,1711,0.429,1712,0.429,1713,1.008,1714,0.429,1715,0.429,1716,0.429,1717,0.429,1718,0.429,1719,0.429,1720,1.154,1721,0.388,1729,0.994,1732,0.353,1750,0.311,1770,0.295,1786,0.945,1793,0.467,1804,0.34,1820,0.28,1821,0.315,1841,0.711,1846,0.353,1854,0.485,1856,0.319,1872,0.378,1893,0.378,1931,0.303,1934,0.361,1940,0.711,1952,1.354,1959,0.77,1971,0.319,1972,0.951,1980,0.987,1984,0.307,2063,0.334,2067,0.283,2092,0.748,2119,0.353,2208,0.399,2253,0.399,2601,0.378,2741,0.289,2753,0.378,3092,0.399,3147,0.315,3158,0.429,3172,0.429,3396,0.429,3421,1.483,3437,0.413,3442,0.399,3471,0.378,3498,0.34,3578,1.116,3579,0.413,3580,0.429,3586,0.399,3587,0.429,3594,0.324,3599,0.867,3601,1.199,3602,0.429,3603,0.476,3604,0.476,3605,0.476,3606,0.476,3607,0.867,3608,0.476,3609,0.476,3610,0.476,3611,0.476,3612,0.476,3613,0.476,3614,0.476,3615,0.867,3616,0.867,3617,0.867,3618,0.796,3619,0.476,3620,0.429,3621,0.476,3622,0.867,3623,0.796,3624,0.796,3625,0.867,3626,0.796,3627,0.476,3628,0.429,3629,0.476,3630,0.867,3631,0.476,3632,0.476,3633,0.476,3634,0.476,3635,0.476,3636,0.476,3637,0.476,3638,0.476,3639,0.867,3640,0.476,3641,0.476,3642,0.476,3643,1.116,3644,0.429,3645,0.476,3646,0.476,3647,0.476,3648,0.399,3649,0.476,3650,0.476,3651,0.476,3652,0.476,3653,0.476,3654,0.476,3655,0.476,3656,0.476,3657,0.476,3658,0.429,3659,0.476,3660,0.476,3661,0.429,3662,0.476,3663,0.476,3664,0.476,3665,0.476,3666,0.476,3667,0.476,3668,0.476,3669,0.476,3670,0.476,3671,0.867,3672,0.867,3673,0.476,3674,0.796,3675,0.476,3676,0.919,3677,1.546,3678,1.256,3679,0.476,3680,0.476,3681,0.429,3682,0.867,3683,0.429,3684,0.867,3685,0.476,3686,0.429,3687,0.476,3688,0.867,3689,0.476,3690,0.476,3691,0.476,3692,0.476,3693,0.429,3694,0.429,3695,0.476,3696,0.476,3697,0.476,3698,0.919,3699,0.476,3700,0.476,3701,0.476,3702,0.476,3703,0.476,3704,0.476,3705,0.476,3706,0.476,3707,0.476,3708,0.476,3709,0.476,3710,0.476]],["title/setup/release-notes/#sedona-121",[2,1.341,3,3.793]],["text/setup/release-notes/#sedona-121",[2,2.312,5,3.694,7,1.533,9,7.444,14,5.387,15,4.419,69,3.139,176,3.834,228,4.086,768,4.69,1317,6.236,1350,4.271,1351,4.136,1594,7.229,1639,4.136,3601,7.998]],["title/setup/release-notes/#sql-for-spark",[7,0.834,34,0.975]],["text/setup/release-notes/#sql-for-spark",[2,2.668,6,2.62,7,0.699,9,4.297,12,0.655,35,2.377,89,1.691,97,0.998,162,3.343,167,3.968,237,3.968,250,2.774,270,3.968,300,3.968,316,3.881,321,1.935,348,3.968,367,3.968,370,2.373,377,4.064,384,3.968,402,4.297,431,3.968,441,3.968,442,3.968,459,2.201,461,2.983,464,2.686,468,3.968,472,4.064,483,1.9,584,4.443,677,3.662,678,3.968,689,4.064,760,4.297,779,2.822,788,3.299,880,2.516,883,4.528,940,4.364,943,3.382,979,3.044,1311,2.079,1350,3.535,1351,4.002,1476,3.343,1496,3.437,1541,4.443,1621,4.297,1684,4.297,1940,3.968,2092,4.173,3602,4.617,3603,5.128,3604,5.128,3605,5.128,3606,5.128,3607,4.835,3608,5.128,3609,5.128,3610,5.128,3611,5.128,3612,5.128,3613,5.128,3614,5.128,3615,4.835,3616,4.835,3617,4.835,3618,4.443,3619,5.128,3620,4.617,3621,5.128,3622,4.835,3623,4.443,3624,4.443,3625,4.835,3626,4.443,3627,5.128,3628,4.617]],["title/setup/release-notes/#flink",[10,4.503]],["text/setup/release-notes/#flink",[2,2.652,10,3.961,12,0.652,35,2.85,121,3.442,122,5.163,162,4.349,237,5.163,270,5.163,300,5.163,348,5.163,367,5.163,377,5.288,384,5.163,431,5.163,441,5.163,442,5.163,459,2.865,461,3.881,468,5.163,483,2.473,760,5.592,779,3.672,883,4.595,958,3.107,1438,5.781,1524,5.43,1621,5.592,1940,5.163,2092,5.43,3607,6.292,3615,6.292,3616,6.292,3617,6.292,3618,5.781,3622,6.292,3623,5.781,3624,5.781,3625,6.292,3626,5.781,3629,6.672]],["title/setup/release-notes/#sedona-120",[2,1.341,14,3.709]],["text/setup/release-notes/#sedona-120",[2,2.352,5,3.804,10,5.431,14,5.548,19,2.795,69,3.233,176,3.949,228,4.208,483,3.391,779,5.035,1350,4.399,1351,4.26,1650,6.223]],["title/setup/release-notes/#rdd",[1183,2.85]],["text/setup/release-notes/#rdd",[2,2.384,10,4.876,12,0.586,35,2.656,40,3.923,89,2.708,97,1.599,108,1.406,390,1.829,412,5.285,478,4.303,567,7.396,586,4.687,830,3.711,1350,3.95,1351,4.686,1359,6.09,1476,5.355,1684,6.884,1786,5.537,1841,6.356,3580,7.396,3630,7.746,3631,8.214,3632,8.214,3633,8.214]],["title/setup/release-notes/#sql",[34,1.209]],["text/setup/release-notes/#sql",[2,2.586,6,3.187,12,0.635,34,1.087,35,3.555,107,1.942,123,2.722,132,3.493,200,3.66,209,5.406,221,5.278,225,5.278,244,4.334,250,3.691,267,3.787,275,5.406,303,2.4,349,3.346,350,4.789,444,5.406,445,5.162,483,2.528,573,2.528,600,5.91,706,5.91,776,5.91,779,3.754,883,4.071,1350,3.28,1351,3.176,1360,5.278,1509,3.302,2208,5.717,3634,6.821,3635,6.821,3636,6.821,3637,6.821,3638,6.821,3639,6.432,3640,6.821,3641,6.821,3642,6.821,3643,5.717,3644,6.142]],["title/setup/release-notes/#flink_1",[10,4.503]],["text/setup/release-notes/#flink_1",[2,2.494,6,3.609,10,6.487,12,0.613,16,4.981,17,6.959,18,5.211,27,3.268,35,2.685,134,5.736,316,6.284,621,6.156,759,7.194,772,6.076,883,3.192,1650,5.648,1651,5.736,3587,7.476,3594,5.648,3645,8.304,3646,8.304]],["title/setup/release-notes/#sedona-111",[2,1.341,21,5.126]],["text/setup/release-notes/#sedona-111",[2,2.03,5,3.85,35,2.994,69,3.272,176,3.997,228,4.259,483,3.432,1350,4.452,1351,4.312,3601,8.337,3647,9.259,3648,7.76]],["title/setup/release-notes/#global",[1698,5.326]],["text/setup/release-notes/#global",[2,2.042,6,3.32,12,0.502,40,4.229,50,4.112,51,2.857,483,3.453,779,5.127,3599,8.785,3630,8.785]],["title/setup/release-notes/#sql_1",[34,1.209]],["text/setup/release-notes/#sql_1",[2,2.503,6,2.992,7,1.144,12,0.615,22,6.832,122,6.495,221,6.495,225,6.495,240,6.224,316,6.353,396,6.654,483,3.111,669,7.273,740,7.559,779,4.62,883,4.221,1350,4.036,1351,3.909,3649,8.395,3650,8.395,3651,8.395]],["title/setup/release-notes/#sedona-110",[2,1.341,24,4.448]],["text/setup/release-notes/#sedona-110",[2,1.947,5,3.694,6,3.165,24,6.46,25,4.111,27,3.496,30,5.953,31,3.012,32,3.899,33,6.722,69,3.139,176,3.834,228,4.086,483,3.292,779,4.888,1350,4.271,1351,4.136,1650,6.042,1804,6.344]],["title/setup/release-notes/#global_1",[1698,5.326]],["text/setup/release-notes/#global_1",[2,2.426,12,0.596,24,5.584,34,1.224,83,3.278,97,1.495,228,3.532,318,2.081,349,3.767,350,5.39,386,4.086,610,4.819,689,6.085,777,2.713,780,4.301,826,3.226,827,6.248,830,3.469,884,2.871,940,4.558,967,6.652,1311,3.112,1349,4.762,1409,5.483,1437,6.248,1476,6.29,1582,4.381,1592,4.94,1643,6.248,1786,4.225,3158,6.913,3421,6.891,3652,7.678,3653,7.678,3654,7.678,3655,7.678,3656,7.678,3657,7.678]],["title/setup/release-notes/#core",[884,2.837]],["text/setup/release-notes/#core",[2,2.328,12,0.572,422,3.244,1350,5.107,1351,5.265,2063,6.31,3658,8.092,3659,8.987,3660,8.987,3661,8.092,3662,8.987,3663,8.987]],["title/setup/release-notes/#sql_2",[34,1.209]],["text/setup/release-notes/#sql_2",[2,2.492,12,0.612,30,5.095,32,3.337,33,5.753,35,3.396,318,2.599,480,3.836,483,2.817,491,3.608,610,4.771,619,5.429,658,4.029,734,6.371,766,6.186,767,6.522,777,3.388,827,6.186,828,5.429,883,3.686,940,4.512,1350,3.655,1351,4.891,1650,5.17,1651,5.251,1854,4.014,3092,6.371,3664,7.602,3665,7.602,3666,7.602,3667,7.602]],["title/setup/release-notes/#viz",[1188,3.293]],["text/setup/release-notes/#viz",[3668,9.921]],["title/setup/release-notes/#python",[43,2.902]],["text/setup/release-notes/#python",[2,2.395,7,1.132,12,0.588,43,3.177,83,3.546,126,3.4,412,5.342,517,3.843,642,7.194,722,5.211,908,4.83,1311,4.106,1350,3.993,1351,4.717,1476,5.413,1596,7.194,1820,4.879,1952,5.413,1980,6.156,1984,5.342,3442,6.959,3669,8.304,3670,8.304,3671,7.83,3672,7.83]],["title/setup/release-notes/#r",[25,3.511]],["text/setup/release-notes/#r",[2,2.395,12,0.508,25,4.365,883,3.625,1650,6.415,1651,6.515,1856,6.321,3673,9.431]],["title/setup/release-notes/#sedona-101",[2,1.341,37,4.848]],["text/setup/release-notes/#sedona-101",[2,2.005,5,3.804,27,3.601,69,3.233,176,3.949,228,4.208,483,3.391,658,3.844,779,5.035,826,3.844,1350,4.399,1351,4.26,3601,8.237,3674,7.926]],["title/setup/release-notes/#known-issue",[83,2.612,223,3.793]],["text/setup/release-notes/#known-issue",[2,2.561,7,0.996,12,0.504,19,3.151,43,2.797,47,4.171,49,4.831,69,2.583,544,3.989,640,7.125,908,4.253,957,4.433,1311,3.792,1351,3.404,1577,4.386,1729,4.731,1770,4.534,1934,5.533,1952,7.088,1971,4.9,1972,7.366,1980,6.934,3671,6.894,3672,6.894,3675,7.311,3676,9.354,3677,8.422,3678,8.82,3679,7.311,3680,7.311]],["title/setup/release-notes/#global_2",[1698,5.326]],["text/setup/release-notes/#global_2",[2,2.413,7,1.151,12,0.593,69,2.983,97,1.643,111,1.29,689,8.108,1308,3.664,1309,4.529,1311,3.422,1349,5.236,1351,3.931,1418,5.831,2741,5.119,3421,6.029,3498,6.029,3578,7.074,3579,7.313,3677,7.6,3681,7.6,3682,7.96,3683,7.6,3684,7.96]],["title/setup/release-notes/#core_1",[884,2.837]],["text/setup/release-notes/#core_1",[2,2.042,12,0.502,31,3.158,83,3.978,96,3.721,742,7.807,1350,4.479,1351,4.338,1377,7.807,1732,6.906,3685,9.316]],["title/setup/release-notes/#sql_3",[34,1.209]],["text/setup/release-notes/#sql_3",[2,2.576,6,2.521,7,0.964,12,0.624,34,1.459,35,2.961,97,1.377,267,3.927,281,4.156,479,2.418,483,2.622,519,2.389,538,3.677,553,4.966,556,2.622,562,5.144,573,2.622,630,6.129,651,3.401,655,6.129,696,6.129,701,6.129,741,5.757,777,3.236,827,5.757,883,3.903,999,3.215,1012,3.893,1231,4.243,1338,3.519,1350,3.401,1351,3.294,1410,4.551,1418,4.886,1698,4.966,1931,4.494,2253,5.928,3396,6.369,3471,5.607,3643,7.674,3678,6.67,3686,6.369,3687,7.074,3688,6.67]],["title/setup/release-notes/#viz_1",[1188,3.293]],["text/setup/release-notes/#viz_1",[2,2.328,7,1.225,12,0.572,27,3.537,686,4.134,689,7.123,826,3.777,985,6.801,1235,6.023,1250,5.858,1351,4.185,1476,5.858,1587,6.208,3677,8.092,3682,8.475]],["title/setup/release-notes/#python_1",[43,2.902]],["text/setup/release-notes/#python_1",[2,2.054,12,0.505,34,1.494,556,3.474,651,4.507,777,3.312,1350,4.507,1351,4.365,1698,6.581,3688,8.839]],["title/setup/release-notes/#sedona-100",[2,1.341,3674,5.299]],["text/setup/release-notes/#sedona-100",[2,1.993,4,4.589,5,3.782,12,0.49,19,2.779,27,3.58,35,2.94,69,3.213,228,4.183,483,3.371,633,4.133,777,3.213,826,3.821,1350,4.373,1351,4.235]],["title/setup/release-notes/#global_3",[1698,5.326]],["text/setup/release-notes/#global_3",[2,2.424,7,0.947,8,4.798,12,0.595,19,2.122,40,2.708,41,4.876,42,4.655,43,2.657,45,5.374,50,3.066,51,2.13,57,3.214,67,7.067,80,4.633,96,2.774,175,2.858,198,1.889,204,3.789,239,3.687,345,3.758,410,2.384,675,5.256,689,8.452,826,4.23,883,2.67,921,3.407,964,3.963,995,2.788,1311,3.668,1429,7.002,1530,4.259,1577,4.166,1607,5.149,1639,3.234,1793,4.599,2119,5.149,2601,5.505,3147,4.589,3421,6.463,3437,6.017,3578,7.584,3586,5.821,3684,6.549,3689,6.945]],["title/setup/release-notes/#sedona-core",[2,1.341,884,2.287]],["text/setup/release-notes/#sedona-core",[2,2.056,12,0.62,15,3.654,27,3.693,35,2.375,89,2.422,97,1.43,103,1.64,107,1.826,118,2.978,230,4.078,255,2.394,335,4.407,483,2.723,501,2.652,508,3.604,612,3.379,694,4.788,722,4.61,768,3.879,826,3.943,926,5.342,967,6.364,1183,2.76,1350,3.532,1351,3.421,1357,6.651,1437,5.978,1491,7.635,1511,5.684,1607,5.446,2753,5.822,3639,6.927,3690,7.346,3691,7.346,3692,7.346,3693,6.614,3694,6.614,3695,7.346,3696,7.346,3697,7.346,3698,9.382]],["title/setup/release-notes/#sedona-sql",[2,1.341,34,0.975]],["text/setup/release-notes/#sedona-sql",[2,2.074,12,0.629,15,3.053,27,3.725,35,3.282,51,1.882,55,2.326,80,3.142,97,1.195,100,4.668,107,1.195,158,3.293,178,3.407,188,3.348,239,2.5,241,4.383,245,4.549,257,4.549,269,3.681,290,4.549,296,4.644,323,4.549,335,4.999,337,4.549,342,4.308,351,4.549,362,4.549,365,4.549,397,3.643,410,2.106,428,4.549,434,4,438,4.549,459,2.635,464,3.215,483,3.089,519,3.428,554,4.864,602,4.864,611,4.864,615,4.864,648,4.864,721,4.864,731,4.864,826,3.976,868,4.113,1338,3.053,1350,2.951,1351,2.858,1357,7.043,1377,5.143,1410,3.948,1437,4.994,1517,3.266,1607,4.549,1639,2.858,1846,4.549,1854,3.24,1893,4.864,3172,5.525,3699,6.137,3700,6.137,3701,6.137,3702,6.137,3703,6.137,3704,6.137,3705,6.137]],["title/setup/release-notes/#sedona-viz",[2,1.341,1188,2.655]],["text/setup/release-notes/#sedona-viz",[27,3.517,31,3.029,35,2.889,55,3.387,409,4.917,826,3.754,943,4.869,945,6.913,1213,5.418,1413,5.608,1674,7.741,1713,6.762,1720,9.17,1750,5.824,1786,4.917,1821,5.904]],["title/setup/release-notes/#sedona-python",[2,1.341,43,2.34]],["text/setup/release-notes/#sedona-python",[2,2.257,6,3.042,12,0.46,35,3.33,43,3.941,80,4.37,97,1.662,239,3.477,361,4.188,483,3.163,491,4.051,826,3.587,830,3.856,883,3.281,1357,5.492,1412,4.825,1499,5.806,1872,6.765,2067,5.067,3706,8.535,3707,8.535,3708,8.535,3709,8.535]],["title/setup/release-notes/#geospark-legacy-release-notes",[5,1.833,53,1.219,91,1.459,3710,4.408]],["text/setup/release-notes/#geospark-legacy-release-notes",[]],["title/setup/release-notes/#v131",[1347,6.83]],["text/setup/release-notes/#v131",[5,1.908,12,0.661,27,1.806,34,1.081,35,2.88,43,3.408,53,2.847,65,3.032,69,1.621,83,4.511,97,0.893,107,0.893,136,3.421,228,2.111,250,2.483,360,3.277,361,2.251,370,2.124,435,3.121,466,2.098,476,3.473,483,3.302,491,2.178,528,3.17,626,3.473,677,3.277,724,3.473,780,3.798,877,2.061,883,1.764,884,1.716,904,3.032,921,2.251,1183,1.724,1188,1.992,1202,2.332,1308,1.992,1311,1.86,1332,3.402,1337,2.137,1348,3.075,1349,5.002,1350,4.57,1351,4.426,1352,2.442,1353,2.915,1354,4.132,1355,3.032,1356,4.132,1357,7.322,1358,4.132,1359,3.402,1360,5.247,1361,4.132,1362,4.132,1363,4.132,1364,4.132,1365,4.132,1366,4.132,1367,3.637,1368,4.132,1369,3.637,1370,4.132,1371,4.132,1372,4.132,1373,4.132,1374,4.132,1375,4.132,1376,4.132,1377,3.846,1378,4.132,1379,4.132,1380,3.846,1381,4.132,1382,4.132,1383,4.132,1384,2.952,1385,3.473,1386,4.132,1387,4.132,1388,3.846,1389,3.846,1390,4.132,1391,4.132,1392,4.132,1393,4.132,1394,3.637,1395,3.637,1396,4.132,1397,4.132,1398,3.846,1399,3.846,1400,4.132,1401,4.132,1402,3.846,1403,3.17,1404,3.17,1405,4.132,1406,4.132,1407,4.132,1408,4.132]],["title/setup/release-notes/#v130",[110,3.913]],["text/setup/release-notes/#v130",[5,3.971,43,3.653,53,2.641,1349,5.923,1350,4.591,1409,6.82,1410,6.144]],["title/setup/release-notes/#v120",[138,3.722]],["text/setup/release-notes/#v120",[6,2.62,7,0.537,12,0.616,14,2.388,19,1.203,27,2.379,31,1.335,34,1.172,35,3.036,53,2.971,54,2.113,69,2.135,83,4.416,84,2.077,88,4.509,89,2.719,96,1.573,97,0.767,111,0.602,115,2.813,136,4.161,178,2.187,214,2.113,239,1.605,244,2.502,250,3.27,303,2.126,352,2.679,357,4.316,370,2.797,390,0.877,410,2.074,466,1.801,479,2.066,483,3.48,491,2.868,519,1.33,520,2.113,538,2.047,541,2.887,639,2.032,716,2.981,816,2.765,820,3.748,826,3.466,828,2.813,883,3.42,884,1.473,904,2.603,931,2.981,935,2.981,936,2.981,938,2.981,943,1.812,945,3.047,971,3.536,1150,1.987,1183,1.48,1188,1.71,1193,2.765,1202,3.072,1226,2.981,1233,3.536,1235,2.64,1242,2.765,1250,2.567,1261,2.721,1263,2.567,1272,3.205,1308,2.623,1350,4.277,1351,3.841,1357,5.306,1359,5.452,1360,4.676,1385,2.981,1394,3.122,1395,3.122,1402,3.301,1403,2.721,1404,2.721,1411,3.412,1412,2.226,1413,3.793,1414,3.301,1415,3.546,1416,3.546,1417,3.546,1418,4.175,1419,3.546,1420,3.546,1421,3.546,1422,3.546,1423,3.546,1424,3.546,1425,2.981,1426,3.122,1427,3.546,1428,3.546,1429,3.047,1430,2.765,1431,3.546,1432,3.546,1433,3.546,1434,2.472,1435,3.546,1436,3.546,1437,4.918,1438,3.412,1439,2.472,1440,3.546,1441,3.546,1442,3.546,1443,3.546,1444,2.291,1445,2.047,1446,4.48,1447,3.047,1448,3.546,1449,3.546,1450,3.546,1451,3.546,1452,3.546,1453,3.546,1454,3.546,1455,3.546,1456,3.546,1457,3.546,1458,3.546,1459,3.546,1460,3.546,1461,3.546,1462,3.546,1463,3.546,1464,3.546,1465,3.546]],["title/setup/release-notes/#v113",[1274,6.357]],["text/setup/release-notes/#v113",[12,0.586,27,3.233,34,1.309,53,3.136,69,2.903,83,3.507,107,1.599,239,3.347,390,1.829,466,3.756,520,4.408,884,3.763,971,3.95,1183,3.086,1188,3.565,1350,3.95,1351,4.686,1357,5.285,1466,6.884,1467,7.396,1468,6.884,1469,4.058,1470,7.396,1471,7.396,1472,7.317]],["title/setup/release-notes/#v112",[1473,6.83]],["text/setup/release-notes/#v112",[6,1.871,7,0.716,12,0.655,34,0.837,53,2.409,59,2.108,69,2.642,83,4.282,96,2.097,97,1.456,107,1.456,108,0.899,118,2.129,121,2.709,125,1.938,162,3.423,163,3.025,174,2.535,199,1.628,239,4.37,321,1.982,350,3.687,361,2.576,466,2.401,471,2.89,482,2.69,519,2.525,541,2.508,545,2.492,558,4.923,601,3.336,654,3.378,725,3.819,791,3.687,830,2.372,856,5.659,884,1.964,961,2.818,1183,1.973,1188,2.279,1199,3.117,1350,2.525,1351,4.419,1357,6.901,1468,4.401,1469,2.594,1472,3.819,1474,5.438,1475,3.572,1476,3.423,1477,4.728,1478,6.732,1479,6.732,1480,5.927,1481,6.59,1482,6.732,1483,5.659,1484,4.401,1485,4.401,1486,3.572,1487,3.974,1488,4.728,1489,4.728,1490,4.728,1491,4.273,1492,4.728,1493,4.728,1494,4.728,1495,4.728,1496,3.519,1497,4.728,1498,3.336,1499,3.572,1500,4.728,1501,3.75,1502,4.401,1503,2.818,1504,4.728]],["title/setup/release-notes/#v111",[533,5.517]],["text/setup/release-notes/#v111",[5,3.971,908,5.555,1308,4.145,1309,5.124,1409,6.82,1410,6.144,1496,6.4]],["title/setup/release-notes/#v110",[673,4.005]],["text/setup/release-notes/#v110",[6,3.109,7,1.189,12,0.655,19,2.29,25,3.469,34,0.84,35,1.704,38,5.178,53,2.778,69,2.649,83,4.456,107,1.026,118,2.136,174,1.786,239,4.374,303,1.854,404,3.39,405,3.39,406,3.988,407,3.988,408,2.782,471,2.9,478,2.76,480,2.659,519,1.779,522,3.988,556,3.522,596,3.988,639,2.718,645,4.288,820,4.649,883,3.354,884,1.97,1048,3.482,1051,3.763,1188,2.287,1202,2.678,1308,2.287,1309,2.827,1351,4.676,1357,6.714,1359,3.906,1430,3.699,1434,3.307,1505,3.699,1506,4.416,1507,5.584,1508,4.704,1509,5.051,1510,4.744,1511,4.077,1512,7.855,1513,4.744,1514,4.744,1515,3.39,1516,4.416,1517,2.804,1518,4.744,1519,4.416,1520,3.231,1521,4.744,1522,4.744,1523,4.744,1524,4.288,1525,4.744,1526,4.744,1527,4.744]],["title/setup/release-notes/#v101",[640,5.24]],["text/setup/release-notes/#v101",[6,2.992,7,1.144,12,0.615,34,1.625,53,3.159,83,4.354,303,2.954,480,4.236,558,4.746,623,6.353,884,3.139,1188,3.644,1308,3.644,1317,5.894,1319,6.224,1351,4.748,1472,6.105,1499,5.71,1528,7.559,1529,5.401]],["title/setup/release-notes/#v100",[475,2.889]],["text/setup/release-notes/#v100",[5,3.453,6,2.959,34,1.614,53,3.147,89,2.738,125,3.064,390,1.848,450,5.648,451,5.648,452,5.648,465,4.16,883,3.192,884,3.105,905,6.039,1188,4.396,1202,5.148,1260,3.993,1296,8.488,1327,6.284,1530,5.092,1531,4.19,1532,7.476,1533,5.83,1534,4.384]],["title/setup/release-notes/#v091-geospark-core",[53,1.417,884,1.916,1535,4.613]],["text/setup/release-notes/#v091-geospark-core",[6,2.583,12,0.603,27,1.979,31,1.704,35,1.625,53,1.39,55,1.906,59,2.017,83,3.094,85,2.417,89,1.657,97,0.978,103,1.122,107,0.978,116,1.799,118,2.038,179,2.477,213,4.362,239,2.952,247,1.932,266,3.193,318,3.161,321,1.897,340,4.362,370,2.326,378,3.529,390,1.119,401,2.816,457,1.887,478,3.796,482,1.553,483,1.863,508,2.466,544,2.743,556,1.863,558,2.841,638,3.59,643,3.889,644,3.804,658,2.112,717,3.321,722,3.155,767,3.419,777,3.829,780,2.816,828,3.59,830,2.271,831,3.655,883,2.786,923,3.321,924,3.193,958,3.375,1350,2.417,1351,3.957,1357,4.663,1469,2.483,1476,3.277,1491,4.091,1506,4.213,1507,4.258,1508,3.155,1509,3.508,1515,3.234,1520,4.444,1536,4.526,1537,4.526,1538,4.526,1539,4.526,1540,4.526,1541,4.355,1542,3.155,1543,3.889,1544,3.984,1545,4.526,1546,4.355,1547,2.433,1548,4.526,1549,3.048,1550,4.526,1551,4.526,1552,4.091,1553,4.526,1554,4.526,1555,4.526,1556,4.526,1557,3.984,1558,3.804,1559,4.213,1560,3.419,1561,4.526,1562,6.073,1563,6.525,1564,3.655,1565,4.213,1566,2.536]],["title/setup/release-notes/#v082-geospark-core",[53,1.417,884,1.916,1567,4.613]],["text/setup/release-notes/#v082-geospark-core",[12,0.533,35,2.586,83,3.416,92,3.551,96,3.195,239,3.259,250,4.328,302,4.292,390,1.781,408,4.224,478,4.191,482,3.058,483,2.965,558,4.522,821,5.021,830,3.614,877,3.593,901,4.7,1048,5.286,1183,3.005,1350,4.76,1351,4.61,1445,4.158,1568,7.203,1569,2.913,1570,3.749,1571,7.203,1572,7.203,1573,8.913,1574,6.704,1575,6.704,1576,7.203,1577,4.799]],["title/setup/release-notes/#v081-geospark-core",[53,1.417,884,1.916,1578,4.613]],["text/setup/release-notes/#v081-geospark-core",[12,0.46,35,2.76,53,2.361,92,3.789,96,3.409,121,4.403,174,2.894,198,2.321,398,4.159,412,5.492,501,3.081,504,6.207,505,7.231,541,4.077,632,6.46,968,5.294,971,4.104,1338,5.123,1350,4.104,1351,4.796,1517,4.543,1579,7.685,1580,7.685]],["title/setup/release-notes/#v080-geospark-core",[53,1.417,884,1.916,1581,4.613]],["text/setup/release-notes/#v080-geospark-core",[6,1.325,7,0.507,12,0.599,27,2.275,35,1.869,40,2.254,52,3.628,53,2.812,55,1.41,69,1.314,83,2.468,84,1.05,92,1.651,93,2.581,96,4.061,97,1.557,105,1.918,106,2.96,108,1.369,111,1.324,118,2.343,121,3.659,174,1.96,198,1.572,200,1.995,204,2.029,213,2.455,239,1.515,247,1.429,301,2.947,318,2.816,340,1.579,371,3.628,390,2.356,408,4.843,410,3.286,414,2.23,426,2.61,460,2.185,464,1.948,477,2.947,478,3.028,482,2.191,483,2.142,503,2.814,504,2.704,505,2.61,519,1.256,541,1.776,555,2.28,558,3.268,573,2.965,633,1.69,637,4.399,658,1.562,686,2.659,722,3.628,768,3.052,777,3.498,780,3.973,806,2.492,826,1.562,830,3.204,831,2.704,872,2.947,877,2.596,883,1.429,895,1.596,917,2.704,921,1.824,958,1.731,1085,2.529,1183,3.005,1350,2.779,1351,2.692,1439,3.628,1469,2.856,1486,2.529,1507,4.7,1508,4.451,1531,2.917,1552,3.026,1566,1.876,1582,2.122,1583,2.947,1584,3.116,1585,3.348,1586,4.979,1587,3.993,1588,3.348,1589,3.348,1590,3.348,1591,3.348,1592,2.392,1593,3.348,1594,3.026,1595,2.704,1596,3.221,1597,2.492,1598,3.348,1599,3.348,1600,3.348,1601,3.348,1602,3.348,1603,5.205,1604,3.348,1605,2.568,1606,6.704,1607,4.285,1608,3.348,1609,3.348,1610,3.116,1611,3.348,1612,3.348,1613,4.979,1614,3.348,1615,2.947,1616,3.993,1617,4.824,1618,2.947,1619,3.116,1620,3.348,1621,3.116]],["title/setup/release-notes/#v01-v07",[1622,5.507,1623,5.507]],["text/setup/release-notes/#v01-v07",[5,1.072,6,2.934,7,0.586,12,0.558,15,3.214,16,2.58,18,1.617,19,0.787,27,3.054,28,1.223,31,2.791,35,1.789,40,1.005,51,1.319,52,1.617,53,2.687,54,1.383,57,1.193,59,1.034,65,1.703,69,1.955,80,2.202,83,2.759,84,1.214,85,1.239,90,1.994,92,2.457,93,1.151,96,1.718,97,0.502,98,0.973,103,0.575,108,1.106,111,0.987,116,1.539,118,2.243,121,3.333,126,1.055,136,1.3,168,1.888,169,1.394,174,2.631,175,1.77,179,0.881,198,2.11,214,1.383,226,1.727,230,2.387,235,1.95,239,1.05,247,0.991,255,1.803,303,2.73,318,2.103,321,2.438,324,2.081,340,2.35,349,1.264,356,1.383,390,2.243,392,1.931,398,3.148,401,2.409,405,1.658,408,1.361,409,1.418,420,1.47,421,1.58,423,1.112,482,1.329,483,2.394,484,1.58,501,0.93,510,1.617,520,1.383,541,2.054,545,2.041,555,1.58,556,0.955,558,2.431,573,2.662,619,1.841,650,1.703,654,1.658,717,1.703,722,2.699,725,1.874,768,1.361,777,2.742,778,1.546,780,1.444,783,1.931,785,1.95,794,1.005,806,1.727,813,4.386,823,1.485,824,1.58,825,1.658,826,1.807,830,1.943,860,2.043,877,1.157,879,1.617,883,2.983,899,0.959,904,1.703,926,1.874,947,1.753,958,2.577,966,2.16,968,4.455,971,2.068,999,1.171,1012,1.418,1048,1.703,1183,2.915,1185,2.11,1192,3.127,1199,1.53,1201,1.95,1245,1.418,1263,1.68,1264,2.925,1310,2.097,1311,2.243,1327,4.889,1338,1.282,1350,4.309,1351,4.613,1410,1.658,1444,2.502,1445,1.34,1469,1.273,1475,1.753,1476,1.68,1485,2.16,1486,1.753,1503,1.383,1517,1.372,1531,1.3,1534,1.361,1542,1.617,1543,1.383,1547,2.081,1558,1.95,1565,2.16,1566,2.17,1574,2.16,1575,2.16,1586,3.885,1595,1.874,1606,2.16,1615,2.043,1624,2.16,1625,2.32,1626,2.32,1627,2.043,1628,2.16,1629,1.874,1630,2.16,1631,2.32,1632,3.127,1633,2.097,1634,2.32,1635,1.95,1636,1.703,1637,3.872,1638,2.842,1639,1.2,1640,2.043,1641,2.32,1642,2.32,1643,2.097,1644,2.16,1645,2.16,1646,3.657,1647,2.32,1648,2.32,1649,2.32,1650,4.394,1651,4.463,1652,1.658,1653,2.32,1654,2.32,1655,2.233,1656,2.32,1657,1.841,1658,1.753,1659,1.78,1660,1.35,1661,2.32,1662,2.32,1663,2.32,1664,2.32,1665,2.32,1666,1.809,1667,3.872,1668,1.383,1669,1.809,1670,1.637,1671,2.32,1672,3.872,1673,1.617,1674,2.233,1675,2.32,1676,2.32,1677,2.32,1678,2.32,1679,2.32,1680,1.994,1681,1.617,1682,1.58,1683,2.32,1684,3.604,1685,2.32,1686,2.097,1687,1.658,1688,1.658,1689,2.32,1690,2.32,1691,1.418,1692,2.32,1693,2.043,1694,2.32,1695,2.32,1696,2.32,1697,1.95,1698,1.809,1699,1.95,1700,2.32,1701,1.841]],["title/setup/release-notes/#geospark-viz-old",[52,3.216,53,1.417,1188,2.224]],["text/setup/release-notes/#geospark-viz-old",[6,3.239,12,0.576,15,3.931,27,3.111,30,5.296,31,1.926,40,2.215,52,3.565,55,2.153,69,2.792,83,2.425,84,1.604,93,2.536,96,2.269,97,1.538,108,1.353,111,1.208,174,1.926,198,1.545,247,2.184,255,2.961,364,3.959,483,3.641,545,2.696,621,4.211,654,3.655,779,3.126,780,3.182,883,2.184,943,5.225,1185,2.787,1212,5.548,1213,4.792,1236,3.703,1243,3.372,1253,3.864,1327,7.815,1328,4.761,1350,3.8,1351,3.68,1384,3.655,1530,3.483,1531,2.866,1542,3.565,1582,3.241,1586,3.988,1615,4.502,1624,4.761,1632,4.131,1643,4.623,1644,4.761,1645,4.761,1650,5.375,1651,6.278,1668,3.048,1702,5.115,1703,5.115,1704,5.115,1705,5.115,1706,4.131,1707,4.502,1708,7.115,1709,4.502,1710,4.131,1711,5.115,1712,5.115,1713,5.981,1714,5.115,1715,5.115,1716,5.115,1717,5.115,1718,5.115,1719,5.115,1720,4.921,1721,4.623]],["title/setup/zeppelin/",[2,1.123,1233,2.463,1729,2.109]],["text/setup/zeppelin/",[2,2.558,6,1.723,7,0.96,12,0.613,15,2.406,19,2.54,32,3.649,34,0.771,38,3.34,53,1.338,59,1.941,83,3.009,84,1.99,89,1.594,91,1.601,92,3.128,97,0.941,107,0.941,116,1.731,123,2.531,125,1.784,126,2.885,174,2.389,176,2.087,179,2.409,198,1.315,204,2.638,223,2.999,239,1.97,321,2.659,410,2.418,449,2.514,457,1.259,501,2.544,516,2.372,519,1.633,612,2.224,692,4.053,826,2.032,859,3.833,883,2.709,884,1.808,995,1.941,1173,2.638,1185,4.481,1188,2.099,1206,3.833,1212,3.395,1213,5.041,1214,3.289,1233,5.647,1260,4.392,1311,1.96,1352,3.75,1410,3.111,1413,3.035,1503,2.595,1682,2.965,1729,2.9,1750,3.152,1759,3.111,1793,2.458,1807,3.072,1836,4.354,1837,4.354,1838,3.289,1839,2.999,1840,4.354,1841,3.742,1842,3.66,1843,6.643,1844,5.333,1845,4.354,1846,3.585,1847,5.224,1849,4.053,1850,4.354,1851,4.354,1852,4.354,1853,4.354,1854,3.721,1855,4.354,1856,3.241,1857,4.053,1858,4.053,3558,4.656,3674,4.189,3711,4.836,3712,4.836]],["title/setup/zeppelin/#install-sedona-zeppelin",[2,1.123,1233,2.463,1729,2.109]],["text/setup/zeppelin/#install-sedona-zeppelin",[2,1.791,12,0.44,32,4.763,59,3.279,83,4.282,84,2.307,97,1.59,107,1.59,116,2.924,125,3.015,176,3.527,179,3.428,223,5.068,516,4.008,1185,4.008,1206,6.476,1212,5.736,1213,6.58,1233,4.822,1410,5.257,1682,5.01,1836,7.357,1837,7.357,1838,5.557,1839,5.068,1840,7.357,3558,5.399]],["title/setup/zeppelin/#compatibility",[1841,5.869]],["text/setup/zeppelin/#compatibility",[2,2.575,7,1.247,19,3.279,34,1.458,38,6.32,884,3.421,1188,3.971,1233,4.399,1842,6.923,3674,7.926]],["title/setup/zeppelin/#installation",[1729,3.122]],["text/setup/zeppelin/#installation",[2,2.005,19,2.795,53,2.531,91,3.028,174,3.102,198,2.488,239,3.727,410,3.14,612,4.208,1233,5.161,1503,4.909,1793,4.65,1843,6.653]],["title/setup/zeppelin/#create-helium-folder-optional",[123,1.342,126,1.805,1260,2.119,1843,3.206]],["text/setup/zeppelin/#create-helium-folder-optional",[92,4.239,123,2.907,1173,5.21,1233,4.591,1260,5.291,1843,6.944]],["title/setup/zeppelin/#add-sedona-zeppelin-description-optional",[2,0.848,126,1.584,883,1.487,1233,1.86,1844,2.927]],["text/setup/zeppelin/#add-sedona-zeppelin-description-optional",[2,2.362,6,2.866,12,0.535,92,3.57,123,2.448,174,2.726,204,4.388,410,2.76,457,2.093,501,3.585,519,2.715,826,3.379,859,6.374,995,3.228,1185,4.872,1214,5.47,1233,4.775,1260,3.867,1413,5.047,1844,6.086,1845,7.24,1846,5.962,1847,7.362,1849,6.739,1850,7.24,1851,7.24,1852,7.24,1853,7.24,3711,8.041,3712,8.041]],["title/setup/zeppelin/#enable-sedona-zeppelin",[2,1.123,1233,2.463,1854,2.705]],["text/setup/zeppelin/#enable-sedona-zeppelin",[2,2.067,1233,5.546,1807,5.992,1843,6.858,1854,4.979,1855,8.491,1856,6.321]],["title/setup/zeppelin/#add-sedona-dependencies-in-zeppelin-spark-interpreter",[2,0.755,7,0.47,692,2.888,883,1.325,1233,1.657,1311,1.397]],["text/setup/zeppelin/#add-sedona-dependencies-in-zeppelin-spark-interpreter",[]],["title/setup/zeppelin/#visualize-sedonasql-results",[321,1.933,449,2.663,1185,2.514]],["text/setup/zeppelin/#visualize-sedonasql-results",[]],["title/setup/zeppelin/#display-sedonaviz-results",[321,1.933,1857,4.294,3558,3.385]],["text/setup/zeppelin/#display-sedonaviz-results",[2,2.054,15,4.663,84,2.647,89,3.09,1233,4.507,1352,5.794,1750,6.11,1759,6.031,1858,7.855]],["title/setup/flink/install-scala/",[2,1.123,87,3.073,1729,2.109]],["text/setup/flink/install-scala/",[2,2.499,10,6.309,12,0.45,19,1.882,40,3.258,57,3.867,84,1.74,89,2.755,93,3.731,97,1.846,123,2.544,303,2.168,344,3.821,355,6.101,410,2.868,454,5.338,457,1.604,462,4.568,466,4.335,501,2.224,517,4.389,518,4.785,529,3.132,658,2.589,694,4.016,718,4.326,794,4.273,880,3.023,883,3.212,885,3.391,886,3.391,1010,3.087,1052,4.4,1173,3.362,1260,2.962,1308,3.627,1309,3.306,1311,3.844,1338,3.065,1569,3.043,1570,3.916,1597,4.129,1636,5.522,1639,3.891,1771,3.109,1781,4.768,1784,5.547,1785,4.4,1793,3.132,1795,3.62,1799,5.164,3713,6.695]],["title/setup/flink/modules/",[1412,4.288]],["text/setup/flink/modules/",[2,1.8,10,5.973,12,0.61,19,2.51,25,3.802,27,3.233,28,3.899,31,2.785,34,1.604,35,2.656,43,3.143,87,4.928,102,1.561,318,2.226,390,2.421,691,6.649,772,6.036,884,3.072,995,3.297,1412,4.644,3359,7.396,3594,6.844,3714,8.214]],["title/setup/flink/modules/#sedona-modules-for-apache-flink",[2,0.966,10,2.617,19,1.347,1412,2.492]],["text/setup/flink/modules/#sedona-modules-for-apache-flink",[10,5.304,31,3.029,34,1.687,35,2.889,102,1.698,318,2.421,390,2.511,691,6.994,772,5.36,884,3.341,995,3.586,3359,8.045,3594,6.077,3714,8.935]],["title/setup/flink/modules/#api-availability",[27,2.407,28,2.903]],["text/setup/flink/modules/#api-availability",[12,0.592,25,4.419,43,3.653,87,5.728,772,5.728,3594,6.495]],["title/setup/flink/platform/",[1349,3.793,1804,4.368]],["text/setup/flink/platform/",[2,2.227,5,3.472,10,6.767,11,6.997,12,0.64,40,4.271,41,5.862,42,5.596,56,4.764,87,5.008,93,3.728,349,4.096,457,2.174,1231,5.008,1638,5.517,1639,3.888,3715,9.072,3716,9.072,3717,9.072]],["title/tutorial/Advanced-Tutorial-Tune-your-Application/",[882,2.844,1183,1.925,1859,3.385]],["text/tutorial/Advanced-Tutorial-Tune-your-Application/",[2,2.01,5,0.969,7,0.924,12,0.618,19,1.571,27,2.669,31,1.339,35,0.753,49,1.539,50,1.028,52,1.462,55,2.571,59,1.585,66,3.085,69,3.24,83,0.995,84,1.452,89,0.768,91,1.702,92,1.034,95,1.369,96,2.419,97,1.869,98,1.491,105,1.202,106,2.023,111,0.786,118,0.944,121,3.498,125,1.458,126,0.954,174,0.79,179,0.796,213,2.184,222,1.184,230,1.293,232,2.76,247,0.896,318,2.736,335,1.397,340,2.184,344,1.065,355,1.499,361,2.523,371,2.479,386,1.24,390,2.329,394,3.869,408,2.086,410,1.765,415,2.873,425,2.321,457,1.028,458,1.369,460,2.321,461,1.355,466,2.769,482,2.552,483,1.464,484,4.517,488,2.45,510,1.462,517,1.828,518,1.993,529,2.008,545,1.875,556,2.91,573,1.464,633,1.795,635,1.539,636,1.896,637,2.45,639,1.202,658,1.66,660,1.694,693,1.585,777,2.919,779,2.174,780,3.393,783,2.31,807,2.61,826,3.096,830,3.063,858,1.397,866,3.398,867,1.585,877,2.31,882,2.193,895,1,913,1.462,920,2.687,922,1.519,927,2.37,957,1.413,958,1.085,971,1.899,1012,2.83,1183,3.969,1217,1.846,1229,1.727,1245,4.054,1285,1.609,1350,1.12,1351,1.085,1352,2.102,1384,1.499,1434,1.462,1474,4.405,1475,1.585,1476,1.519,1503,1.25,1509,1.128,1517,3.224,1531,3.056,1542,1.462,1543,2.76,1547,1.128,1558,1.763,1566,2.595,1577,2.37,1582,1.329,1586,2.773,1592,1.499,1605,1.609,1613,3.611,1616,1.609,1617,3.498,1618,3.131,1659,2.729,1669,5.172,1687,2.542,1693,1.846,1699,2.99,1770,1.445,1785,1.664,1789,1.727,1800,1.397,1808,2.479,1810,2.99,1812,1.539,1821,3.398,1842,2.99,1859,2.61,1860,1.846,1861,2.99,1862,2.098,1863,4.31,1866,2.098,1867,1.803,1869,2.098,1870,2.098,1871,1.952,1872,4.076,1873,2.098,1874,2.098,1875,1.694,1876,1.636,1877,4.481,1878,2.687,1879,3.557,1880,3.557,1881,2.99,1882,2.99,1883,2.821,1884,3.131,1885,3.131,1886,3.557,1887,2.098,1888,1.694,1889,3.557,1890,2.098,1891,2.098,1892,1.609,1893,3.131,1894,2.098,1895,2.098,1896,4.631,1897,3.557,1898,3.131,1899,2.098,1900,3.557,1901,2.098,1902,1.952,1903,1.585,1904,3.557,1905,2.99,1906,2.098,1907,2.098,1908,2.098,1909,2.098,1910,2.098,1911,2.098,1912,1.846,1913,2.098,1914,2.098,1915,2.098,1916,1.952,1917,2.098,1918,2.098,1919,2.098]],["title/tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application",[2,0.755,882,1.913,920,2.344,1183,1.294,1352,1.834,1859,2.277]],["text/tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application",[2,2.017,35,2.976,84,2.599,517,4.26,518,4.644,529,4.678,895,3.951,920,6.26,1352,4.899,1474,6.693,1770,5.709,1789,6.823,1860,7.295]],["title/tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version",[2,0.966,69,1.558,1808,2.767,1861,3.336]],["text/tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version",[2,2.24,5,2.593,27,4.201,49,4.121,52,3.914,69,4.139,84,1.761,89,2.056,91,2.064,95,3.664,96,3.365,98,2.354,410,2.14,466,4.672,483,3.123,510,3.914,517,2.886,518,3.147,529,3.17,633,2.834,635,4.121,660,4.536,779,4.637,780,5.345,826,4.485,922,4.066,957,3.782,1245,6.053,1350,2.999,1351,2.904,1434,3.914,1475,4.242,1586,5.915,1659,4.308,1785,4.454,1800,3.741,1821,6.305,1842,6.376,1861,4.72,1862,5.615,1863,7.996,1866,5.615,1867,4.826,1869,5.615,1870,5.615,1871,5.227,1872,7.563,1873,5.615,1874,5.615,1875,4.536,1876,4.379]],["title/tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor",[121,1.995,390,0.861,1183,1.453,1605,2.672,1808,2.428]],["text/tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor",[2,2.017,7,0.972,12,0.652,19,2.178,31,1.666,50,2.169,55,1.863,59,1.972,66,5.033,92,2.181,97,1.388,105,2.535,106,3.65,111,1.09,118,1.992,121,4.328,125,2.63,126,2.012,179,1.679,213,2.087,222,2.497,247,1.889,318,1.932,344,2.246,361,2.411,371,4.474,390,1.587,394,5.576,408,2.594,415,5.184,425,4.188,457,1.856,460,2.887,482,2.843,484,4.371,488,4.421,637,4.421,658,2.065,777,2.519,783,2.207,830,3.221,867,3.342,877,3.768,927,2.947,971,2.362,1012,2.704,1183,2.678,1285,3.394,1384,3.161,1474,5.184,1531,4.233,1547,2.378,1577,4.276,1582,2.804,1592,3.161,1613,5.89,1616,3.394,1617,5.706,1618,5.65,1659,3.394,1669,3.45,1687,3.161,1693,3.894,1877,6.081,1878,3.342,1879,6.418,1880,6.418,1881,5.395,1882,5.395,1883,5.091,1884,5.65,1885,5.65,1886,6.418,1887,4.424,1888,3.573,1889,6.418,1890,4.424,1891,4.424,1892,3.394,1893,3.894,1894,4.424]],["title/tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used",[97,0.753,390,0.861,1183,1.453,1669,2.716,1895,3.483]],["text/tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used",[7,0.943,12,0.559,31,1.599,55,3.422,59,1.893,83,2.014,84,1.332,91,2.29,96,1.884,97,2.115,98,1.78,121,2.433,213,2.938,232,4.397,318,3.127,340,3.48,355,3.034,386,2.51,390,2.568,410,2.375,460,2.771,461,2.744,482,2.138,484,5.535,545,3.284,556,3.848,573,2.564,639,2.433,658,1.982,777,3.55,783,3.107,830,2.131,858,2.829,866,5.415,882,2.618,913,2.96,927,2.829,971,2.268,1012,2.596,1183,4.297,1217,3.738,1229,3.497,1474,3.43,1517,3.682,1543,3.713,1558,3.569,1566,4.135,1669,5.753,1687,3.034,1699,5.236,1810,5.236,1877,3.116,1878,3.208,1896,7.378,1897,6.23,1898,5.484,1899,4.246,1900,6.23,1901,4.246,1902,3.953,1903,3.208,1904,6.23,1905,5.236,1906,4.246,1907,4.246,1908,4.246,1909,4.246,1910,4.246,1911,4.246,1912,3.738,1913,4.246,1914,4.246,1915,4.246]],["title/tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions",[390,0.981,830,1.991,1183,1.656,1916,3.694]],["text/tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions",[7,1.079,19,2.419,96,3.162,97,1.541,111,1.21,174,2.684,230,4.395,335,4.749,361,4.825,408,4.18,458,4.651,482,3.038,633,3.598,636,6.443,693,5.385,780,4.435,807,6.499,826,3.327,830,3.577,958,3.687,1012,4.357,1183,2.974,1476,5.161,1503,4.248,1509,3.832,1517,5.235,1531,3.995,1542,4.969,1543,4.248,1669,5.558,1812,5.231,1859,5.231,1893,6.275,1917,7.128,1918,7.128,1919,7.128]],["title/tutorial/benchmark/",[1923,6.012]],["text/tutorial/benchmark/",[2,2.478,6,2.656,12,0.401,34,1.188,49,4.925,69,3.346,83,3.182,84,2.939,97,2.132,480,4.778,556,2.762,717,4.925,768,3.935,779,5.211,780,4.175,807,4.925,884,2.787,1410,4.795,1509,3.608,1520,4.57,1543,3.999,1544,5.907,1570,3.493,1682,4.57,1688,4.795,1756,4.57,1807,4.735,1812,4.925,1923,8.249,1924,5.42,1925,5.907,1926,6.066,1927,6.246,1928,5.64,1929,5.907,1930,6.711,1931,4.735,1932,6.711]],["title/tutorial/benchmark/#benchmark",[1923,6.012]],["text/tutorial/benchmark/#benchmark",[2,2.485,6,2.682,34,1.2,49,4.974,69,3.367,83,3.214,84,2.953,97,2.139,480,4.808,556,2.79,717,4.974,768,3.974,779,5.244,780,4.216,807,4.974,884,2.815,1410,4.843,1509,3.643,1520,4.615,1543,4.039,1544,5.966,1570,3.527,1682,4.615,1688,4.843,1756,4.615,1807,4.782,1812,4.974,1923,7.552,1924,5.474,1925,5.966,1926,6.125,1927,6.308,1928,5.696,1929,5.966,1930,6.777,1931,4.782,1932,6.777]],["title/tutorial/core-python/",[43,2.902]],["text/tutorial/core-python/",[2,1.407,6,0.216,7,0.541,12,0.676,15,0.576,19,1.012,25,0.769,27,0.455,28,0.287,31,0.72,32,1.12,34,0.097,35,0.687,43,1.632,50,0.267,51,1.808,55,1.117,59,1.823,83,0.709,84,0.935,85,0.291,87,0.363,88,0.709,89,1.204,91,0.975,96,0.462,97,1.643,98,1.378,102,0.115,103,0.952,105,2.047,107,1.338,108,0.822,111,0.558,112,0.19,116,1.054,118,0.469,121,0.597,123,1.208,125,0.613,126,0.474,133,1.851,134,0.418,136,1.287,156,1.219,158,0.325,162,0.395,163,1.224,168,0.933,169,1.594,170,0.346,174,0.392,176,0.261,179,1.878,180,2.165,199,0.791,201,0.31,213,1.407,214,0.621,215,0.966,222,0.308,224,0.66,230,0.336,236,0.425,247,1.526,248,0.884,255,1.079,295,0.637,306,0.295,318,2.197,321,2.423,324,0.293,340,1.251,343,1.838,344,0.529,356,0.325,389,1.177,390,1.824,398,0.295,408,0.32,420,0.346,422,2.429,424,0.787,449,0.864,456,0.597,457,1.535,459,1.265,465,1.829,478,0.606,479,1.357,480,0.306,482,2.738,484,0.709,485,0.799,486,1.445,488,0.718,491,2.505,492,1.492,493,0.349,500,0.395,501,2.194,507,0.892,508,1.042,516,0.297,519,1.855,520,0.621,538,0.864,539,0.841,540,0.367,541,1.219,544,0.33,556,2.253,571,0.917,573,2.647,575,0.709,586,1.89,604,0.425,612,1.174,613,0.765,633,0.275,634,0.458,635,0.4,638,0.432,650,0.4,651,0.291,658,0.893,670,1.722,686,0.279,691,0.765,703,0.765,768,0.611,777,1.865,780,0.648,782,0.877,783,1.146,784,0.39,808,0.637,829,0.425,830,1.793,841,0.507,843,0.765,865,0.406,877,0.954,880,1.042,882,0.336,884,0.795,891,0.317,893,0.312,895,0.26,899,3.225,901,0.976,913,0.726,915,0.44,918,2.054,921,0.568,923,0.765,924,0.735,942,0.406,951,0.787,957,0.702,961,0.325,964,0.346,971,1.592,993,0.673,994,0.812,995,0.853,999,2.99,1006,0.48,1010,2.644,1014,0.38,1085,0.412,1173,0.33,1183,2.064,1216,0.376,1245,0.914,1263,0.754,1265,0.754,1266,0.754,1290,0.342,1291,0.667,1337,0.282,1338,1.057,1348,0.775,1349,0.376,1352,0.322,1367,0.48,1369,0.48,1384,0.39,1412,1.201,1425,0.876,1426,0.917,1439,0.726,1445,0.315,1469,1.636,1496,0.406,1499,0.412,1507,1.946,1508,0.726,1509,1.426,1530,1.303,1542,0.38,1543,0.325,1547,1.028,1564,0.44,1566,1.487,1569,0.605,1582,0.346,1587,0.418,1592,0.744,1613,0.812,1646,1.686,1652,1.895,1660,2.379,1668,1.777,1670,2.32,1673,2.677,1682,0.371,1686,0.493,1687,0.744,1688,0.39,1691,0.914,1701,1.187,1706,0.44,1729,0.476,1734,0.787,1735,1.275,1753,0.395,1755,0.44,1776,0.432,1786,0.333,1803,1.841,1812,0.4,1819,0.412,1820,0.68,1825,0.458,1854,0.32,1859,0.4,1860,0.48,1876,0.425,1877,1.947,1878,0.787,1881,0.458,1882,1.608,1883,1.517,1884,2.022,1885,0.48,1898,0.917,1905,0.876,1931,0.735,1938,1.042,1939,0.97,1940,0.895,1941,0.469,1942,0.545,1943,0.876,1944,3.244,1945,0.97,1947,6.469,1948,0.545,1949,0.97,1950,0.97,1951,0.841,1952,0.754,1981,0.425,1982,0.376,1983,0.425,1984,1.367,1985,0.44,1986,1.042,1987,0.876,1989,1.913,1990,0.507,1991,0.507,1992,1.913,1993,0.44,1994,0.507,1995,0.507,1996,0.545,1997,1.042,1998,1.042,1999,0.545,2000,1.913,2001,2.936,2002,1.157,2003,0.606,2004,0.735,2005,2.125,2006,0.507,2007,0.48,2008,1.157,2010,4.585,2011,0.942,2012,0.606,2014,0.606,2015,0.545,2016,0.385,2017,0.412,2018,0.44,2019,0.545,2020,4.952,2021,1.684,2024,1.856,2025,2.972,2026,1.517,2027,1.517,2028,1.517,2029,1.517,2030,4.226,2031,2.159,2032,2.521,2033,4.51,2034,2.826,2035,1.763,2036,0.458,2037,0.418,2038,2.004,2039,2.335,2040,1.13,2041,0.48,2042,0.545,2043,0.545,2044,0.545,2045,0.545,2046,0.545,2047,1.042,2048,0.545,2049,0.545,2050,0.545,2051,0.799,2052,0.917,2053,0.876,2054,0.545,2055,0.48,2056,1.069,2057,0.48,2058,1.545,2059,0.744,2060,0.812,2061,0.812,2062,0.744,2063,0.812,2064,0.841,2065,3.13,2066,1.385,2067,3.262,2068,3.003,2069,2.104,2070,0.917,2071,0.48,2072,0.895,2073,0.841,2074,1.317,2075,0.48,2076,0.48,2077,0.48,2078,0.545,2079,4.76,2080,1.644,2081,1.913,2082,0.545,2083,0.545,2084,0.545,2085,0.545,2086,1.697,2087,0.545,2088,4.09,2089,0.545,2090,0.606,2091,1.042,2092,0.942,2093,0.545,2094,0.545,2095,0.48,2096,0.412,2097,1.822,2098,0.395,2099,0.545,2101,2.552,2102,2.552,2103,0.507,2104,0.606,2105,1.662,2106,0.606,2108,0.545,2110,0.545,2111,0.545,2112,0.545,2113,0.97,2114,0.545,2115,0.545,2117,0.545,2118,0.545,2214,1.367,2580,0.48,2741,1.008,3032,0.449,3498,0.826,3499,0.493,3505,0.44,3648,0.507,3718,2.211,3719,0.507,3720,3.146,3721,1.567,3722,0.658,3723,1.913,3724,3.514,3725,3.123,3726,1.157,3727,1.091,3728,1.091,3729,3.123,3730,0.606,3731,0.606,3732,1.091,3733,1.091,3734,1.091,3735,1.091,3736,0.658,3737,1.496,3738,1.841,3739,0.606,3740,0.606,3741,0.606,3742,0.606,3743,0.606]],["title/tutorial/core-python/#spatial-rdd-applications-in-python",[43,1.687,390,0.981,882,2.447,1183,1.656]],["text/tutorial/core-python/#spatial-rdd-applications-in-python",[]],["title/tutorial/core-python/#introduction",[102,1.442]],["text/tutorial/core-python/#introduction",[2,2.483,12,0.441,19,1.831,27,2.359,31,2.032,35,1.937,43,3.576,91,1.983,96,2.393,97,1.166,107,1.166,111,0.916,112,0.984,121,3.091,125,2.211,133,3.559,174,2.032,224,4.679,236,4.207,324,2.9,482,2.888,508,2.94,539,4.358,573,3.464,658,2.518,670,3.867,691,3.96,877,3.683,884,3.496,899,2.231,913,3.761,971,4.494,993,3.486,1338,2.981,1349,3.717,1352,3.189,1412,3.387,1469,4.05,1499,4.076,1509,2.9,1530,5.028,1646,5.418,1682,3.674,1687,3.855,1735,3.595,1753,3.906,1755,4.358,1776,4.28,1786,3.298,1877,3.96,1878,4.076,1938,7.383,1939,5.022,1940,4.636,1941,4.636,1942,5.395,1943,4.535,1944,4.28,1945,5.022,1947,5.757,1948,5.395,1949,6.872,1950,5.022,1951,4.358,2741,5.668,3032,4.442,3498,5.856,3499,4.876,3648,5.022,3718,5.191,3719,5.022]],["title/tutorial/core-python/#installation",[1729,3.122]],["text/tutorial/core-python/#installation",[2,2.093,43,3.653,84,2.697,89,3.148,344,4.366,865,6.4,1729,3.93]],["title/tutorial/core-python/#apache-sedona-serializers",[2,1.123,19,1.565,1509,2.48]],["text/tutorial/core-python/#apache-sedona-serializers",[2,1.717,12,0.668,107,1.525,222,3.982,389,3.903,488,4.86,556,2.904,891,4.105,893,4.042,993,4.558,1290,4.429,1291,5.629,1509,4.73,1543,4.204,1819,5.329,1820,4.604,1854,4.137,1981,5.501,1982,4.86,1983,5.501,1984,7.174,2001,4.558,3505,5.698]],["title/tutorial/core-python/#create-a-spatialrdd",[123,1.862,482,1.89]],["text/tutorial/core-python/#create-a-spatialrdd",[]],["title/tutorial/core-python/#create-a-typed-spatialrdd",[123,1.56,482,1.583,519,1.73]],["text/tutorial/core-python/#create-a-typed-spatialrdd",[2,1.822,12,0.673,19,2.153,27,1.903,35,1.563,50,2.135,51,2.161,84,1.366,87,2.901,97,1.372,108,1.206,121,2.495,136,2.44,156,2.31,163,2.786,174,1.639,179,1.653,199,2.185,343,1.761,344,2.211,420,2.759,424,4.793,459,3.025,478,2.533,482,2.568,488,2.999,538,3.663,541,2.31,691,3.195,877,2.172,884,1.808,899,3.095,957,2.932,964,2.759,1245,4.575,1263,3.152,1338,3.505,1439,3.035,1530,4.321,1613,4.947,1668,2.595,1687,3.111,1735,2.901,1877,6.416,1878,3.289,1881,3.66,1882,6.913,1883,6.524,1884,7.696,1885,3.833,1939,4.053,1940,3.742,1943,3.66,1944,3.454,1945,4.053,1952,4.593,1985,3.517,1986,6.344,1987,3.66,1989,8.224,1990,4.053,1991,4.053,1992,8.224,1993,3.517,1994,4.053,1995,4.053,1996,4.354,1997,6.344,1998,6.344,1999,4.354,2000,7.485,2001,4.836,3718,4.189,3720,3.833]],["title/tutorial/core-python/#read-other-attributes-in-an-spatialrdd",[89,1.689,482,1.583,971,2.463]],["text/tutorial/core-python/#read-other-attributes-in-an-spatialrdd",[12,0.643,32,3.37,51,2.355,59,3.873,96,3.066,97,1.495,107,1.495,125,2.833,180,5.265,343,2.796,389,3.066,390,1.709,457,1.999,482,2.372,484,4.708,520,4.12,650,5.073,783,3.448,971,4.639,994,6.774,995,3.082,1085,5.222,1263,5.005,1265,5.005,1266,5.005,1646,6.376,1691,4.225,1951,5.584,2016,4.878,2017,5.222,2018,5.584,2019,6.913,2020,5.146,2021,6.085]],["title/tutorial/core-python/#write-a-spatial-range-query",[318,1.195,340,1.872,390,0.981,880,2.163]],["text/tutorial/core-python/#write-a-spatial-range-query",[7,0.713,12,0.675,43,2.854,84,1.478,85,2.516,91,1.732,97,1.452,98,2.815,103,1.941,105,4.888,111,0.8,390,1.165,408,2.763,422,3.42,465,3.737,479,2.55,491,4.125,492,3.674,670,3.518,899,3.729,961,2.808,1183,1.966,1216,3.246,1412,2.958,1547,2.533,1592,3.367,1660,3.908,1803,7.53,2010,5.327,2024,6.321,2025,7.71,2026,5.327,2027,5.327,2028,5.327,2029,5.327,2030,7.024,2031,4.862,2032,4.739,2033,6.35,2034,6.725,2035,5.153,2214,3.367,3721,4.935,3723,6.716,3724,5.771,3725,8.196,3726,7.459,3727,4.935,3728,4.935]],["title/tutorial/core-python/#range-query-window",[318,1.388,340,2.176,1660,2.684]],["text/tutorial/core-python/#range-query-window",[2,1.903,19,2.652,84,2.452,88,5.323,105,4.478,107,1.69,116,3.107,123,2.643,168,3.81,179,2.967,318,2.82,340,4.419,457,2.26,508,5.104,519,2.931,1348,5.818,1660,5.45,1734,5.905,2036,6.57]],["title/tutorial/core-python/#use-spatial-indexes",[97,0.997,390,1.14,556,1.899]],["text/tutorial/core-python/#use-spatial-indexes",[2,1.822,12,0.666,25,2.829,51,1.874,59,2.453,97,1.19,103,1.365,105,4.287,247,2.349,318,2.252,340,2.596,343,3.026,389,2.441,390,2.102,422,3,457,1.591,465,3.062,482,1.888,519,2.806,556,3.756,777,2.16,830,2.761,843,4.039,877,2.745,895,2.624,899,3.516,901,3.591,921,2.999,1445,3.177,1507,5.548,1508,3.836,1569,2.226,1660,3.202,2010,5.936,2024,6.044,2025,6.763,2026,4.365,2027,4.365,2028,4.365,2029,4.365,2030,6.161,2031,3.984,2032,3.883,2033,5.57,2034,4.729,2035,4.222,2037,4.222,2038,5.653,2039,6.587,2040,4.157,3720,4.844,3723,5.503,3724,4.729]],["title/tutorial/core-python/#output-format",[108,1.047,255,1.993]],["text/tutorial/core-python/#output-format",[7,0.847,12,0.674,32,4.179,43,2.377,97,1.854,107,1.209,108,1.063,111,0.949,133,4.428,180,5.815,255,2.024,318,1.683,321,2.344,340,2.638,390,1.383,398,3.027,459,2.667,573,3.114,586,5.433,613,4.104,638,4.436,899,2.312,1183,3.577,1469,3.068,1646,4.104,1947,4.361,2021,6.66,2034,6.501,2035,4.291,2041,4.923,2042,5.593,2043,5.593,2044,5.593,2045,5.593,2046,5.593,2047,7.565,2048,5.593,2049,5.593,2050,5.593,2051,5.804,2052,6.66,2053,6.359,2054,5.593]],["title/tutorial/core-python/#write-a-spatial-knn-query",[318,1.195,390,0.981,880,2.163,1566,2.224]],["text/tutorial/core-python/#write-a-spatial-knn-query",[12,0.658,15,3.439,51,2.12,55,2.621,83,2.952,97,1.346,107,1.346,118,2.803,179,3.871,201,3.54,318,2.885,321,2.609,390,2.008,422,2.496,457,1.8,482,2.787,507,3.71,519,2.335,782,3.65,899,3.359,1183,2.597,1547,3.346,1566,3.489,1673,7.108,2020,4.634,2033,6.047,2055,5.48,2056,5.805,2057,5.48,2058,6.561,2059,4.448,2060,4.854,2061,4.854,2062,4.448,2063,4.854,3724,5.35]],["title/tutorial/core-python/#query-center-geometry",[107,0.997,318,1.388,703,3.385]],["text/tutorial/core-python/#query-center-geometry",[2,1.947,19,2.714,84,2.509,88,5.447,116,3.775,123,2.704,168,4.63,179,3.036,318,2.407,457,2.312,508,4.358,519,2.999,573,3.292,703,5.87,1348,5.953,1566,4.482,1734,6.042]],["title/tutorial/core-python/#use-spatial-indexes_1",[97,0.997,390,1.14,556,1.899]],["text/tutorial/core-python/#use-spatial-indexes_1",[6,2.367,12,0.669,25,3.075,51,2.037,97,1.293,179,3.583,306,3.237,318,2.669,321,2.507,343,3.2,389,2.653,390,2.192,422,2.398,457,1.729,516,3.259,556,3.257,777,2.347,899,3.667,901,3.903,915,4.831,1507,3.903,1566,4.435,1569,2.419,1673,6.181,2010,6.277,2033,5.89,2038,5.978,2039,6.966,2040,4.519,2056,4.274,2058,6.392,2059,4.274,2060,4.664,2061,4.664,2062,4.274,2063,4.664,3720,5.265,3724,5.14]],["title/tutorial/core-python/#output-format_1",[108,1.047,255,1.993]],["text/tutorial/core-python/#output-format_1",[12,0.651,108,1.461,111,1.305,255,2.781,318,2.313,321,3.221,390,1.9,573,3.817,612,4.737,1566,4.307,1673,5.357,1947,8.483]],["title/tutorial/core-python/#write-a-spatial-join-query",[318,1.195,390,0.981,777,1.558,880,2.163]],["text/tutorial/core-python/#write-a-spatial-join-query",[12,0.662,15,2.715,51,1.674,55,2.069,59,3.084,83,2.33,97,1.062,98,2.059,103,1.219,107,1.981,118,2.212,215,4.042,247,2.954,318,2.41,321,3.356,356,2.928,390,2.149,422,2.774,457,1.421,465,2.734,482,1.686,507,2.928,519,3.003,586,3.114,612,2.51,613,3.606,777,2.715,782,2.881,899,2.861,918,3.385,1183,2.887,1547,2.641,1652,4.944,1660,2.859,1670,3.467,1735,3.274,1931,4.882,1947,8.526,2020,6.47,2030,5.697,2032,4.882,2033,5.15,2064,3.969,2065,5.009,2066,3.557,2067,4.561,2068,5.815,2069,3.467,2070,6.09,3720,4.325,3724,4.223]],["title/tutorial/core-python/#use-spatial-partitioning",[97,0.997,390,1.14,830,2.315]],["text/tutorial/core-python/#use-spatial-partitioning",[2,1.536,12,0.664,19,2.141,25,3.244,28,3.326,97,1.364,98,2.645,215,3.185,247,2.694,318,1.899,390,2.026,482,2.812,544,3.824,633,3.185,686,3.224,777,2.477,830,5.011,918,5.646,957,4.25,1469,4.497,1507,5.94,1508,4.399,1542,4.399,1564,5.097,1587,4.842,2020,6.776,2065,5.934,2067,6.352,2068,7.651,2069,5.783,2071,5.555]],["title/tutorial/core-python/#use-spatial-indexes_2",[97,0.997,390,1.14,556,1.899]],["text/tutorial/core-python/#use-spatial-indexes_2",[12,0.671,51,2.02,55,2.497,97,1.282,247,2.532,318,2.368,321,2.485,343,3.804,389,2.63,390,1.945,457,1.715,482,2.7,556,3.239,658,2.768,777,3.088,843,4.352,899,3.651,901,3.87,918,4.085,921,3.231,942,4.414,1569,2.398,1652,5.622,1825,4.984,2020,6.573,2033,5.857,2038,5.944,2039,6.926,2040,4.48,2065,5.696,2067,5.187,2068,7.422,2069,4.184,2072,5.096,3720,6.926,3724,5.096]],["title/tutorial/core-python/#output-format_2",[108,1.047,255,1.993]],["text/tutorial/core-python/#output-format_2",[12,0.62,59,3.777,108,1.264,111,1.128,247,2.837,255,2.405,318,2,321,2.785,390,1.643,573,4.044,586,4.212,658,3.955,777,2.608,784,4.749,923,6.219,924,5.979,1947,8.675,2020,4.947,2064,5.368,2068,5.586,2073,6.844,2074,8.212,2075,5.85,2076,5.85,2077,5.85]],["title/tutorial/core-python/#write-a-distance-join-query",[213,1.872,318,1.195,777,1.558,880,2.163]],["text/tutorial/core-python/#write-a-distance-join-query",[7,0.526,12,0.676,43,2.276,51,1.183,59,2.388,83,1.648,84,1.09,91,1.277,97,1.588,98,2.245,103,1.328,107,1.588,111,0.59,116,1.381,123,1.811,176,1.666,179,1.319,213,3.743,214,2.071,247,2.287,248,3.019,318,2.211,321,3.079,390,0.859,422,2.945,456,1.991,457,1.005,465,2.98,479,1.319,491,2.824,492,2.709,507,2.071,519,2.009,573,1.43,670,1.82,768,2.038,777,2.102,780,2.162,782,2.038,808,2.124,899,3.467,918,3.69,1006,3.059,1183,1.45,1338,1.92,1412,2.181,1469,1.906,1509,1.868,1547,1.868,1592,2.483,1652,3.828,1660,3.117,1670,5.184,1686,3.14,1701,4.249,1735,2.315,1803,3.343,1905,2.92,1944,6.651,2010,6.93,2020,6.241,2030,6.049,2031,3.878,2032,3.78,2033,5.468,2065,5.319,2066,3.878,2067,4.843,2069,3.78,2072,2.986,2078,3.475,2079,9.096,2080,5.618,2214,2.483,3718,5.154,3720,4.715,3724,4.603,3729,6.846,3730,3.859,3731,3.859,3732,3.639,3733,3.639,3734,3.639,3735,3.639]],["title/tutorial/core-python/#output-format_3",[108,1.047,255,1.993]],["text/tutorial/core-python/#output-format_3",[12,0.666,31,2.444,32,3.163,111,1.102,116,2.579,133,3.128,180,5.057,199,2.235,247,2.77,318,1.953,321,4.081,456,3.718,571,7.346,573,2.671,586,5.289,612,4.263,808,3.966,913,4.523,1183,3.482,1860,5.712,1947,7.855,1950,6.04,1987,5.454,2021,5.712,2081,9.738,2082,6.489,2083,6.489,2084,6.489,2085,6.489]],["title/tutorial/core-python/#save-to-permanent-storage",[999,2.328,1668,2.749,2086,2.951]],["text/tutorial/core-python/#save-to-permanent-storage",[91,2.794,136,4.259,156,4.032,390,1.879,482,3.161,501,3.047,520,4.529,573,3.129,783,4.595,971,4.059,995,3.388,999,4.649,1010,4.229,1265,5.503,1266,5.503,1384,5.431,1582,4.816,1668,5.489,1688,5.431,1691,4.645,1706,6.139,1812,5.578,2086,5.893]],["title/tutorial/core-python/#save-an-spatialrdd-not-indexed",[482,1.583,556,1.899,999,2.328]],["text/tutorial/core-python/#save-an-spatialrdd-not-indexed",[55,3.62,482,3.399,519,3.224,999,4.34,1668,5.124,2086,5.501]],["title/tutorial/core-python/#save-an-spatialrdd-indexed",[482,1.583,556,1.899,999,2.328]],["text/tutorial/core-python/#save-an-spatialrdd-indexed",[55,3.468,482,3.519,501,3.303,519,3.089,556,3.978,573,3.391,999,4.158,1010,4.583,1668,4.909,1691,5.035,2086,5.27]],["title/tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed",[482,1.195,556,1.434,999,1.758,2067,2.296,2095,3.066]],["text/tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed",[7,1.183,98,3.276,230,4.819,318,2.353,321,3.276,390,1.932,651,4.174,777,3.067,829,6.095,830,4.7,999,3.945,1183,4.185,1337,4.043,1496,5.818,1668,4.658,1820,5.101,1859,5.736,1876,6.095,2086,5.001,2096,5.905]],["title/tutorial/core-python/#reload-a-saved-spatialrdd",[482,1.583,999,2.328,2097,3.659]],["text/tutorial/core-python/#reload-a-saved-spatialrdd",[12,0.511,482,2.932,501,3.426,573,3.517,999,4.313,1010,4.754,2097,6.777,2098,6.186]],["title/tutorial/core-python/#read-from-other-geometry-files",[89,1.689,107,0.997,501,1.849]],["text/tutorial/core-python/#read-from-other-geometry-files",[35,2.994,97,1.802,103,2.068,390,2.406,482,2.861,573,3.432,604,6.501,777,3.272,783,4.159,1014,5.811,1469,4.574]],["title/tutorial/core-python/#read-from-wkt-file",[89,1.689,156,2.447,501,1.849]],["text/tutorial/core-python/#read-from-wkt-file",[12,0.656,199,2.755,343,3.235,422,3.207,486,6.042,899,3.307,1425,7.982,2001,5.167,2108,7.998,2110,7.998,3737,7.998,3738,7.696]],["title/tutorial/core-python/#read-from-wkb-file",[89,1.689,163,2.951,501,1.849]],["text/tutorial/core-python/#read-from-wkb-file",[12,0.656,199,2.755,343,3.235,422,3.207,486,6.042,899,3.307,1426,8.36,2001,5.167,2111,7.998,2112,7.998,3737,7.998,3738,7.696]],["title/tutorial/core-python/#read-from-geojson-file",[89,1.689,136,2.585,501,1.849]],["text/tutorial/core-python/#read-from-geojson-file",[12,0.634,486,6.26,899,3.426,2001,5.354,2113,9.027,2114,8.287,2115,8.287,3737,8.287,3738,7.974]],["title/tutorial/core-python/#read-from-shapefile",[89,2.016,478,3.204]],["text/tutorial/core-python/#read-from-shapefile",[12,0.634,485,7.44,486,6.26,899,3.426,2001,5.354,2117,8.287,2118,8.287,3738,7.974,3739,9.204]],["title/tutorial/core-python/#tips",[2580,6.012]],["text/tutorial/core-python/#tips",[2,0.982,7,0.908,12,0.68,35,1.449,59,1.799,97,1.548,98,1.691,103,1.488,105,3.437,111,0.685,123,1.364,213,1.903,248,1.863,318,1.214,321,2.514,390,0.998,422,3.179,465,3.338,479,2.277,491,4.179,492,4.678,670,3.142,780,2.51,783,2.013,899,3.672,918,2.779,1412,2.533,1660,3.49,1670,4.233,1701,3.2,1905,3.391,1944,5.68,2010,5.68,2020,4.465,2025,5.422,2026,3.2,2027,3.2,2028,3.2,2029,3.2,2030,6.528,2031,4.343,2032,4.233,2033,5.902,2034,5.155,2035,3.096,2065,4.343,2066,2.921,2067,3.955,2069,2.847,2079,8.153,2080,3.467,2214,4.287,3718,3.882,3720,3.552,3721,4.226,3723,4.035,3724,5.155,3725,8.303,3727,4.226,3728,4.226,3729,8.303,3732,4.226,3733,4.226,3734,4.226,3735,4.226,3740,4.481,3741,4.481,3742,4.481,3743,4.481]],["title/tutorial/demo/",[87,4.551]],["text/tutorial/demo/",[2,1.627,7,1.288,12,0.546,19,1.869,27,3.273,31,1.356,34,1.325,40,4.316,42,2.681,46,1.875,48,2.261,51,1.227,57,4.372,59,1.606,60,1.949,69,2.624,84,1.727,91,1.324,93,4.218,95,3.593,97,1.839,98,1.51,111,0.935,175,1.646,222,2.033,239,1.63,251,2.164,389,1.598,390,0.89,410,2.099,457,1.592,466,1.829,479,1.367,499,3.594,501,1.444,510,3.838,517,2.83,518,3.086,544,2.183,613,2.643,651,1.923,686,1.84,794,4.051,808,2.202,826,2.57,858,2.4,877,1.797,884,1.496,886,2.202,895,3.846,899,1.489,907,2.375,908,2.327,964,2.283,993,2.327,1044,2.909,1183,3.123,1188,3.223,1260,3.998,1308,2.655,1311,2.479,1337,2.848,1430,2.809,1487,3.027,1547,1.936,1549,2.426,1569,3.579,1636,4.906,1638,2.643,1639,3.458,1640,3.171,1666,4.294,1699,4.628,1729,1.646,1732,2.966,1761,2.608,1770,3.793,1771,3.086,1775,2.643,1781,6.151,1793,4.226,1794,6.292,1795,4.362,1796,2.909,1800,2.4,1801,5.126,1802,4.977,1805,3.353,1810,4.628,1811,3.602,1816,3.602,1820,2.35,1875,2.909,1892,2.763,1921,4.448,2016,2.541,2237,3.027,2558,2.809,2601,3.171,2697,3.027,2755,2.809,2984,3.027,3124,3.171,3355,3.353,3744,4,3745,4,3746,4,3747,4,3748,4]],["title/tutorial/demo/#scala-and-java-examples",[40,1.997,93,2.288,111,0.783]],["text/tutorial/demo/#scala-and-java-examples",[27,3.398,34,1.376,40,4.042,91,2.857,93,4.63,97,1.68,98,3.257,111,1.319,222,4.387,466,3.947,794,4.333,908,5.021,993,5.021,1044,6.277,1183,3.243,1188,3.747,1781,6.342,1921,6.277]],["title/tutorial/demo/#folder-structure",[510,3.839,1260,2.941]],["text/tutorial/demo/#folder-structure",[2,2.367,27,4.251,31,2.741,34,1.721,40,4.211,48,4.57,97,2.102,390,1.799,457,2.105,479,2.763,499,5.227,510,5.074,1183,4.057,1188,4.325,1260,3.887,1699,7.54,1781,6.163,3744,8.084]],["title/tutorial/demo/#compile-and-package",[1639,2.848,1793,3.109]],["text/tutorial/demo/#compile-and-package",[]],["title/tutorial/demo/#prerequisites",[3745,7.586]],["text/tutorial/demo/#prerequisites",[19,2.73,40,4.126,42,5.988,84,2.523,93,3.99,175,3.677,457,2.326,517,4.135,518,4.508,895,3.836,1308,3.878,1638,5.904,1640,7.082,1729,3.677,1770,5.542,1794,6.762,2755,6.273]],["title/tutorial/demo/#compile",[1639,3.533]],["text/tutorial/demo/#compile",[59,3.785,808,5.19,1260,4.535,1487,7.137,1569,3.434,1761,6.148,1771,4.759,1781,5.381,1794,7.137]],["title/tutorial/demo/#submit-your-fat-jar-to-spark",[7,0.601,57,2.04,1636,2.913,1795,2.59]],["text/tutorial/demo/#submit-your-fat-jar-to-spark",[7,1.451,19,2.112,51,2.12,57,5.111,60,3.369,69,3.549,84,1.953,95,5.301,97,1.346,239,2.817,251,3.741,410,2.373,517,3.2,518,3.489,544,3.772,613,4.569,794,2.695,826,3.791,858,4.147,877,3.105,884,2.586,886,3.805,895,3.873,907,4.104,964,3.945,1260,3.324,1308,3.001,1311,3.657,1430,4.854,1547,3.346,1549,4.193,1569,3.657,1636,5.962,1639,3.22,1732,5.126,1771,3.489,1775,4.569,1781,3.945,1793,5.105,1794,5.232,1795,5.301,1796,5.028,1816,6.225,1820,4.062,2237,5.232,2558,4.854,2601,5.48,3746,6.914,3747,6.914]],["title/tutorial/demo/#run-template-projects-locally",[794,1.719,895,1.892,1569,1.605,1781,2.515]],["text/tutorial/demo/#run-template-projects-locally",[7,1.09,40,4.191,46,3.749,93,4.42,97,1.557,389,3.195,410,2.745,651,3.846,686,3.68,794,3.119,895,3.434,1337,4.61,1569,2.913,1666,6.95,1770,4.962,1781,4.564,1800,4.799,1801,8.296,1802,8.056,1805,6.704,1810,7.491,1811,7.203,1875,5.817,1892,5.526,1921,5.817,2016,5.082,2984,6.054,3124,6.34,3355,6.704,3748,7.999]],["title/tutorial/demo/#scala",[40,2.957]],["text/tutorial/demo/#scala",[40,3.654,501,3.384,794,4.485,899,3.489,1569,3.413,1781,5.348,1794,7.093,2697,7.093]],["title/tutorial/jupyter-notebook/",[43,2.902]],["text/tutorial/jupyter-notebook/",[2,2.499,6,1.938,7,0.741,12,0.519,15,2.705,19,1.661,43,4.411,45,4.208,46,2.548,47,4.373,50,3.383,51,1.668,57,2.517,69,1.921,84,1.536,89,2.927,96,2.172,97,1.059,111,1.172,112,0.893,126,2.227,175,2.238,293,4.754,335,3.262,361,2.668,457,1.416,491,2.581,529,2.764,826,2.285,877,2.442,995,2.183,1231,3.262,1311,2.204,1341,3.645,1503,2.918,1569,1.98,1729,4.629,1753,3.545,1767,3.818,1770,3.373,1791,5.571,1971,3.645,1974,8.768,1975,4.208,2119,4.031,2741,6.82,3032,4.031,3124,4.31,3147,3.593,3184,4.31,3212,5.574,3425,4.31,3426,4.557,3497,4.896,3498,7.738,3499,4.425,3508,6.238,3719,6.424,3749,9.638,3750,7.665,3751,5.438,3752,5.438]],["title/tutorial/jupyter-notebook/#python-jupyter-notebook-examples",[43,1.687,111,0.674,2741,2.673,3498,3.148]],["text/tutorial/jupyter-notebook/#python-jupyter-notebook-examples",[2,2.508,6,1.973,7,0.755,12,0.483,15,2.754,19,1.692,43,4.378,45,4.284,46,2.594,47,4.429,50,3.426,51,1.698,57,2.562,69,1.956,84,1.564,89,2.955,96,2.211,97,1.078,111,0.846,112,0.909,126,2.267,175,2.279,293,4.814,335,3.321,361,2.716,457,1.441,491,2.628,529,2.814,826,2.326,877,2.487,995,2.222,1231,3.321,1311,2.244,1341,3.711,1503,2.971,1569,2.016,1729,4.648,1753,3.609,1767,3.887,1770,3.434,1791,5.626,1971,3.711,1974,8.808,1975,4.284,2119,4.104,2741,6.739,3032,4.104,3124,4.388,3147,3.658,3184,4.388,3212,5.645,3425,4.388,3426,4.64,3497,4.985,3498,7.574,3499,4.506,3508,6.317,3719,6.505,3749,9.715,3750,7.762,3751,5.536,3752,5.536]],["title/tutorial/python-vector-osm/",[2,0.456,7,0.284,12,0.193,31,0.706,111,0.318,1582,1.188,1713,1.576,1969,1.576,3753,1.963,3754,1.963,3755,1.875]],["text/tutorial/python-vector-osm/",[2,1.37,7,0.979,12,0.65,27,1.954,31,2.435,43,1.174,46,1.438,111,0.469,112,0.504,125,1.132,133,3.117,204,1.674,250,2.686,295,2.732,303,1.747,339,3.01,343,2.872,380,2.572,426,2.154,487,2.12,491,1.456,501,1.108,558,1.735,643,2.374,832,4.16,888,2.028,889,1.704,890,1.689,898,1.704,899,4.161,908,1.785,995,1.232,999,2.256,1061,2.572,1237,2.572,1251,2.232,1290,2.806,1337,3.344,1380,4.16,1446,3.68,1501,3.545,1502,2.572,1582,4.098,1613,2.154,1713,2.322,1814,2.763,1857,2.572,1952,2,1963,2.374,1968,2.497,1969,4.73,2001,1.785,2129,1.689,2135,2.497,2145,2.572,2240,2.572,2241,2.374,2243,2.374,2549,3.841,2803,2.192,2882,2.659,3012,2.572,3419,2.572,3462,2.192,3465,2.275,3466,2.154,3470,2.497,3505,3.61,3556,2.659,3661,4.469,3753,2.894,3754,2.894,3755,4.469,3756,3.069,3757,3.069,3758,3.069,3759,3.069,3760,2.659,3761,3.069,3762,8.376,3763,3.069,3764,2.659,3765,4.964,3766,4.964,3767,4.964,3768,2.763,3769,3.069,3770,3.069,3771,3.069,3772,3.069,3773,3.069,3774,4.964,3775,3.069,3776,3.069,3777,3.069,3778,3.069,3779,3.069,3780,3.069,3781,3.069,3782,3.069,3783,3.069,3784,3.069,3785,3.069,3786,3.069,3787,3.069,3788,3.069,3789,3.069,3790,3.069,3791,3.069,3792,2.763,3793,3.069,3794,3.069,3795,2.763,3796,3.069,3797,3.069,3798,3.069,3799,3.069,3800,3.069,3801,4.964,3802,3.069,3803,3.069,3804,3.069,3805,3.069,3806,3.069,3807,3.069,3808,3.069,3809,3.069,3810,3.069,3811,3.069,3812,3.069,3813,3.069,3814,3.069,3815,3.069,3816,3.069,3817,3.069,3818,3.069,3819,3.069,3820,3.069,3821,3.069,3822,3.069,3823,3.069,3824,3.069,3825,6.251,3826,7.182,3827,3.069,3828,7.182,3829,3.069,3830,3.069,3831,3.069,3832,3.069,3833,3.069,3834,3.069,3835,3.069,3836,3.069,3837,3.069,3838,8.438,3839,3.069,3840,3.069,3841,6.251,3842,7.182,3843,3.069,3844,3.069,3845,3.069,3846,3.069,3847,4.964,3848,3.069,3849,3.069,3850,3.069,3851,3.069,3852,3.069,3853,3.069,3854,3.069,3855,3.069,3856,3.069,3857,3.069,3858,3.069,3859,3.069,3860,3.069,3861,3.069,3862,8.438,3863,3.069,3864,3.069,3865,3.069,3866,3.069,3867,3.069,3868,3.069,3869,3.069,3870,4.964,3871,3.069,3872,3.069,3873,4.964,3874,4.964,3875,3.069,3876,3.069,3877,3.069,3878,3.069,3879,3.069,3880,3.069,3881,3.069,3882,3.069,3883,3.069,3884,3.069,3885,3.069,3886,3.069,3887,3.069,3888,3.069,3889,3.069]],["title/tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults",[2,0.456,7,0.284,12,0.193,31,0.706,111,0.318,1582,1.188,1713,1.576,1969,1.576,3753,1.963,3754,1.963,3755,1.875]],["text/tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults",[487,2.993,832,7.629,899,4.602,1061,5.874,1290,5.146,1380,7.629,1501,6.501,1613,4.921,1857,5.874,1952,4.569,1963,5.423,2145,5.874,2240,5.874,2241,5.423,2243,5.423,2549,5.423,3419,5.874,3470,5.704,3505,6.62,3756,7.009,3757,7.009,3758,7.009,3759,7.009,3760,6.072,3761,7.009,3762,10.719,3763,7.009,3764,6.072,3765,9.103,3766,9.103,3767,9.103,3768,6.311,3769,7.009,3770,7.009,3771,7.009,3772,7.009]],["title/tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator",[2,0.569,7,0.354,558,1.467,888,1.715,908,1.51,1502,2.175,1968,2.112,1969,1.964,2129,1.428]],["text/tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator",[7,1.036,12,0.566,27,2.992,43,2.908,343,4.016,487,3.246,491,3.608,643,5.882,889,4.22,890,4.183,898,4.22,1814,6.844,2001,4.422,2135,6.186,3462,5.429,3465,5.636,3466,5.337,3556,6.586,3773,7.602,3774,9.588,3775,7.602,3776,7.602,3777,7.602,3778,7.602,3779,7.602,3780,7.602,3781,7.602,3782,7.602,3783,7.602,3784,7.602,3785,7.602,3786,7.602,3787,7.602,3788,7.602,3789,7.602,3790,7.602,3791,7.602,3792,6.844,3793,7.602,3794,7.602,3795,6.844,3796,7.602]],["title/tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs",[27,1.113,31,0.959,46,1.325,426,1.986,999,1.285,1446,2.097,1582,1.614,3797,2.828]],["text/tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs",[12,0.656,31,2.657,133,3.401,339,5.926,899,3.638,1582,4.471,2549,6.063,2803,5.596,2882,6.788,3798,7.835,3799,7.835,3800,7.835,3801,9.772,3802,7.835,3803,7.835,3804,7.835,3805,7.835,3806,7.835,3807,7.835,3808,7.835,3809,7.835,3810,7.835,3811,7.835,3812,7.835,3813,7.835,3814,7.835,3815,7.835,3816,7.835,3817,7.835,3818,7.835]],["title/tutorial/python-vector-osm/#connecting-spark-sedona-with-saved-hdfs-file",[2,0.755,7,0.47,501,1.244,999,1.566,1446,2.554,1582,1.966]],["text/tutorial/python-vector-osm/#connecting-spark-sedona-with-saved-hdfs-file",[12,0.621,204,5.146,295,5.19,343,3.434,3819,9.431,3820,9.431,3821,9.431]],["title/tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis",[31,1.494,3012,3.694,3755,3.969,3822,4.408]],["text/tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis",[12,0.651,112,0.865,125,1.944,133,3.787,250,4.055,295,2.9,303,2.637,380,4.416,899,1.962,995,2.115,1237,4.416,1251,3.832,1337,4.426,1969,3.988,3661,6.749,3762,4.969,3823,5.269,3824,5.269,3825,8.725,3826,9.504,3827,5.269,3828,9.504,3829,5.269,3830,5.269,3831,5.269,3832,5.269,3833,5.269,3834,5.269,3835,5.269,3836,5.269,3837,5.269,3838,10.435,3839,5.269,3840,5.269,3841,8.725,3842,9.504,3843,5.269,3844,5.269,3845,5.269,3846,5.269,3847,7.496,3848,5.269,3849,5.269,3850,5.269,3851,5.269,3852,5.269,3853,5.269,3854,5.269,3855,5.269,3856,5.269,3857,5.269,3858,5.269,3859,5.269,3860,5.269,3861,5.269,3862,10.435,3863,5.269,3864,5.269,3865,5.269,3866,5.269,3867,5.269,3868,5.269,3869,5.269,3870,7.496,3871,5.269,3872,5.269,3873,7.496,3874,7.496,3875,5.269,3876,5.269,3877,5.269,3878,5.269,3879,5.269,3880,5.269,3881,5.269,3882,5.269,3883,5.269,3884,5.269,3885,5.269,3886,5.269,3887,5.269,3888,5.269,3889,5.269]],["title/tutorial/raster/",[30,2.954,31,1.494,32,1.935,33,3.336]],["text/tutorial/raster/",[2,2.082,6,3.385,7,1.021,12,0.61,25,3.466,27,2.948,28,3.555,30,7.352,31,3.221,32,3.288,33,5.668,34,1.514,40,2.92,43,3.634,50,3.306,88,4.593,93,3.344,228,3.445,344,3.424,389,2.991,449,3.893,456,3.864,479,3.566,673,3.955,686,3.445,888,4.949,1311,3.036,1352,3.986,1531,4.793,1804,5.349,2129,4.122,2741,4.542,2914,6.095,3498,5.349,3508,6.095,3890,7.49]],["title/tutorial/raster/#initial-setup",[1531,3.086,3508,4.977]],["text/tutorial/raster/#initial-setup",[7,1.293,389,3.79,449,4.933,686,4.365,888,6.271,1311,3.847,1531,4.788,2129,5.222]],["title/tutorial/raster/#api-docs",[27,2.407,88,3.75]],["text/tutorial/raster/#api-docs",[30,6.4,31,3.237,32,4.191,33,7.226,479,3.761,3890,9.549]],["title/tutorial/raster/#tutorials",[1352,4.037]],["text/tutorial/raster/#tutorials",[43,3.747,2741,5.939,3498,6.994]],["title/tutorial/rdd-r/",[25,3.511]],["text/tutorial/rdd-r/",[2,1.193,6,1.939,7,1.045,12,0.665,16,2.065,19,1.052,25,2.518,31,2.6,34,1.331,40,2.121,51,1.055,56,1.964,59,2.184,60,1.677,89,1.794,91,1.139,97,0.67,108,1.155,111,1.172,112,0.565,123,1.656,133,2.929,136,1.737,156,1.644,163,1.983,169,1.862,170,1.964,174,1.845,175,1.417,179,1.86,198,1.48,199,1.067,210,2.728,222,3.429,223,4.185,239,2.217,303,1.211,318,2.263,324,2.634,340,1.462,343,1.253,344,1.574,345,1.862,390,2.07,405,2.214,410,1.181,423,1.486,456,1.776,457,1.416,459,3.585,466,1.574,479,1.176,482,2.873,501,2.436,510,2.16,517,1.593,519,1.837,520,1.847,538,1.789,555,2.11,556,2.017,573,1.276,606,5.933,613,2.274,639,1.776,658,2.835,707,3.099,726,2.274,768,1.817,783,1.546,830,1.555,858,4.048,869,3.647,882,1.911,895,1.478,899,1.281,904,2.274,907,3.23,921,1.689,971,1.655,993,2.002,995,1.381,1007,5.655,1010,1.724,1183,2.044,1192,2.503,1199,2.043,1245,1.894,1252,3.099,1264,2.341,1352,1.832,1353,2.187,1444,2.002,1445,1.789,1499,2.341,1566,1.737,1569,1.253,1691,1.894,1786,3.713,1804,2.458,1856,2.307,1953,2.11,1985,2.503,2001,3.925,2010,3.886,2775,3.099,2815,2.801,3427,2.884,3510,5.933,3513,4.118,3518,4.428,3525,3.099,3543,2.728,3891,5.846,3892,3.442,3893,3.442,3894,5.131,3895,6.747,3896,6.747,3897,3.099,3898,3.099,3899,5.441,3900,3.442,3901,6.747,3902,3.442,3903,3.442,3904,3.442,3905,3.442,3906,3.442,3907,3.442,3908,3.442,3909,3.442,3910,3.442,3911,3.442,3912,5.441,3913,5.441,3914,3.099,3915,3.442,3916,3.442,3917,3.442,3918,3.442,3919,3.442,3920,3.442,3921,3.442,3922,3.442]],["title/tutorial/rdd-r/#spatial-rdd-applications-in-r-language",[25,1.79,390,0.861,882,2.147,1183,1.453,1804,2.762]],["text/tutorial/rdd-r/#spatial-rdd-applications-in-r-language",[]],["title/tutorial/rdd-r/#what-are-spatialrdds",[482,2.344]],["text/tutorial/rdd-r/#what-are-spatialrdds",[2,1.7,7,1.324,12,0.418,19,2.37,31,3.292,34,1.236,97,1.51,222,3.942,223,4.811,318,2.632,340,3.294,390,2.161,456,4.001,479,2.651,482,3,510,4.868,517,3.589,556,2.875,606,6.001,658,3.259,707,6.983,830,3.504,869,6.508,921,3.805,1010,3.886,1192,5.64,1245,4.268,1566,3.913,1856,5.198,2815,6.312,3427,6.5,3513,5.869,3518,6.312,3525,6.983,3891,6.719,3892,7.756,3893,7.756,3894,7.314]],["title/tutorial/rdd-r/#creating-a-spatialrdd",[123,1.862,482,1.89]],["text/tutorial/rdd-r/#creating-a-spatialrdd",[2,0.863,6,2.154,7,0.824,12,0.669,16,2.363,25,1.823,31,2.049,34,1.314,40,2.356,51,1.208,56,2.247,59,2.426,60,1.919,89,1.992,91,1.304,108,1.259,111,1.261,112,0.647,123,1.199,133,3.192,136,1.987,156,1.881,163,2.269,169,2.131,170,2.247,174,2.049,175,1.621,179,2.066,198,1.643,199,1.221,210,3.122,222,3.072,223,3.748,239,2.462,303,1.386,318,1.993,324,2.925,343,1.434,344,1.801,345,2.131,390,1.836,405,2.534,410,1.352,423,1.7,457,1.573,459,3.819,466,1.801,482,2.272,501,2.654,519,2.041,520,2.113,538,2.047,555,2.415,556,1.46,573,1.46,606,5.69,613,2.603,639,2.032,658,2.54,726,2.603,768,2.08,783,1.769,858,4.411,895,1.691,899,1.466,904,2.603,907,3.587,971,1.894,993,2.291,995,1.581,1007,6.163,1183,1.48,1199,2.338,1252,3.546,1264,2.679,1352,2.096,1353,2.502,1444,2.291,1445,2.047,1499,2.679,1569,1.434,1691,2.167,1786,4.047,1953,2.415,1985,2.864,2001,4.278,2010,4.316,2775,3.546,3510,6.381,3513,2.981,3518,3.205,3543,3.122,3891,3.412,3894,3.714,3895,7.353,3896,7.353,3897,3.546,3898,3.546,3899,6.043,3900,3.938,3901,7.353,3902,3.938,3903,3.938,3904,3.938,3905,3.938,3906,3.938,3907,3.938,3908,3.938,3909,3.938,3910,3.938,3911,3.938,3912,6.043,3913,6.043,3914,3.546,3915,3.938,3916,3.938,3917,3.938,3918,3.938,3919,3.938,3920,3.938,3921,3.938,3922,3.938]],["title/tutorial/rdd/",[87,4.551]],["text/tutorial/rdd/",[2,1.244,6,0.165,7,0.228,12,0.676,15,0.833,19,0.396,25,0.601,27,0.182,28,0.22,31,1.006,32,0.203,34,0.376,35,0.15,40,0.181,51,1.913,52,0.562,55,1.68,59,1.693,79,0.294,80,0.857,83,0.715,84,0.366,85,0.43,89,0.778,91,0.982,92,0.397,93,0.207,95,0.272,96,0.185,97,1.523,98,1.418,103,0.597,105,0.669,107,1.477,108,0.759,111,0.31,112,0.387,116,1.586,118,0.956,123,1.681,125,1.294,126,0.83,132,2.269,133,0.727,134,0.32,136,1.77,156,1.794,158,0.249,162,0.302,163,1.359,168,0.735,169,1.277,174,0.8,175,0.689,176,1.4,179,1.199,197,0.247,198,0.551,199,1.894,201,0.458,204,0.914,205,0.562,211,0.291,213,1.696,215,1.214,222,0.236,228,0.412,230,0.257,232,0.249,239,0.365,247,1.348,248,0.372,251,0.251,255,0.871,261,0.401,267,0.93,279,0.914,287,0.506,292,0.609,295,0.492,302,0.249,303,2.83,306,1.15,318,2.3,321,1.008,324,0.81,336,0.846,340,1.595,343,1.614,344,0.593,345,0.251,356,0.48,361,0.227,364,0.232,373,0.6,385,0.709,386,0.476,389,1.5,390,1.79,392,0.752,398,0.436,410,0.159,420,0.511,421,0.549,422,1.81,423,0.56,425,0.272,427,0.315,434,0.302,449,1.054,457,1.931,459,2.229,465,1.016,466,0.593,471,0.492,478,0.68,479,0.444,480,0.655,481,2.128,482,2.751,483,2.571,484,1.027,485,0.32,486,0.883,487,0.866,488,1.258,489,0.75,491,0.425,493,0.267,494,0.562,498,0.278,501,2.677,502,0.32,503,0.351,504,0.337,505,0.325,506,0.388,507,1.088,508,0.227,509,1.087,510,0.291,511,0.388,512,0.388,513,0.388,514,0.388,515,0.388,516,0.995,517,0.214,518,0.234,519,2.342,520,0.696,521,0.388,522,0.351,523,0.388,524,0.388,525,0.325,526,0.306,527,0.844,528,1.401,529,0.236,530,0.388,531,0.388,532,0.388,538,1.542,540,0.281,541,0.969,544,0.708,545,0.425,556,2.16,573,1.642,575,1.027,601,0.294,612,0.412,633,0.59,638,0.639,639,0.462,650,0.306,651,0.43,658,0.545,670,0.422,686,0.412,694,0.302,703,0.591,768,0.884,775,0.315,777,1.951,779,0.921,782,1.071,783,0.583,784,0.576,786,0.351,788,0.298,794,0.181,796,0.344,808,0.492,820,0.287,821,0.291,823,0.965,824,0.549,825,0.576,826,0.195,829,0.325,830,1.585,841,0.75,843,0.591,858,0.278,877,0.402,880,0.821,883,0.499,884,0.882,885,0.255,886,0.255,891,0.469,892,0.583,893,0.462,894,0.344,895,0.384,901,0.762,905,0.337,909,4.257,915,0.337,918,1.039,921,0.637,923,0.591,924,0.824,942,0.311,947,0.315,957,1.015,958,0.216,961,0.249,968,1.039,971,0.805,993,0.521,994,0.628,995,1.508,999,2.58,1010,2.22,1013,0.927,1083,0.291,1085,0.315,1183,1.318,1188,0.201,1189,0.337,1217,0.367,1263,0.846,1265,0.583,1266,0.583,1276,0.417,1289,1.077,1290,0.506,1291,0.965,1308,0.201,1309,0.249,1311,0.956,1337,0.78,1338,0.231,1355,0.306,1367,0.367,1369,0.367,1384,0.298,1425,0.351,1445,0.241,1469,0.442,1496,0.6,1503,0.48,1505,0.325,1507,1.57,1508,0.562,1509,0.981,1511,0.692,1515,0.298,1517,0.476,1520,0.549,1531,0.234,1534,0.472,1542,0.291,1543,0.249,1547,0.981,1549,0.281,1564,0.337,1566,1.348,1569,0.738,1570,0.217,1582,0.264,1587,0.32,1597,0.311,1632,0.337,1646,0.591,1652,0.835,1658,2.386,1660,1.968,1668,1.266,1670,0.569,1673,2.201,1682,0.284,1687,0.835,1688,0.298,1691,0.921,1701,0.331,1706,0.337,1734,0.609,1735,0.537,1756,0.284,1765,0.351,1768,0.367,1775,0.591,1787,0.401,1791,0.291,1800,0.537,1807,0.294,1808,0.291,1812,0.591,1819,0.315,1820,0.762,1825,0.351,1839,1.039,1854,0.685,1859,0.306,1876,0.325,1877,1.96,1878,1.379,1881,1.267,1882,0.982,1883,1.685,1898,0.367,1903,0.315,1928,0.351,1931,0.294,1941,0.359,1943,0.351,1944,1.685,1951,0.337,1981,0.325,1982,0.287,1983,0.325,1984,1.908,1985,1.943,1990,0.75,1991,0.388,1993,0.944,1994,1.087,1995,1.087,2001,1.887,2011,0.377,2015,0.417,2016,0.294,2017,1.605,2018,0.337,2024,0.651,2026,0.639,2027,0.639,2028,0.639,2029,0.639,2031,1.091,2032,1.288,2035,0.618,2036,0.351,2037,0.32,2038,0.883,2040,0.883,2041,0.367,2055,0.367,2056,1.077,2057,0.367,2058,0.651,2060,0.911,2061,0.911,2062,0.835,2063,0.628,2064,0.651,2065,1.091,2066,2.449,2067,2.23,2069,1.288,2070,0.367,2071,0.367,2072,0.359,2073,0.651,2074,1.028,2075,0.367,2076,0.367,2077,0.367,2080,0.359,2086,1.359,2087,0.417,2088,3.158,2089,0.417,2091,0.417,2092,0.728,2093,0.417,2094,0.417,2095,0.367,2096,0.315,2097,1.448,2098,0.302,2099,0.417,2113,0.388,2273,0.377,2274,0.417,2276,0.417,2277,1.674,2278,1.674,2279,0.895,2280,0.895,2281,0.895,2282,0.895,2283,0.895,2284,1.168,2285,1.168,2286,1.508,2287,4.123,2288,0.463,2289,0.463,2290,0.895,2291,1.674,2292,1.674,2293,1.674,2294,1.674,2295,0.463,2296,0.895,2297,0.895,2298,0.895,2299,1.298,2301,0.417,2302,0.895,2303,0.463,2304,0.417,2305,0.463,2306,0.895,2307,0.463,2308,0.463,2309,0.463,2310,0.463,2311,0.463,2312,0.463,2313,0.388,2314,0.388,2315,0.463,2316,2.239,2317,0.463,2318,0.895,2319,1.674,2320,1.674,2321,0.463,2322,0.463,2323,0.895,2324,1.674,2325,1.508,2326,1.674,2327,0.463,2328,1.674,2329,0.463,2330,1.674,2331,1.674,2332,0.463,2333,1.674,2334,0.463,2335,1.674,2336,1.674,2337,1.674,2338,0.463,2339,1.674,2340,0.463,2341,0.806,2342,0.806,2343,0.417,2344,0.417,2345,0.417,2346,0.417,2347,0.463,2348,0.463,2349,0.463,2350,0.463,2351,0.463,2352,0.463,2353,0.463,2354,0.463,2355,0.463,2356,0.463,2357,0.463,2358,0.463,2359,0.463,2360,0.463,2361,0.463,2362,0.463,2363,0.463,2364,0.463,2365,0.463,2366,0.463,2367,0.463,2368,0.463,2369,0.463,2370,0.463,2371,0.463,2372,0.463,2373,0.463,2374,0.463,2375,0.463,2376,0.463,2377,0.463,2378,0.463,2379,0.463,2380,0.463,2381,0.463,2382,0.463,2383,0.463,2384,0.463,2385,0.463,2386,0.463,2387,0.463,2388,0.463,2389,0.463,2390,0.463,2391,0.463,2392,0.463,2393,0.463,2394,0.463,2395,0.463,2396,0.463,2397,0.463,2398,0.463,2399,0.463,2400,0.463,2401,0.463,2402,0.806,2403,0.806,2404,0.417,2405,0.417,2406,0.417,2407,0.417,2408,0.463,2409,0.463,2410,0.463,2411,0.463,2412,0.463,2413,0.463,2414,0.463,2415,0.463,2416,0.463,2417,0.463,2418,0.463,2419,0.463,2420,0.463,2421,0.463,2422,0.463,2423,0.463,2424,0.463,2425,0.463,2426,0.463,2427,0.463,2428,0.463,2429,0.463,2430,0.463,2431,0.463,2432,0.463,2433,0.463,2434,0.463,2435,0.463,2436,0.463,2437,0.463,2438,0.463,2439,0.463,2440,0.463,2441,0.463,2442,0.463,2443,0.463,2444,0.463,2445,0.463,2446,0.463,2447,0.463,2448,0.463,2449,0.463,2450,0.463,2451,0.463,2452,0.463,2453,0.463,2454,0.463,2455,0.463,2456,0.463,2457,0.463,2458,0.463,2459,0.463,2460,0.463,2461,0.463,2462,0.463,2463,0.463,2464,0.463,2465,0.463,2466,0.463,2467,0.463,2468,0.463,2469,0.463,2470,0.463,2471,0.463,2472,0.463,2473,0.463,2474,0.463,2475,0.463,2476,0.463,2477,0.463,2478,0.463,2479,0.463,2480,0.463,2481,0.463,2482,0.463,2483,0.463,2484,0.463,2485,0.463,2486,0.463,2487,0.463,2488,0.463,2489,0.463,2490,0.806,2491,0.806,2492,0.417,2493,0.417,2494,0.417,2495,0.417,2496,0.463,2497,0.463,2498,0.463,2499,0.463,2500,0.463,2501,0.463,2502,0.463,2503,0.463,2504,0.463,2505,0.463,2506,0.463,2507,0.463,2508,0.463,2509,0.463,2510,0.463,2511,0.463,2512,0.463,2513,0.463,2514,0.463,2515,0.463,2516,0.463,2517,0.463,2518,0.463,2519,0.463,2520,0.463,2521,0.463,2522,0.463,2523,0.463,2524,0.463,2525,0.895,2526,0.895,2527,0.463,2528,0.463,2529,0.463,2530,0.463,2531,0.463,2532,0.463,2533,0.463,2534,0.463,2535,0.463,2536,0.463,2537,0.463,2538,0.463,2539,0.463,2540,0.463,2541,0.463,2542,0.463,2543,0.463,2544,0.463,2545,0.463,2546,0.463,2547,0.463,2548,0.463,2549,0.359,2550,0.463,2551,0.463,2552,0.895,2553,0.463,2554,0.463,2556,0.311,2557,0.806,2558,0.628,2559,1.168,2560,0.359,2561,0.417,2562,0.351,2563,0.417,2564,0.806,2565,0.417,2566,1.403,2567,3.014,2568,0.75,2569,0.417,2570,0.417,2571,3.508,2572,1.607,2573,1.028,2574,0.367,2575,0.417,2576,0.388,2577,0.417,2578,0.417,2579,1.87,2580,0.367,2581,0.417,2582,0.417,2583,1.508,2584,0.417,2585,0.417,2586,0.351,2587,1.977,2588,1.977,2589,0.728,2590,0.75,2591,0.417,2592,0.806,2593,0.806,2594,0.367,2595,0.417,2596,0.463,2597,2.672,2598,2.028,3505,0.337,3693,0.417,3694,0.417,3923,0.463,3924,0.388,3925,0.463,3926,0.463,3927,0.463]],["title/tutorial/rdd/#set-up-dependencies",[389,2.046,686,2.357,1311,2.077]],["text/tutorial/rdd/#set-up-dependencies",[2,2.545,7,1.432,12,0.594,19,3.209,34,1.212,35,2.458,84,2.147,89,2.506,91,2.516,111,1.162,112,1.248,211,4.771,228,3.497,239,3.097,303,2.675,480,3.836,794,2.964,883,3.686,884,4.125,885,4.183,886,4.183,1183,2.856,1188,3.299,1308,3.299,1309,4.079,1311,4.258,1682,4.661,1800,4.56,1839,5.947]],["title/tutorial/rdd/#initiate-sparkcontext",[488,3.793,1531,3.086]],["text/tutorial/rdd/#initiate-sparkcontext",[2,2.113,12,0.677,84,1.536,97,1.059,107,1.059,176,2.347,222,2.764,247,2.09,302,2.918,389,3.85,457,1.416,483,2.841,488,3.373,516,2.668,556,2.015,768,2.871,826,2.285,858,3.262,883,2.09,891,4.015,892,4.996,893,3.954,894,4.031,895,2.335,905,3.955,909,3.592,993,3.163,995,2.183,1189,3.955,1289,6.201,1290,4.333,1291,5.552,1311,2.204,1509,4.665,1515,3.499,1520,4.7,1543,2.918,1549,3.298,1569,1.98,1570,2.548,1800,3.262,1808,3.413,1819,3.699,1820,3.195,1839,3.373,1854,4.687,1981,3.818,1982,3.373,1983,3.818,1984,7.118,2001,3.163,2274,4.896,2276,4.896,3505,3.955,3923,5.438,3924,4.557]],["title/tutorial/rdd/#create-a-spatialrdd",[123,1.862,482,1.89]],["text/tutorial/rdd/#create-a-spatialrdd",[]],["title/tutorial/rdd/#create-a-typed-spatialrdd",[123,1.56,482,1.583,519,1.73]],["text/tutorial/rdd/#create-a-typed-spatialrdd",[2,1.947,12,0.478,108,1.521,136,4.482,156,4.243,163,5.117,478,4.653,482,2.744,538,4.618,541,4.243,877,3.99,884,3.322,957,5.387,1632,6.46,1687,5.715,1877,5.87,1878,6.042,1943,6.722,1985,6.46]],["title/tutorial/rdd/#create-a-generic-spatialrdd",[55,1.942,123,1.56,482,1.583]],["text/tutorial/rdd/#create-a-generic-spatialrdd",[12,0.549,31,2.846,55,3.183,107,1.985,116,3.004,118,3.403,156,4.01,168,3.685,466,4.662,482,2.594,501,3.681,519,3.857,775,5.71,786,6.353,957,5.091,958,3.909,1338,4.176,1765,6.353,1768,6.654,1807,5.333,1931,5.333,2301,7.559]],["title/tutorial/rdd/#transform-the-coordinate-reference-system",[85,2.119,303,1.551,392,1.98,398,2.148]],["text/tutorial/rdd/#transform-the-coordinate-reference-system",[2,1.732,12,0.659,51,1.742,59,2.28,79,3.609,85,2.731,95,3.338,97,1.769,98,2.144,107,1.538,123,1.729,213,2.412,251,3.073,303,2.781,318,1.539,321,2.144,324,4.755,343,2.068,392,2.551,398,2.768,420,4.509,421,4.846,422,3.546,423,2.452,425,3.338,427,3.864,457,1.479,481,2.866,482,3.035,483,2.105,516,2.787,670,2.679,768,2.999,820,3.523,821,3.565,823,5.235,824,4.846,825,5.085,909,3.703,924,3.609,947,3.864,961,3.048,968,6.094,1496,3.807,1511,6.115,1820,3.338,1877,3.754,2001,3.304,2017,3.864,2284,5.115,2285,5.115,2286,5.115,2287,6.005,2556,3.807,2557,7.115,2558,5.548,2559,8.182,2560,4.395,2561,5.115,2562,4.299,3693,5.115,3694,5.115,3925,5.68,3926,5.68,3927,5.68]],["title/tutorial/rdd/#read-other-attributes-in-an-spatialrdd",[89,1.689,482,1.583,971,2.463]],["text/tutorial/rdd/#read-other-attributes-in-an-spatialrdd",[12,0.657,32,3.24,51,2.264,59,3.777,96,2.948,97,1.437,107,1.437,125,3.823,343,2.688,389,2.948,390,1.643,457,1.922,482,2.28,484,4.526,520,3.961,650,4.877,783,3.315,909,3.459,971,4.525,994,6.607,995,2.963,1085,5.021,1183,2.773,1263,4.812,1265,4.812,1266,4.812,1646,6.219,1691,4.062,1951,5.368,2016,4.689,2017,5.021,2018,5.368,2287,4.877,2563,6.646,2564,8.474,2565,6.646]],["title/tutorial/rdd/#write-a-spatial-range-query",[318,1.195,340,1.872,390,0.981,880,2.163]],["text/tutorial/rdd/#write-a-spatial-range-query",[12,0.664,15,2.969,34,0.951,51,1.83,55,2.263,83,2.549,91,1.976,97,1.162,103,2.083,105,3.079,107,1.592,111,0.912,112,0.98,118,2.42,267,3.314,318,3.012,340,4.261,343,2.173,356,4.388,389,2.384,390,2.234,422,2.952,457,2.129,465,4.097,471,4.5,481,3.012,482,2.882,483,2.212,507,3.203,519,2.016,639,3.079,788,3.84,909,4.371,1547,2.889,1658,6.345,1660,5.256,2024,4.341,2026,4.263,2027,4.263,2028,4.263,2029,4.263,2031,3.891,2032,5.195,2035,4.123,2316,6.853,2566,6.853,2567,5.562,2568,5.002,2569,5.374]],["title/tutorial/rdd/#range-query-window",[318,1.388,340,2.176,1660,2.684]],["text/tutorial/rdd/#range-query-window",[2,0.913,12,0.681,51,2.334,98,1.571,105,2.148,116,1.49,123,2.316,125,1.536,132,5.65,174,2.138,175,2.595,176,1.797,179,1.423,198,1.715,199,3.376,205,2.613,292,2.832,303,4.235,306,2.029,318,1.709,340,2.678,373,2.791,385,4.997,386,2.216,457,1.981,483,4.179,519,1.406,575,3.866,633,1.892,909,4.81,1660,3.303,1734,2.832,2036,3.151,2060,2.923,2061,2.923,2570,3.749,2571,7.953,2572,3.3,2573,3.3,2574,3.3,2575,3.749,2576,3.49,2577,3.749,2578,3.749]],["title/tutorial/rdd/#use-spatial-indexes",[97,0.997,390,1.14,556,1.899]],["text/tutorial/rdd/#use-spatial-indexes",[2,1.746,12,0.663,25,2.659,31,1.948,51,1.762,59,2.306,97,1.78,103,1.283,105,2.963,116,2.056,125,2.12,176,2.48,247,2.208,318,2.158,340,2.44,343,2.9,389,2.294,390,2.197,422,2.875,457,1.495,465,2.878,481,2.899,482,2.824,483,2.129,519,2.689,556,4.077,777,2.03,830,2.595,843,3.796,877,2.58,895,2.466,901,3.375,909,4.626,921,3.907,1445,2.986,1505,4.033,1507,5.371,1508,3.605,1517,4.239,1547,2.78,1569,2.092,1597,3.85,1658,5.417,1660,3.009,1928,4.347,2024,4.178,2026,4.103,2027,4.103,2028,4.103,2029,4.103,2031,3.745,2032,3.65,2035,3.968,2037,3.968,2038,3.907,2040,3.907,2566,6.675,2567,5.417,2568,4.814,2579,6.313,2580,4.553,2581,5.172]],["title/tutorial/rdd/#output-format",[108,1.047,255,1.993]],["text/tutorial/rdd/#output-format",[108,1.635,255,3.111,318,2.588,340,4.055,390,2.126,482,2.95,2041,7.568]],["title/tutorial/rdd/#write-a-spatial-knn-query",[318,1.195,390,0.981,880,2.163,1566,2.224]],["text/tutorial/rdd/#write-a-spatial-knn-query",[12,0.666,15,2.836,34,0.909,51,1.748,55,2.161,83,2.435,91,1.887,97,1.11,103,1.273,107,1.11,112,0.936,118,2.311,179,2.708,201,2.919,213,3.365,267,3.165,287,3.223,303,2.006,306,3.861,318,2.802,321,2.152,386,3.035,390,2.19,422,2.058,457,2.063,482,2.448,483,2.937,507,3.059,519,1.925,639,2.941,782,3.01,909,4.846,995,2.288,1183,2.142,1547,2.76,1566,3.998,1673,6.718,1756,3.496,2055,4.519,2056,5.859,2057,4.519,2058,4.146,2060,4.003,2061,4.003,2062,5.098,2063,4.003,2287,3.768,2316,4.778,2567,5.389,2571,6.891,2572,6.28,2573,4.519,2582,5.134,2583,8.86,2584,5.134,2585,5.134,2586,4.315]],["title/tutorial/rdd/#query-center-geometry",[107,0.997,318,1.388,703,3.385]],["text/tutorial/rdd/#query-center-geometry",[2,1.947,12,0.478,116,3.775,123,2.704,168,4.63,179,3.036,239,3.619,318,2.859,340,3.773,519,2.999,573,3.292,703,5.87,1566,4.482,1660,4.653,1734,6.042,1791,5.575]],["title/tutorial/rdd/#use-spatial-indexes_1",[97,0.997,390,1.14,556,1.899]],["text/tutorial/rdd/#use-spatial-indexes_1",[6,2.298,12,0.672,25,2.984,51,1.977,97,1.255,201,3.301,303,2.269,318,2.63,321,2.433,343,3.137,389,2.575,390,2.16,422,2.327,457,1.678,483,3.193,516,3.163,556,3.193,777,2.278,901,3.788,909,5.204,915,4.689,1507,3.788,1566,4.347,1569,2.348,1673,6.09,2038,4.385,2040,4.385,2056,4.148,2058,4.689,2060,4.526,2061,4.526,2062,4.148,2063,4.526,2287,5.693,2567,5.86,2571,7.343,2572,6.829,2573,5.11,2579,6.829]],["title/tutorial/rdd/#output-format_1",[108,1.047,255,1.993]],["text/tutorial/rdd/#output-format_1",[107,2.112,108,1.595,255,3.036,318,2.525,390,2.074,573,3.453,612,4.99,1566,4.701,1673,5.847]],["title/tutorial/rdd/#write-a-spatial-join-query",[318,1.195,390,0.981,777,1.558,880,2.163]],["text/tutorial/rdd/#write-a-spatial-join-query",[12,0.667,15,2.805,34,0.899,51,1.729,55,2.138,59,3.633,83,2.408,91,1.866,97,1.098,98,2.128,103,1.259,107,1.906,112,0.926,118,2.286,133,3.413,197,3.001,215,4.114,247,3.022,267,3.13,318,2.791,321,2.128,390,2.292,422,2.838,457,2.047,465,2.825,482,1.742,507,3.026,519,3.057,777,3.198,782,4.151,909,4.242,918,3.497,995,2.263,1183,2.118,1547,2.729,1652,3.628,1658,5.348,1660,2.954,1670,3.582,1735,3.382,2031,3.676,2032,3.582,2064,4.1,2065,3.676,2066,5.901,2067,4.667,2069,3.582,2070,4.469,2287,6.471,2567,5.348,2587,7.586,2588,7.586,2589,4.589,2590,4.725]],["title/tutorial/rdd/#use-spatial-partitioning",[97,0.997,390,1.14,830,2.315]],["text/tutorial/rdd/#use-spatial-partitioning",[2,1.543,12,0.664,25,3.259,28,3.342,97,1.371,98,2.657,215,3.2,247,2.707,318,1.908,390,2.032,482,2.821,544,3.842,633,3.2,686,3.239,777,2.488,830,5.018,918,5.663,957,4.27,1469,4.51,1507,5.953,1508,4.419,1542,4.419,1564,5.121,1587,4.864,2065,5.952,2066,6.605,2067,6.364,2069,5.801,2071,5.581,2287,6.695]],["title/tutorial/rdd/#use-spatial-indexes_2",[97,0.997,390,1.14,556,1.899]],["text/tutorial/rdd/#use-spatial-indexes_2",[12,0.671,51,2.092,55,2.586,97,1.328,247,2.622,318,2.424,321,2.574,343,3.633,389,2.724,390,1.991,457,1.776,482,2.763,556,3.315,658,2.866,777,3.16,843,4.507,901,4.008,909,4.676,921,3.346,942,4.572,1569,2.484,1652,4.389,1658,4.64,1825,5.162,2038,4.64,2040,4.64,2066,6.504,2067,5.309,2069,4.334,2072,5.278,2287,6.593,2567,6.083,2579,7.088,2591,6.142]],["title/tutorial/rdd/#output-format_2",[108,1.047,255,1.993]],["text/tutorial/rdd/#output-format_2",[12,0.442,59,4.038,107,2.117,108,1.406,247,3.158,255,2.677,318,2.226,390,1.829,573,4.031,658,4.228,777,2.903,784,5.285,923,6.649,924,6.392,2064,5.974,2066,5.355,2073,7.317,2074,8.621,2075,6.511,2076,6.511,2077,6.511,2287,5.428]],["title/tutorial/rdd/#write-a-distance-join-query",[213,1.872,318,1.195,777,1.558,880,2.163]],["text/tutorial/rdd/#write-a-distance-join-query",[12,0.667,15,2.297,34,0.736,51,1.416,55,1.75,59,3.248,80,4.575,83,1.971,91,1.528,97,1.575,98,2.57,103,1.031,107,1.739,108,0.79,112,0.758,118,1.871,123,1.405,133,2.956,213,4.495,215,3.678,247,2.618,248,2.832,255,1.504,267,2.563,279,3.716,287,2.61,318,2.978,321,1.742,390,2.121,422,2.459,423,2.94,457,1.773,465,2.313,482,1.426,483,1.711,507,2.477,519,2.733,556,1.711,601,2.933,777,3.74,782,3.596,808,3.748,823,2.659,830,2.086,909,4.187,918,2.863,995,1.853,1183,1.734,1355,3.051,1547,2.235,1652,2.97,1658,4.633,1660,2.418,1670,2.933,1701,3.297,1735,2.769,1944,7.121,2031,3.009,2032,2.933,2065,3.009,2066,3.009,2067,4.043,2069,2.933,2080,3.572,2567,4.633,2587,6.783,2588,6.783,2589,3.757,2590,3.869,2592,6.132,2593,6.132,2594,3.659,2595,4.157]],["title/tutorial/rdd/#save-to-permanent-storage",[999,2.328,1668,2.749,2086,2.951]],["text/tutorial/rdd/#save-to-permanent-storage",[91,2.794,136,4.259,156,4.032,390,1.879,482,3.161,501,3.047,520,4.529,573,3.129,783,4.595,971,4.059,995,3.388,999,4.649,1010,4.229,1265,5.503,1266,5.503,1384,5.431,1582,4.816,1668,5.489,1688,5.431,1691,4.645,1706,6.139,1812,5.578,2086,5.893]],["title/tutorial/rdd/#save-an-spatialrdd-not-indexed",[482,1.583,556,1.899,999,2.328]],["text/tutorial/rdd/#save-an-spatialrdd-not-indexed",[55,3.62,482,3.399,519,3.224,999,4.34,1668,5.124,2086,5.501]],["title/tutorial/rdd/#save-an-spatialrdd-indexed",[482,1.583,556,1.899,999,2.328]],["text/tutorial/rdd/#save-an-spatialrdd-indexed",[55,3.468,482,3.519,501,3.303,519,3.089,556,3.978,573,3.391,999,4.158,1010,4.583,1668,4.909,1691,5.035,2086,5.27]],["title/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed",[482,1.195,556,1.434,999,1.758,2067,2.296,2095,3.066]],["text/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed",[7,1.183,98,3.276,230,4.819,318,2.353,321,3.276,390,1.932,651,4.174,777,3.067,829,6.095,830,4.7,999,3.945,1183,4.185,1337,4.043,1496,5.818,1668,4.658,1820,5.101,1859,5.736,1876,6.095,2086,5.001,2096,5.905]],["title/tutorial/rdd/#reload-a-saved-spatialrdd",[482,1.583,999,2.328,2097,3.659]],["text/tutorial/rdd/#reload-a-saved-spatialrdd",[12,0.511,482,2.932,501,3.426,573,3.517,999,4.313,1010,4.754,2097,6.777,2098,6.186]],["title/tutorial/sql-pure-sql/",[34,0.975,3471,4.848]],["text/tutorial/sql-pure-sql/",[2,1.176,4,1.706,6,1.205,7,0.909,12,0.676,27,2.112,28,1.605,31,3.248,34,1.32,35,1.093,37,2.68,43,1.294,51,1.645,69,1.896,80,1.731,96,1.35,97,1.612,111,0.82,112,1.095,116,1.92,120,3.879,123,2.52,125,3.251,126,2.197,140,4.507,178,1.877,179,1.156,184,3.367,188,2.927,197,2.855,198,0.919,199,2.354,247,1.3,281,5.177,306,1.647,344,2.453,349,1.659,390,0.753,398,2.614,410,1.841,422,1.937,423,1.459,449,3.946,450,2.3,451,2.3,452,2.3,457,1.397,458,1.986,479,1.156,491,1.605,496,4.949,497,3.831,501,1.22,519,1.142,538,3.467,540,3.253,541,3.186,551,6.087,552,5.993,553,6.186,639,2.768,640,2.335,651,1.626,771,3.005,772,3.218,777,1.195,778,2.028,861,2.833,862,2.833,863,2.833,888,2.234,891,1.771,892,2.204,893,1.744,927,3.218,963,2.175,993,1.967,1151,3.044,1188,1.467,1189,2.459,1231,2.028,1531,1.706,1534,3.521,1756,2.073,1771,1.706,1793,1.718,1984,4.291,2129,1.861,2609,2.833,2612,3.977,2645,2.68,2704,2.833,2708,3.289,3462,2.415,3471,2.68,3491,3.044,3492,3.044,3558,2.234,3586,2.833,3928,3.381,3929,3.381,3930,3.381,3931,3.381,3932,7.159,3933,5.365,3934,3.381,3935,8.309,3936,3.381,3937,6.289,3938,7.159]],["title/tutorial/sql-pure-sql/#initiate-session",[888,4.041,1531,3.086]],["text/tutorial/sql-pure-sql/#initiate-session",[4,3.894,7,1.319,12,0.637,34,1.543,35,2.495,37,6.116,43,2.953,69,3.42,96,3.082,344,3.528,449,4.011,457,2.009,491,3.662,778,4.629,891,4.042,892,5.03,893,3.981,963,4.965,1188,3.349,1189,5.612,1534,4.074,1793,3.922,1984,6.805,2129,4.247,2645,6.116,2704,6.467,3462,5.511,3491,6.948,3492,6.948,3558,5.099,3586,6.467,3928,7.717,3929,7.717,3930,7.717]],["title/tutorial/sql-pure-sql/#load-data",[31,2.074,541,2.922]],["text/tutorial/sql-pure-sql/#load-data",[12,0.663,31,3.375,51,2.083,97,2.058,123,3.031,125,4.158,126,3.651,140,5.293,247,2.61,410,2.331,422,3.219,457,1.768,458,3.99,479,2.321,496,5.813,497,4.85,501,2.451,538,5.175,540,5.407,541,4.259,639,4.6,772,5.349,927,5.349,1771,3.427,2609,5.691,2612,5.035,3931,6.791,3932,6.404,3933,8.917,3934,6.791,3935,6.404,3936,6.791]],["title/tutorial/sql-pure-sql/#transform-the-data",[31,2.074,398,2.98]],["text/tutorial/sql-pure-sql/#transform-the-data",[12,0.677,31,2.089,112,1.372,116,2.205,120,3.584,123,2.544,140,4.96,178,3.421,179,2.106,184,3.867,188,3.362,281,6.439,398,3.002,410,2.115,496,5.447,497,4.4,519,2.081,551,7.57,552,7.454,553,7.694,771,4.681,1151,5.547,1534,4.412,2612,4.568,2708,5.124,3932,8.942,3935,10.022,3937,5.81,3938,5.81]],["title/tutorial/sql-pure-sql/#work-with-data",[31,2.074,651,2.941]],["text/tutorial/sql-pure-sql/#work-with-data",[12,0.675,31,2.59,111,1.168,112,1.254,116,2.734,120,5.595,184,4.795,188,4.168,197,5.119,198,2.077,199,3.426,306,3.723,349,3.748,777,2.699,861,6.402,862,6.402,863,6.402,1756,4.684,3937,9.07,3938,9.927]],["title/tutorial/sql-python/",[43,2.902]],["text/tutorial/sql-python/",[2,1.009,6,0.628,7,1.254,12,0.684,19,0.289,27,0.372,28,1.174,31,2.38,34,0.856,35,1.183,43,1.187,51,0.759,58,0.687,60,0.46,65,0.624,69,0.334,84,1.033,85,0.454,89,1.022,91,0.313,92,0.419,97,1.111,102,0.18,103,0.211,107,1.407,108,0.162,111,0.635,112,0.509,116,2.152,123,1.114,126,1.27,133,2.173,168,1.606,170,1.005,174,1.822,176,0.76,179,2.152,198,2.661,199,2.629,228,0.434,239,0.385,279,3.577,281,3.354,293,0.586,295,0.969,306,1.205,324,2.228,334,0.6,335,0.567,336,0.616,343,1.129,344,0.432,361,0.463,370,0.437,371,1.105,390,0.69,394,1.005,422,2.273,423,0.408,449,2.393,450,0.642,451,0.642,452,0.642,455,0.85,456,0.908,457,0.644,459,0.406,460,0.555,478,0.495,479,1.951,487,1.562,493,1.787,499,2.763,500,0.616,501,0.341,502,0.652,508,2.951,519,0.835,528,0.652,529,0.48,538,1.612,540,1.068,541,0.841,561,0.749,562,0.687,573,2.333,581,2.568,586,1.005,609,4.496,610,3.372,612,1.138,639,0.487,651,0.454,652,2.66,670,1.462,691,0.624,717,0.624,772,0.567,775,2.488,777,0.334,789,0.675,790,0.675,791,0.663,794,0.687,801,0.675,808,0.52,865,0.633,866,0.624,867,0.642,868,0.633,869,0.633,871,0.731,880,0.864,882,0.978,889,1.373,890,0.969,891,0.495,893,0.487,895,0.406,896,0.567,898,1.373,899,2.69,903,1.484,904,0.624,913,1.105,927,0.567,951,1.198,963,0.608,964,0.539,985,0.715,992,3.157,995,0.379,1083,0.593,1173,0.515,1213,0.573,1290,0.534,1291,1.014,1311,0.383,1337,2.502,1338,0.876,1352,0.503,1353,0.6,1355,0.624,1412,0.534,1439,0.593,1445,0.491,1469,1.807,1483,0.715,1509,0.457,1530,0.579,1543,0.507,1682,0.579,1729,0.725,1745,0.731,1753,0.616,1755,0.687,1776,0.675,1793,1.257,1795,0.555,1931,1.119,1952,0.616,1953,1.08,1963,1.363,1984,0.608,1987,0.715,1993,1.799,2004,3.821,2051,3.458,2052,1.961,2053,3.145,2059,2.674,2123,0.818,2126,0.818,2129,0.969,2132,2.4,2133,0.792,2134,1.433,2135,0.769,2138,0.85,2140,0.792,2141,1.586,2143,0.85,2144,1.476,2145,0.792,2146,0.85,2147,0.85,2148,0.85,2149,1.476,2150,3.066,2151,2.227,2152,1.476,2153,0.85,2154,0.85,2155,0.85,2156,0.85,2157,0.85,2158,0.85,2159,0.85,2160,0.85,2161,0.85,2162,0.85,2163,2.073,2164,1.476,2165,2.227,2166,3.308,2167,3.066,2168,0.85,2169,1.476,2170,0.85,2171,1.476,2172,1.476,2173,0.85,2174,1.476,2175,1.476,2176,0.85,2177,2.599,2178,1.476,2179,0.85,2180,1.476,2181,0.85,2182,2.227,2183,2.227,2184,0.85,2185,0.85,2186,0.792,2187,0.85,2188,0.85,2189,1.586,2190,0.85,2191,0.85,2192,1.586,2193,0.85,2194,0.85,2195,0.85,2196,0.85,2197,0.85,2199,0.85,2200,0.85,2201,0.85,2202,0.85,2203,1.586,2204,0.85,2205,0.85,2206,1.586,2207,0.85,2208,0.792,2209,0.85,2210,0.85,2211,0.85,2212,0.85,2213,0.85,2214,4.649,2215,0.85,2216,0.85,2217,0.85,2218,0.687,2219,0.85,2220,0.85,2221,0.85,2222,0.85,2223,0.85,2224,2.792,2225,0.85,2226,0.85,2227,0.85,2228,0.85,2229,0.85,2230,0.85,2231,0.85,2232,0.85,2233,0.85,2234,0.85,2235,0.85,2236,0.85,2237,0.715,2239,0.85,2240,0.792,2241,1.363,2242,2.013,2243,1.363,2244,0.85,2245,0.85,2246,0.85,2247,0.85,2248,0.85,2249,0.85,2250,2.227,2251,0.85,2252,0.85,2253,0.792,2254,1.586,2255,1.586,2256,1.586,2257,1.586,2258,1.586,2259,1.586,2260,2.792,2261,2.792,2262,1.586,2263,1.586,2264,1.586,2265,1.586,2266,0.85,2267,1.586,2268,0.85,2269,1.586,2270,1.586,2271,4.074,2272,1.586,2741,1.5,3032,0.7,3470,3.382,3498,1.258,3499,0.769,3505,0.687,3648,0.792,3719,0.792,3764,2.143,3792,0.85,3795,0.85,3939,0.85,3940,0.945,3941,0.945,3942,0.945,3943,1.761]],["title/tutorial/sql-python/#spatial-sql-application-in-python",[34,0.703,43,1.687,390,0.981,882,2.447]],["text/tutorial/sql-python/#spatial-sql-application-in-python",[]],["title/tutorial/sql-python/#introduction",[102,1.442]],["text/tutorial/sql-python/#introduction",[2,2.044,6,2.593,7,1.271,12,0.584,19,2.223,34,1.788,35,2.352,43,2.784,91,2.408,92,3.23,97,1.416,111,1.112,112,1.195,228,3.347,324,3.522,390,2.076,449,3.782,450,4.949,451,4.949,452,4.949,456,4.811,457,1.894,479,2.487,502,5.026,866,4.808,867,4.949,868,4.876,869,4.876,871,5.63,1338,3.619,1352,3.872,1682,4.461,1753,4.743,1755,5.291,1776,5.196,1793,4.74,2741,6.241,3032,5.394,3498,6.66,3499,5.921,3648,6.098,3719,6.098]],["title/tutorial/sql-python/#installation",[1729,3.122]],["text/tutorial/sql-python/#installation",[2,2.093,43,3.653,84,2.697,89,3.148,344,4.366,865,6.4,1729,3.93]],["title/tutorial/sql-python/#register-package",[1793,3.109,2129,3.366]],["text/tutorial/sql-python/#register-package",[2,1.86,7,1.504,12,0.617,35,2.744,51,3.148,84,2.397,97,1.652,293,5.265,457,2.21,529,4.314,880,4.164,899,3.16,903,5.092,1439,5.327,1795,4.987,1984,5.461,2129,4.671,3470,8.353,3764,7.354,3939,7.643]],["title/tutorial/sql-python/#writing-application",[880,3.001,882,3.395]],["text/tutorial/sql-python/#writing-application",[2,1.283,7,1.259,12,0.668,28,2.779,35,2.609,51,1.795,60,2.853,84,1.653,97,2.032,103,1.307,107,1.14,111,0.895,123,1.782,239,2.385,324,2.834,449,4.195,455,5.271,479,3.402,487,2.5,508,4.53,528,4.044,573,3.422,586,3.341,717,3.869,889,3.25,890,4.441,891,3.067,893,3.02,895,2.513,896,3.512,898,3.25,927,3.512,992,3.44,1290,3.309,1291,4.649,1353,3.719,1445,3.043,1469,4.562,1530,3.59,1543,3.141,1931,5.127,1952,3.816,1953,3.59,1987,4.431,2051,4.044,2126,5.072,2132,4.53,2134,4.764,2135,4.764,2138,5.271,2140,4.906,2141,7.266,2143,5.271,2144,4.906,2145,4.906,2146,5.271,2147,5.271,2148,5.271,3505,4.258,3792,5.271,3795,5.271,3940,5.854]],["title/tutorial/sql-python/#examples",[111,1.159]],["text/tutorial/sql-python/#examples",[]],["title/tutorial/sql-python/#sedonasql",[449,3.943]],["text/tutorial/sql-python/#sedonasql",[7,1.037,12,0.683,27,1.337,28,1.612,34,0.858,35,1.098,43,1.299,58,2.47,69,1.2,84,0.959,85,1.633,89,1.12,97,0.661,107,1.718,108,0.581,111,0.519,112,0.884,126,2.204,170,1.938,174,1.151,179,3.018,198,0.923,281,1.995,306,3.259,334,2.157,336,2.214,343,1.96,361,1.666,371,3.379,390,0.756,422,2.414,423,1.466,449,3.477,460,1.995,493,3.853,499,3.237,538,3.477,540,2.059,612,1.562,639,1.752,777,1.2,789,2.425,790,2.425,791,2.384,794,2.099,801,2.425,808,1.869,899,1.264,1083,2.131,1311,1.377,1355,2.244,1483,2.57,1993,2.47,2004,5.877,2051,2.346,2053,4.074,2149,2.846,2150,5.605,2151,6.022,2152,2.846,2153,3.058,2154,3.058,2155,3.058,2156,3.058,2157,3.058,2158,3.058,2159,3.058,2160,3.058,2161,3.058,2162,3.058,2163,2.846,2164,2.846,2165,6.022,2166,2.244,2167,6.378,2168,3.058,2169,2.846,2170,3.058,2171,2.846,2172,2.846,2173,3.058,2174,2.846,2175,2.846,2176,3.058,2177,5.605,2178,2.846,2179,3.058,2180,2.846,2181,3.058,2182,6.022,2183,6.022,2184,3.058,2185,3.058,2186,2.846,2187,3.058,2188,3.058,2189,4.847,2190,3.058,2191,3.058,2192,4.847,2193,3.058,2194,3.058,2195,3.058,2196,3.058,2197,3.058,2199,3.058,2200,3.058,2201,3.058,2202,3.058,2203,4.847,2204,3.058,2205,3.058,2206,4.847,2207,3.058,2208,2.846,2209,3.058,2210,3.058,2211,3.058,2212,3.058,2213,3.058,3941,3.396,3942,3.396]],["title/tutorial/sql-python/#integration-with-geopandas-and-shapely",[65,3.385,508,2.514,2051,3.539]],["text/tutorial/sql-python/#integration-with-geopandas-and-shapely",[2,1.26,7,1.414,12,0.682,31,2.393,34,0.588,89,1.895,97,0.719,107,1.681,111,0.564,112,0.606,123,1.75,126,2.354,170,2.106,279,2.014,295,3.163,324,3.417,335,2.214,343,2.093,370,1.708,459,1.585,478,1.934,479,1.965,487,3.402,493,2.126,499,1.787,501,1.332,508,1.811,538,1.919,540,2.238,541,2.746,573,2.616,670,2.711,691,2.439,889,3.191,898,3.191,899,3.405,903,3.448,913,3.607,995,1.481,1213,2.238,1338,1.836,1469,1.823,1509,1.787,1745,2.856,1953,2.263,1963,4.447,1993,4.18,2004,5.062,2051,5.965,2052,5.595,2053,6.03,2123,3.198,2133,3.093,2134,3.004,2144,3.093,2149,3.093,2150,4.817,2152,3.093,2163,4.817,2164,3.093,2166,2.439,2167,3.093,2169,3.093,2171,3.093,2172,3.093,2174,3.093,2175,3.093,2177,3.093,2178,3.093,2180,3.093,2214,5.126,2215,3.323,2216,3.323,2217,3.323,2218,2.684,2219,3.323,2220,3.323,2221,3.323,2222,3.323,2223,3.323,2224,7.174,2225,3.323,2226,3.323,2227,3.323,2228,3.323,2229,3.323,2230,3.323,2231,3.323,2232,3.323,2233,3.323,2234,3.323,2235,3.323,2236,3.323,3470,6.484,3764,4.98]],["title/tutorial/sql-python/#creating-spark-dataframe-based-on-shapely-objects",[7,0.47,123,1.049,324,1.668,479,1.178,508,1.69,573,1.277]],["text/tutorial/sql-python/#creating-spark-dataframe-based-on-shapely-objects",[]],["title/tutorial/sql-python/#supported-shapely-objects",[6,1.826,508,2.514,573,1.899]],["text/tutorial/sql-python/#supported-shapely-objects",[7,1.191,12,0.656,28,3.126,84,1.86,97,1.282,107,1.909,116,2.357,123,2.005,133,2.859,168,2.891,179,2.251,324,3.188,394,3.758,422,3.154,457,1.715,479,2.987,508,4.811,519,3.312,573,3.635,581,4.624,586,3.758,612,4.02,651,3.167,652,4.79,670,4.121,772,3.951,775,4.48,899,3.253,963,4.237,964,3.758,992,5.134,1337,4.069,1412,3.723,1469,3.253,2132,7.588,2237,4.984,2239,5.93,2240,5.52,2241,6.761,2242,7.981,2243,6.761,3943,8.739]],["title/tutorial/sql-python/#example-usage-for-shapely-objects",[111,0.674,508,2.163,573,1.634,904,2.913]],["text/tutorial/sql-python/#example-usage-for-shapely-objects",[]],["title/tutorial/sql-python/#point",[179,2.593]],["text/tutorial/sql-python/#point",[7,0.861,12,0.683,31,2.88,107,1.229,133,3.688,179,3.51,198,2.611,394,3.603,422,3.067,499,3.056,500,4.116,561,5.004,562,4.592,899,2.351,951,5.779,985,4.778,992,3.71,1173,3.445,1337,3.956,2059,4.062,2166,4.172,2214,6.178,2244,5.685,2245,5.685,2246,5.685,2247,5.685,2248,5.685,2249,5.685,2250,8.645,2251,5.685,2252,5.685,2253,5.292]],["title/tutorial/sql-python/#multipoint",[581,5.326]],["text/tutorial/sql-python/#multipoint",[7,0.996,12,0.681,31,3.171,133,3.173,198,2.805,422,2.639,499,3.538,581,7.241,899,2.722,992,4.295,1337,3.404,2059,4.704,2166,4.831,2214,4.704,2254,8.422,2255,8.422,2256,8.422,2257,8.422]],["title/tutorial/sql-python/#linestring",[168,3.33]],["text/tutorial/sql-python/#linestring",[7,0.917,12,0.683,31,3.006,133,2.922,168,4.351,176,3.827,198,2.696,279,5.748,281,5.824,422,2.43,499,3.258,609,7.524,610,6.222,899,2.506,992,3.955,1337,3.135,2059,4.331,2166,4.448,2214,5.704]],["title/tutorial/sql-python/#multilinestring",[652,5.517]],["text/tutorial/sql-python/#multilinestring",[7,0.82,12,0.683,31,2.787,133,2.611,198,2.547,279,6.187,281,6.393,422,2.172,499,2.912,609,8.099,610,6.829,652,6.811,899,2.24,992,3.535,1337,2.801,2059,3.87,2166,3.975,2214,5.29,2258,7.402,2259,7.402]],["title/tutorial/sql-python/#polygon",[116,2.715]],["text/tutorial/sql-python/#polygon",[7,0.871,12,0.683,31,2.905,116,3.852,133,2.775,198,2.627,422,2.308,499,3.094,899,2.38,992,3.756,1337,2.977,2059,4.113,2166,4.225,2214,5.512,2260,9.294,2261,9.294,2262,7.714,2263,7.714,2264,7.714,2265,7.714,2266,5.756,2267,7.714,2268,5.756]],["title/tutorial/sql-python/#multipolygon",[775,5.16]],["text/tutorial/sql-python/#multipolygon",[7,0.641,12,0.684,31,2.34,116,3.226,133,2.041,174,3.607,198,3.279,199,3.75,422,1.697,499,2.276,775,5.564,899,1.75,992,2.763,1337,2.19,2059,3.025,2166,3.107,2214,4.441,2269,6.216,2270,6.216,2271,8.658,2272,6.216]],["title/tutorial/sql-r/",[25,3.511]],["text/tutorial/sql-r/",[2,0.803,6,2.037,7,1.243,12,0.675,16,3.429,25,2.645,31,1.242,34,0.911,35,1.848,50,2.523,51,1.124,55,1.389,60,1.786,65,2.422,94,2.773,95,2.153,96,1.464,97,1.113,107,1.368,111,0.874,116,3.08,174,1.242,175,2.352,180,3.119,198,2.158,214,1.966,219,2.717,220,2.905,222,1.863,232,3.067,255,1.194,321,1.383,332,2.665,335,2.198,390,1.767,456,1.891,479,2.713,482,1.132,519,1.237,520,1.966,545,1.739,555,2.247,573,3.189,612,1.686,639,1.891,651,1.762,658,2.402,670,1.728,682,3.3,686,1.686,767,2.493,779,3.146,782,1.935,783,1.646,858,2.198,882,2.034,895,1.573,899,1.364,913,2.3,921,1.798,958,1.707,971,1.762,1007,3.071,1013,2.617,1014,2.3,1185,2.804,1199,3.393,1245,2.017,1264,2.493,1384,2.358,1501,2.617,1559,3.071,1709,2.905,1786,3.146,1804,2.617,1807,2.328,1888,2.665,2001,3.325,2037,2.531,2098,2.389,2103,4.79,2341,3.3,2342,3.3,2343,3.3,2344,3.3,2345,3.3,2346,3.3,2402,3.3,2403,3.3,2404,3.3,2405,3.3,2406,3.3,2407,3.3,2490,3.3,2491,3.3,2492,3.3,2493,3.3,2494,3.3,2495,3.3,2683,3.071,2753,2.905,3355,3.071,3510,5.437,3513,6.006,3518,5.718,3522,2.982,3529,6.327,3531,3.3,3532,3.3,3543,2.905,3891,3.175,3944,5.716,3945,5.716,3946,3.665,3947,3.665,3948,8.606,3949,3.665,3950,3.665,3951,3.665,3952,3.665,3953,3.665,3954,3.175,3955,3.665,3956,5.716,3957,5.716,3958,3.665,3959,3.665,3960,3.665,3961,3.665,3962,3.665,3963,3.665,3964,3.665,3965,3.665,3966,3.665]],["title/tutorial/sql-r/#spatial-sql-applications-in-r-language",[25,1.79,34,0.616,390,0.861,882,2.147,1804,2.762]],["text/tutorial/sql-r/#spatial-sql-applications-in-r-language",[2,0.815,6,2.06,7,1.25,12,0.675,16,3.468,25,1.721,31,1.261,34,0.593,35,1.869,50,2.552,51,1.14,55,1.41,60,1.812,65,2.457,94,2.814,95,2.185,96,1.485,97,1.125,107,1.38,111,0.884,116,3.101,174,1.261,175,2.379,180,3.154,198,2.175,214,1.995,219,2.756,220,2.947,222,1.89,232,3.102,255,1.212,321,1.403,332,2.704,335,2.23,390,1.579,456,1.918,479,2.734,482,1.149,519,1.256,520,1.995,545,1.765,555,2.28,573,3.211,612,1.71,639,1.918,651,1.788,658,2.429,670,1.753,682,3.348,686,1.71,767,2.529,779,3.181,782,1.963,783,1.67,858,2.23,895,1.596,899,1.384,913,2.334,921,1.824,958,1.731,971,1.788,1007,3.116,1013,2.655,1014,2.334,1185,2.836,1199,3.431,1245,2.046,1264,2.529,1384,2.392,1501,2.655,1559,3.116,1709,2.947,1786,3.181,1807,2.362,1888,2.704,2001,3.363,2037,2.568,2098,2.424,2103,4.844,2341,3.348,2342,3.348,2343,3.348,2344,3.348,2345,3.348,2346,3.348,2402,3.348,2403,3.348,2404,3.348,2405,3.348,2406,3.348,2407,3.348,2490,3.348,2491,3.348,2492,3.348,2493,3.348,2494,3.348,2495,3.348,2683,3.116,2753,2.947,3355,3.116,3510,5.487,3513,6.054,3518,5.771,3522,3.026,3529,6.385,3531,3.348,3532,3.348,3543,2.947,3891,3.221,3944,5.781,3945,5.781,3946,3.718,3947,3.718,3948,8.664,3949,3.718,3950,3.718,3951,3.718,3952,3.718,3953,3.718,3954,3.221,3955,3.718,3956,5.781,3957,5.781,3958,3.718,3959,3.718,3960,3.718,3961,3.718,3962,3.718,3963,3.718,3964,3.718,3965,3.718,3966,3.718]],["title/tutorial/sql/",[87,4.551]],["text/tutorial/sql/",[2,1.38,6,0.826,7,0.398,12,0.676,19,0.891,27,1.148,28,1.1,31,1.737,34,0.917,35,1.54,40,0.64,50,1.023,51,1.765,58,0.638,59,0.352,60,0.427,64,0.572,79,0.557,80,0.841,84,1.233,85,0.79,89,1.99,91,1.302,92,0.389,93,0.392,96,1.165,97,1.357,98,0.62,100,0.491,103,0.196,107,1.651,108,0.499,111,0.354,112,0.717,116,2.691,118,0.666,119,0.339,121,0.847,123,1.33,125,2.643,126,0.949,136,0.829,156,0.785,170,0.5,176,0.709,197,0.874,204,0.478,211,0.55,213,1.67,214,0.47,218,0.984,222,0.446,228,0.756,232,0.881,239,0.944,241,0.626,247,0.337,248,0.683,255,1.281,269,0.985,287,0.496,293,0.544,295,1.605,302,0.47,303,1.214,306,0.8,318,1.832,321,1.101,324,1.412,340,0.698,343,3.202,364,0.439,386,0.467,389,0.35,390,0.875,392,0.738,397,1.376,398,0.8,401,0.491,409,0.904,410,0.564,420,1.322,421,1.421,422,0.593,423,1,424,1.117,425,0.515,427,0.596,449,3.514,450,0.596,451,0.596,452,0.596,456,1.196,457,1.702,459,3.297,460,0.515,464,0.861,471,0.483,478,0.861,479,2.817,480,0.829,481,2.752,482,1.865,487,3.279,491,3.102,492,2.423,493,1.988,494,5.091,496,1.511,497,1.655,498,2.071,499,1.671,500,1.071,501,0.837,507,0.47,516,0.806,519,2.207,529,0.835,538,0.456,539,0.638,540,0.532,541,2.605,545,1.1,556,0.325,573,0.325,575,1.007,586,0.5,633,0.398,635,0.579,651,0.422,658,0.69,670,2.246,686,0.403,695,0.695,768,0.463,772,0.526,777,1.39,778,0.526,782,0.463,783,1.041,788,0.564,794,0.342,808,0.483,820,0.544,821,0.55,823,1.335,824,1.007,825,1.057,826,0.974,858,0.526,866,0.579,867,1.117,868,1.101,869,0.588,870,0.735,871,0.678,877,1.31,878,2.311,880,0.43,883,1.121,884,1.091,885,0.483,886,0.483,887,0.579,889,0.487,890,1.605,891,0.861,892,1.071,893,0.847,894,0.65,895,0.376,896,0.526,898,0.487,899,0.326,902,0.664,903,0.526,909,1.617,923,0.579,924,0.557,947,0.596,951,6.047,958,0.408,961,0.47,963,1.057,964,0.5,968,2.439,971,2.1,992,3.01,993,0.956,995,2.527,999,1.787,1012,1.605,1021,0.789,1044,0.638,1083,0.55,1173,1.264,1183,1.297,1188,0.381,1189,0.638,1199,0.52,1265,1.901,1266,1.901,1289,1.876,1290,0.929,1291,1.68,1308,0.381,1309,0.47,1311,1.399,1338,0.436,1439,0.55,1445,1.516,1503,0.47,1509,1.412,1515,0.564,1520,1.007,1531,0.829,1543,0.47,1549,0.532,1566,0.442,1569,1.062,1570,0.411,1577,0.985,1582,0.5,1629,0.638,1660,0.459,1668,0.881,1682,0.538,1688,1.057,1747,0.616,1756,0.538,1769,0.544,1775,0.579,1791,0.55,1795,0.515,1800,0.985,1808,0.55,1819,0.596,1820,0.515,1839,1.437,1854,1.224,1903,0.596,1953,0.538,1981,0.616,1982,0.544,1983,0.616,1984,0.564,2004,4.668,2006,0.735,2007,1.302,2011,0.714,2016,1.853,2017,1.117,2018,0.638,2056,0.564,2062,0.564,2073,0.638,2086,0.946,2129,1.275,2218,3.176,2241,1.271,2242,4.438,2243,1.271,2273,0.714,2556,0.588,2558,1.153,2562,0.664,2574,0.695,2586,0.664,2599,0.664,2600,0.735,2601,0.695,2602,0.735,2603,2.087,2604,1.479,2605,3.462,2606,3.462,2607,3.462,2608,3.462,2609,0.735,2610,2.893,2611,0.789,2612,2.559,2613,2.736,2614,2.736,2615,1.377,2616,1.377,2617,1.377,2618,1.377,2619,1.377,2620,1.377,2621,1.377,2622,1.377,2623,1.837,2624,4.785,2625,3.296,2626,3.296,2627,1.377,2628,1.377,2629,1.377,2630,1.837,2631,1.377,2632,1.377,2633,1.377,2634,1.837,2635,1.377,2636,1.377,2637,1.377,2638,1.837,2639,1.377,2640,1.377,2641,1.377,2642,1.377,2643,0.789,2644,0.789,2645,0.695,2646,1.377,2647,0.735,2648,1.718,2649,0.789,2650,0.789,2651,0.789,2652,0.789,2653,0.789,2654,0.789,2655,0.735,2656,0.735,2657,0.735,2658,0.735,2659,1.337,2660,0.789,2661,1.479,2662,0.789,2665,0.789,2670,1.479,2671,1.337,2673,0.789,2674,2.087,2675,2.087,2780,0.616,2786,0.572,2984,0.664,3340,1.423,3505,0.638,3643,1.942,3760,1.423,3924,0.735,3939,0.789,3967,3.784,3968,1.643,3969,1.643,3970,1.643,3971,1.643,3972,1.643,3973,1.643,3974,0.877,3975,0.877,3976,0.877,3977,1.549,3978,2.185,3979,1.643,3980,0.877,3981,0.877,3982,0.877,3983,0.877,3984,0.877,3985,0.877,3986,0.877,3987,1.643,3988,0.877,3989,0.877,3990,0.877,3991,0.877]],["title/tutorial/sql/#set-up-dependencies",[389,2.046,686,2.357,1311,2.077]],["text/tutorial/sql/#set-up-dependencies",[2,2.57,7,1.287,12,0.621,19,3.34,34,1.655,35,2.398,84,2.095,89,2.445,91,2.455,111,1.134,112,1.218,211,4.655,228,3.412,239,3.022,303,2.61,480,4.763,794,2.892,883,3.629,884,4.088,885,4.082,886,4.082,1188,3.219,1308,3.219,1309,3.98,1311,4.21,1682,4.548,1800,4.449,1839,5.855]],["title/tutorial/sql/#initiate-sparksession",[487,2.612,1531,3.086]],["text/tutorial/sql/#initiate-sparksession",[2,2.126,12,0.677,51,1.692,60,2.688,84,1.558,97,1.507,107,1.074,176,2.381,222,2.804,247,2.12,302,2.96,457,2.016,481,2.783,487,3.82,516,2.706,556,2.045,768,2.913,826,2.318,858,3.309,883,2.12,889,3.063,890,5.338,891,4.056,892,5.047,893,3.994,894,4.09,895,2.368,896,3.309,898,3.063,993,3.209,995,2.214,1189,4.012,1289,6.241,1290,4.377,1291,5.588,1311,2.236,1509,4.695,1515,3.549,1520,4.748,1531,2.783,1543,2.96,1549,3.345,1569,2.009,1570,2.585,1800,3.309,1808,3.462,1819,3.752,1820,3.241,1839,3.422,1854,4.723,1981,3.873,1982,3.422,1983,3.873,2599,4.175,2600,4.623,3505,4.012,3924,4.623]],["title/tutorial/sql/#register-sedonasql",[449,3.179,2129,3.366]],["text/tutorial/sql/#register-sedonasql",[2,1.791,7,1.367,12,0.609,35,3.243,96,4.005,176,3.527,293,5.068,318,2.214,457,2.127,487,4.282,519,2.759,777,2.887,778,4.901,883,3.141,887,5.399,902,6.183,903,4.901,963,6.452,1439,5.128,1795,4.801,1984,5.257,2129,5.519,2601,6.476,2984,6.183,3939,7.357]],["title/tutorial/sql/#load-data-from-files",[31,1.737,501,1.849,541,2.447]],["text/tutorial/sql/#load-data-from-files",[12,0.677,31,1.639,51,1.483,89,1.594,97,0.941,108,0.828,116,3.838,123,1.472,126,2.885,156,2.31,170,2.759,204,2.638,232,2.595,255,1.576,422,1.746,457,1.834,459,2.076,479,1.653,481,2.44,487,2.065,493,2.786,499,2.341,501,2.544,507,2.595,538,2.514,539,3.517,540,2.932,541,3.366,995,1.941,2004,6.813,2218,6.046,2602,4.053,2603,7.485,2604,6.344,2605,6.589,2606,6.589,2607,6.589,2608,6.589,2609,4.053,2610,7.655,2611,4.354,2612,3.585,2613,3.833,2614,3.833,2615,4.053,2616,4.053,2617,4.053,2618,4.053,2619,4.053,2620,4.053,2621,4.053,2622,4.053,2623,3.833,2624,7.24,2625,6.967,2626,6.967,2627,4.053,2628,4.053,2629,4.053,2630,3.833,2631,4.053,2632,4.053,2633,4.053,2634,3.833,2635,4.053,2636,4.053,2637,4.053,2638,3.833,2639,4.053,2640,4.053,2641,4.053,2642,4.053]],["title/tutorial/sql/#create-a-geometry-type-column",[107,0.858,123,1.342,459,1.892,519,1.488]],["text/tutorial/sql/#create-a-geometry-type-column",[12,0.673,27,1.617,34,0.655,35,1.328,51,1.26,64,2.678,84,1.16,89,1.354,91,1.36,97,0.8,98,1.55,107,1.765,112,1.025,116,3.017,118,1.665,121,2.119,123,1.9,125,3.66,218,3.205,232,2.204,255,2.034,318,1.113,343,3.612,410,1.41,422,1.483,449,3.923,456,2.119,457,1.069,459,3.24,479,2.133,481,2.073,487,1.754,493,2.366,494,5.689,496,4.068,497,4.457,498,2.464,499,1.988,500,2.678,519,2.846,529,2.088,573,1.522,826,1.726,867,2.794,877,1.845,951,6.952,971,1.975,992,2.414,1044,2.987,1173,2.241,1199,2.438,1629,2.987,1903,2.794,1953,2.519,2004,5.355,2006,3.443,2007,3.256,2218,4.539,2562,3.109,2574,3.256,2605,4.946,2606,4.946,2607,4.946,2608,4.946,2610,3.443,2612,4.627,2613,4.946,2614,4.946,2615,3.443,2616,3.443,2617,3.443,2618,3.443,2619,3.443,2620,3.443,2621,3.443,2622,3.443,2623,3.256,2624,6.681,2625,6.325,2626,6.325,2627,3.443,2628,3.443,2629,3.443,2630,3.256,2631,3.443,2632,3.443,2633,3.443,2634,3.256,2635,3.443,2636,3.443,2637,3.443,2638,3.256,2639,3.443,2640,3.443,2641,3.443,2642,3.443,2643,3.699,2644,3.699,2645,3.256,2646,3.443,2659,3.343]],["title/tutorial/sql/#load-shapefile-and-geojson",[136,2.585,478,2.684,541,2.447]],["text/tutorial/sql/#load-shapefile-and-geojson",[12,0.609,84,2.538,89,2.963,97,1.749,136,4.535,478,4.708,479,3.63,482,3.281,491,4.265,541,5.073,670,4.238,1183,3.376]],["title/tutorial/sql/#load-geoparquet",[541,2.922,3967,5.299]],["text/tutorial/sql/#load-geoparquet",[12,0.677,89,2.521,97,1.055,107,1.975,108,1.309,125,3.886,126,2.219,255,2.491,269,4.587,295,4.876,343,4.234,401,3.035,457,1.99,459,2.326,479,1.852,481,2.734,487,3.265,500,3.532,541,4.232,545,2.572,909,2.539,951,7.91,995,3.862,1021,4.879,1173,4.172,2016,4.857,3967,7.676,3968,7.646,3969,7.646,3970,7.646,3971,7.646,3972,7.646,3973,7.646]],["title/tutorial/sql/#transform-the-coordinate-reference-system",[85,2.119,303,1.551,392,1.98,398,2.148]],["text/tutorial/sql/#transform-the-coordinate-reference-system",[2,1.057,12,0.667,34,0.768,50,2.128,51,2.545,79,3.063,85,2.318,97,0.938,98,1.819,107,2.035,112,0.792,116,3.471,123,1.467,213,2.047,255,1.571,303,2.92,324,4.415,392,2.165,397,4.926,398,2.349,420,4.735,421,5.088,423,2.081,424,4.782,425,2.832,427,3.279,449,2.506,457,1.255,459,3.563,487,2.058,493,2.777,494,6.086,496,3.142,497,3.443,498,2.892,499,2.333,529,2.45,633,2.191,635,3.185,670,2.273,695,3.821,820,2.99,821,3.025,823,4.78,824,4.311,825,4.523,826,2.026,947,3.279,964,2.75,968,6.28,2004,5.795,2007,3.821,2218,5.113,2556,3.231,2558,4.936,2605,5.572,2606,5.572,2607,5.572,2608,5.572,2612,5.212,2613,5.572,2614,5.572,2623,3.821,2624,7.229,2630,3.821,2634,3.821,2638,3.821,2646,4.04,2647,4.04,2648,3.574,2649,4.34,2650,4.34,2651,4.34,2652,4.34,2653,4.34,2654,4.34]],["title/tutorial/sql/#run-spatial-queries",[318,1.388,390,1.14,1569,1.866]],["text/tutorial/sql/#run-spatial-queries",[107,1.859,123,2.907,318,2.588,390,2.126,459,4.099,519,3.224,1569,3.477]],["title/tutorial/sql/#range-query",[318,1.658,340,2.598]],["text/tutorial/sql/#range-query",[12,0.664,27,2.864,34,1.16,89,2.399,91,2.408,97,1.416,107,1.416,111,1.112,112,1.195,116,2.604,121,3.754,123,2.215,197,4.963,248,3.026,318,2.527,340,3.09,364,3.645,449,3.782,457,1.894,459,3.124,471,4.004,487,3.107,493,4.191,494,7.043,498,4.365,499,3.522,519,2.457,782,3.842,788,4.681,808,4.004,1569,2.649,1660,3.812,1747,5.108,1791,4.566,2004,4.622,2648,5.394,2655,6.098]],["title/tutorial/sql/#knn-query",[318,1.658,1566,3.086]],["text/tutorial/sql/#knn-query",[12,0.661,34,1.224,51,2.355,97,1.495,103,1.714,112,1.261,116,2.748,213,4.701,248,3.193,287,4.34,306,4.702,386,4.086,457,1.999,460,4.511,487,3.278,493,4.423,494,7.158,498,4.606,499,3.716,1756,4.708,2056,4.94,2062,4.94,2586,5.811,2648,5.692,2656,6.435,2657,6.435,2658,6.435]],["title/tutorial/sql/#join-query",[318,1.658,777,2.161]],["text/tutorial/sql/#join-query",[12,0.511,28,4.504,80,4.859,318,2.971,423,4.096,777,3.874]],["title/tutorial/sql/#other-queries",[318,2.056]],["text/tutorial/sql/#other-queries",[12,0.499,35,3.701,84,2.615,89,3.053,100,5.187,318,2.509,449,5.619,2018,6.734,2659,7.535]],["title/tutorial/sql/#save-to-permanent-storage",[999,2.328,1668,2.749,2086,2.951]],["text/tutorial/sql/#save-to-permanent-storage",[12,0.629,28,3.453,34,1.16,35,2.352,51,2.231,59,2.92,91,2.408,97,1.416,107,2.003,112,1.195,119,2.81,125,3.441,156,3.476,241,5.196,390,1.62,457,1.894,459,4.418,479,3.518,481,3.671,487,3.107,498,4.365,519,2.457,670,4.397,772,4.365,783,3.268,958,3.388,961,3.904,999,4.238,1582,4.152,1668,3.904,1688,6,1775,4.808,2086,4.191,2660,6.551,2661,8.396,2662,6.551,2665,6.551,2780,5.108,2786,4.743,3974,7.276]],["title/tutorial/sql/#save-geoparquet",[999,2.78,3967,5.299]],["text/tutorial/sql/#save-geoparquet",[12,0.657,108,1.539,295,4.946,457,2.34,880,4.409,999,4.827,3967,9.202,3975,8.987,3976,8.987]],["title/tutorial/sql/#convert-between-dataframe-and-spatialrdd",[214,2.365,479,1.507,482,1.362,670,2.079]],["text/tutorial/sql/#convert-between-dataframe-and-spatialrdd",[]],["title/tutorial/sql/#dataframe-to-spatialrdd",[479,2.091,482,1.89]],["text/tutorial/sql/#dataframe-to-spatialrdd",[12,0.624,58,5.91,84,2.295,89,2.679,97,1.582,107,1.946,449,4.225,459,4.291,479,3.7,481,4.101,482,3.088,491,5.138,494,5.101,516,3.987,519,2.744,658,3.415,670,3.832,878,6.441,995,3.262,1183,3.053,1338,4.043,2011,6.614,2670,9]],["title/tutorial/sql/#spatialrdd-to-dataframe",[479,2.091,482,1.89]],["text/tutorial/sql/#spatialrdd-to-dataframe",[6,1.924,12,0.673,31,2.998,50,2.383,51,1.656,84,1.525,89,2.514,91,1.787,96,2.156,97,1.485,125,1.992,239,2.2,321,2.038,343,3.499,409,2.971,449,2.807,459,3.274,464,2.829,479,3.284,481,2.724,482,2.968,487,3.257,491,4.81,492,5.354,494,4.787,519,2.575,545,2.563,575,3.311,658,2.269,670,2.546,783,2.425,877,2.425,878,6.045,909,3.574,951,6.535,971,3.667,992,5.645,995,3.061,1012,4.197,1183,2.028,1265,4.972,1266,4.972,1445,3.965,1577,3.239,2004,3.43,2016,3.43,2017,3.673,2241,4.178,2242,7.819,2243,4.178,2671,4.394,3340,4.678,3643,4.525,3760,4.678,3977,5.092,3978,5.092]],["title/tutorial/sql/#spatialpairrdd-to-dataframe",[479,2.091,2673,5.507]],["text/tutorial/sql/#spatialpairrdd-to-dataframe",[6,1.53,12,0.678,31,2.628,40,1.673,50,1.895,51,1.316,89,1.415,91,1.421,96,1.714,97,1.256,118,1.74,125,1.584,213,1.823,239,1.749,318,1.748,321,2.925,343,3.535,390,0.955,409,2.362,410,1.473,449,2.231,459,2.77,464,2.249,479,2.946,481,3.255,482,1.326,487,3.31,491,4.385,492,5.442,519,2.179,545,2.037,575,2.632,586,2.449,670,2.024,777,2.28,783,1.928,868,2.877,877,2.898,878,3.402,899,1.598,909,3.023,923,2.836,924,2.727,951,6.602,971,4.144,992,5.064,995,3.459,1012,3.55,1183,2.424,1265,4.206,1266,4.206,1445,3.354,1577,2.575,2016,2.727,2017,2.92,2073,3.122,2241,3.321,2242,7.899,2243,3.321,2671,3.493,2674,6.979,2675,6.979,3340,3.719,3643,5.407,3760,3.719,3977,4.048,3978,6.084,3979,6.452,3980,4.292,3981,4.292,3982,4.292,3983,4.292,3984,4.292,3985,4.292,3986,4.292,3987,6.452,3988,4.292,3989,4.292,3990,4.292,3991,4.292]],["title/tutorial/viz-gallery/",[3992,8.243]],["text/tutorial/viz-gallery/",[32,4.218,69,3.395,1236,6.264,1655,8.325,1982,5.96,3993,10.441]],["title/tutorial/viz-r/",[25,3.511]],["text/tutorial/viz-r/",[2,0.908,12,0.681,25,3.917,31,1.404,32,3.715,40,1.615,60,2.018,106,4.658,111,0.96,116,1.482,123,1.261,179,2.146,199,1.947,201,2.12,239,1.687,321,1.563,356,2.222,422,1.495,423,1.788,457,1.078,499,2.004,519,2.12,586,2.363,601,2.631,639,3.239,691,2.736,882,2.299,895,1.778,899,1.542,907,2.458,958,1.928,1014,2.599,1150,2.09,1164,5.654,1185,3.721,1195,2.539,1207,3.37,1212,4.409,1213,3.808,1483,5.74,1786,3.456,1804,2.958,1856,4.208,2001,4.412,2103,6.356,2556,2.775,2735,7.093,2752,3.471,2889,3.588,2941,3.282,3011,5.262,3510,5.868,3513,3.134,3522,3.37,3543,3.282,3644,3.729,3897,5.654,3898,5.654,3994,4.141,3995,7.584,3996,7.584,3997,4.141,3998,4.141,3999,4.141,4000,4.141,4001,4.141,4002,4.141,4003,4.141,4004,6.279,4005,4.141,4006,4.141,4007,4.141,4008,6.279,4009,4.141,4010,6.279,4011,4.141,4012,4.141,4013,4.141,4014,4.141,4015,4.141,4016,4.141,4017,4.141,4018,7.584,4019,4.141,4020,4.141,4021,4.141,4022,4.141,4023,6.279,4024,4.141,4025,4.141,4026,4.141,4027,4.141]],["title/tutorial/viz-r/#map-visualization-applications-in-r-language",[25,1.79,32,1.698,882,2.147,1185,1.898,1804,2.762]],["text/tutorial/viz-r/#map-visualization-applications-in-r-language",[2,0.923,12,0.681,25,3.545,31,1.427,32,3.362,40,1.641,60,2.051,106,4.692,111,0.972,116,1.507,123,1.281,179,2.173,199,1.971,201,2.156,239,1.715,321,1.589,356,2.259,422,1.52,423,1.817,457,1.096,499,2.038,519,2.147,586,2.402,601,2.674,639,3.28,691,2.782,895,1.807,899,1.567,907,2.499,958,1.96,1014,2.642,1150,2.124,1164,5.724,1185,3.119,1195,2.581,1207,3.426,1212,4.464,1213,3.855,1483,5.797,1786,3.499,1856,4.261,2001,4.456,2103,6.42,2556,2.821,2735,7.153,2752,3.528,2889,3.647,2941,3.337,3011,5.328,3510,5.927,3513,3.186,3522,3.426,3543,3.337,3644,3.79,3897,5.724,3898,5.724,3994,4.21,3995,7.66,3996,7.66,3997,4.21,3998,4.21,3999,4.21,4000,4.21,4001,4.21,4002,4.21,4003,4.21,4004,6.358,4005,4.21,4006,4.21,4007,4.21,4008,6.358,4009,4.21,4010,6.358,4011,4.21,4012,4.21,4013,4.21,4014,4.21,4015,4.21,4016,4.21,4017,4.21,4018,7.66,4019,4.21,4020,4.21,4021,4.21,4022,4.21,4023,6.358,4024,4.21,4025,4.21,4026,4.21,4027,4.21]],["title/tutorial/viz/",[87,4.551]],["text/tutorial/viz/",[2,1.666,6,0.527,7,0.492,12,0.665,15,1.32,16,1.592,18,1.666,19,0.811,27,1.999,28,0.701,31,2.084,32,4.157,34,0.423,35,0.858,40,0.576,51,0.814,55,2.639,59,0.593,60,0.72,79,0.939,84,1.434,89,1.191,91,0.878,93,0.66,96,1.76,97,1.421,98,1.663,100,3.443,101,0.917,103,0.33,106,1.359,107,0.288,108,0.253,111,0.674,112,1.333,123,2.472,140,1.575,175,1.814,176,0.638,178,0.821,185,3.858,226,1.779,228,0.68,232,1.424,234,1.075,239,1.471,244,0.939,251,0.8,281,1.559,293,0.917,302,0.793,303,0.934,318,0.401,324,1.285,339,0.896,345,0.8,364,2.831,371,0.928,378,1.038,389,1.06,390,1.944,392,0.664,397,3.014,409,0.813,410,2.11,420,2.514,421,3.113,423,1.146,449,1.38,456,0.762,457,1.322,459,1.551,466,0.676,479,1.736,480,0.746,481,1.822,482,0.457,483,0.548,487,2.625,496,1.73,508,2.772,516,0.725,519,0.896,529,0.751,541,0.706,544,0.806,545,1.26,551,1.833,552,1.805,553,1.863,573,1.339,575,1.627,589,1.171,633,2.003,639,0.762,640,1.833,651,0.711,658,1.518,670,1.251,686,0.68,690,1.144,694,0.963,770,2.267,771,4.258,778,0.887,783,1.979,794,1.035,824,0.906,826,0.621,868,0.991,877,1.192,880,0.725,881,2.008,882,0.821,883,1.02,884,0.992,887,0.977,889,0.821,890,1.461,891,0.774,892,0.963,893,0.762,895,0.635,896,0.887,898,0.821,902,1.119,903,1.592,922,0.963,943,4.411,946,3.493,958,0.688,961,0.793,963,0.951,993,0.86,995,1.45,1012,0.813,1083,0.928,1084,1.056,1107,1.863,1150,5.3,1183,1.357,1185,3.581,1188,2.204,1189,1.075,1191,1.331,1193,1.863,1194,4.11,1195,4.035,1196,1.93,1197,1.171,1198,1.171,1205,1.171,1206,1.171,1208,1.239,1212,1.038,1213,1.609,1214,1.005,1216,0.917,1227,1.119,1235,3.787,1236,2.873,1237,3.027,1241,3.493,1242,1.038,1243,4.674,1244,3.094,1245,2.794,1250,2.873,1251,2.626,1253,3.454,1264,1.805,1285,1.021,1289,1.707,1290,0.836,1291,1.529,1308,0.642,1309,0.793,1311,0.599,1338,0.735,1352,1.412,1355,2.387,1439,0.928,1444,1.544,1445,0.768,1469,0.73,1486,2.457,1487,1.119,1503,1.424,1505,1.038,1509,1.285,1515,1.707,1517,0.787,1520,1.627,1531,1.339,1534,3.676,1547,0.715,1549,0.896,1569,1.849,1570,0.693,1583,2.103,1616,1.021,1617,1.005,1627,1.171,1670,0.939,1681,1.666,1686,1.203,1691,2.425,1707,3.493,1710,2.626,1746,1.171,1756,0.906,1765,1.119,1771,2.562,1795,0.868,1800,0.887,1808,0.928,1821,0.977,1838,1.005,1844,1.119,1854,0.78,1875,1.075,1953,0.906,1982,2.24,1984,0.951,2096,1.005,2129,2.425,2273,1.203,2313,1.239,2314,1.239,2589,1.203,2599,1.119,2676,1.239,2677,1.478,2678,2.39,2679,1.478,2680,1.478,2683,1.239,2684,1.331,2685,1.331,2686,1.239,2687,1.331,2688,1.331,2689,1.331,2690,2.626,2691,1.171,2692,1.239,2693,1.331,2694,1.331,2695,1.331,2696,1.331,2697,1.119,2698,1.331,2699,1.331,2700,1.239,2701,1.331,2702,1.331,2704,1.239,2705,1.331,2706,1.331,2707,1.331,2708,4.269,2709,3.335,2711,1.331,2712,1.331,2713,1.331,2714,1.331,2715,1.331,2716,4.785,2717,1.331,2718,2.224,2719,1.331,2720,1.331,2721,1.331,2722,1.331,2723,1.331,2724,1.331,2725,1.331,2726,1.331,2727,1.331,2728,2.224,2984,1.119,3558,5.024,3768,2.39,3924,1.239,4028,1.606,4029,1.606,4030,2.654,4031,1.478,4032,1.478,4033,1.478,4034,1.478]],["title/tutorial/viz/#why-scalable-map-visualization",[32,2.249,1185,2.514,1838,3.485]],["text/tutorial/viz/#why-scalable-map-visualization",[16,5.318,18,4.225,31,3.572,32,4.805,55,2.552,96,3.541,100,3.77,234,4.895,378,4.726,389,2.688,390,1.498,409,3.704,423,2.906,456,3.472,694,4.388,783,3.023,1150,3.396,1185,5.169,1236,4.388,1244,4.726,1245,3.704,1253,4.578,1264,6.03,1285,4.65,1338,3.348,1444,3.916,1487,5.094,1503,3.612,1515,4.331,1517,3.583,1547,3.258,1569,2.451,1627,5.335,1670,4.276,1681,4.225,1710,4.895,1746,5.335,1756,4.127,1765,5.094,1821,4.448,1982,4.175,2096,4.578,2683,5.641,2684,6.061,2685,6.061,2686,5.641,2687,6.061,2688,6.061,2689,6.061,2690,4.895,2691,5.335,2692,5.641,2693,6.061,2694,6.061,2695,6.061,2696,6.061,2697,5.094,2698,6.061,2699,6.061,2700,5.641,3558,4.448]],["title/tutorial/viz/#visualize-spatialrdd",[482,1.89,1185,3.001]],["text/tutorial/viz/#visualize-spatialrdd",[27,3.58,79,5.778,84,2.568,111,1.39,239,3.705,794,3.546,881,6.882,1183,3.416,1188,3.947,1352,4.84,1355,6.009,2701,8.188,2702,8.188,3558,6.009,4030,9.094]],["title/tutorial/viz/#set-up-dependencies",[389,2.046,686,2.357,1311,2.077]],["text/tutorial/viz/#set-up-dependencies",[2,2.551,7,1.211,12,0.568,19,3.223,34,1.416,89,2.929,303,3.126,480,4.482,883,3.415,884,3.945,1188,3.856,1308,3.856,1309,4.766]],["title/tutorial/viz/#initiate-sparksession",[487,2.612,1531,3.086]],["text/tutorial/viz/#initiate-sparksession",[2,1.954,12,0.677,51,2.083,60,3.309,97,1.322,302,3.644,457,1.768,481,3.427,487,4.251,826,2.854,889,3.77,890,4.907,891,3.558,892,4.427,893,3.503,895,2.915,896,4.074,898,3.77,995,2.726,1188,2.948,1189,4.939,1289,5.737,1290,3.839,1291,5.137,1509,4.316,1515,4.369,1520,5.468,1531,3.427,1549,4.118,1569,2.473,1570,3.182,1808,4.262,1854,3.586,2129,3.737,2599,5.139,3558,4.487,3924,5.691]],["title/tutorial/viz/#register-sedonasql-and-sedonaviz",[449,2.663,2129,2.82,3558,3.385]],["text/tutorial/viz/#register-sedonasql-and-sedonaviz",[7,1.362,12,0.644,35,2.628,96,3.246,176,3.508,293,5.041,449,4.225,457,2.116,487,4.623,778,4.875,883,3.124,887,5.37,902,6.15,903,5.996,963,5.229,1191,7.317,1439,5.101,1795,4.775,1984,5.229,2129,5.501,2704,6.811,2984,6.15,3558,5.37,4031,8.127]],["title/tutorial/viz/#create-spatial-dataframe",[123,1.56,390,1.14,479,1.751]],["text/tutorial/viz/#create-spatial-dataframe",[2,1.462,12,0.671,31,2.262,84,1.884,89,2.2,107,1.299,108,1.142,112,1.096,123,2.683,140,5.232,178,3.704,185,6.589,232,3.58,281,5.179,390,1.962,410,2.29,457,1.737,459,2.865,479,3.013,496,5.746,508,3.273,519,2.253,541,3.187,545,3.167,551,6.089,552,5.995,553,6.188,633,3.032,771,3.738,877,2.997,880,3.273,882,3.704,1205,5.288,1469,3.296,1534,3.523,1616,4.609,2313,5.592,2314,5.592,2705,6.008,2706,6.008,2707,6.008,2708,4.091]],["title/tutorial/viz/#generate-a-single-image",[55,1.942,364,2.567,943,2.357]],["text/tutorial/viz/#generate-a-single-image",[239,3.866,339,5.754,364,4.754,390,2.112,943,4.365,961,5.092,1012,5.222,1617,6.455]],["title/tutorial/viz/#pixelize-spatial-objects",[390,1.14,573,1.899,1150,2.585]],["text/tutorial/viz/#pixelize-spatial-objects",[2,1.559,12,0.664,32,3.122,35,1.584,55,1.857,97,1.63,101,3.038,103,1.094,106,2.508,111,1.087,112,1.603,123,2.549,185,5.256,226,3.282,251,2.65,303,1.723,345,2.65,390,1.583,397,5.793,410,2.441,420,5.243,421,5.984,459,2.103,508,4.788,516,2.403,529,2.489,573,1.815,575,4.361,633,3.232,640,4.913,670,3.354,770,4.464,771,5.467,783,2.2,868,3.282,943,3.271,946,6.637,1084,3.498,1150,5.535,1185,2.403,1214,3.331,1216,3.038,1235,6.541,1236,3.193,1237,7.018,1241,7.283,1250,3.193,1352,2.607,1534,4.421,1569,1.783,1583,3.882,1800,2.938,1875,3.562,1953,3.003,2690,3.562,2708,5.135,2709,6.337,2711,4.41,2712,4.41,2713,4.41,2714,4.41,2715,4.41,3768,6.404]],["title/tutorial/viz/#aggregate-pixels",[100,3.426,1150,3.086]],["text/tutorial/viz/#aggregate-pixels",[12,0.598,15,3.858,98,2.927,100,5.938,112,1.274,123,2.361,232,4.162,324,3.754,371,4.868,390,2.473,410,2.662,573,2.875,639,4.001,770,4.868,771,4.344,783,3.483,824,4.756,922,5.056,1150,5.889,1194,7.062,1195,4.756,1196,7.062,1197,6.147,1198,6.147,1251,5.64,1534,4.095,2708,4.756,2716,5.64,2717,6.983]],["title/tutorial/viz/#colorize-pixels",[1150,3.086,1195,3.75]],["text/tutorial/viz/#colorize-pixels",[12,0.643,27,3.182,84,2.283,89,2.665,112,1.636,123,2.461,324,3.913,423,3.49,457,2.105,771,4.528,1150,5.027,1193,6.995,1194,7.854,1195,6.109,1208,6.775,1534,4.268,1569,2.944,1771,4.079,1844,6.118,2708,4.957,2716,7.854,2718,6.775]],["title/tutorial/viz/#render-the-image",[943,2.813,1253,4.16]],["text/tutorial/viz/#render-the-image",[12,0.649,97,1.565,106,4.118,112,1.631,123,2.448,244,5.109,364,4.029,459,3.452,466,3.677,479,2.749,519,2.715,658,3.379,771,4.505,943,5.318,946,6.374,1150,5.011,1195,4.931,1213,4.876,1250,6.474,1534,4.246,2708,4.931,2709,6.086,2716,5.848]],["title/tutorial/viz/#store-the-image-on-disk",[943,2.357,1486,3.485,1691,2.82]],["text/tutorial/viz/#store-the-image-on-disk",[2,1.744,12,0.664,97,1.549,392,3.574,479,2.72,481,4.979,483,2.949,690,6.157,943,5.157,1107,5.587,1188,3.454,1227,6.022,1486,5.413,1691,4.379,1707,8.886,2719,7.165,2720,7.165,2721,7.165,2722,7.165,2723,7.165,2724,7.165]],["title/tutorial/viz/#generate-map-tiles",[32,2.249,55,1.942,1243,3.041]],["text/tutorial/viz/#generate-map-tiles",[32,5,55,3.468,123,2.785,410,3.14,545,4.342,1243,6.371,1244,6.423,1245,5.035,2725,8.237,2726,8.237,2727,8.237]],["title/tutorial/viz/#pixelization-and-pixel-aggregation",[100,2.87,1150,3.707]],["text/tutorial/viz/#pixelization-and-pixel-aggregation",[55,3.254,59,3.445,84,2.424,91,2.841,97,1.671,98,3.239,100,4.808,364,4.3,410,2.946,589,6.803,633,3.901,783,3.855,943,3.948,1150,5.214,1235,5.753,1236,5.595,1245,4.724,1445,4.462,1505,6.026,1771,4.331,1982,5.324,4032,8.583,4033,8.583,4034,8.583]],["title/tutorial/viz/#create-tile-name",[123,1.56,995,2.056,1243,3.041]],["text/tutorial/viz/#create-tile-name",[12,0.629,32,3.665,112,1.371,123,2.542,175,4.182,457,2.174,771,4.677,995,3.351,1150,5.528,1194,6.072,1242,5.862,1243,6.032,1244,5.862,1245,4.595,1534,4.408,1569,3.04,1771,4.213,2690,6.072,2708,5.119,2716,7.39,2728,6.997]],["title/tutorial/viz/#colorize-pixels_1",[1150,3.086,1195,3.75]],["text/tutorial/viz/#colorize-pixels_1",[55,3.575,97,1.836,98,3.559,364,4.725,943,4.338,1195,5.783,1355,6.232,1771,4.759,2718,7.904]],["title/tutorial/viz/#render-map-tiles",[32,2.249,1243,3.041,1253,3.485]],["text/tutorial/viz/#render-map-tiles",[12,0.61,15,4.086,32,4.416,112,1.349,123,2.501,175,4.141,410,2.819,771,4.601,943,5.003,1150,5.077,1195,5.037,1243,6.457,1244,5.767,1245,4.521,1250,5.355,1251,7.317,1253,5.587,1534,4.337,1710,5.974,2708,5.037,2716,5.974,2728,6.884]],["title/tutorial/viz/#store-map-tiles-on-disk",[32,1.935,1243,2.617,1486,2.998,1691,2.426]],["text/tutorial/viz/#store-map-tiles-on-disk",[32,4.064,55,3.51,97,1.802,98,3.494,364,4.639,658,4.542,943,4.259,1107,6.501,1243,5.496,1691,5.096,1771,4.672]],["title/tutorial/zeppelin/",[19,1.565,97,0.997,1233,2.463]],["text/tutorial/zeppelin/",[2,2.019,7,1.186,12,0.615,16,3.494,19,1.78,31,3.258,32,3.82,34,1.387,35,1.214,40,2.271,46,1.759,55,1.423,84,2.271,89,2.353,97,1.793,106,2.982,107,1.134,112,1.578,118,1.522,123,2.448,125,1.385,133,1.63,156,1.794,179,1.283,185,2.356,198,1.021,201,1.923,204,2.049,214,2.015,247,1.443,345,2.031,349,1.842,361,1.842,390,2.05,392,1.686,410,1.999,457,0.977,459,3.064,479,1.991,498,3.494,501,1.355,507,2.015,525,2.636,544,2.049,573,2.645,633,2.647,635,2.481,658,1.578,670,1.771,703,2.481,771,3.263,783,1.686,877,2.616,899,1.398,943,4.568,958,1.748,1000,2.784,1006,5.656,1010,1.881,1048,2.481,1107,4.089,1185,4.714,1213,3.532,1216,2.329,1233,5.453,1311,1.522,1338,1.868,1418,2.594,1444,3.388,1475,3.962,1534,3.075,1570,1.759,1657,2.682,1681,5.047,1729,2.397,1771,1.895,1781,2.142,1791,2.356,1815,2.905,1821,2.481,1838,2.554,1839,2.329,1843,2.731,1934,2.841,2096,2.554,2098,2.448,2549,2.905,2708,3.572,2709,2.841,2729,4.318,2730,3.755,2731,3.755,2732,3.755,2733,3.755,2734,3.755,2735,4.881,2736,3.381,2737,3.147,2738,2.841,2739,3.381,2740,2.976,2741,5.826,2742,6.739,2743,5.244,2744,3.381,2745,3.381,2746,3.381,2747,3.381,2748,3.381,2749,3.381,2750,2.784,2751,3.381,2752,3.147,2753,2.976,3558,6.562]],["title/tutorial/zeppelin/#small-scale-without-sedonaviz",[1216,2.734,1475,2.998,1681,2.767,3558,2.913]],["text/tutorial/zeppelin/#small-scale-without-sedonaviz",[7,1.184,12,0.622,16,3.917,19,1.995,31,2.946,34,1.556,40,2.546,84,1.844,89,2.153,97,1.691,107,1.691,112,1.603,123,2.645,125,2.409,133,2.834,156,3.119,179,2.232,185,4.098,201,3.343,345,3.533,361,3.204,390,1.934,410,2.241,457,1.7,459,4.192,479,2.232,498,3.917,507,3.504,573,2.42,670,3.079,771,3.658,783,2.933,1000,4.841,1006,5.175,1107,4.584,1185,4.263,1213,3.96,1233,4.695,1418,4.511,1444,3.798,1475,4.441,1534,3.448,1681,4.098,1771,3.295,1838,4.441,2096,4.441,2708,4.004,2736,5.879,2737,5.472,2738,4.942,2739,5.879,2740,5.175,2741,3.96,2742,7.282,2743,7.823,2744,5.879,3558,4.315]],["title/tutorial/zeppelin/#large-scale-with-sedonaviz",[1444,2.98,1681,3.216,3558,3.385]],["text/tutorial/zeppelin/#large-scale-with-sedonaviz",[2,1.444,7,0.898,12,0.585,16,3.951,31,2.963,32,3.836,34,1.393,40,2.568,84,1.86,89,2.171,97,1.701,106,4.474,112,1.715,123,2.66,198,1.791,390,1.945,392,2.958,479,2.251,498,3.951,525,4.624,544,3.594,573,2.441,633,2.993,703,4.352,771,3.689,943,5.244,958,3.067,1010,3.299,1048,4.352,1107,4.624,1185,4.811,1233,4.715,1311,2.67,1338,3.276,1534,3.477,1570,3.086,1681,4.134,1821,4.352,1934,4.984,2098,4.293,2708,4.038,2709,4.984,2735,5.52,2741,3.994,2742,7.323,2745,5.93,2746,5.93,2747,5.93,2748,5.93,2749,5.93,3558,6.902]],["title/tutorial/zeppelin/#zeppelin-spark-notebook-demo",[7,0.601,1233,2.119,1815,3.411,2741,2.673]],["text/tutorial/zeppelin/#zeppelin-spark-notebook-demo",[2,1.83,7,1.138,12,0.45,31,3.445,35,2.699,46,3.912,84,2.358,97,1.625,118,3.384,204,4.555,349,4.096,410,2.865,501,3.014,877,3.75,899,3.108,1233,5.267,1781,4.764,1839,5.178,2549,6.46,2741,6.913,2750,6.19,2751,7.517,2752,6.997,2753,6.617]],["title/tutorial/flink/sql/",[87,4.551]],["text/tutorial/flink/sql/",[2,0.826,6,0.295,10,1.308,12,0.681,17,0.694,27,1.299,28,0.393,31,0.281,32,2.881,34,0.351,35,1.067,40,0.323,50,0.366,51,1.405,59,0.332,64,0.54,66,2.515,79,0.526,80,0.424,84,0.234,85,0.749,89,0.917,91,0.921,92,0.368,93,0.37,96,0.622,97,1.137,98,0.588,103,1.023,107,1.962,111,0.425,112,0.457,116,3.216,118,0.336,121,0.427,123,1.778,125,2.421,132,1.689,133,1.432,140,0.492,156,1.053,169,1.505,170,0.473,174,0.528,175,0.907,176,0.358,179,3.288,189,1.747,190,1.747,191,1.747,192,1.747,197,0.829,198,0.599,199,1.168,213,1.401,222,0.792,228,0.381,247,0.318,248,0.648,255,0.906,269,0.497,279,1.202,287,0.468,303,2.577,306,1.608,318,1.241,324,1.346,334,0.526,335,0.497,336,0.54,339,0.502,340,0.661,354,0.582,364,0.415,370,3.134,382,5.82,386,0.441,388,7.38,389,1.318,390,1.358,392,0.699,397,1.651,398,1.355,404,2.698,405,2.698,410,0.284,420,0.889,421,0.955,422,0.796,423,0.672,424,1.892,425,0.487,427,0.563,434,0.54,435,1.059,449,2.891,450,0.563,451,0.563,452,0.563,456,1.137,457,1.192,458,1.634,459,2.388,460,0.487,461,1.282,471,0.456,479,0.532,483,2.51,494,0.52,500,0.54,507,0.444,516,0.406,519,1.777,520,0.836,529,1.12,544,0.452,545,0.739,556,0.307,573,1.031,609,0.592,633,0.376,635,0.547,651,0.398,670,1.039,675,0.627,686,0.381,695,0.657,741,0.674,742,0.694,767,4.464,770,0.52,772,3.156,782,0.437,808,0.456,820,0.514,821,0.52,823,1.27,824,0.955,825,1.002,826,0.348,866,1.029,867,1.059,868,0.555,869,0.555,871,0.641,877,0.372,880,0.406,883,0.847,885,0.857,886,0.857,887,0.547,899,2.27,921,0.406,947,0.563,963,1.002,964,0.473,968,2.337,971,1.06,985,0.627,992,0.487,993,0.906,994,1.547,995,0.332,1005,3.412,1044,0.602,1083,0.52,1085,0.563,1199,3.123,1214,1.059,1231,0.497,1308,0.36,1309,0.444,1311,0.893,1317,0.582,1447,1.205,1503,0.444,1509,0.754,1524,0.674,1531,0.786,1543,0.444,1566,0.418,1569,0.802,1629,0.602,1635,0.627,1646,1.456,1691,0.857,1747,0.582,1756,0.508,1769,0.514,1771,0.418,1791,0.977,1819,0.563,1820,0.487,1854,0.437,1883,1.112,1903,0.563,1951,0.602,1953,0.508,1981,0.582,1982,0.514,1983,0.582,2004,0.526,2036,0.627,2056,0.533,2062,0.533,2129,0.857,2132,0.641,2271,5.82,2273,0.674,2556,0.555,2558,1.093,2571,2.105,2576,0.694,2586,0.627,2599,0.627,2645,0.657,2647,0.694,2648,1.155,2655,0.694,2656,0.694,2657,0.694,2658,0.694,2659,0.674,3594,3.579,3602,0.746,3618,0.718,3620,0.746,3623,0.718,3624,0.718,3626,0.718,3628,0.746,3658,0.746,3681,0.746,3683,0.746,3686,0.746,3914,1.402,3954,1.909,4035,2.622,4036,4.071,4037,2.504,4038,2.622,4039,0.828,4040,1.557,4041,0.828,4042,0.828,4043,2.078,4044,1.557,4045,0.828,4046,0.828,4047,2.622,4048,3.553,4049,3.111,4050,2.078,4051,2.078,4052,2.078,4053,6.744,4054,2.078,4055,6.744,4056,2.078,4057,6.744,4058,2.078,4059,6.744,4060,2.078,4061,6.744,4062,2.078,4063,6.744,4064,2.078,4065,3.553,4066,2.078,4067,0.828,4068,2.204,4069,0.828,4070,0.828,4071,1.557,4072,0.828,4073,0.828,4074,0.828,4075,1.557,4076,0.828,4077,0.828,4078,0.828,4079,0.828,4080,0.828,4081,0.828,4082,0.828,4083,0.828,4084,0.828,4085,0.828,4086,0.828,4087,0.828,4088,0.828,4089,0.828,4090,0.828,4091,0.828,4092,0.828,4093,3.633,4094,1.469,4095,1.557,4096,3.158,4097,3.633,4098,3.633,4099,2.078,4100,0.828,4101,0.828,4102,0.828,4103,5.491,4104,2.622,4105,2.078,4106,3.3,4107,2.781,4108,0.828,4109,0.828,4110,0.828,4111,0.828,4112,1.557,4113,0.828,4114,1.557,4115,1.557]],["title/tutorial/flink/sql/#set-up-dependencies",[389,2.046,686,2.357,1311,2.077]],["text/tutorial/flink/sql/#set-up-dependencies",[2,2.344,10,5.398,89,2.998,303,3.2,883,4.111,885,5.886,886,5.886,1308,3.947,1309,4.88,1311,4.336]],["title/tutorial/flink/sql/#initiate-stream-environment",[17,4.294,1231,3.073,1531,2.585]],["text/tutorial/flink/sql/#initiate-stream-environment",[12,0.668,51,2.492,97,1.582,123,2.474,389,3.992,457,2.116,921,3.987,1531,4.101,2599,6.15,3954,8.66,4036,6.288,4038,10.208,4039,8.127,4040,9.996,4041,8.127,4042,8.127,4043,9.426]],["title/tutorial/flink/sql/#register-sedonasql",[449,3.179,2129,3.366]],["text/tutorial/flink/sql/#register-sedonasql",[2,2.142,12,0.63,35,3.16,96,3.903,107,1.525,176,3.382,222,3.982,457,2.04,516,3.844,519,2.646,556,2.904,883,3.012,887,5.178,963,6.287,993,4.558,1509,4.73,1543,4.204,1819,5.329,1820,4.604,1854,4.137,1981,5.501,1982,4.86,1983,5.501,2129,4.312,3954,6.788,4036,6.063,4038,7.389,4043,7.389,4044,9.772,4045,7.835,4046,7.835]],["title/tutorial/flink/sql/#create-a-geometry-type-column",[107,0.858,123,1.342,459,1.892,519,1.488]],["text/tutorial/flink/sql/#create-a-geometry-type-column",[10,1.825,12,0.682,27,1.21,34,0.49,35,0.994,51,0.943,64,2.004,84,0.868,89,1.014,91,1.018,97,0.599,98,1.16,107,1.537,112,0.505,116,4.001,118,1.246,121,1.586,123,1.905,125,1.135,199,1.542,255,1.62,279,2.713,318,0.833,382,7.531,388,8.866,389,1.986,410,1.055,449,3.254,456,1.586,457,1.294,458,1.807,459,3.087,479,1.699,500,2.004,507,1.65,519,2.666,529,1.563,573,1.14,767,3.382,772,3.755,826,1.292,867,2.091,877,1.381,992,1.807,1044,2.236,1199,2.951,1629,2.236,1903,2.091,1953,1.885,2271,7.531,2645,2.437,2659,2.502,3914,4.477,4035,4.688,4036,3.847,4047,4.688,4048,7.444,4049,6.78,4050,4.688,4051,4.688,4052,4.688,4053,8.726,4054,4.688,4055,8.726,4056,4.688,4057,8.726,4058,4.688,4059,8.726,4060,4.688,4061,8.726,4062,4.688,4063,8.726,4064,4.688,4065,4.688,4066,4.688,4067,3.075,4068,6.259,4069,3.075,4070,3.075]],["title/tutorial/flink/sql/#transform-the-coordinate-reference-system",[85,2.119,303,1.551,392,1.98,398,2.148]],["text/tutorial/flink/sql/#transform-the-coordinate-reference-system",[2,0.705,12,0.684,27,1.266,50,1.42,51,1.979,79,2.044,85,1.547,89,1.061,91,1.065,97,0.626,98,1.214,107,1.763,111,0.492,112,0.528,123,0.979,132,2.64,140,1.91,175,1.324,179,4.124,213,1.366,303,2.271,318,0.872,324,3.573,390,0.716,392,1.445,397,4.381,398,3.144,420,2.942,421,3.162,423,1.389,424,5.02,425,1.89,427,2.188,449,2.68,457,0.838,458,1.89,459,2.77,461,1.871,529,2.621,545,1.527,609,2.298,633,1.462,635,2.126,670,1.517,695,2.55,742,2.696,772,3.093,820,1.995,821,2.019,823,3.717,824,3.162,825,3.318,947,2.188,964,1.836,968,5.347,985,2.435,1199,1.91,1524,2.618,1635,2.435,1791,2.019,2556,2.156,2558,3.62,2647,2.696,3602,2.897,3618,2.787,3620,2.897,3623,2.787,3624,2.787,3626,2.787,3628,2.897,3658,2.897,3683,2.897,4035,3.034,4036,2.489,4037,2.897,4047,4.862,4048,3.034,4049,3.034,4071,5.156,4072,3.217,4073,3.217,4074,3.217,4075,5.156,4076,3.217,4077,3.217,4078,3.217,4079,3.217,4080,3.217,4081,3.217,4082,3.217,4083,3.217,4084,3.217,4085,3.217,4086,3.217,4087,3.217,4088,3.217,4089,3.217,4090,3.217,4091,3.217,4092,3.217]],["title/tutorial/flink/sql/#run-spatial-queries",[318,1.388,390,1.14,1569,1.866]],["text/tutorial/flink/sql/#run-spatial-queries",[107,1.859,123,2.907,318,2.588,390,2.126,459,4.099,519,3.224,1569,3.477]],["title/tutorial/flink/sql/#range-query",[318,1.658,340,2.598]],["text/tutorial/flink/sql/#range-query",[12,0.657,27,2.992,89,2.506,91,2.516,97,1.48,111,1.162,112,1.248,116,2.721,197,5.103,248,3.161,318,2.599,340,3.228,364,3.808,390,1.692,449,3.952,457,1.979,458,4.466,459,3.263,461,5.578,471,4.183,494,4.771,545,3.608,782,4.014,808,4.183,1199,4.512,1569,2.768,1747,5.337,1791,4.771,2004,4.829,2648,5.636,2655,6.371,4036,5.882,4037,6.844,4093,8.307]],["title/tutorial/flink/sql/#knn-query",[318,1.658,1566,3.086]],["text/tutorial/flink/sql/#knn-query",[12,0.653,51,2.428,97,1.541,103,1.768,112,1.3,116,2.833,213,4.753,248,3.292,287,4.475,306,4.792,386,4.213,457,2.061,458,4.651,460,4.651,1199,4.699,1756,4.854,2056,5.093,2062,5.093,2586,5.991,2648,5.869,2656,6.635,2657,6.635,2658,6.635,4036,6.125,4037,7.128,4093,9.27]],["title/tutorial/flink/sql/#convert-spatial-table-to-spatial-datastream",[390,1.327,670,1.824,772,2.32,3594,2.631]],["text/tutorial/flink/sql/#convert-spatial-table-to-spatial-datastream",[]],["title/tutorial/flink/sql/#get-datastream",[3594,5.16]],["text/tutorial/flink/sql/#get-datastream",[12,0.652,35,2.923,97,1.76,767,6.149,3594,6.149,4036,6.995,4093,7.832,4094,8.525,4095,10.658,4096,7.576]],["title/tutorial/flink/sql/#retrieve-geometries",[107,1.191,1085,4.16]],["text/tutorial/flink/sql/#retrieve-geometries",[12,0.65,32,3.559,59,1.859,66,2.778,97,0.901,103,1.034,107,2.009,116,3.936,132,2.371,174,1.57,175,1.906,198,1.259,199,1.436,255,1.509,306,2.256,370,3.159,382,8.95,388,10.107,404,2.979,405,2.979,435,3.15,483,1.716,573,1.716,741,3.768,767,5.515,899,1.724,1005,3.768,1199,2.749,1447,3.583,2271,8.95,3594,3.15,3681,4.169,3686,4.169,4053,10.371,4055,10.371,4057,10.371,4059,10.371,4061,10.371,4063,10.371,4065,8.437,4096,3.881,4097,4.012,4098,4.012,4099,4.367]],["title/tutorial/flink/sql/#store-non-spatial-attributes-in-geometries",[107,0.753,390,0.861,520,2.075,971,1.86,1691,2.129]],["text/tutorial/flink/sql/#store-non-spatial-attributes-in-geometries",[12,0.677,32,4.12,66,4.41,103,1.642,107,2.191,125,3.171,132,2.626,133,3.73,198,1.394,199,1.59,255,1.671,279,2.798,306,2.499,334,3.258,335,3.076,336,3.343,339,3.109,354,3.6,370,4.599,390,1.141,404,4.73,405,4.73,434,3.343,435,3.488,483,2.725,519,1.731,520,2.751,544,2.798,573,1.9,675,3.881,767,5,770,3.218,899,2.737,971,2.466,994,6.034,1005,5.983,1199,5.572,1447,3.968,1646,5.679,1691,2.822,1771,2.587,1951,3.729,3594,3.488,4050,4.835,4051,4.835,4052,4.835,4054,4.835,4056,4.835,4058,4.835,4060,4.835,4062,4.835,4064,4.835,4066,4.835,4096,4.297,4097,6.369,4098,6.369,4099,6.932,4100,5.128,4101,5.128,4102,5.128]],["title/tutorial/flink/sql/#convert-spatial-datastream-to-spatial-table",[390,1.327,670,1.824,772,2.32,3594,2.631]],["text/tutorial/flink/sql/#convert-spatial-datastream-to-spatial-table",[]],["title/tutorial/flink/sql/#create-geometries-using-sedona-formatutils",[2,0.848,97,0.753,107,0.753,123,1.177,4103,3.483]],["text/tutorial/flink/sql/#create-geometries-using-sedona-formatutils",[12,0.683,32,3.936,51,1.08,66,4.108,97,0.685,103,1.529,107,2.12,116,1.26,123,2.085,125,3.689,132,1.803,156,2.646,169,3.705,170,2.009,174,1.194,175,1.449,179,1.893,189,5.428,190,5.428,191,5.428,192,5.428,198,0.957,199,1.718,269,2.112,303,3.832,306,1.716,370,4.15,404,4.406,405,4.406,422,2,483,3.867,519,1.189,866,2.327,880,1.727,899,3.492,1005,5.573,1317,2.472,1883,2.515,2036,2.665,2132,2.724,2571,5.877,2576,2.951,3594,4.658,4097,5.933,4098,5.933,4103,8.75,4104,6.458,4105,5.224,4106,8.444,4107,7.765,4108,3.521,4109,3.521,4110,3.521]],["title/tutorial/flink/sql/#create-row-objects",[123,1.56,573,1.899,767,3.485]],["text/tutorial/flink/sql/#create-row-objects",[10,3.86,12,0.676,32,3.803,66,3.9,91,2.152,97,1.266,103,1.452,107,1.687,111,0.994,125,3.197,156,3.106,169,3.518,222,3.305,370,4.51,404,4.183,405,4.183,422,2.347,483,3.211,767,7.572,899,3.628,971,3.126,1005,5.291,1214,5.893,1883,4.644,3594,4.423,4096,7.261,4097,5.633,4098,5.633,4103,9.357,4104,6.131,4105,6.131,4111,6.502,4112,8.664,4113,6.502]],["title/tutorial/flink/sql/#get-spatial-table",[390,1.361,772,3.669]],["text/tutorial/flink/sql/#get-spatial-table",[12,0.653,35,2.807,97,1.69,133,4.516,247,3.337,459,3.727,772,5.208,995,3.484,4036,6.717,4093,7.521,4094,8.186,4096,7.275,4114,10.404,4115,10.404]]],"fields":["title","text"],"invertedIndex":[["",{"_index":12,"text":{"":{},"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_envelope_aggr":{},"api/flink/Aggregator/#st_union_aggr":{},"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/flink/Constructor/#st_geomfromgeojson":{},"api/flink/Constructor/#st_geomfromgml":{},"api/flink/Constructor/#st_geomfromkml":{},"api/flink/Constructor/#st_geomfromtext":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/flink/Constructor/#st_geomfromwkt":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Constructor/#st_point":{},"api/flink/Constructor/#st_pointfromtext":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_area":{},"api/flink/Function/#st_asbinary":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_asgeojson":{},"api/flink/Function/#st_asgml":{},"api/flink/Function/#st_askml":{},"api/flink/Function/#st_astext":{},"api/flink/Function/#st_azimuth":{},"api/flink/Function/#st_boundary":{},"api/flink/Function/#st_buffer":{},"api/flink/Function/#st_buildarea":{},"api/flink/Function/#st_distance":{},"api/flink/Function/#st_envelope":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_geohash":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_isempty":{},"api/flink/Function/#st_isring":{},"api/flink/Function/#st_issimple":{},"api/flink/Function/#st_isvalid":{},"api/flink/Function/#st_length":{},"api/flink/Function/#st_npoints":{},"api/flink/Function/#st_numgeometries":{},"api/flink/Function/#st_numinteriorrings":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_reverse":{},"api/flink/Function/#st_setsrid":{},"api/flink/Function/#st_srid":{},"api/flink/Function/#st_transform":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/flink/Function/#st_z":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/AggregateFunction/#st_intersection_aggr":{},"api/sql/AggregateFunction/#st_union_aggr":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Constructor/#st_geomfromgml":{},"api/sql/Constructor/#st_geomfromkml":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_point":{},"api/sql/Constructor/#st_pointfromtext":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/#st_polygonfromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_area":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_asgeojson":{},"api/sql/Function/#st_asgml":{},"api/sql/Function/#st_askml":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_centroid":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_convexhull":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_distance":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_envelope":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_geohash":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_geometrytype":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_intersection":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isempty":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_issimple":{},"api/sql/Function/#st_isvalid":{},"api/sql/Function/#st_length":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linemerge":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"api/sql/Function/#st_multi":{},"api/sql/Function/#st_npoints":{},"api/sql/Function/#st_numgeometries":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Function/#st_srid":{},"api/sql/Function/#st_startpoint":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Function/#st_symdifference":{},"api/sql/Function/#st_transform":{},"api/sql/Function/#st_union":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/sql/Function/#st_z":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Overview/#quick-start":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Predicate/#st_overlaps":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_array":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-loader/#rs_html":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_divide":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_logicalover":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_modulo":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"api/sql/Raster-operators/#rs_normalize":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/sql/Raster-operators/#rs_squareroot":{},"api/sql/Raster-operators/#rs_subtract":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"api/viz/sql/#st_encodeimage":{},"api/viz/sql/#st_pixelize":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_area":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_centroid":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_envelope":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_length":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_npoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/#st_render":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#buildsbt":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/cluster/#set-up-your-apache-spark-cluster":{},"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/overview/":{},"archive/download/overview/#direct-download":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/download/project/#self-contained-spark-projects":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"archive/tutorial/benchmark/":{},"archive/tutorial/faq/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_1":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-core-python/#read-from-geojson-file":{},"archive/tutorial/geospark-core-python/#read-from-shapefile":{},"archive/tutorial/geospark-core-python/#read-from-wkb-file":{},"archive/tutorial/geospark-core-python/#read-from-wkt-file":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#reload-a-saved-spatialrdd":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/geospark-sql-python/#polygon":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#output-format_2":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#reload-a-saved-spatialrdd":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#join-query":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#load-shapefile-and-geojson":{},"archive/tutorial/sql/#other-queries":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#initiate-sparksession":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/viz/#set-up-dependencies":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"archive/tutorial/viz/#visualize-spatialrdd":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"asf/asf/":{},"asf/asf/#apache-software-foundation":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contact/":{},"community/contact/#mailing-list":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/develop/":{},"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#publication":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#compile-r-html-docs":{},"community/publish/#failed-vote":{},"community/publish/#release-the-package":{},"community/publish/#update-mkdocsyml":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#code-of-conduct":{},"community/rule/#contributing-to-apache-sedona":{},"community/rule/#make-a-pull-request":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"community/vote/#run-the-verify-script":{},"download/":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/cluster/#set-up-your-apache-spark-cluster":{},"setup/compile/":{},"setup/compile/#compile-with-different-targets":{},"setup/compile/#mkdocs-website":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/databricks/#initialise":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/flink/install-scala/":{},"setup/flink/modules/":{},"setup/flink/modules/#api-availability":{},"setup/flink/platform/":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-python/#setup-environment-variables":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#buildsbt":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/modules/":{},"setup/modules/#api-availability":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#core":{},"setup/release-notes/#core_1":{},"setup/release-notes/#flink":{},"setup/release-notes/#flink_1":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global":{},"setup/release-notes/#global_1":{},"setup/release-notes/#global_2":{},"setup/release-notes/#global_3":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#python":{},"setup/release-notes/#python_1":{},"setup/release-notes/#r":{},"setup/release-notes/#rdd":{},"setup/release-notes/#sedona-100":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#sql_1":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v081-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v101":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"setup/release-notes/#viz_1":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/benchmark/":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_1":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#read-from-geojson-file":{},"tutorial/core-python/#read-from-shapefile":{},"tutorial/core-python/#read-from-wkb-file":{},"tutorial/core-python/#read-from-wkt-file":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#reload-a-saved-spatialrdd":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/demo/":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#get-datastream":{},"tutorial/flink/sql/#get-spatial-table":{},"tutorial/flink/sql/#initiate-stream-environment":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-spark-sedona-with-saved-hdfs-file":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/raster/":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#output-format_2":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#reload-a-saved-spatialrdd":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql-pure-sql/#work-with-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#introduction":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{},"tutorial/sql-python/#multipoint":{},"tutorial/sql-python/#multipolygon":{},"tutorial/sql-python/#point":{},"tutorial/sql-python/#polygon":{},"tutorial/sql-python/#register-package":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#join-query":{},"tutorial/sql/#knn-query":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#load-shapefile-and-geojson":{},"tutorial/sql/#other-queries":{},"tutorial/sql/#range-query":{},"tutorial/sql/#register-sedonasql":{},"tutorial/sql/#save-geoparquet":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#initiate-sparksession":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#render-the-image":{},"tutorial/viz/#set-up-dependencies":{},"tutorial/viz/#store-the-image-on-disk":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{"community/rule/#pick-annouce-a-task-using-jira":{},"setup/compile/#compile-scala-java-source-code":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}}}],["0",{"_index":199,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Function/":{},"api/flink/Function/#st_azimuth":{},"api/flink/Function/#st_boundary":{},"api/flink/Function/#st_buildarea":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_isring":{},"api/flink/Function/#st_numinteriorrings":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/flink/Function/#st_z":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_pointonsurface":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Function/#st_union":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/sql/Function/#st_z":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_logicalover":{},"api/sql/Raster-operators/#rs_normalize":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-core-python/#read-from-wkb-file":{},"archive/tutorial/geospark-core-python/#read-from-wkt-file":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"community/contributor/":{},"community/contributor/#close-a-vote":{},"community/publish/":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/release-notes/":{},"setup/release-notes/#v112":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#read-from-wkb-file":{},"tutorial/core-python/#read-from-wkt-file":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#work-with-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#multipolygon":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["0)),((10",{"_index":285,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{}},"title":{}}],["0),(1",{"_index":312,"text":{"api/flink/Function/":{},"api/flink/Function/#st_force_2d":{},"api/sql/Function/":{},"api/sql/Function/#st_force_2d":{}},"title":{}}],["0),(10",{"_index":280,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{}},"title":{}}],["0),(2",{"_index":566,"text":{"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{}},"title":{}}],["0,0",{"_index":283,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{},"api/flink/Function/#st_force_2d":{},"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_force_2d":{}},"title":{}}],["0.0",{"_index":430,"text":{"api/flink/Function/":{},"api/flink/Function/#st_x":{},"api/sql/Function/":{},"api/sql/Function/#st_x":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_array":{},"api/sql/Raster-loader/#rs_base64":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{}},"title":{}}],["0.00217",{"_index":3959,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["0.1",{"_index":1701,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{}},"title":{}}],["0.1.0",{"_index":1721,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{}},"title":{"setup/maven-coordinates/#sernetcdf-010_1":{}}}],["0.1.0.jar",{"_index":1824,"text":{"archive/download/project/":{},"archive/download/project/#submit-the-compiled-jar":{}},"title":{}}],["0.1.1",{"_index":1719,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{}},"title":{}}],["0.14.3",{"_index":3684,"text":{"setup/release-notes/":{},"setup/release-notes/#global_2":{},"setup/release-notes/#global_3":{}},"title":{}}],["0.14.jar",{"_index":3163,"text":{"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{}},"title":{}}],["0.16.1",{"_index":3579,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/release-notes/":{},"setup/release-notes/#global_2":{}},"title":{"setup/maven-coordinates/#jts2geojson-0161":{}}}],["0.2",{"_index":1700,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["0.2.0",{"_index":1711,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{}},"title":{}}],["0.2.1",{"_index":1328,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{}},"title":{}}],["0.2.2",{"_index":1702,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{}},"title":{}}],["0.3",{"_index":1694,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["0.3.1",{"_index":1692,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["0.3.2",{"_index":1689,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["0.4.0",{"_index":1683,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["0.5",{"_index":388,"text":{"api/flink/Function/":{},"api/flink/Function/#st_reverse":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#retrieve-geometries":{}},"title":{}}],["0.5.0",{"_index":1679,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["0.5.1",{"_index":1671,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["0.5.2",{"_index":1663,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["0.5.3",{"_index":1661,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["0.6.0",{"_index":1649,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["0.6.1",{"_index":1647,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["0.6.2",{"_index":1641,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["0.7.0",{"_index":1625,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["0.703125",{"_index":534,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{}},"title":{}}],["0.8",{"_index":1869,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{}}],["0.8.0",{"_index":1611,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["0.8.1",{"_index":1842,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#compatibility":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/zeppelin/":{},"setup/zeppelin/#compatibility":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{}}],["0.8.2",{"_index":1326,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core_1":{}},"title":{}}],["0.87890625",{"_index":535,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{}},"title":{}}],["001300",{"_index":2485,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["001700",{"_index":2521,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["01",{"_index":2325,"text":{"archive/tutorial/rdd/":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"tutorial/rdd/":{}},"title":{}}],["010450211024",{"_index":2400,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["010550013003",{"_index":2487,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["010770115015",{"_index":2334,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["010890017002",{"_index":2523,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["011501",{"_index":2329,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["021102",{"_index":2398,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["04/16/2022",{"_index":13,"text":{"":{}},"title":{"#04162022-sedona-120-incubating-is-released-sedona-now-supports-geospatial-stream-processing-in-apache-flink":{}}}],["045",{"_index":2397,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["05/25/2021",{"_index":36,"text":{"":{}},"title":{"#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39":{}}}],["055",{"_index":2484,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["06",{"_index":2624,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["077",{"_index":2327,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["08/30/2022",{"_index":1,"text":{"":{}},"title":{"#08302022-sedona-121-incubating-is-released-it-supports-spark-24-33-and-flink-112":{}}}],["0802",{"_index":2211,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["0803",{"_index":2209,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["0805",{"_index":2206,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["0862",{"_index":2213,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["089",{"_index":2520,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["096.6886584",{"_index":2642,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["096.7885168",{"_index":2628,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["0e7f",{"_index":3412,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["0x40a8cc",{"_index":1222,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{}},"title":{}}],["0x7efee2d28080",{"_index":2085,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_3":{}},"title":{}}],["0x7efee2d280b8",{"_index":2083,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_3":{}},"title":{}}],["0x7efee2d28128",{"_index":2082,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_3":{}},"title":{}}],["0x7efee2d28fd0",{"_index":2084,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_3":{}},"title":{}}],["0x7f1e5f29fe10",{"_index":2014,"text":{"archive/tutorial/geospark-core-python/":{},"tutorial/core-python/":{}},"title":{}}],["0x7f8fd2ee0710",{"_index":2118,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-shapefile":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-shapefile":{}},"title":{}}],["0x7f8fd2eecb90",{"_index":2115,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-geojson-file":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-geojson-file":{}},"title":{}}],["0x7f8fd2eece50",{"_index":2112,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-wkb-file":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-wkb-file":{}},"title":{}}],["0x7f8fd2fbf250",{"_index":2110,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-wkt-file":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-wkt-file":{}},"title":{}}],["1",{"_index":198,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Function/":{},"api/flink/Function/#st_boundary":{},"api/flink/Function/#st_buffer":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_isring":{},"api/flink/Function/#st_numgeometries":{},"api/flink/Function/#st_numinteriorrings":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"api/sql/Function/#st_multi":{},"api/sql/Function/#st_numgeometries":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_pointonsurface":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_union":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#installation":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/geospark-sql-python/#polygon":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"community/contributor/#close-a-vote":{},"community/contributor/#committer-done-template":{},"community/contributor/#nominate-a-committer-or-pmc-member":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#compile-r-html-docs":{},"community/publish/#prepare-secret-gpg-key":{},"community/publish/#release-the-package":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#make-a-pull-request":{},"community/rule/#review-a-pull-request":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"community/vote/#vote-a-sedona-release":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global_3":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v081-geospark-core":{},"setup/zeppelin/":{},"setup/zeppelin/#installation":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#work-with-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{},"tutorial/sql-python/#multipoint":{},"tutorial/sql-python/#multipolygon":{},"tutorial/sql-python/#point":{},"tutorial/sql-python/#polygon":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["1,0",{"_index":565,"text":{"api/sql/Function/":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{}},"title":{}}],["1,1",{"_index":314,"text":{"api/flink/Function/":{},"api/flink/Function/#st_force_2d":{},"api/sql/Function/":{},"api/sql/Function/#st_force_2d":{}},"title":{}}],["1,3",{"_index":313,"text":{"api/flink/Function/":{},"api/flink/Function/#st_force_2d":{},"api/sql/Function/":{},"api/sql/Function/#st_force_2d":{}},"title":{}}],["1.0",{"_index":3575,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{}},"title":{}}],["1.0.0",{"_index":3674,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-101":{},"setup/zeppelin/":{},"setup/zeppelin/#compatibility":{}},"title":{"setup/release-notes/#sedona-100":{}}}],["1.0.1",{"_index":37,"text":{"":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/release-notes/":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{}},"title":{"#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39":{},"setup/release-notes/#sedona-101":{}}}],["1.0.1.jar",{"_index":1835,"text":{"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{}},"title":{}}],["1.0.1.jar,geospark",{"_index":1834,"text":{"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{}},"title":{}}],["1.0546875",{"_index":536,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{}},"title":{}}],["1.1",{"_index":4106,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{}},"title":{}}],["1.1.0",{"_index":24,"text":{"":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#sedona-110":{}},"title":{"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{},"setup/release-notes/#sedona-110":{}}}],["1.1.1",{"_index":21,"text":{"":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/release-notes/":{}},"title":{"#11232021-sedona-111-incubating-is-released-it-now-supports-spark-32":{},"setup/release-notes/#sedona-111":{}}}],["1.1.3",{"_index":1324,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-113-and-earlier":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql_1":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-113-and-earlier":{}}}],["1.1.x",{"_index":3647,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-111":{}},"title":{}}],["1.1096700000000084",{"_index":2046,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{}},"title":{}}],["1.11",{"_index":3369,"text":{"community/vote/":{},"community/vote/#install-necessary-software":{}},"title":{}}],["1.1110299999999995",{"_index":2045,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{}},"title":{}}],["1.12",{"_index":11,"text":{"":{},"setup/flink/platform/":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{"#08302022-sedona-121-incubating-is-released-it-supports-spark-24-33-and-flink-112":{}}}],["1.13",{"_index":3716,"text":{"setup/flink/platform/":{}},"title":{}}],["1.1386399999999952",{"_index":2048,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{}},"title":{}}],["1.1392780000000045",{"_index":2050,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{}},"title":{}}],["1.14",{"_index":3717,"text":{"setup/flink/platform/":{}},"title":{}}],["1.1415619999999933",{"_index":2047,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{}},"title":{}}],["1.1418860000000137",{"_index":2049,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{}},"title":{}}],["1.18",{"_index":3689,"text":{"setup/release-notes/":{},"setup/release-notes/#global_3":{}},"title":{}}],["1.18.0",{"_index":3573,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{}},"title":{"setup/maven-coordinates/#locationtech-jts-core-1180":{}}}],["1.2",{"_index":687,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{}},"title":{}}],["1.2.0",{"_index":14,"text":{"":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#compatibility":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql_1":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/viz/":{},"archive/tutorial/zeppelin/":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"download/":{},"setup/release-notes/":{},"setup/release-notes/#sedona-120":{},"setup/release-notes/#sedona-121":{},"setup/release-notes/#v120":{}},"title":{"#04162022-sedona-120-incubating-is-released-sedona-now-supports-geospatial-stream-processing-in-apache-flink":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-120-and-later":{},"download/#120-incubating":{},"setup/release-notes/#sedona-120":{}}}],["1.2.1",{"_index":3,"text":{"":{},"community/publish/":{},"community/publish/#failed-vote":{},"community/publish/#release-the-package":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"download/":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#snapshot-versions":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{}},"title":{"#08302022-sedona-121-incubating-is-released-it-supports-spark-24-33-and-flink-112":{},"download/#121-incubating":{},"setup/release-notes/#sedona-121":{}}}],["1.3.0",{"_index":1959,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"setup/platform/":{},"setup/release-notes/":{}},"title":{}}],["1.3.1",{"_index":1315,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark":{},"archive/tutorial/geospark-core-python/#installing-from-wheel-file":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql_1":{},"archive/tutorial/geospark-sql-python/#installing-from-wheel-file":{}},"title":{}}],["1.3.2",{"_index":1331,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{}},"title":{}}],["1.5",{"_index":2271,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/sql-python/":{},"tutorial/sql-python/#multipolygon":{}},"title":{}}],["1.5900840000000045",{"_index":2043,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{}},"title":{}}],["1.5906639999999896",{"_index":2044,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{}},"title":{}}],["1.8",{"_index":1638,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/flink/platform/":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/demo/":{},"tutorial/demo/#prerequisites":{}},"title":{}}],["1.x",{"_index":1325,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-1x-versions":{}}}],["10",{"_index":279,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_pointonsurface":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{}},"title":{}}],["10,10",{"_index":284,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{}},"title":{}}],["10.1",{"_index":4107,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{}},"title":{}}],["10.x",{"_index":3454,"text":{"setup/databricks/":{}},"title":{}}],["10/06/2021",{"_index":23,"text":{"":{}},"title":{"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{}}}],["100",{"_index":200,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#sql":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["1000",{"_index":201,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["1000*1000",{"_index":4032,"text":{"tutorial/viz/":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{}},"title":{}}],["101",{"_index":861,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#work-with-data":{}},"title":{}}],["1016",{"_index":3305,"text":{"community/publish/":{}},"title":{}}],["103",{"_index":1540,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["1039.0",{"_index":987,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#rs_getband":{}},"title":{}}],["104",{"_index":1541,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["104.3686961",{"_index":2636,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["104.56",{"_index":2633,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["1040641",{"_index":2524,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["105",{"_index":3616,"text":{"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["1058.0",{"_index":1058,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_getband":{}},"title":{}}],["106",{"_index":3619,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["107",{"_index":3615,"text":{"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["107880",{"_index":2654,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["108",{"_index":3606,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["108001",{"_index":2651,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["109",{"_index":3628,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["10g",{"_index":1739,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["11",{"_index":434,"text":{"api/flink/Function/":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/flink/Function/#st_z":{},"api/sql/Function/":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Function/#st_z":{},"archive/tutorial/rdd/":{},"community/publish/":{},"community/publish/#upload-release-candidate":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd/":{}},"title":{}}],["11.0",{"_index":447,"text":{"api/flink/Function/":{},"api/flink/Function/#st_z":{},"api/sql/Function/":{},"api/sql/Function/#st_z":{}},"title":{}}],["11/23/2021",{"_index":20,"text":{"":{}},"title":{"#11232021-sedona-111-incubating-is-released-it-now-supports-spark-32":{}}}],["110",{"_index":1524,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#v110":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["1100",{"_index":202,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{}},"title":{}}],["111",{"_index":4082,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["111.70035626068274",{"_index":667,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linesubstring":{}},"title":{}}],["112",{"_index":3618,"text":{"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["113",{"_index":3626,"text":{"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["11360854",{"_index":2401,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["114",{"_index":4078,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["115",{"_index":3624,"text":{"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["116",{"_index":3623,"text":{"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["116403",{"_index":2653,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["117",{"_index":3620,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["118",{"_index":3602,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["11:48:31",{"_index":3391,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["11:48:42",{"_index":3414,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["12",{"_index":435,"text":{"api/flink/Function/":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/sql/Function/":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"community/publish/":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"setup/release-notes/":{},"setup/release-notes/#v131":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["120",{"_index":760,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["121",{"_index":3629,"text":{"setup/release-notes/":{},"setup/release-notes/#flink":{}},"title":{}}],["12133824.496466817",{"_index":4092,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["122",{"_index":3607,"text":{"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["12245143.987260092",{"_index":4091,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["123",{"_index":3603,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["123.4244583",{"_index":2632,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["123.43",{"_index":2629,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["12356463.478053367",{"_index":4090,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["124",{"_index":3627,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["12467782.96884664",{"_index":4089,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["125",{"_index":643,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["12579102.459639912",{"_index":4088,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["1258.0",{"_index":1059,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_getband":{}},"title":{}}],["126.790180",{"_index":3998,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["12690421.950433187",{"_index":4087,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["127",{"_index":3608,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["12801741.44122646",{"_index":4086,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["129",{"_index":3611,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["12913060.932019735",{"_index":4085,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["1298.0",{"_index":990,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#rs_getband":{}},"title":{}}],["13",{"_index":1447,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["13024380.422813008",{"_index":4084,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["131",{"_index":1554,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["13135699.91360628",{"_index":4083,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["135",{"_index":3612,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["135g",{"_index":3780,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["137408",{"_index":2652,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["1378742",{"_index":2488,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["139",{"_index":1548,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["14",{"_index":3686,"text":{"setup/release-notes/":{},"setup/release-notes/#sql_3":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#retrieve-geometries":{}},"title":{}}],["14.8709625",{"_index":2172,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["140.21046313888758",{"_index":668,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linesubstring":{}},"title":{}}],["141",{"_index":1537,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["1410|polygon",{"_index":2155,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["1418|polygon",{"_index":2157,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["1425|polygon",{"_index":2159,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["1427|polygon",{"_index":2161,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["15",{"_index":741,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{},"community/develop/":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#retrieve-geometries":{}},"title":{}}],["15.0155749",{"_index":2228,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["15.0696777",{"_index":2180,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["15.0732014",{"_index":2178,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["15.0946636",{"_index":2175,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["15.3393145",{"_index":2169,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["150",{"_index":644,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["150,50",{"_index":618,"text":{"api/sql/Function/":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{}},"title":{}}],["1500000us010450211024",{"_index":2399,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["1500000us010550013003",{"_index":2486,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["1500000us010770115015",{"_index":2332,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["1500000us010890017002",{"_index":2522,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["154",{"_index":1525,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["15g",{"_index":3778,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["16",{"_index":3681,"text":{"setup/release-notes/":{},"setup/release-notes/#global_2":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#retrieve-geometries":{}},"title":{}}],["160",{"_index":622,"text":{"api/sql/Function/":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{}},"title":{}}],["16a",{"_index":3067,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["170",{"_index":623,"text":{"api/sql/Function/":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"setup/release-notes/":{},"setup/release-notes/#v101":{}},"title":{}}],["171",{"_index":1528,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"setup/release-notes/":{},"setup/release-notes/#v101":{}},"title":{}}],["177",{"_index":1521,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["178",{"_index":1527,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["18",{"_index":567,"text":{"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{},"setup/release-notes/":{},"setup/release-notes/#rdd":{}},"title":{}}],["18,2",{"_index":569,"text":{"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{}},"title":{}}],["1815|polygon",{"_index":2153,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["185",{"_index":1510,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["188",{"_index":1523,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["189",{"_index":1512,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["19",{"_index":3688,"text":{"setup/release-notes/":{},"setup/release-notes/#python_1":{},"setup/release-notes/#sql_3":{}},"title":{}}],["19.446408",{"_index":2256,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"tutorial/sql-python/":{},"tutorial/sql-python/#multipoint":{}},"title":{}}],["19.5087",{"_index":2162,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["19.51056",{"_index":2262,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#polygon":{},"tutorial/sql-python/":{},"tutorial/sql-python/#polygon":{}},"title":{}}],["19.51121",{"_index":2260,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#polygon":{},"tutorial/sql-python/":{},"tutorial/sql-python/#polygon":{}},"title":{}}],["19.511463",{"_index":2254,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"tutorial/sql-python/":{},"tutorial/sql-python/#multipoint":{}},"title":{}}],["19.51216",{"_index":2264,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#polygon":{},"tutorial/sql-python/":{},"tutorial/sql-python/#polygon":{}},"title":{}}],["19.5128",{"_index":2268,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#polygon":{},"tutorial/sql-python/":{},"tutorial/sql-python/#polygon":{}},"title":{}}],["19.51280",{"_index":2266,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#polygon":{},"tutorial/sql-python/":{},"tutorial/sql-python/#polygon":{}},"title":{}}],["190",{"_index":645,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["192",{"_index":1514,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["193",{"_index":1492,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["194",{"_index":1522,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["1mb",{"_index":1826,"text":{"archive/download/project/":{},"archive/download/project/#submit-the-compiled-jar":{}},"title":{}}],["1|point",{"_index":2250,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{}},"title":{}}],["2",{"_index":174,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_numinteriorrings":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_pointonsurface":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_symdifference":{},"api/sql/Function/#st_union":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/download/zeppelin/#installation":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#nominate-a-committer-or-pmc-member":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v081-geospark-core":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"setup/zeppelin/#installation":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/sql-python/":{},"tutorial/sql-python/#multipolygon":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["2),(1",{"_index":308,"text":{"api/flink/Function/":{},"api/flink/Function/#st_force_2d":{},"api/sql/Function/":{},"api/sql/Function/#st_force_2d":{}},"title":{}}],["2),array(3",{"_index":1117,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{}},"title":{}}],["2,0",{"_index":305,"text":{"api/flink/Function/":{},"api/flink/Function/#st_force_2d":{},"api/sql/Function/":{},"api/sql/Function/#st_force_2d":{}},"title":{}}],["2,1",{"_index":310,"text":{"api/flink/Function/":{},"api/flink/Function/#st_force_2d":{},"api/sql/Function/":{},"api/sql/Function/#st_force_2d":{}},"title":{}}],["2,18",{"_index":568,"text":{"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{}},"title":{}}],["2,3",{"_index":309,"text":{"api/flink/Function/":{},"api/flink/Function/#st_force_2d":{},"api/sql/Function/":{},"api/sql/Function/#st_force_2d":{}},"title":{}}],["2,5",{"_index":307,"text":{"api/flink/Function/":{},"api/flink/Function/#st_force_2d":{},"api/sql/Function/":{},"api/sql/Function/#st_force_2d":{}},"title":{}}],["2.0",{"_index":816,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["2.1",{"_index":1319,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#compatibility":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/release-notes/":{},"setup/release-notes/#v101":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21_1":{}}}],["2.11",{"_index":41,"text":{"":{},"archive/download/project/":{},"archive/download/project/#submit-the-compiled-jar":{},"community/publish/":{},"setup/compile/":{},"setup/compile/#compile-with-different-targets":{},"setup/flink/platform/":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{}},"title":{"#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39":{}}}],["2.11/2.12",{"_index":3598,"text":{"setup/platform/":{}},"title":{}}],["2.12",{"_index":42,"text":{"":{},"community/publish/":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-with-different-targets":{},"setup/flink/platform/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"tutorial/demo/":{},"tutorial/demo/#prerequisites":{}},"title":{"#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39":{}}}],["2.12/2.11",{"_index":3715,"text":{"setup/flink/platform/":{}},"title":{}}],["2.13",{"_index":3599,"text":{"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#global":{}},"title":{}}],["2.2",{"_index":1317,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#apache-spark":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#apache-spark":{},"setup/release-notes/":{},"setup/release-notes/#sedona-121":{},"setup/release-notes/#v101":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22_1":{}}}],["2.3",{"_index":38,"text":{"":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#apache-spark":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#apache-spark":{},"setup/release-notes/":{},"setup/release-notes/#v110":{},"setup/zeppelin/":{},"setup/zeppelin/#compatibility":{}},"title":{"#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23_1":{}}}],["2.4",{"_index":8,"text":{"":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#apache-spark":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#apache-spark":{},"community/publish/":{},"setup/compile/":{},"setup/compile/#compile-with-different-targets":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{}},"title":{"#08302022-sedona-121-incubating-is-released-it-supports-spark-24-33-and-flink-112":{}}}],["2.4_2.11",{"_index":3295,"text":{"community/publish/":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["2.4_2.11/1.2.1",{"_index":3294,"text":{"community/publish/":{}},"title":{}}],["2.4_2.12",{"_index":3291,"text":{"community/publish/":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["2.4_2.12/1.2.1",{"_index":3289,"text":{"community/publish/":{}},"title":{}}],["2.5",{"_index":382,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointonsurface":{},"api/sql/Function/":{},"api/sql/Function/#st_pointonsurface":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#retrieve-geometries":{}},"title":{}}],["2.x",{"_index":1310,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-2x-versions":{}}}],["20",{"_index":281,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_point":{},"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_subdivide":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{},"tutorial/sql-python/#sedonasql":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{}}],["20,20",{"_index":286,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{},"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{}},"title":{}}],["20.9891",{"_index":2160,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["2015",{"_index":3100,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{}},"title":{}}],["2016",{"_index":3094,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{}},"title":{}}],["2018",{"_index":3072,"text":{"community/publication/":{},"community/publication/#geosparkviz-visualization-system":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["2019",{"_index":3088,"text":{"community/publication/":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#geosparkviz-visualization-system":{}},"title":{}}],["2020",{"_index":3059,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["2021",{"_index":3489,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["2022",{"_index":3392,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["203",{"_index":1478,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["204",{"_index":1495,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["2047",{"_index":3789,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["205",{"_index":1497,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["207",{"_index":1494,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["209",{"_index":1504,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["21",{"_index":562,"text":{"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{}},"title":{}}],["21.0",{"_index":2244,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{}},"title":{}}],["21.1100",{"_index":2158,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["21.427834",{"_index":582,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collect":{}},"title":{}}],["21.6942",{"_index":2154,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["211",{"_index":1489,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["213",{"_index":1477,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["214",{"_index":1490,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["216",{"_index":1479,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["22",{"_index":3667,"text":{"setup/release-notes/":{},"setup/release-notes/#sql_2":{}},"title":{}}],["22.7238",{"_index":2156,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["222",{"_index":1467,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"setup/release-notes/":{},"setup/release-notes/#v113":{}},"title":{}}],["223",{"_index":1471,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"setup/release-notes/":{},"setup/release-notes/#v113":{}},"title":{}}],["224",{"_index":1415,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["225",{"_index":4023,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["228",{"_index":1416,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["23",{"_index":2251,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{}},"title":{}}],["23.0",{"_index":2246,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{}},"title":{}}],["23.5714285",{"_index":749,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["231",{"_index":1440,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["234",{"_index":1442,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["24",{"_index":553,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{}}],["24.0",{"_index":3586,"text":{"setup/maven-coordinates/":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{}},"title":{"setup/maven-coordinates/#geotools-240":{}}}],["24.1",{"_index":3652,"text":{"setup/release-notes/":{},"setup/release-notes/#global_1":{}},"title":{}}],["24.863836",{"_index":4000,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["244",{"_index":1428,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["245",{"_index":1431,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["247387",{"_index":2489,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["25",{"_index":254,"text":{"api/flink/Function/":{},"api/flink/Function/#st_azimuth":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_z":{},"api/sql/Function/":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_z":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{}},"title":{}}],["25.0",{"_index":440,"text":{"api/flink/Function/":{},"api/flink/Function/#st_y":{},"api/sql/Function/":{},"api/sql/Function/#st_y":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{}},"title":{}}],["25.2",{"_index":3466,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["25.2.jar",{"_index":3477,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["25.2/geotool",{"_index":3480,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["255",{"_index":1164,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_normalize":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["256",{"_index":1241,"text":{"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_pixelize":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["256*256",{"_index":2711,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["26",{"_index":2253,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{}},"title":{}}],["26.0",{"_index":2248,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{}},"title":{}}],["26.4285714",{"_index":748,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["26860257|2422",{"_index":2216,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["26860294|2406",{"_index":2220,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["27",{"_index":3665,"text":{"setup/release-notes/":{},"setup/release-notes/#sql_2":{}},"title":{}}],["270",{"_index":1422,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["284",{"_index":1435,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["288",{"_index":1432,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["29",{"_index":3682,"text":{"setup/release-notes/":{},"setup/release-notes/#global_2":{},"setup/release-notes/#viz_1":{}},"title":{}}],["298",{"_index":1423,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["29947493|2402",{"_index":2223,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["29947498|2602",{"_index":2225,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["29947499|2401",{"_index":2226,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["29947505|2401",{"_index":2227,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["2^zoom",{"_index":4034,"text":{"tutorial/viz/":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{}},"title":{}}],["2d",{"_index":659,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linesubstring":{}},"title":{}}],["2fa",{"_index":3005,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{}},"title":{}}],["2~5",{"_index":1749,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["3",{"_index":175,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_pointn":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_symdifference":{},"api/sql/Function/#st_union":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/viz/sql/":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-tile-name":{},"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"setup/release-notes/#v01-v07":{},"tutorial/demo/":{},"tutorial/demo/#prerequisites":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#render-map-tiles":{}},"title":{}}],["3,1",{"_index":315,"text":{"api/flink/Function/":{},"api/flink/Function/#st_force_2d":{},"api/sql/Function/":{},"api/sql/Function/#st_force_2d":{}},"title":{}}],["3.0",{"_index":3147,"text":{"community/publish/":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-with-different-targets":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{}}],["3.0.1",{"_index":3429,"text":{"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/install-python/":{},"setup/install-python/#setup-environment-variables":{}},"title":{}}],["3.0.2",{"_index":3678,"text":{"setup/release-notes/":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#sql_3":{}},"title":{}}],["3.0_2.11",{"_index":3568,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["3.0_2.12",{"_index":3297,"text":{"community/publish/":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["3.0_2.12/1.2.1",{"_index":3296,"text":{"community/publish/":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["3.0_2.12:1.1.0",{"_index":3794,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["3.0_2.12:1.2.1",{"_index":3463,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{}},"title":{}}],["3.0_2.12:<version>,org.apache.sedona:sedona",{"_index":3928,"text":{"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{}},"title":{}}],["3.0_2.12:<version>,org.datasyslab:geotool",{"_index":3929,"text":{"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{}},"title":{}}],["3.1",{"_index":39,"text":{"":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/platform/":{}},"title":{"#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39":{}}}],["3.1.1",{"_index":3677,"text":{"setup/release-notes/":{},"setup/release-notes/#global_2":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#viz_1":{}},"title":{}}],["3.10",{"_index":3600,"text":{"setup/platform/":{}},"title":{}}],["3.141592653589793",{"_index":256,"text":{"api/flink/Function/":{},"api/flink/Function/#st_azimuth":{},"api/sql/Function/":{},"api/sql/Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{}},"title":{}}],["3.2",{"_index":22,"text":{"":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#sql_1":{}},"title":{"#11232021-sedona-111-incubating-is-released-it-now-supports-spark-32":{}}}],["3.3",{"_index":9,"text":{"":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#sedona-121":{},"setup/release-notes/#sql-for-spark":{}},"title":{"#08302022-sedona-121-incubating-is-released-it-supports-spark-24-33-and-flink-112":{}}}],["3.3.1",{"_index":3370,"text":{"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{}},"title":{}}],["3.5",{"_index":4053,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#retrieve-geometries":{}},"title":{}}],["3.6",{"_index":44,"text":{"":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#python":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#python":{}},"title":{"#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39":{}}}],["3.7",{"_index":2119,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#python":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#python":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{}}],["3.8",{"_index":3437,"text":{"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{}},"title":{}}],["3.9",{"_index":45,"text":{"":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{"#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39":{}}}],["30",{"_index":610,"text":{"api/sql/Function/":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_subdivide":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#sql_2":{},"tutorial/sql-python/":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{}},"title":{}}],["30.01",{"_index":2028,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["300",{"_index":1068,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_html":{}},"title":{}}],["300k/month",{"_index":3593,"text":{"setup/overview/":{},"setup/overview/#download-statistics":{}},"title":{}}],["3021",{"_index":395,"text":{"api/flink/Function/":{},"api/flink/Function/#st_setsrid":{},"api/sql/Function/":{},"api/sql/Function/#st_setsrid":{}},"title":{}}],["31",{"_index":3673,"text":{"setup/release-notes/":{},"setup/release-notes/#r":{}},"title":{}}],["31.275168",{"_index":2467,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.276814",{"_index":2469,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.276882",{"_index":2465,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.278848",{"_index":2471,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.279082",{"_index":2473,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.27935",{"_index":2463,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.28008",{"_index":2461,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.281049",{"_index":2459,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.281426",{"_index":2457,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.28285",{"_index":2455,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.283499",{"_index":2475,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.286376",{"_index":2453,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.288211",{"_index":2451,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.289718",{"_index":2477,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.290476",{"_index":2479,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.29314",{"_index":2449,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.295204",{"_index":2481,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.295638",{"_index":2447,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.29689",{"_index":2483,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.297677",{"_index":2445,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.297901",{"_index":2403,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["31.30022",{"_index":2443,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.30093",{"_index":2441,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.302076",{"_index":2439,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.302123",{"_index":2437,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.302764",{"_index":2435,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.305203",{"_index":2405,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["31.305299",{"_index":2433,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.305583",{"_index":2431,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.306178",{"_index":2429,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.306224",{"_index":2427,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.30666",{"_index":2425,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.307096",{"_index":2407,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["31.307552",{"_index":2409,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.307622",{"_index":2423,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.307951",{"_index":2411,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.309524",{"_index":2421,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.310988",{"_index":2419,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.311977",{"_index":2417,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.31218",{"_index":2413,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["31.312876",{"_index":2415,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["314",{"_index":1424,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["31|039|00835841|31039",{"_index":2623,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["31|109|00835876|31109",{"_index":2638,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["32",{"_index":985,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"setup/release-notes/":{},"setup/release-notes/#viz_1":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{}},"title":{}}],["32.0",{"_index":2249,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{}},"title":{}}],["32.1428571",{"_index":750,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["32.324142",{"_index":2308,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["32.35078",{"_index":2314,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"tutorial/rdd/":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{}}],["32.357073",{"_index":2312,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["32.360763",{"_index":2310,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["320",{"_index":1420,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["321",{"_index":1433,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["32636",{"_index":2340,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["32|[1058.0",{"_index":986,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{}},"title":{}}],["32|[1258.0",{"_index":989,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{}},"title":{}}],["33",{"_index":3683,"text":{"setup/release-notes/":{},"setup/release-notes/#global_2":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["33.989548",{"_index":2515,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["33.994237",{"_index":2517,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["33.995153",{"_index":2513,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["33.99913",{"_index":2507,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["33.999131",{"_index":2509,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["33.999488",{"_index":2505,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["33.999714",{"_index":2511,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["331",{"_index":1436,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["333",{"_index":663,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linesubstring":{}},"title":{}}],["339|30700|null",{"_index":2640,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["34",{"_index":4076,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["34.000028",{"_index":2519,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.001502",{"_index":2503,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.002659",{"_index":2501,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.004552",{"_index":2499,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.00537",{"_index":2491,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["34.005426",{"_index":2497,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.009768",{"_index":2493,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["34.01",{"_index":2061,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#write-a-spatial-knn-query":{}},"title":{}}],["34.010398",{"_index":2495,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["34.0476190",{"_index":752,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["34.6825396",{"_index":755,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["34.717363",{"_index":2540,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.718322",{"_index":2538,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.718513",{"_index":2542,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.718565",{"_index":2544,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.718577",{"_index":2546,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.719143",{"_index":2536,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.719377",{"_index":2548,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.719766",{"_index":2534,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.723168",{"_index":2532,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.723865",{"_index":2530,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.727131",{"_index":2528,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.727375",{"_index":2526,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.831431",{"_index":2378,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.831526",{"_index":2380,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.831925",{"_index":2382,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.832699",{"_index":2376,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.833938",{"_index":2374,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.8352",{"_index":2384,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.836087",{"_index":2386,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.83763",{"_index":2372,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.837682",{"_index":2370,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.838423",{"_index":2368,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.841003",{"_index":2366,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.841884",{"_index":2364,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.84329",{"_index":2388,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.844307",{"_index":2362,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.844438",{"_index":2390,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.844829",{"_index":2360,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.846387",{"_index":2392,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.85053",{"_index":2394,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.851336",{"_index":2358,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.858537",{"_index":2356,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.865379",{"_index":2396,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.865687",{"_index":2354,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.867502",{"_index":2352,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.872316",{"_index":2350,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.873303",{"_index":2348,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["34.873337",{"_index":2346,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["34.873369",{"_index":2344,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["34.873444",{"_index":2342,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["344",{"_index":1356,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["345",{"_index":1375,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["346",{"_index":1376,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["35",{"_index":742,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{},"setup/release-notes/":{},"setup/release-notes/#core_1":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["359",{"_index":1370,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["35|011|00933054|35011",{"_index":2634,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["36",{"_index":4077,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["365",{"_index":1358,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["37",{"_index":4079,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["37.8571428",{"_index":753,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["37.857142857142854",{"_index":744,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["373",{"_index":1371,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["378",{"_index":1381,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["379",{"_index":1382,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["38",{"_index":4080,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["38(4",{"_index":3116,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{}},"title":{}}],["3857",{"_index":4073,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["39",{"_index":4081,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["395",{"_index":1378,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["396",{"_index":1379,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["398",{"_index":1372,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["399",{"_index":1365,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["3a79a47ac26ff4cd",{"_index":3383,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["3ca8",{"_index":3411,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["3d",{"_index":3638,"text":{"setup/release-notes/":{},"setup/release-notes/#sql":{}},"title":{}}],["4",{"_index":132,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_pointn":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_symdifference":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/release-notes/":{},"setup/release-notes/#sql":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{}},"title":{}}],["4.5",{"_index":4055,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#retrieve-geometries":{}},"title":{}}],["40",{"_index":609,"text":{"api/sql/Function/":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_subdivide":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql-python/":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{}},"title":{}}],["40.01",{"_index":2029,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["40.7128",{"_index":187,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_pointfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{}},"title":{}}],["401",{"_index":1366,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["402",{"_index":1368,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["406",{"_index":1373,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["4096",{"_index":3133,"text":{"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["41",{"_index":3658,"text":{"setup/release-notes/":{},"setup/release-notes/#core":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["416",{"_index":1374,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["42",{"_index":2252,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{}},"title":{}}],["42.0",{"_index":2247,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{}},"title":{}}],["42.28787",{"_index":3917,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["420",{"_index":1361,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["421",{"_index":1362,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["422",{"_index":1363,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["427",{"_index":3700,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{}}],["43",{"_index":3650,"text":{"setup/release-notes/":{},"setup/release-notes/#sql_1":{}},"title":{}}],["43.8095238",{"_index":757,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["4326",{"_index":4072,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["443",{"_index":3690,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-core":{}},"title":{}}],["448",{"_index":3707,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-python":{}},"title":{}}],["45",{"_index":740,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{},"setup/release-notes/":{},"setup/release-notes/#sql_1":{}},"title":{}}],["45.342524",{"_index":583,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collect":{}},"title":{}}],["451",{"_index":3692,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-core":{}},"title":{}}],["459",{"_index":3702,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{}}],["460",{"_index":3703,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{}}],["469",{"_index":3172,"text":{"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{}}],["480",{"_index":3704,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{}}],["488",{"_index":3696,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-core":{}},"title":{}}],["499",{"_index":3701,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{}}],["4b18",{"_index":3408,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["5",{"_index":306,"text":{"api/flink/Function/":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_geohash":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_numinteriorrings":{},"api/flink/Function/#st_pointonsurface":{},"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_geohash":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_pointonsurface":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Function/#st_union":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#knn-query":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#work-with-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#knn-query":{}},"title":{}}],["5,5",{"_index":311,"text":{"api/flink/Function/":{},"api/flink/Function/#st_force_2d":{},"api/sql/Function/":{},"api/sql/Function/#st_force_2d":{}},"title":{}}],["5.5",{"_index":4057,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#retrieve-geometries":{}},"title":{}}],["50",{"_index":642,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"setup/release-notes/":{},"setup/release-notes/#python":{}},"title":{}}],["50.000",{"_index":4001,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["500",{"_index":3782,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["501",{"_index":862,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#work-with-data":{}},"title":{}}],["51.5974135047432",{"_index":646,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{}},"title":{}}],["51.76426",{"_index":2261,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#polygon":{},"tutorial/sql-python/":{},"tutorial/sql-python/#polygon":{}},"title":{}}],["51.76448",{"_index":2267,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#polygon":{},"tutorial/sql-python/":{},"tutorial/sql-python/#polygon":{}},"title":{}}],["51.765158",{"_index":2255,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"tutorial/sql-python/":{},"tutorial/sql-python/#multipoint":{}},"title":{}}],["51.76583",{"_index":2263,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#polygon":{},"tutorial/sql-python/":{},"tutorial/sql-python/#polygon":{}},"title":{}}],["51.76599",{"_index":2265,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#polygon":{},"tutorial/sql-python/":{},"tutorial/sql-python/#polygon":{}},"title":{}}],["51.779752",{"_index":2257,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"tutorial/sql-python/":{},"tutorial/sql-python/#multipoint":{}},"title":{}}],["512",{"_index":3225,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["52",{"_index":561,"text":{"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{}},"title":{}}],["52.0",{"_index":2245,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{}},"title":{}}],["52.042576573",{"_index":320,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geohash":{},"api/sql/Function/":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_geohash":{}},"title":{}}],["52.3130396",{"_index":2176,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["52.3141083",{"_index":2179,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["52.3143013",{"_index":2181,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["52.3504247",{"_index":2170,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["52.691693",{"_index":2173,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["53",{"_index":3662,"text":{"setup/release-notes/":{},"setup/release-notes/#core":{}},"title":{}}],["53|069|01513275|53069",{"_index":2630,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["55",{"_index":1675,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["56",{"_index":3666,"text":{"setup/release-notes/":{},"setup/release-notes/#sql_2":{}},"title":{}}],["56.342354355",{"_index":580,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collect":{}},"title":{}}],["58",{"_index":1664,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["58.297",{"_index":988,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{}},"title":{}}],["58.699",{"_index":984,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{}},"title":{}}],["59",{"_index":3669,"text":{"setup/release-notes/":{},"setup/release-notes/#python":{}},"title":{}}],["5c69",{"_index":3406,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["5g",{"_index":1742,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["6",{"_index":334,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_pointn":{},"api/sql/Function/":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_reverse":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"community/publish/":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["6.5",{"_index":4059,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#retrieve-geometries":{}},"title":{}}],["60",{"_index":619,"text":{"api/sql/Function/":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_startpoint":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["600",{"_index":3997,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["601",{"_index":863,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#work-with-data":{}},"title":{}}],["62",{"_index":3657,"text":{"setup/release-notes/":{},"setup/release-notes/#global_1":{}},"title":{}}],["63",{"_index":3653,"text":{"setup/release-notes/":{},"setup/release-notes/#global_1":{}},"title":{}}],["64",{"_index":3655,"text":{"setup/release-notes/":{},"setup/release-notes/#global_1":{}},"title":{}}],["64.630926",{"_index":3999,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["64cea38dd3ca171ee4e2a7365dbce999773862f2a11599bd0f27e9551d740659a519a9b976b3e7b0826088010967093e6acc9462f7073e9737c24b007a2df846",{"_index":3416,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["65",{"_index":3634,"text":{"setup/release-notes/":{},"setup/release-notes/#sql":{}},"title":{}}],["666",{"_index":664,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linesubstring":{}},"title":{}}],["67",{"_index":3649,"text":{"setup/release-notes/":{},"setup/release-notes/#sql_1":{}},"title":{}}],["68",{"_index":3635,"text":{"setup/release-notes/":{},"setup/release-notes/#sql":{}},"title":{}}],["682138871|61658258|+46.2946377",{"_index":2631,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["6844991",{"_index":2338,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["69",{"_index":1662,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["69.28469348539744",{"_index":665,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linesubstring":{}},"title":{}}],["6c88",{"_index":3410,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["6c883ca80e7fd299",{"_index":3384,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["7",{"_index":675,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makepolygon":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["7.3",{"_index":3467,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{}},"title":{"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}}}],["7.5",{"_index":4061,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#retrieve-geometries":{}},"title":{}}],["7.x",{"_index":3457,"text":{"setup/databricks/":{}},"title":{}}],["70",{"_index":620,"text":{"api/sql/Function/":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{}},"title":{}}],["71",{"_index":3651,"text":{"setup/release-notes/":{},"setup/release-notes/#sql_1":{}},"title":{}}],["71.064544",{"_index":3916,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["71.16028,42.258729",{"_index":146,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgml":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgml":{}},"title":{}}],["71.160837,42.259112",{"_index":147,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgml":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgml":{}},"title":{}}],["71.161143,42.25932</gml:coordinates></gml:linestr",{"_index":148,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgml":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgml":{}},"title":{}}],["71.1663,42.2614",{"_index":153,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromkml":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromkml":{}},"title":{}}],["71.1667,42.2616</coordinates></linestr",{"_index":154,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromkml":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromkml":{}},"title":{}}],["72",{"_index":2927,"text":{"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["729",{"_index":3285,"text":{"community/publish/":{}},"title":{}}],["72fc",{"_index":3409,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["72hr",{"_index":3250,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["73",{"_index":3630,"text":{"setup/release-notes/":{},"setup/release-notes/#global":{},"setup/release-notes/#rdd":{}},"title":{}}],["74.0060",{"_index":161,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromtext":{},"api/flink/Constructor/#st_geomfromwkt":{},"api/flink/Constructor/#st_pointfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{}},"title":{}}],["74.0421975,40.6921336",{"_index":207,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{}},"title":{}}],["74.0428197,40.6867969",{"_index":206,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{}},"title":{}}],["74.0508020,40.6912794",{"_index":208,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{}},"title":{}}],["75",{"_index":2208,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"setup/release-notes/":{},"setup/release-notes/#sql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["76.5974135047432",{"_index":647,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{}},"title":{}}],["77",{"_index":3631,"text":{"setup/release-notes/":{},"setup/release-notes/#rdd":{}},"title":{}}],["777",{"_index":3376,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["7x",{"_index":3068,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["8",{"_index":335,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geometryn":{},"api/sql/Function/":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_makepolygon":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"community/publish/":{},"community/publish/#compile-r-html-docs":{},"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sedona-sql":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["8.5",{"_index":4063,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#retrieve-geometries":{}},"title":{}}],["80",{"_index":621,"text":{"api/sql/Function/":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/":{},"setup/release-notes/#flink_1":{},"setup/release-notes/#geospark-viz-old":{}},"title":{}}],["80.01",{"_index":2027,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["80k/month",{"_index":3592,"text":{"setup/overview/":{},"setup/overview/#download-statistics":{}},"title":{}}],["82",{"_index":3636,"text":{"setup/release-notes/":{},"setup/release-notes/#sql":{}},"title":{}}],["84.01",{"_index":2060,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#write-a-spatial-knn-query":{}},"title":{}}],["85",{"_index":759,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"setup/release-notes/":{},"setup/release-notes/#flink_1":{}},"title":{}}],["85.66566",{"_index":2440,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.665687",{"_index":2442,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.668276",{"_index":2438,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.668703",{"_index":2446,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.669183",{"_index":2444,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.669796",{"_index":2426,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.669876",{"_index":2424,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.670356",{"_index":2428,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.670622",{"_index":2420,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.670729",{"_index":2422,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.671344",{"_index":2436,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.67145",{"_index":2418,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.671664",{"_index":2430,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.67177",{"_index":2432,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.671878",{"_index":2434,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.671985",{"_index":2448,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.672275",{"_index":2416,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.672733",{"_index":2414,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.674377",{"_index":2462,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.674661",{"_index":2460,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.675603",{"_index":2412,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.675714",{"_index":2464,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.676865",{"_index":2458,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.677177",{"_index":2450,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.677938",{"_index":2466,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.678452",{"_index":2452,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.679195",{"_index":2456,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.679236",{"_index":2454,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.680348",{"_index":2468,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.684032",{"_index":2470,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.684387",{"_index":2472,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.692398",{"_index":2474,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.697419",{"_index":2410,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.69999",{"_index":2408,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.705032",{"_index":2476,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.706755",{"_index":2478,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.714271",{"_index":2406,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["85.715626",{"_index":2404,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["85.718102",{"_index":2480,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.719017",{"_index":2402,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["85.719132",{"_index":2482,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.985",{"_index":2500,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.986656",{"_index":2498,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.987567",{"_index":2504,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.987865",{"_index":2496,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.98851",{"_index":2502,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.988666",{"_index":2506,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.992568",{"_index":2508,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.993144",{"_index":2510,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.994876",{"_index":2512,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.998012",{"_index":2494,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["85.998823",{"_index":2514,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["85.998837",{"_index":2492,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["85.999925",{"_index":2516,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["86",{"_index":3640,"text":{"setup/release-notes/":{},"setup/release-notes/#sql":{}},"title":{}}],["86.000616",{"_index":2518,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["86.000685",{"_index":2490,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["86.557352",{"_index":2537,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["86.557381",{"_index":2535,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["86.559921",{"_index":2539,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["86.562336",{"_index":2533,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["86.562684",{"_index":2527,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["86.562797",{"_index":2529,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["86.562957",{"_index":2531,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["86.564827",{"_index":2541,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["86.567582",{"_index":2543,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["86.570572",{"_index":2545,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["86.573618",{"_index":2547,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["86.574172",{"_index":2525,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87",{"_index":3645,"text":{"setup/release-notes/":{},"setup/release-notes/#flink_1":{}},"title":{}}],["87.603673",{"_index":2363,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.603696",{"_index":2361,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.603716",{"_index":2359,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.60372",{"_index":2365,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.603879",{"_index":2367,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.603888",{"_index":2369,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.603889",{"_index":2371,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.604018",{"_index":2357,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.604033",{"_index":2349,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.604049",{"_index":2347,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.60415",{"_index":2351,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.604218",{"_index":2353,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.604409",{"_index":2355,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.6123",{"_index":2345,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["87.613127",{"_index":2373,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.616451",{"_index":2375,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.617535",{"_index":2343,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["87.621041",{"_index":2377,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.621056",{"_index":2379,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.62112",{"_index":2381,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.62119",{"_index":2393,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.62129",{"_index":2391,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.621359",{"_index":2389,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.621383",{"_index":2387,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.62144",{"_index":2395,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.62158",{"_index":2385,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.621603",{"_index":2383,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["87.621765",{"_index":2341,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["88.175933",{"_index":2309,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["88.175933,32.360763",{"_index":2292,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["88.175933,32.360763,ga",{"_index":2281,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["88.175933,32.360763,testattribute1,testattribute2",{"_index":3903,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["88.175933|32.360763",{"_index":2706,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{}}],["88.221102",{"_index":2313,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"tutorial/rdd/":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{}}],["88.221102,32.35078",{"_index":2294,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["88.221102,32.35078,restaur",{"_index":2283,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["88.331492",{"_index":2307,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["88.331492,32.324142",{"_index":2291,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["88.331492,32.324142,hotel",{"_index":2280,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["88.331492,32.324142,testattribute1,testattribute2",{"_index":3902,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["88.331492|32.324142",{"_index":2705,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{}}],["88.388954",{"_index":2311,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["88.388954,32.357073",{"_index":2293,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["88.388954,32.357073,bar",{"_index":2282,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["88.388954,32.357073,testattribute1,testattribute2",{"_index":3904,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["88.388954|32.357073",{"_index":2707,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{}}],["89",{"_index":3642,"text":{"setup/release-notes/":{},"setup/release-notes/#sql":{}},"title":{}}],["9",{"_index":336,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geometryn":{},"api/sql/Function/":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/rdd/":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["9.5",{"_index":4065,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#retrieve-geometries":{}},"title":{}}],["9.x",{"_index":3458,"text":{"setup/databricks/":{}},"title":{}}],["90",{"_index":3641,"text":{"setup/release-notes/":{},"setup/release-notes/#sql":{}},"title":{}}],["90.01",{"_index":2026,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["91",{"_index":1539,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["93",{"_index":3646,"text":{"setup/release-notes/":{},"setup/release-notes/#flink_1":{}},"title":{}}],["94.28469348539744",{"_index":666,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linesubstring":{}},"title":{}}],["949d",{"_index":3404,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["949dd6275c69ab954b1872fc6c883ca80e7fd299",{"_index":3394,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["95",{"_index":3617,"text":{"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["96",{"_index":3604,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["96.910",{"_index":2637,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["963",{"_index":3117,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{}},"title":{}}],["97",{"_index":1621,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["97.019",{"_index":2622,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["98",{"_index":3622,"text":{"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["994",{"_index":3118,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{}},"title":{}}],["999",{"_index":1210,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{}},"title":{}}],["9x",{"_index":3069,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["_",{"_index":3985,"text":{"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["_c0",{"_index":140,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeojson":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_point":{},"api/sql/Constructor/#st_pointfromtext":{},"api/sql/Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{}}],["_c0|_c1|_c2",{"_index":2611,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["_c1",{"_index":496,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{}}],["_c11|_c12|_c13",{"_index":2617,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["_c14",{"_index":2618,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["_c15",{"_index":2619,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["_c16",{"_index":2620,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["_c17",{"_index":2621,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["_c2",{"_index":497,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["_c3",{"_index":2612,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["_c4",{"_index":2613,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["_c5",{"_index":2614,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["_c6",{"_index":2007,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/core-python/":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["_c6|_c7",{"_index":2650,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["_c6|_c7|_c8",{"_index":2615,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["_c7",{"_index":2646,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["_c9|_c10",{"_index":2616,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["a:geometri",{"_index":216,"text":{"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_area":{},"api/flink/Function/#st_asbinary":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_asgeojson":{},"api/flink/Function/#st_asgml":{},"api/flink/Function/#st_askml":{},"api/flink/Function/#st_astext":{},"api/flink/Function/#st_buffer":{},"api/flink/Function/#st_buildarea":{},"api/flink/Function/#st_distance":{},"api/flink/Function/#st_envelope":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_isempty":{},"api/flink/Function/#st_issimple":{},"api/flink/Function/#st_isvalid":{},"api/flink/Function/#st_length":{},"api/flink/Function/#st_npoints":{},"api/flink/Function/#st_numgeometries":{},"api/flink/Function/#st_reverse":{},"api/flink/Function/#st_setsrid":{},"api/flink/Function/#st_srid":{},"api/flink/Function/#st_transform":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_area":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_asgeojson":{},"api/sql/Function/#st_asgml":{},"api/sql/Function/#st_askml":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_centroid":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_convexhull":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_distance":{},"api/sql/Function/#st_envelope":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_geometrytype":{},"api/sql/Function/#st_intersection":{},"api/sql/Function/#st_isempty":{},"api/sql/Function/#st_issimple":{},"api/sql/Function/#st_isvalid":{},"api/sql/Function/#st_length":{},"api/sql/Function/#st_linemerge":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_npoints":{},"api/sql/Function/#st_numgeometries":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Function/#st_srid":{},"api/sql/Function/#st_symdifference":{},"api/sql/Function/#st_transform":{},"api/sql/Function/#st_union":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_overlaps":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_area":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_centroid":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Function/#st_envelope":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_length":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_npoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_pixelize":{}},"title":{}}],["a:geometrycolumn",{"_index":109,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_envelope_aggr":{},"api/flink/Aggregator/#st_union_aggr":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/AggregateFunction/#st_intersection_aggr":{},"api/sql/AggregateFunction/#st_union_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr":{}},"title":{}}],["a:imag",{"_index":1234,"text":{"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{}},"title":{}}],["a:pixel",{"_index":1248,"text":{"api/viz/sql/":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_render":{},"archive/api/viz/sql/#st_tilename":{}},"title":{}}],["aa38e0",{"_index":1221,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{}},"title":{}}],["ab",{"_index":3228,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["ab95",{"_index":3407,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["abov",{"_index":858,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"community/publish/":{},"community/publish/#failed-vote":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{}},"title":{}}],["abovement",{"_index":3536,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["absenc",{"_index":3343,"text":{"community/rule/":{},"community/rule/#develop-a-code-contribution":{}},"title":{}}],["absolute/path/geospark/geospark",{"_index":1848,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{}},"title":{}}],["absolute/path/incub",{"_index":3711,"text":{"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{}},"title":{}}],["acceler",{"_index":1615,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["accept",{"_index":1434,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/rule/":{},"community/rule/#pick-annouce-a-task-using-jira":{},"setup/release-notes/":{},"setup/release-notes/#v110":{},"setup/release-notes/#v120":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{"community/contributor/#pmc-accept-and-icla-instruction":{}}}],["access",{"_index":2815,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#committers":{},"community/publish/":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{}},"title":{"community/publish/#obtain-write-access-to-sedona-github-repo":{}}}],["accord",{"_index":1207,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["accordingli",{"_index":3241,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["account",{"_index":2981,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#create-asf-account":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{}},"title":{"community/contributor/#create-asf-account":{}}}],["accur",{"_index":1627,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["accuraci",{"_index":1553,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["achiev",{"_index":1927,"text":{"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{}},"title":{}}],["acm",{"_index":3098,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{}},"title":{}}],["action",{"_index":63,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"community/publication/":{},"community/publication/#geosparkviz-visualization-system":{},"community/rule/":{},"community/rule/#make-a-pull-request":{},"download/":{},"download/#github-repository":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#download-staged-jars":{}},"title":{}}],["action\"",{"_index":1889,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}},"title":{}}],["activ",{"_index":2871,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#send-the-invitation":{},"community/rule/":{},"community/rule/#code-of-conduct":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["activation><activebydefault",{"_index":1339,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{}},"title":{}}],["activebydefault></activ",{"_index":1340,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{}},"title":{}}],["actual",{"_index":2645,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{}},"title":{}}],["ad",{"_index":558,"text":{"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/rule/":{},"community/rule/#develop-a-document-contribution":{},"community/rule/#review-a-pull-request":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v101":{},"setup/release-notes/#v112":{},"tutorial/python-vector-osm/":{}},"title":{"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}}}],["adam",{"_index":2821,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["adapt",{"_index":491,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#load-shapefile-and-geojson":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"community/publish/":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-with-different-targets":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-python/#setup-environment-variables":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/rdd/":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql/":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#load-shapefile-and-geojson":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{"setup/install-python/#prepare-python-adapter-jar":{}}}],["adapter.todf",{"_index":1377,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#core_1":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#v131":{}},"title":{}}],["adapter/target",{"_index":3503,"text":{"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{}},"title":{}}],["adapter/target/sedona",{"_index":3221,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{},"setup/compile/":{},"setup/compile/#run-python-test":{}},"title":{}}],["add",{"_index":883,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-1x-versions":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-2x-versions":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/project/":{},"archive/download/project/#quick-start":{},"archive/download/project/#self-contained-spark-projects":{},"archive/download/zeppelin/":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"archive/tutorial/viz/#set-up-dependencies":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#set-up-asf-username-for-maven":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#snapshot-versions":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#flink_1":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global_3":{},"setup/release-notes/#r":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#sql_1":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v100":{},"setup/release-notes/#v110":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"setup/zeppelin/":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/flink/sql/#set-up-dependencies":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#register-sedonasql":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{},"tutorial/viz/#set-up-dependencies":{}},"title":{"archive/download/zeppelin/#add-geospark-dependencies-in-zeppelin-spark-interpreter":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"setup/zeppelin/#add-sedona-dependencies-in-zeppelin-spark-interpreter":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{}}}],["addit",{"_index":555,"text":{"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#introduction":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["addition",{"_index":3018,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{}},"title":{}}],["address",{"_index":1732,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#send-the-invitation":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#core_1":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{}},"title":{}}],["adher",{"_index":2993,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["adjac",{"_index":1909,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["admin",{"_index":3302,"text":{"community/publish/":{}},"title":{}}],["admin123",{"_index":3303,"text":{"community/publish/":{}},"title":{}}],["advanc",{"_index":920,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{}},"title":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"setup/databricks/#advanced-editions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{}}}],["affgeoid",{"_index":2331,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["affili",{"_index":2820,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"community/rule/":{},"community/rule/#code-of-conduct":{}},"title":{}}],["ag",{"_index":1266,"text":{"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/core-python/":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["again",{"_index":3258,"text":{"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["against",{"_index":1594,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/release-notes/":{},"setup/release-notes/#sedona-121":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["aggreg",{"_index":100,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#other-queries":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"tutorial/sql/":{},"tutorial/sql/#other-queries":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{"api/flink/Aggregator/":{},"api/sql/AggregateFunction/":{},"api/viz/sql/#aggregate-functions":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/viz/sql/#aggregate-functions":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{}}}],["agreement",{"_index":2969,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["aka",{"_index":1626,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["al",{"_index":2751,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{}}],["aland",{"_index":2337,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["alfon",{"_index":3081,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["algebra",{"_index":33,"text":{"":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sql_2":{},"tutorial/raster/":{},"tutorial/raster/#api-docs":{}},"title":{"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{},"tutorial/raster/":{}}}],["algorithm",{"_index":3359,"text":{"community/rule/":{},"community/rule/#review-a-pull-request":{},"setup/flink/modules/":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{}},"title":{}}],["alia",{"_index":157,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_multi":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["align",{"_index":2936,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["all.sh",{"_index":1763,"text":{"archive/download/cluster/":{},"archive/download/cluster/#start-your-cluster":{},"setup/cluster/":{},"setup/cluster/#start-your-cluster":{}},"title":{}}],["allbandvalu",{"_index":1053,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_getband":{}},"title":{}}],["alloc",{"_index":1743,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["allow",{"_index":1338,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/project/":{},"archive/download/project/#self-contained-spark-projects":{},"archive/download/scalashell/":{},"archive/download/scalashell/#spark-scala-shell":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v081-geospark-core":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#introduction":{},"tutorial/sql/":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["allowtopologyinvalidgeometri",{"_index":2319,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["along",{"_index":632,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"community/contact/":{},"community/contact/#bug-reports":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/release-notes/":{},"setup/release-notes/#v081-geospark-core":{}},"title":{}}],["alphaband",{"_index":1034,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{}},"title":{}}],["alreadi",{"_index":1000,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/publish/":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["altern",{"_index":872,"text":{"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["although",{"_index":1044,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"setup/platform/":{},"setup/release-notes/":{},"tutorial/demo/":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{}},"title":{}}],["alway",{"_index":1812,"text":{"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/rdd/":{},"tutorial/rdd/#save-to-permanent-storage":{}},"title":{}}],["amazon",{"_index":1706,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"tutorial/core-python/":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/rdd/":{},"tutorial/rdd/#save-to-permanent-storage":{}},"title":{}}],["amount",{"_index":1746,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["analisi",{"_index":3822,"text":{"tutorial/python-vector-osm/":{}},"title":{"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}}}],["analyt",{"_index":3074,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{},"setup/overview/":{}},"title":{"setup/overview/#rich-spatial-analytics-tools":{}}}],["analyz",{"_index":1670,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["andrea",{"_index":3077,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["andvalu",{"_index":1095,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_bitwiseand":{}},"title":{}}],["aniqu",{"_index":3104,"text":{"community/publication/":{},"community/publication/#geosparkviz-visualization-system":{}},"title":{}}],["annouc",{"_index":2998,"text":{"community/contributor/":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{}},"title":{"community/contributor/#pmc-annoucement":{},"community/rule/#pick-annouce-a-task-using-jira":{}}}],["announc",{"_index":1680,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["anoth",{"_index":2041,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format":{}},"title":{}}],["answser",{"_index":3347,"text":{"community/rule/":{},"community/rule/#make-a-pull-request":{}},"title":{}}],["anton",{"_index":1448,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["any.whl",{"_index":1978,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-from-wheel-file":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installing-from-wheel-file":{}},"title":{}}],["anyon",{"_index":2869,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{}},"title":{}}],["anyth",{"_index":1811,"text":{"archive/download/project/":{},"archive/download/project/#try-geospark-sql-functions":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{}},"title":{}}],["apach",{"_index":19,"text":{"":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/cluster/":{},"archive/download/cluster/#start-your-cluster":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#compatibility":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#set-up-dependencies":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"asf/asf/":{},"asf/asf/#apache-software-foundation":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contact/":{},"community/contact/#feedback":{},"community/contact/#twitter":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#committer-done-template":{},"community/contributor/#mentors":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#project-management-committee-pmc":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/contributor/#send-the-invitation":{},"community/publication/":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#geosparkviz-visualization-system":{},"community/publication/#key-publications":{},"community/publication/#publication":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#code-of-conduct":{},"community/rule/#develop-a-code-contribution":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"community/vote/#run-the-verify-script":{},"setup/cluster/":{},"setup/cluster/#start-your-cluster":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/databricks/":{},"setup/databricks/#initialise":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/flink/install-scala/":{},"setup/flink/modules/":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#buildsbt":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/overview/":{},"setup/overview/#download-statistics":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#sedona-100":{},"setup/release-notes/#sedona-120":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v110":{},"setup/release-notes/#v120":{},"setup/zeppelin/":{},"setup/zeppelin/#compatibility":{},"setup/zeppelin/#installation":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#range-query-window":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/demo/":{},"tutorial/demo/#prerequisites":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql/":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz/":{},"tutorial/viz/#set-up-dependencies":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"#04162022-sedona-120-incubating-is-released-sedona-now-supports-geospatial-stream-processing-in-apache-flink":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-1x-versions":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-2x-versions":{},"archive/download/cluster/#set-up-your-apache-spark-cluster":{},"archive/tutorial/geospark-core-python/#apache-spark":{},"archive/tutorial/geospark-sql-python/#apache-spark":{},"asf/asf/#apache-software-foundation":{},"community/rule/#contributing-to-apache-sedona":{},"setup/cluster/#set-up-your-apache-spark-cluster":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{},"setup/modules/#sedona-modules-for-apache-spark":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/zeppelin/":{}}}],["apache.sedona",{"_index":3510,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["apache.sedona::sedona_read_geojson",{"_index":3911,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["apache.sedona::sedona_read_wkb",{"_index":3910,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["apache.sedona::sedona_read_wkt",{"_index":3909,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["apache.sedona::sedona_render_choropleth_map",{"_index":4027,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["apache.sedona::sedona_render_heatmap",{"_index":4026,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["apache.sedona::sedona_render_scatter_plot",{"_index":4025,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["apache.sedona_*.tar.gz",{"_index":3281,"text":{"community/publish/":{},"community/publish/#release-the-package":{}},"title":{}}],["api",{"_index":27,"text":{"":{},"api/java-api/":{},"api/viz/java-api/":{},"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#visualize-spatialrdd":{},"setup/databricks/":{},"setup/flink/modules/":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/release-notes/":{},"setup/release-notes/#flink_1":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#sedona-100":{},"setup/release-notes/#sedona-101":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sedona-viz":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"setup/release-notes/#viz_1":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/demo/":{},"tutorial/demo/#folder-structure":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/raster/":{},"tutorial/rdd/":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#range-query":{},"tutorial/viz/":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#visualize-spatialrdd":{}},"title":{"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"setup/flink/modules/#api-availability":{},"setup/modules/#api-availability":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{},"tutorial/raster/#api-docs":{}}}],["api.de/api/interpret",{"_index":3800,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["api/behavior",{"_index":3706,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-python":{}},"title":{}}],["api/sedonasql",{"_index":3941,"text":{"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["app",{"_index":455,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["append",{"_index":414,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"community/develop/":{},"setup/compile/":{},"setup/compile/#compile-with-different-targets":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["appli",{"_index":3945,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["applic",{"_index":882,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/core-python/":{},"tutorial/rdd-r/":{},"tutorial/sql-python/":{},"tutorial/sql-r/":{},"tutorial/viz-r/":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"archive/tutorial/geospark-core-python/#spatial-rdd-applications-in-python":{},"archive/tutorial/geospark-sql-python/#spatial-sql-application-in-python":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{},"tutorial/core-python/#spatial-rdd-applications-in-python":{},"tutorial/rdd-r/#spatial-rdd-applications-in-r-language":{},"tutorial/sql-python/#spatial-sql-application-in-python":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}}}],["appnam",{"_index":896,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["appname(\"overpass",{"_index":3773,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["approach",{"_index":1006,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["approv",{"_index":2901,"text":{"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["approxim",{"_index":1618,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}},"title":{}}],["approximatetotalcount",{"_index":1891,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}},"title":{}}],["approxmi",{"_index":1619,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["apr",{"_index":3390,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["apt",{"_index":3324,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{},"setup/compile/":{},"setup/compile/#run-python-test":{}},"title":{}}],["arcgi",{"_index":2688,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["architect",{"_index":3060,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["archiv",{"_index":78,"text":{"download/":{},"download/#past-releases":{},"setup/overview/":{},"setup/overview/#download-statistics":{}},"title":{}}],["area",{"_index":220,"text":{"api/flink/Function/":{},"api/flink/Function/#st_area":{},"api/sql/Function/":{},"api/sql/Function/#st_area":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_area":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["area[nam",{"_index":3803,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["areal",{"_index":271,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{},"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{}},"title":{}}],["arealandmark",{"_index":114,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_envelope_aggr":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{}},"title":{}}],["arealm",{"_index":3895,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["arealm.csv",{"_index":2752,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{}}],["argument",{"_index":634,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makevalid":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/tutorial/geospark-core-python/":{},"tutorial/core-python/":{}},"title":{}}],["arizona",{"_index":2827,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"community/publication/":{},"community/publication/#publication":{}},"title":{}}],["armor",{"_index":3199,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["around",{"_index":1516,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["arrang",{"_index":2980,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["array",{"_index":575,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_array":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_normalize":{},"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"tutorial/core-python/":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["array<geometri",{"_index":578,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_makepolygon":{}},"title":{}}],["array[doubl",{"_index":1031,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_divide":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_logicalover":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_modulo":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/sql/Raster-operators/#rs_squareroot":{},"api/sql/Raster-operators/#rs_subtract":{}},"title":{}}],["array[int",{"_index":1114,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{}},"title":{}}],["arrayindexoutofboundsexcept",{"_index":1421,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["arrays_zip",{"_index":3823,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["arrays_zip(\"elements.id",{"_index":3843,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["arrays_zip(\"geom.lat",{"_index":3863,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["arraytyp",{"_index":3761,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["articl",{"_index":1354,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["artifact",{"_index":1847,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{},"setup/compile/":{},"setup/compile/#download-staged-jars":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{}},"title":{}}],["artifactid",{"_index":1314,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-113-and-earlier":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["artifactid>apache</artifactid",{"_index":3029,"text":{"community/develop/":{}},"title":{}}],["asc",{"_index":75,"text":{"community/publish/":{},"download/":{},"download/#120-incubating":{},"download/#121-incubating":{}},"title":{}}],["ascii",{"_index":521,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["asf",{"_index":70,"text":{"asf/asf/":{},"asf/asf/#apache-software-foundation":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"community/contributor/#committer-done-template":{},"community/contributor/#create-asf-account":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#publish-maven-snapshots":{},"community/publish/#publish-the-doc-website":{},"community/publish/#set-up-asf-username-for-maven":{},"community/publish/#upload-release-candidate":{},"community/rule/":{},"community/rule/#code-of-conduct":{},"download/":{},"download/#120-incubating":{},"download/#121-incubating":{}},"title":{"community/contributor/#create-asf-account":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#set-up-asf-username-for-maven":{}}}],["asf_id",{"_index":3139,"text":{"community/publish/":{},"community/publish/#set-up-asf-username-for-maven":{}},"title":{}}],["asf_password",{"_index":3140,"text":{"community/publish/":{},"community/publish/#set-up-asf-username-for-maven":{}},"title":{}}],["asinstanceof",{"_index":2565,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{}},"title":{}}],["ask",{"_index":1934,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/develop/":{},"setup/release-notes/":{},"setup/release-notes/#known-issue":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{"archive/tutorial/faq/":{}}}],["assembl",{"_index":1487,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/release-notes/":{},"setup/release-notes/#v112":{},"tutorial/demo/":{},"tutorial/demo/#compile":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["assign",{"_index":2718,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#colorize-pixels_1":{},"tutorial/viz/":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#colorize-pixels_1":{}},"title":{}}],["associ",{"_index":1906,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["assum",{"_index":507,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["atm",{"_index":2177,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["attach",{"_index":3539,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["attitud",{"_index":2878,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{}},"title":{}}],["attr",{"_index":3500,"text":{"setup/install-python/":{}},"title":{}}],["attribut",{"_index":971,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v081-geospark-core":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{}}}],["atualizar",{"_index":3854,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["authent",{"_index":3007,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{}},"title":{}}],["author",{"_index":3057,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["autocorrel",{"_index":1907,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["automat",{"_index":54,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/publish/":{},"community/publish/#publish-the-doc-website":{},"community/publish/#release-the-package":{},"community/rule/":{},"community/rule/#pick-annouce-a-task-using-jira":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"download/":{},"download/#github-repository":{},"setup/compile/":{},"setup/compile/#compile-the-documentation":{},"setup/compile/#download-staged-jars":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v120":{}},"title":{"archive/download/scalashell/#download-geospark-jar-automatically":{},"setup/install-scala/#download-sedona-jar-automatically":{}}}],["avail",{"_index":28,"text":{"":{},"api/python-api/":{},"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/GeoSpark-Python-API/":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/project/":{},"archive/download/project/#quick-start":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#join-query":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/flink/modules/":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/modules/":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/flink/sql/":{},"tutorial/raster/":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#join-query":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/viz/":{}},"title":{"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{},"setup/flink/modules/#api-availability":{},"setup/modules/#api-availability":{}}}],["averag",{"_index":3955,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["avoid",{"_index":1592,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{}},"title":{}}],["avshalom",{"_index":1450,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["awar",{"_index":1916,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{}},"title":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{}}}],["awat",{"_index":2339,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["awt",{"_index":1224,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{}},"title":{}}],["axi",{"_index":297,"text":{"api/flink/Function/":{},"api/flink/Function/#st_flipcoordinates":{},"api/sql/Function/":{},"api/sql/Function/#st_flipcoordinates":{},"api/viz/sql/":{},"api/viz/sql/#st_tilename":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{}},"title":{}}],["azimuth",{"_index":246,"text":{"api/flink/Function/":{},"api/flink/Function/#st_azimuth":{},"api/sql/Function/":{},"api/sql/Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{}},"title":{}}],["a|1477895811|10447360|+41.9158651",{"_index":2627,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["a|2169240202|22877180|+40.7835474",{"_index":2641,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["a|6015539696|29159492|+34.3592729",{"_index":2635,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["b",{"_index":215,"text":{"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_distance":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_distance":{},"api/sql/Function/#st_intersection":{},"api/sql/Function/#st_symdifference":{},"api/sql/Function/#st_union":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#range-join":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Predicate/#st_overlaps":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{}},"title":{}}],["b:color",{"_index":1254,"text":{"api/viz/sql/":{},"api/viz/sql/#st_render":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_render":{}},"title":{}}],["b:geometri",{"_index":217,"text":{"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_distance":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_distance":{},"api/sql/Function/#st_intersection":{},"api/sql/Function/#st_symdifference":{},"api/sql/Function/#st_union":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_overlaps":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{}},"title":{}}],["b:int",{"_index":720,"text":{"api/sql/Function/":{},"api/sql/Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{}},"title":{}}],["b:integ",{"_index":375,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointn":{}},"title":{}}],["babylon",{"_index":1327,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v100":{}},"title":{}}],["babylonimagegener",{"_index":1708,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{}},"title":{}}],["baca",{"_index":2607,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["back",{"_index":1688,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/rdd/":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{}},"title":{}}],["background",{"_index":2745,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["backward",{"_index":372,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointn":{},"api/sql/Function/":{},"api/sql/Function/#st_pointn":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{}},"title":{}}],["baixo",{"_index":3856,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["balanc",{"_index":1565,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["band",{"_index":979,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_modulo":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"api/sql/Raster-operators/#rs_normalize":{},"api/sql/Raster-operators/#rs_squareroot":{},"api/sql/Raster-operators/#rs_subtract":{},"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["band1",{"_index":1038,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_divide":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_logicalover":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/sql/Raster-operators/#rs_subtract":{}},"title":{}}],["band2",{"_index":1039,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_divide":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_logicalover":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/sql/Raster-operators/#rs_subtract":{}},"title":{}}],["banddf",{"_index":1035,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{}},"title":{}}],["bands(band2",{"_index":1165,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_normalizeddifference":{}},"title":{}}],["baptist",{"_index":2863,"text":{"community/contributor/":{},"community/contributor/#mentors":{}},"title":{}}],["bar",{"_index":1995,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/rdd/":{}},"title":{}}],["base",{"_index":324,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geometryn":{},"api/sql/Function/":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_multi":{},"api/sql/Function/#st_subdivide":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#colorize-pixels":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#introduction":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#colorize-pixels":{}},"title":{"archive/tutorial/geospark-sql-python/#creating-spark-dataframe-based-on-shapely-objects":{},"tutorial/sql-python/#creating-spark-dataframe-based-on-shapely-objects":{}}}],["base64",{"_index":1027,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_html":{},"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{}},"title":{}}],["base_color",{"_index":4010,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["basegeometri",{"_index":2134,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["basestr",{"_index":1041,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{}},"title":{}}],["basic",{"_index":707,"text":{"api/sql/Function/":{},"api/sql/Function/#st_multi":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{}},"title":{}}],["batch",{"_index":2197,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["bdist_wheel",{"_index":3279,"text":{"community/publish/":{},"community/publish/#release-the-package":{}},"title":{}}],["be",{"_index":656,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linesubstring":{},"community/contributor/":{},"community/contributor/#pmc-annoucement":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{}},"title":{}}],["beak",{"_index":2321,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["beauti",{"_index":2679,"text":{"archive/tutorial/viz/":{},"tutorial/viz/":{}},"title":{}}],["becam",{"_index":2992,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["becom",{"_index":1635,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{"community/contributor/#become-a-committer":{}}}],["befor",{"_index":529,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/flink/install-scala/":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-scala/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#register-package":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["begin",{"_index":2599,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#initiate-stream-environment":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["behavior",{"_index":1437,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#v120":{}},"title":{}}],["behaviour",{"_index":688,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{}},"title":{}}],["behavoir",{"_index":2300,"text":{"archive/tutorial/rdd/":{}},"title":{"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{}}}],["behind",{"_index":2908,"text":{"community/contributor/":{}},"title":{}}],["belief",{"_index":2961,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["belong",{"_index":3400,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["below",{"_index":1014,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-from-pypi-repositories":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#read-from-other-geometry-files":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#installing-from-pypi-repositories":{},"community/develop/":{},"community/publish/":{},"community/publish/#compile-r-html-docs":{},"community/publish/#release-the-package":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{},"setup/databricks/":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-other-geometry-files":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["bench",{"_index":2207,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["benchmark",{"_index":1923,"text":{"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{}},"title":{"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{}}}],["besid",{"_index":1734,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/rdd/#range-query-window":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"tutorial/core-python/":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#range-query-window":{},"tutorial/rdd/":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/rdd/#range-query-window":{}},"title":{}}],["best",{"_index":1928,"text":{"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{}},"title":{}}],["better",{"_index":1905,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"community/contributor/":{},"community/contributor/#pmc-annoucement":{},"setup/databricks/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{}},"title":{}}],["between",{"_index":214,"text":{"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_distance":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_distance":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_symdifference":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/sql/":{},"archive/tutorial/zeppelin/":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v120":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/zeppelin/":{}},"title":{"archive/tutorial/sql/#convert-between-dataframe-and-spatialrdd":{},"tutorial/sql/#convert-between-dataframe-and-spatialrdd":{}}}],["beyond",{"_index":3042,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publication/#key-publications":{}},"title":{}}],["bg",{"_index":2336,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["bi",{"_index":1727,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["big",{"_index":1821,"text":{"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"setup/release-notes/":{},"setup/release-notes/#sedona-viz":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["bigdf",{"_index":277,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{}},"title":{}}],["billion",{"_index":2746,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["bin",{"_index":76,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{},"download/":{},"download/#120-incubating":{},"download/#121-incubating":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/install-python/":{},"setup/install-python/#setup-environment-variables":{}},"title":{}}],["bin.tar.gz",{"_index":3223,"text":{"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["bin.tar.gz.asc",{"_index":3231,"text":{"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["bin.tar.gz.sha512",{"_index":3227,"text":{"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["bin/bash",{"_index":3161,"text":{"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#compile-r-html-docs":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["bin/flink",{"_index":3713,"text":{"setup/flink/install-scala/":{}},"title":{}}],["bin/spark",{"_index":1796,"text":{"archive/download/project/":{},"archive/download/project/#quick-start":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/install-scala/#self-contained-spark-projects":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{}},"title":{}}],["binari",{"_index":56,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/flink/Function/":{},"api/flink/Function/#st_asbinary":{},"api/flink/Function/#st_asewkb":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromwkb":{},"api/sql/Function/":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"download/":{},"download/#120-incubating":{},"download/#121-incubating":{},"download/#github-repository":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/flink/platform/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/platform/":{},"setup/release-notes/":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["bind",{"_index":2914,"text":{"community/contributor/":{},"community/contributor/#close-a-vote":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"tutorial/raster/":{}},"title":{}}],["binder",{"_index":3719,"text":{"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{}},"title":{}}],["binford",{"_index":2822,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["bit",{"_index":3134,"text":{"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{}},"title":{}}],["bitwis",{"_index":1092,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{}},"title":{}}],["biwiseanddf",{"_index":1093,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_bitwiseand":{}},"title":{}}],["biwiseordf",{"_index":1097,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_bitwiseor":{}},"title":{}}],["blackband",{"_index":1033,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{}},"title":{}}],["blank",{"_index":1579,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v081-geospark-core":{}},"title":{}}],["blkgrpce",{"_index":2330,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["block",{"_index":3892,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{}},"title":{}}],["blocker",{"_index":3245,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["bloomberg",{"_index":2847,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["blue",{"_index":4019,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["board",{"_index":2906,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["bodi",{"_index":2924,"text":{"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{}},"title":{}}],["bolzano",{"_index":3109,"text":{"community/publication/":{},"community/publication/#geosparkviz-visualization-system":{}},"title":{}}],["bool",{"_index":2127,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{}},"title":{}}],["boolean",{"_index":415,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}},"title":{}}],["both",{"_index":926,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["bottom",{"_index":3234,"text":{"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["bound",{"_index":946,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#render-the-image":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#render-the-image":{}},"title":{}}],["boundari",{"_index":106,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_envelope_aggr":{},"api/flink/Function/":{},"api/flink/Function/#st_boundary":{},"api/flink/Function/#st_envelope":{},"api/flink/Function/#st_issimple":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/Function/":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_envelope":{},"api/sql/Function/#st_issimple":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_envelope":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#render-the-image":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["boundary:geometri",{"_index":1240,"text":{"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_pixelize":{}},"title":{}}],["boundaryenvelop",{"_index":2012,"text":{"archive/tutorial/geospark-core-python/":{},"tutorial/core-python/":{}},"title":{}}],["boundtabl",{"_index":2709,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#render-the-image":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["bozen",{"_index":3110,"text":{"community/publication/":{},"community/publication/#geosparkviz-visualization-system":{}},"title":{}}],["branch",{"_index":61,"text":{"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#publish-the-doc-website":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"download/":{},"download/#github-repository":{}},"title":{}}],["break",{"_index":3379,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["brew",{"_index":3129,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{},"community/publish/#prepare-secret-gpg-key":{},"community/vote/":{},"community/vote/#install-necessary-software":{}},"title":{}}],["bridg",{"_index":2731,"text":{"archive/tutorial/zeppelin/":{},"tutorial/zeppelin/":{}},"title":{}}],["brief",{"_index":3338,"text":{"community/rule/":{},"community/rule/#contributing-to-apache-sedona":{}},"title":{}}],["bring",{"_index":1867,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{}}],["broadcast",{"_index":827,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#sql_3":{}},"title":{"api/sql/Optimizer/#broadcast-join":{}}}],["broadcastindexjoin",{"_index":835,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["brought",{"_index":2671,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["brows",{"_index":4011,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["browser",{"_index":3179,"text":{"community/publish/":{},"community/publish/#update-mkdocsyml":{}},"title":{}}],["bsd",{"_index":1849,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{}},"title":{}}],["buffer",{"_index":268,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buffer":{},"api/sql/Function/":{},"api/sql/Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{}},"title":{}}],["bufferedimag",{"_index":1228,"text":{"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"api/viz/sql/#st_render":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/#st_render":{}},"title":{}}],["bug",{"_index":1350,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v130":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/contact/#community":{},"community/publish/":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"setup/release-notes/":{},"setup/release-notes/#core":{},"setup/release-notes/#core_1":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#python":{},"setup/release-notes/#python_1":{},"setup/release-notes/#rdd":{},"setup/release-notes/#sedona-100":{},"setup/release-notes/#sedona-101":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sedona-111":{},"setup/release-notes/#sedona-120":{},"setup/release-notes/#sedona-121":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#sql_1":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v081-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"setup/release-notes/#v130":{},"setup/release-notes/#v131":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{"community/contact/#bug-reports":{}}}],["build",{"_index":921,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"community/develop/":{},"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#key-publications":{},"community/publish/":{},"community/publish/#publish-the-doc-website":{},"community/publish/#release-the-package":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#make-a-pull-request":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v131":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#initiate-stream-environment":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["build.sbt",{"_index":886,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-1x-versions":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-2x-versions":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#package-the-project":{},"archive/download/project/#self-contained-spark-projects":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#set-up-dependencies":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#snapshot-versions":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#set-up-dependencies":{},"tutorial/rdd/":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql/":{},"tutorial/sql/#set-up-dependencies":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#buildsbt":{},"setup/maven-coordinates/#buildsbt":{}}}],["build_on_spatial_partitioned_rdd",{"_index":2039,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{}},"title":{}}],["builder",{"_index":889,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["buildindex",{"_index":2040,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{}},"title":{}}],["buildleft",{"_index":851,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["buildonspatialpartitionedrdd",{"_index":2579,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{}},"title":{}}],["buildright",{"_index":837,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["built",{"_index":942,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"community/publication/":{},"community/publication/#geosparkviz-visualization-system":{},"setup/compile/":{},"setup/compile/#compile-the-documentation":{},"setup/compile/#mkdocs-website":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes_2":{}},"title":{}}],["bursa",{"_index":406,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["busi",{"_index":2317,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["button",{"_index":3035,"text":{"community/develop/":{}},"title":{}}],["byte",{"_index":2092,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{}}],["c",{"_index":1483,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"setup/release-notes/":{},"setup/release-notes/#v112":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["c.county_cod",{"_index":2184,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["c.geometri",{"_index":2188,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["c1",{"_index":593,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{}},"title":{}}],["c2",{"_index":594,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{}},"title":{}}],["c:integ",{"_index":1255,"text":{"api/viz/sql/":{},"api/viz/sql/#st_render":{}},"title":{}}],["cach",{"_index":1669,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}},"title":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}}}],["calcul",{"_index":460,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#knn-query":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#knn-query":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#knn-query":{}},"title":{}}],["call",{"_index":92,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/java-api/":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/viz/java-api/":{},"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/download/zeppelin/#create-helium-folder-optional":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"community/contributor/":{},"community/contributor/#nominate-a-committer-or-pmc-member":{},"community/publication/":{},"community/publication/#publication":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v081-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"setup/zeppelin/#create-helium-folder-optional":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/flink/sql/":{},"tutorial/rdd/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql/":{}},"title":{"community/contributor/#call-for-a-vote":{}}}],["camp_sit",{"_index":2217,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["camp_site|point",{"_index":2168,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["can't",{"_index":653,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{}},"title":{}}],["candid",{"_index":2904,"text":{"community/contributor/":{},"community/contributor/#close-a-vote":{},"community/publish/":{},"community/publish/#failed-vote":{},"community/publish/#upload-release-candidate":{}},"title":{"community/publish/#stage-the-release-candidate":{},"community/publish/#upload-release-candidate":{}}}],["can\u2019t",{"_index":3362,"text":{"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["capabl",{"_index":3533,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{}},"title":{}}],["care",{"_index":1871,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{}}],["carri",{"_index":1263,"text":{"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v120":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{}},"title":{}}],["carry_other_attribut",{"_index":1992,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{}},"title":{}}],["carryinputdata",{"_index":1885,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{}},"title":{}}],["carryotherattribut",{"_index":2017,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/core-python/":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["cartesian",{"_index":212,"text":{"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{}},"title":{}}],["cartograph",{"_index":4028,"text":{"tutorial/viz/":{}},"title":{}}],["case",{"_index":1012,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/viz/sql/":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/viz/sql/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#generate-a-single-image":{},"community/contact/":{},"community/contact/#community":{},"community/develop/":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#generate-a-single-image":{}},"title":{}}],["cast",{"_index":551,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{}}],["cast(_c1#1",{"_index":797,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{}},"title":{}}],["cast(_c1#22",{"_index":819,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{}},"title":{}}],["cast(_c1#23",{"_index":846,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["cast(_c1#32",{"_index":803,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{}},"title":{}}],["cast(_c1#49",{"_index":840,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["cast(_c2#2",{"_index":798,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{}},"title":{}}],["cast(_c2#24",{"_index":847,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["cast(_c3#25",{"_index":848,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["cast(_c3#3",{"_index":799,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{}},"title":{}}],["cat",{"_index":3381,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["catalog",{"_index":1500,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["categori",{"_index":3991,"text":{"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["caus",{"_index":3298,"text":{"community/publish/":{}},"title":{}}],["cc",{"_index":2922,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["cced",{"_index":3256,"text":{"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["cd",{"_index":3212,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{}}],["cell",{"_index":3473,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/databricks/#pure-sql-environment":{}},"title":{}}],["center",{"_index":703,"text":{"api/sql/Function/":{},"api/sql/Function/#st_minimumboundingradius":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"tutorial/core-python/":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/rdd/":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/rdd/#query-center-geometry":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/rdd/#query-center-geometry":{}}}],["central",{"_index":1309,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v111":{},"archive/download/overview/":{},"archive/download/overview/#direct-download":{},"archive/download/project/":{},"archive/download/project/#quick-start":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#set-up-dependencies":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#global_2":{},"setup/release-notes/#v110":{},"setup/release-notes/#v111":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#set-up-dependencies":{},"tutorial/rdd/":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql/":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz/":{},"tutorial/viz/#set-up-dependencies":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"setup/maven-coordinates/":{}}}],["centroid",{"_index":571,"text":{"api/sql/Function/":{},"api/sql/Function/#st_centroid":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_centroid":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_3":{}},"title":{}}],["certain",{"_index":786,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{}},"title":{}}],["certifi",{"_index":3398,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["chair",{"_index":2997,"text":{"community/contributor/":{},"community/contributor/#create-asf-account":{}},"title":{}}],["chalet",{"_index":2171,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["chanc",{"_index":2806,"text":{"community/contact/":{},"community/contact/#feature-requests":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{}},"title":{}}],["chang",{"_index":826,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#try-geospark-sql-functions":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"community/develop/":{},"community/publish/":{},"community/publish/#failed-vote":{},"community/publish/#update-mkdocsyml":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#develop-a-document-contribution":{},"community/rule/#review-a-pull-request":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#global_3":{},"setup/release-notes/#sedona-100":{},"setup/release-notes/#sedona-101":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sedona-viz":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v120":{},"setup/release-notes/#viz_1":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{}}}],["channel",{"_index":4015,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["charact",{"_index":522,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/tutorial/rdd/":{},"setup/release-notes/":{},"setup/release-notes/#v110":{},"tutorial/rdd/":{}},"title":{}}],["charg",{"_index":2819,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["charset",{"_index":3334,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{}},"title":{}}],["chat",{"_index":2790,"text":{"community/contact/":{}},"title":{"community/contact/#gitter-chat":{}}}],["check",{"_index":464,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/publish/#publish-the-doc-website":{},"community/publish/#release-the-package":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/rule/":{},"community/rule/#make-a-pull-request":{},"community/vote/":{},"community/vote/#check-files-manually":{},"community/vote/#install-necessary-software":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/vote/#check-files-manually":{}}}],["checkin",{"_index":2316,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["checkin.csv",{"_index":1990,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/rdd/":{}},"title":{}}],["checkin.tsv",{"_index":2305,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["checkinshape.csv",{"_index":2289,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["checklist",{"_index":3243,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{}},"title":{}}],["checksum",{"_index":71,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"community/vote/#vote-a-sedona-release":{},"download/":{},"download/#120-incubating":{},"download/#121-incubating":{}},"title":{}}],["cherri",{"_index":3460,"text":{"setup/databricks/":{}},"title":{}}],["cheung",{"_index":2857,"text":{"community/contributor/":{},"community/contributor/#mentors":{}},"title":{}}],["chines",{"_index":1513,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["chmod",{"_index":3375,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["choic",{"_index":2581,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{}},"title":{}}],["choos",{"_index":1605,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"community/contact/":{},"community/contact/#community":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/develop/":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{}},"title":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}}}],["choropleth",{"_index":4024,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["chowdhuri",{"_index":2826,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["circl",{"_index":698,"text":{"api/sql/Function/":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{}},"title":{}}],["circle_rdd",{"_index":2079,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{}},"title":{}}],["circlerdd",{"_index":1944,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{}},"title":{}}],["circular",{"_index":368,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointn":{},"api/sql/Function/":{},"api/sql/Function/#st_pointn":{}},"title":{}}],["circularstring(1",{"_index":376,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointn":{}},"title":{}}],["cite",{"_index":3047,"text":{"community/publication/":{},"community/publication/#key-publications":{}},"title":{}}],["citi",{"_index":2588,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{}},"title":{}}],["ck",{"_index":2583,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-spatial-knn-query":{}},"title":{}}],["cla",{"_index":2970,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["claim",{"_index":3363,"text":{"community/rule/":{},"community/rule/#code-of-conduct":{}},"title":{}}],["class",{"_index":1530,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global_3":{},"setup/release-notes/#v100":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{}}}],["class='fa",{"_index":1851,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{}},"title":{}}],["classic",{"_index":2685,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["classof",{"_index":1289,"text":{"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["classpath",{"_index":1383,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["claus",{"_index":859,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{}},"title":{}}],["clean",{"_index":1773,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"community/develop/":{},"community/publish/":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-with-different-targets":{}},"title":{}}],["click",{"_index":3032,"text":{"community/develop/":{},"community/publish/":{},"setup/compile/":{},"setup/compile/#download-staged-jars":{},"setup/install-python/":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{}},"title":{}}],["client",{"_index":1230,"text":{"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["clone",{"_index":1767,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-manually":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{}}],["close",{"_index":205,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_makepolygon":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"community/contributor/":{},"community/contributor/#close-a-vote":{},"community/contributor/#nominate-a-committer-or-pmc-member":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{}},"title":{"community/contributor/#close-a-vote":{}}}],["closest",{"_index":2057,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-spatial-knn-query":{}},"title":{}}],["closur",{"_index":258,"text":{"api/flink/Function/":{},"api/flink/Function/#st_boundary":{},"api/sql/Function/":{},"api/sql/Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{}},"title":{}}],["cluser",{"_index":1722,"text":{},"title":{"archive/download/cluster/":{},"setup/cluster/":{}}}],["cluster",{"_index":1570,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/cluster/#start-your-cluster":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/cluster/#start-your-cluster":{},"setup/databricks/":{},"setup/databricks/#initialise":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/databricks/#pure-sql-environment":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/release-notes/":{},"setup/release-notes/#v082-geospark-core":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{"archive/download/cluster/#set-up-your-apache-spark-cluster":{},"archive/download/cluster/#start-your-cluster":{},"setup/cluster/#set-up-your-apache-spark-cluster":{},"setup/cluster/#start-your-cluster":{}}}],["cluster'",{"_index":3482,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["cmap",{"_index":2231,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["cmd",{"_index":3280,"text":{"community/publish/":{},"community/publish/#release-the-package":{}},"title":{}}],["co",{"_index":1900,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["coalesc",{"_index":1011,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["code",{"_index":51,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/overview/":{},"archive/download/overview/#direct-download":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/download/scalashell/#spark-scala-shell":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contact/":{},"community/contact/#community":{},"community/contributor/":{},"community/contributor/#committers":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#code-of-conduct":{},"community/rule/#contributing-to-apache-sedona":{},"community/rule/#develop-a-code-contribution":{},"community/rule/#develop-a-document-contribution":{},"community/vote/":{},"community/vote/#check-files-manually":{},"community/vote/#run-the-verify-script":{},"community/vote/#vote-a-sedona-release":{},"download/":{},"download/#120-incubating":{},"download/#121-incubating":{},"download/#github-repository":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#mkdocs-website":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#initialise":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#global":{},"setup/release-notes/#global_3":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#initiate-stream-environment":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#register-package":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#knn-query":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"community/publish/":{},"community/rule/#code-of-conduct":{},"community/rule/#develop-a-code-contribution":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-sedona-source-code":{}}}],["cogroup",{"_index":1599,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["col",{"_index":1380,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["col1",{"_index":3727,"text":{"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-spatial-range-query":{}},"title":{}}],["collabor",{"_index":3056,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["collaps",{"_index":680,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{}},"title":{}}],["collect",{"_index":586,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#rdd":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/sql-python/":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["collect_list(concat(p1.lat,',',p1.lon",{"_index":3871,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["coln",{"_index":3728,"text":{"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-spatial-range-query":{}},"title":{}}],["coloc",{"_index":3744,"text":{"tutorial/demo/":{},"tutorial/demo/#folder-structure":{}},"title":{}}],["color",{"_index":1195,"text":{"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"api/viz/sql/#st_render":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/api/viz/sql/#st_render":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#colorize-pixels_1":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#render-the-image":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#colorize-pixels_1":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#render-the-image":{}},"title":{"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#colorize-pixels_1":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#colorize-pixels_1":{}}}],["color_of_vari",{"_index":4022,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["column",{"_index":459,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#run-spatial-queries":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sql-for-spark":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#output-format":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#get-spatial-table":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#run-spatial-queries":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#range-query":{},"tutorial/sql/#run-spatial-queries":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#render-the-image":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"archive/tutorial/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/sql/#create-a-geometry-type-column":{}}}],["column/",{"_index":574,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collect":{}},"title":{}}],["com.fasterxml.jackson.cor",{"_index":3585,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#jts2geojson-0161":{}},"title":{}}],["combin",{"_index":2018,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#other-queries":{},"tutorial/core-python/":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/sql/":{},"tutorial/sql/#other-queries":{}},"title":{}}],["combinatori",{"_index":259,"text":{"api/flink/Function/":{},"api/flink/Function/#st_boundary":{},"api/sql/Function/":{},"api/sql/Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{}},"title":{}}],["come",{"_index":1936,"text":{"archive/tutorial/faq/":{},"community/develop/":{},"community/develop/#python-developers":{},"community/develop/#r-developers":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{}},"title":{}}],["comma",{"_index":3905,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["command",{"_index":1771,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-from-pypi-repositories":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installing-from-pypi-repositories":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#colorize-pixels_1":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"archive/tutorial/viz/#store-map-tiles-on-disk":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-with-different-targets":{},"setup/compile/#mkdocs-website":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-python/#setup-environment-variables":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#self-contained-spark-projects":{},"tutorial/demo/":{},"tutorial/demo/#compile":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/viz/":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#colorize-pixels_1":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#store-map-tiles-on-disk":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["commenc",{"_index":2903,"text":{"community/contributor/":{}},"title":{}}],["comment",{"_index":3025,"text":{"community/develop/":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["commerci",{"_index":3459,"text":{"setup/databricks/":{}},"title":{}}],["commit",{"_index":62,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"download/":{},"download/#github-repository":{},"setup/compile/":{},"setup/compile/#compile-the-documentation":{},"setup/compile/#download-staged-jars":{}},"title":{}}],["commit'",{"_index":3424,"text":{"setup/compile/":{},"setup/compile/#download-staged-jars":{}},"title":{}}],["committ",{"_index":2813,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#call-for-a-vote":{},"community/contributor/#committer-done-template":{},"community/contributor/#committers":{},"community/contributor/#nominate-a-committer-or-pmc-member":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#project-management-committee-pmc":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{"community/contributor/#become-a-committer":{},"community/contributor/#committer-done-template":{},"community/contributor/#committers":{},"community/contributor/#nominate-a-committer-or-pmc-member":{}}}],["committe",{"_index":2816,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#send-the-invitation":{}},"title":{"community/contributor/#project-management-committee-pmc":{}}}],["committership",{"_index":2959,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["common",{"_index":2558,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["commun",{"_index":2768,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contact/":{},"community/contact/#community":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#project-management-committee-pmc":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#code-of-conduct":{},"community/rule/#review-a-pull-request":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{},"setup/databricks/":{}},"title":{"community/contact/":{},"community/contact/#community":{},"setup/databricks/#community-edition-free-tier":{}}}],["compat",{"_index":1841,"text":{"archive/download/zeppelin/":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#rdd":{},"setup/zeppelin/":{}},"title":{"archive/download/zeppelin/#compatibility":{},"setup/zeppelin/#compatibility":{}}}],["compil",{"_index":1639,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/overview/":{},"archive/download/overview/#direct-download":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"community/develop/":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"community/publish/":{},"community/publish/#update-mkdocsyml":{},"community/rule/":{},"community/rule/#develop-a-document-contribution":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"community/vote/#vote-a-sedona-release":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#mkdocs-website":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/flink/install-scala/":{},"setup/flink/platform/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"setup/release-notes/#sedona-121":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#v01-v07":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{}},"title":{"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/project/#submit-the-compiled-jar":{},"community/publish/#compile-r-html-docs":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-sedona-source-code":{},"setup/compile/#compile-the-documentation":{},"setup/compile/#compile-with-different-targets":{},"tutorial/demo/#compile":{},"tutorial/demo/#compile-and-package":{}}}],["complain",{"_index":1917,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{}},"title":{}}],["complet",{"_index":1595,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"community/rule/":{},"community/rule/#contributing-to-apache-sedona":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["complex",{"_index":1597,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/project/":{},"archive/download/project/#select-an-ide":{},"archive/download/project/#self-contained-spark-projects":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"community/develop/":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/overview/":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{}},"title":{"setup/overview/#complex-spatial-objects":{}}}],["compon",{"_index":607,"text":{"api/sql/Function/":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["compos",{"_index":2574,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{}},"title":{}}],["compress",{"_index":1545,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["comput",{"_index":2690,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"tutorial/viz/":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["concaten",{"_index":4100,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["concept",{"_index":1550,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["concret",{"_index":2804,"text":{"community/contact/":{},"community/contact/#feature-requests":{}},"title":{}}],["conduct",{"_index":2994,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/rule/":{},"community/rule/#code-of-conduct":{}},"title":{"community/rule/#code-of-conduct":{}}}],["conf",{"_index":1984,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/release-notes/":{},"setup/release-notes/#python":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-python/":{},"tutorial/sql-python/#register-package":{},"tutorial/sql/":{},"tutorial/sql/#register-sedonasql":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{}}],["conf/slav",{"_index":1733,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["conf/spark",{"_index":1736,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["confer",{"_index":3091,"text":{"community/publication/":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#geosparkviz-visualization-system":{}},"title":{}}],["config",{"_index":890,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["config(\"spark.driver.maxresults",{"_index":3779,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["config(\"spark.executor.memori",{"_index":3777,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["config(\"spark.jars.packag",{"_index":3793,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["config(\"spark.kryo.registr",{"_index":3791,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["config(\"spark.seri",{"_index":3790,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["config(\"spark.sql.execution.arrow.fallback.en",{"_index":3787,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["config(\"spark.sql.execution.arrow.pyspark.en",{"_index":3786,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["config(\"spark.sql.shuffle.partit",{"_index":3781,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["config('spark.kryoserializer.buffer.max",{"_index":3788,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["config('spark.sql.adaptive.coalescepartitions.initialpartitionnum",{"_index":3785,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["config('spark.sql.adaptive.en",{"_index":3784,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["configur",{"_index":908,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v111":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/develop/":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/release-notes/":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#python":{},"setup/release-notes/#v111":{},"tutorial/demo/":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/python-vector-osm/":{}},"title":{"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}}}],["confirm",{"_index":3340,"text":{"community/rule/":{},"community/rule/#pick-annouce-a-task-using-jira":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["conflict",{"_index":1430,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#v110":{},"setup/release-notes/#v120":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{}},"title":{}}],["conjunct",{"_index":3516,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["conneciton",{"_index":3541,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["connect",{"_index":1446,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"tutorial/python-vector-osm/":{}},"title":{"setup/install-r/#connect-to-spark":{},"tutorial/python-vector-osm/#connecting-spark-sedona-with-saved-hdfs-file":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}}}],["consensu",{"_index":2900,"text":{"community/contributor/":{},"community/contributor/#call-for-a-vote":{}},"title":{}}],["consid",{"_index":807,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/viz/sql/":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/viz/sql/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{}},"title":{}}],["consider_boundary_intersect",{"_index":2030,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{}},"title":{}}],["considerar",{"_index":3857,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["considerboundaryintersect",{"_index":1658,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["consist",{"_index":613,"text":{"api/sql/Function/":{},"api/sql/Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["consolid",{"_index":3613,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["constant",{"_index":4111,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-row-objects":{}},"title":{}}],["constitu",{"_index":273,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{},"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{}},"title":{}}],["constrcutor",{"_index":1685,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["construct",{"_index":135,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeojson":{},"api/flink/Constructor/#st_geomfromgml":{},"api/flink/Constructor/#st_geomfromkml":{},"api/flink/Constructor/#st_geomfromtext":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/flink/Constructor/#st_geomfromwkt":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Constructor/#st_point":{},"api/flink/Constructor/#st_pointfromtext":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Constructor/#st_geomfromgml":{},"api/sql/Constructor/#st_geomfromkml":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_point":{},"api/sql/Constructor/#st_pointfromtext":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/#st_polygonfromtext":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#send-the-invitation":{},"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["constructor",{"_index":121,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#range-query":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v081-geospark-core":{},"setup/release-notes/#v112":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#range-query":{}},"title":{"api/flink/Constructor/":{},"api/sql/Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}}}],["consult",{"_index":3755,"text":{"tutorial/python-vector-osm/":{}},"title":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}}}],["consumpt",{"_index":1983,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{}},"title":{}}],["contact",{"_index":3417,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["contain",{"_index":466,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Function/":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_within":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#self-contained-spark-projects":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#render-the-image":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/demo/":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/viz/":{},"tutorial/viz/#render-the-image":{}},"title":{"archive/download/project/":{},"archive/download/project/#self-contained-spark-projects":{},"setup/install-scala/#self-contained-spark-projects":{}}}],["containsnul",{"_index":956,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["content",{"_index":1846,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"community/publish/":{},"community/publish/#publish-the-doc-website":{},"community/publish/#set-up-asf-username-for-maven":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{}},"title":{}}],["content/org/apache/sedona/sedona",{"_index":3307,"text":{"community/publish/":{}},"title":{}}],["context",{"_index":1584,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["contin",{"_index":3970,"text":{"tutorial/sql/":{},"tutorial/sql/#load-geoparquet":{}},"title":{}}],["continu",{"_index":2947,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{}},"title":{}}],["contribut",{"_index":2786,"text":{"community/contact/":{},"community/contact/#community":{},"community/contact/#mailing-list":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#committers":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/rule/":{},"community/rule/#contributing-to-apache-sedona":{},"community/rule/#develop-a-code-contribution":{},"community/rule/#develop-a-document-contribution":{},"community/rule/#make-a-pull-request":{},"community/rule/#pick-annouce-a-task-using-jira":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{}},"title":{"community/rule/#contributing-to-apache-sedona":{},"community/rule/#develop-a-code-contribution":{},"community/rule/#develop-a-document-contribution":{}}}],["contributor",{"_index":1385,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#committers":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{}},"title":{}}],["control",{"_index":821,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#v082-geospark-core":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["conver",{"_index":2710,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["convers",{"_index":3587,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#snapshot-versions":{},"setup/release-notes/":{},"setup/release-notes/#flink_1":{}},"title":{}}],["convert",{"_index":670,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_makevalid":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#load-shapefile-and-geojson":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#load-shapefile-and-geojson":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"archive/tutorial/sql/#convert-between-dataframe-and-spatialrdd":{},"tutorial/flink/sql/#convert-spatial-datastream-to-spatial-table":{},"tutorial/flink/sql/#convert-spatial-table-to-spatial-datastream":{},"tutorial/sql/#convert-between-dataframe-and-spatialrdd":{}}}],["convex",{"_index":597,"text":{"api/sql/Function/":{},"api/sql/Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{}},"title":{}}],["coordiant",{"_index":2713,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["coordin",{"_index":303,"text":{"api/flink/Function/":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_transform":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/flink/Function/#st_z":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/Function/":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_transform":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/sql/Function/#st_z":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/viz/sql/":{},"api/viz/sql/#st_tilename":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/project/":{},"archive/download/project/#quick-start":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#set-up-dependencies":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/overview/":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/release-notes/":{},"setup/release-notes/#sql":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v101":{},"setup/release-notes/#v110":{},"setup/release-notes/#v120":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#set-up-dependencies":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/sql/":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#set-up-dependencies":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#maven-coordinates":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}}}],["coordinates_tb",{"_index":3870,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["coordinates_tb.createorreplacetempview(\"coordinates_tb",{"_index":3882,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["coordinates_tb.show(5",{"_index":3883,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["copi",{"_index":1957,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"community/publish/":{},"community/publish/#publish-the-doc-website":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-python/#setup-environment-variables":{}},"title":{}}],["copyright",{"_index":3158,"text":{"community/publish/":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{}},"title":{"community/publish/#check-asf-copyright-in-all-file-headers":{}}}],["core",{"_index":884,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/scalashell/":{},"archive/download/scalashell/#spark-scala-shell":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#compatibility":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#set-up-dependencies":{},"community/publication/":{},"community/publication/#key-publications":{},"community/publication/#third-party-evaluation":{},"community/publish/":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/flink/modules/":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#v100":{},"setup/release-notes/#v101":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"setup/zeppelin/":{},"setup/zeppelin/#compatibility":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql/":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz/":{},"tutorial/viz/#set-up-dependencies":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core_1":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{},"setup/release-notes/#core":{},"setup/release-notes/#core_1":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v081-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v091-geospark-core":{}}}],["core/rdd",{"_index":3590,"text":{"setup/modules/":{},"setup/modules/#api-availability":{}},"title":{}}],["core:1.18.0",{"_index":3549,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["corner",{"_index":4109,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{}},"title":{}}],["corpor",{"_index":2971,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["correct",{"_index":3192,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"community/rule/#make-a-pull-request":{},"community/rule/#review-a-pull-request":{},"community/vote/":{},"community/vote/#check-files-manually":{},"community/vote/#run-the-verify-script":{},"community/vote/#vote-a-sedona-release":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{}},"title":{}}],["correctli",{"_index":3908,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["correspond",{"_index":1013,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/tutorial/rdd/":{},"community/publish/":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["costli",{"_index":3731,"text":{"tutorial/core-python/":{},"tutorial/core-python/#write-a-distance-join-query":{}},"title":{}}],["count",{"_index":371,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointn":{},"api/sql/Function/":{},"api/sql/Function/#st_pointn":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_count":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{}},"title":{}}],["countdf",{"_index":1100,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_count":{}},"title":{}}],["counti",{"_index":2004,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/core-python/":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#range-query":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#range-query":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["counties.csv",{"_index":2149,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["counties_geom",{"_index":2150,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["county.tsv",{"_index":2603,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["county_cod",{"_index":2151,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["county_code#230",{"_index":2189,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["county_code#230,geom#232",{"_index":2196,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["county_code|fclass",{"_index":2205,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["county_nam",{"_index":2008,"text":{"archive/tutorial/geospark-core-python/":{},"tutorial/core-python/":{}},"title":{}}],["countyfp",{"_index":2326,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["countynam",{"_index":2657,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#knn-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#knn-query":{},"tutorial/sql/":{},"tutorial/sql/#knn-query":{}},"title":{}}],["countyshap",{"_index":218,"text":{"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_area":{},"api/flink/Function/#st_asbinary":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_asgeojson":{},"api/flink/Function/#st_asgml":{},"api/flink/Function/#st_askml":{},"api/flink/Function/#st_astext":{},"api/flink/Function/#st_buffer":{},"api/flink/Function/#st_distance":{},"api/flink/Function/#st_envelope":{},"api/flink/Function/#st_isempty":{},"api/flink/Function/#st_issimple":{},"api/flink/Function/#st_isvalid":{},"api/flink/Function/#st_length":{},"api/flink/Function/#st_npoints":{},"api/flink/Function/#st_setsrid":{},"api/flink/Function/#st_srid":{},"api/flink/Function/#st_transform":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_area":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_asgeojson":{},"api/sql/Function/#st_asgml":{},"api/sql/Function/#st_askml":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_centroid":{},"api/sql/Function/#st_convexhull":{},"api/sql/Function/#st_distance":{},"api/sql/Function/#st_envelope":{},"api/sql/Function/#st_geometrytype":{},"api/sql/Function/#st_intersection":{},"api/sql/Function/#st_isempty":{},"api/sql/Function/#st_issimple":{},"api/sql/Function/#st_isvalid":{},"api/sql/Function/#st_length":{},"api/sql/Function/#st_npoints":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Function/#st_srid":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_area":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_centroid":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Function/#st_envelope":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_length":{},"archive/api/sql/GeoSparkSQL-Function/#st_npoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{}},"title":{}}],["countyshape|_c1|_c2",{"_index":2644,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{}},"title":{}}],["cover",{"_index":2032,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["covered/intersect",{"_index":2064,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_2":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_2":{},"tutorial/rdd/#write-a-spatial-join-query":{}},"title":{}}],["cp",{"_index":3215,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["cr",{"_index":968,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v081-geospark-core":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["cran",{"_index":29,"text":{"":{},"community/publish/":{},"community/publish/#release-the-package":{},"setup/overview/":{},"setup/overview/#download-statistics":{}},"title":{"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{}}}],["cran.r",{"_index":3511,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["crash",{"_index":2694,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["creat",{"_index":123,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_array":{},"api/sql/Raster-loader/#rs_base64":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/project/":{},"archive/download/project/#self-contained-spark-projects":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/download/zeppelin/#create-helium-folder-optional":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#run-spatial-queries":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#generate-map-tiles":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/contributor/":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#compile-r-html-docs":{},"community/publish/#release-the-package":{},"community/publish/#set-up-asf-username-for-maven":{},"community/publish/#upload-release-candidate":{},"community/rule/":{},"community/rule/#make-a-pull-request":{},"community/rule/#pick-annouce-a-task-using-jira":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/flink/install-scala/":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/release-notes/":{},"setup/release-notes/#sql":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"setup/zeppelin/#create-helium-folder-optional":{},"tutorial/core-python/":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#range-query-window":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#initiate-stream-environment":{},"tutorial/flink/sql/#run-spatial-queries":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#range-query":{},"tutorial/sql/#run-spatial-queries":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#generate-map-tiles":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#render-the-image":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"archive/download/zeppelin/#create-helium-folder-optional":{},"archive/tutorial/geospark-core-python/#create-a-spatialrdd":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-sql-python/#creating-spark-dataframe-based-on-shapely-objects":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/rdd/#create-a-spatialrdd":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#create-tile-name":{},"community/contributor/#create-asf-account":{},"setup/zeppelin/#create-helium-folder-optional":{},"tutorial/core-python/#create-a-spatialrdd":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/rdd/#create-a-spatialrdd":{},"tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/sql-python/#creating-spark-dataframe-based-on-shapely-objects":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#create-tile-name":{}}}],["createdatafram",{"_index":2166,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/geospark-sql-python/#polygon":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{},"tutorial/sql-python/#multipoint":{},"tutorial/sql-python/#multipolygon":{},"tutorial/sql-python/#point":{},"tutorial/sql-python/#polygon":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["createlinestr",{"_index":2578,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{}},"title":{}}],["createorreplacetempview",{"_index":493,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/core-python/":{},"tutorial/rdd/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#knn-query":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#range-query":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["createpoint",{"_index":2573,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#write-a-spatial-knn-query":{}},"title":{}}],["createpolygon",{"_index":2576,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{}},"title":{}}],["createtemporaryview",{"_index":4067,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{}},"title":{}}],["critic",{"_index":1466,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"setup/release-notes/":{},"setup/release-notes/#v113":{}},"title":{}}],["cross",{"_index":932,"text":{"api/sql/Predicate/":{},"api/sql/Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{}},"title":{}}],["crstransform",{"_index":1511,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#v110":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{}},"title":{}}],["crstransform(sourcecrscod",{"_index":3925,"text":{"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{}},"title":{}}],["csv",{"_index":538,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v120":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["csv/tsv",{"_index":2277,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["csv_point_input_loc",{"_index":2002,"text":{"archive/tutorial/geospark-core-python/":{},"tutorial/core-python/":{}},"title":{}}],["csvpointinputloc",{"_index":2551,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["cume",{"_index":2605,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["cumul",{"_index":1470,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"setup/release-notes/":{},"setup/release-notes/#v113":{}},"title":{}}],["curl",{"_index":3312,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["current",{"_index":907,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Parameter/#usage":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/download/scalashell/":{},"archive/download/scalashell/#spark-scala-shell":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#supported-versions":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#supported-versions":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#project-management-committee-pmc":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{},"setup/maven-coordinates/":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["curv",{"_index":1792,"text":{"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"setup/install-scala/":{}},"title":{}}],["custom",{"_index":1515,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v110":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["czf",{"_index":3210,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["d",{"_index":3164,"text":{"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{}},"title":{}}],["d299",{"_index":3413,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["d3bdfd4d870838ebe63f21cb93634d2421ec1ac1b8184636206a5dc0d89a78a88257798b1f17371ad3cfcc3b1eb79c69e1410afdefeb4d9b52fc8bb5ea18dd2",{"_index":3415,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["d627",{"_index":3405,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["danger",{"_index":2736,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["daqui",{"_index":3855,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["dargument",{"_index":3148,"text":{"community/publish/":{}},"title":{}}],["data",{"_index":31,"text":{"":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/geospark-sql-python/#polygon":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/publication/":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#geosparkviz-visualization-system":{},"community/publication/#key-publications":{},"community/publication/#publication":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/flink/modules/":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#core_1":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sedona-viz":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v120":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#output-format_3":{},"tutorial/demo/":{},"tutorial/demo/#folder-structure":{},"tutorial/flink/sql/":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{},"tutorial/raster/":{},"tutorial/raster/#api-docs":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql-pure-sql/#work-with-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{},"tutorial/sql-python/#multipoint":{},"tutorial/sql-python/#multipolygon":{},"tutorial/sql-python/#point":{},"tutorial/sql-python/#polygon":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#why-scalable-map-visualization":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{},"archive/tutorial/sql/#load-data-from-files":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/raster/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql-pure-sql/#work-with-data":{},"tutorial/sql/#load-data-from-files":{}}}],["data:im",{"_index":1070,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_html":{}},"title":{}}],["databas",{"_index":1557,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#geosparkviz-visualization-system":{},"community/publication/#third-party-evaluation":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["databrick",{"_index":3442,"text":{"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/databricks/#community-edition-free-tier":{},"setup/release-notes/":{},"setup/release-notes/#python":{}},"title":{"setup/databricks/":{}}}],["databricks/jar",{"_index":3494,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["dataedit",{"_index":1090,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{}},"title":{}}],["datafram",{"_index":479,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_divide":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_logicalover":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_modulo":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/sql/Raster-operators/#rs_squareroot":{},"api/sql/Raster-operators/#rs_subtract":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#load-shapefile-and-geojson":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v120":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/demo/":{},"tutorial/demo/#folder-structure":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/raster/":{},"tutorial/raster/#api-docs":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#introduction":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#load-shapefile-and-geojson":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#render-the-image":{},"tutorial/viz/#store-the-image-on-disk":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/tutorial/geospark-sql-python/#creating-spark-dataframe-based-on-shapely-objects":{},"archive/tutorial/sql/#convert-between-dataframe-and-spatialrdd":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"tutorial/sql-python/#creating-spark-dataframe-based-on-shapely-objects":{},"tutorial/sql/#convert-between-dataframe-and-spatialrdd":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/#create-spatial-dataframe":{}}}],["dataframe/rdd",{"_index":1186,"text":{"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"setup/overview/":{},"setup/overview/#rich-spatial-analytics-tools":{}},"title":{}}],["dataframe/sql",{"_index":1184,"text":{"setup/modules/":{},"setup/modules/#api-availability":{},"setup/overview/":{},"setup/overview/#distributed-spatial-datasets":{}},"title":{"api/viz/sql/":{},"archive/api/viz/sql/":{}}}],["dataset",{"_index":1617,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#generate-a-single-image":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/overview/":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/viz/":{},"tutorial/viz/#generate-a-single-image":{}},"title":{"setup/overview/#distributed-spatial-datasets":{}}}],["datasetboundari",{"_index":1890,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}},"title":{}}],["datastream",{"_index":3594,"text":{"setup/flink/modules/":{},"setup/flink/modules/#api-availability":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{},"setup/overview/":{},"setup/overview/#distributed-spatial-datasets":{},"setup/release-notes/":{},"setup/release-notes/#flink_1":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#get-datastream":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{"tutorial/flink/sql/#convert-spatial-datastream-to-spatial-table":{},"tutorial/flink/sql/#convert-spatial-table-to-spatial-datastream":{},"tutorial/flink/sql/#get-datastream":{}}}],["data|band",{"_index":982,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{}},"title":{}}],["date",{"_index":3419,"text":{"community/vote/":{},"community/vote/#check-files-manually":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["datetim",{"_index":3771,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["datum",{"_index":3693,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{}},"title":{}}],["dautoversionsubmodul",{"_index":3187,"text":{"community/publish/":{}},"title":{}}],["dautoversionsubmodules=tru",{"_index":3151,"text":{"community/publish/":{}},"title":{}}],["day",{"_index":2953,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["dbf",{"_index":505,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/tutorial/rdd/":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v081-geospark-core":{},"tutorial/rdd/":{}},"title":{}}],["dbfs/filestore/jars/sedona/1.2.1",{"_index":3475,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["dbfs/filestore/sedona",{"_index":3483,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["dbfs/filestore/sedona/sedona",{"_index":3484,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["dbfs:/filestore/sedona/sedona",{"_index":3495,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["dbl",{"_index":3958,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["dbplyr",{"_index":3952,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["dbr",{"_index":3446,"text":{"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/databricks/#install-sedona-from-the-web-ui":{}},"title":{"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}}}],["dcheckmodificationexcludelist=sql/src/main/scala/org/apache/sedona/sql/udf/udfregistrator.scala,sql/src/main/scala/org/apache/spark/sql/sedona_sql/strategy/join/joinquerydetector.scala,sql/src/main/scala/org/apache/spark/sql/sedona_sql/strategy/join/traitjoinqueryexec.scala",{"_index":3154,"text":{"community/publish/":{}},"title":{}}],["dconnectionurl=scm:git:https://github.com/apache/incub",{"_index":3195,"text":{"community/publish/":{}},"title":{}}],["ddryrun=tru",{"_index":3150,"text":{"community/publish/":{}},"title":{}}],["de",{"_index":2218,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["debat",{"_index":3353,"text":{"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["decim",{"_index":552,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_point":{},"api/sql/Function/":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_array":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{}}],["decimal(24,20",{"_index":796,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["decimal(24,20)),cast(inputtable._c1",{"_index":2554,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["decis",{"_index":2769,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["declar",{"_index":887,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#register-sedonasql":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{}}],["decreas",{"_index":1602,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["dedupparam",{"_index":3656,"text":{"setup/release-notes/":{},"setup/release-notes/#global_1":{}},"title":{}}],["default",{"_index":401,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_transform":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/databricks/":{},"setup/databricks/#community-edition-free-tier":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/sql/":{},"tutorial/sql/#load-geoparquet":{}},"title":{}}],["defaults.conf",{"_index":1737,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["defin",{"_index":963,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-python/":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql/":{},"tutorial/sql/#register-sedonasql":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{}}],["degre",{"_index":824,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{}},"title":{}}],["delet",{"_index":1549,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#upload-release-candidate":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["delimit",{"_index":170,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Constructor/#st_pointfromtext":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_pointfromtext":{},"api/sql/Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/core-python/":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["delimiter:char",{"_index":172,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Constructor/#st_pointfromtext":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_pointfromtext":{},"api/sql/Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{}},"title":{}}],["demo",{"_index":1815,"text":{"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/zeppelin/":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparkviz-visualization-system":{},"tutorial/zeppelin/":{}},"title":{"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}}}],["demonstr",{"_index":2750,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{}}],["dep",{"_index":3680,"text":{"setup/release-notes/":{},"setup/release-notes/#known-issue":{}},"title":{}}],["depend",{"_index":1311,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-1x-versions":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-2x-versions":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/download/project/#select-an-ide":{},"archive/download/project/#self-contained-spark-projects":{},"archive/download/zeppelin/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/viz/":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#global_2":{},"setup/release-notes/#global_3":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#python":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v131":{},"setup/zeppelin/":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#set-up-dependencies":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/raster/":{},"tutorial/raster/#initial-setup":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz/":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{"archive/download/zeppelin/#add-geospark-dependencies-in-zeppelin-spark-interpreter":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/viz/#set-up-dependencies":{},"setup/zeppelin/#add-sedona-dependencies-in-zeppelin-spark-interpreter":{},"tutorial/flink/sql/#set-up-dependencies":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz/#set-up-dependencies":{}}}],["deploy",{"_index":3153,"text":{"community/publish/":{}},"title":{}}],["deprec",{"_index":1665,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["desc",{"_index":2586,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#knn-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/sql/":{},"tutorial/sql/#knn-query":{}},"title":{}}],["describ",{"_index":1081,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{}},"title":{}}],["descript",{"_index":1844,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#colorize-pixels":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"tutorial/viz/":{},"tutorial/viz/#colorize-pixels":{}},"title":{"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{}}}],["deseri",{"_index":2133,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"setup/databricks/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["design",{"_index":2678,"text":{"archive/tutorial/viz/":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"tutorial/viz/":{}},"title":{}}],["desir",{"_index":1630,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["destination_path",{"_index":1004,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["detail",{"_index":423,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#join-query":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"community/contributor/":{},"community/contributor/#pmc-annoucement":{},"community/develop/":{},"community/develop/#python-developers":{},"community/develop/#r-developers":{},"community/publish/":{},"community/publish/#publish-maven-snapshots":{},"community/publish/#release-the-package":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"community/rule/#develop-a-document-contribution":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#join-query":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["determin",{"_index":2717,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{}},"title":{}}],["dev",{"_index":2879,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/publish/":{},"community/publish/#compile-r-html-docs":{},"community/publish/#upload-release-candidate":{},"setup/compile/":{},"setup/compile/#run-python-test":{}},"title":{"community/publish/#vote-in-dev-sedonaapacheorg":{}}}],["dev@sedona.apache.org",{"_index":2792,"text":{"community/contact/":{},"community/contact/#feature-requests":{},"community/contact/#mailing-list":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#pick-annouce-a-task-using-jira":{}},"title":{}}],["develop",{"_index":1498,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/project/":{},"archive/download/project/#select-an-ide":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/contact/#mailing-list":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/develop/":{},"community/rule/":{},"community/rule/#make-a-pull-request":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{"community/develop/":{},"community/develop/#develop-sedona":{},"community/develop/#python-developers":{},"community/develop/#r-developers":{},"community/develop/#scalajava-developers":{},"community/rule/#develop-a-code-contribution":{},"community/rule/#develop-a-document-contribution":{}}}],["df",{"_index":295,"text":{"api/flink/Function/":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_numgeometries":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_reverse":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/sql/Function/":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_linemerge":{},"api/sql/Function/#st_numgeometries":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_html":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-spark-sedona-with-saved-hdfs-file":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{},"tutorial/rdd/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql/":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#save-geoparquet":{}},"title":{}}],["df.createorreplacetempview(\"df",{"_index":3824,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["dfappend",{"_index":1088,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{}},"title":{}}],["dftowrit",{"_index":1002,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["dgeotool",{"_index":3422,"text":{"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-with-different-targets":{},"setup/compile/#run-python-test":{}},"title":{}}],["didn't",{"_index":3751,"text":{"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{}}],["differ",{"_index":545,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Function/":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_symdifference":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/viz/sql/":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/viz/sql/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#generate-map-tiles":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/compile/":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v112":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#generate-map-tiles":{}},"title":{"setup/compile/#compile-with-different-targets":{}}}],["differenceofofband",{"_index":1182,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_subtract":{}},"title":{}}],["dimens",{"_index":589,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"tutorial/viz/":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{}},"title":{}}],["dimension",{"_index":210,"text":{"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_force_2d":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_force_2d":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["dimenst",{"_index":1115,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{}},"title":{}}],["direct",{"_index":1728,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/overview/":{},"community/contributor/":{},"community/contributor/#pmc-annoucement":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{"archive/download/overview/#direct-download":{}}}],["directli",{"_index":868,"text":{"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/viz/sql/":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/viz/sql/":{},"archive/tutorial/sql/":{},"community/publish/":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"tutorial/flink/sql/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["director",{"_index":2943,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["directori",{"_index":944,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"community/develop/":{},"community/publish/":{},"community/publish/#compile-r-html-docs":{},"community/publish/#publish-the-doc-website":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["disabl",{"_index":411,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{}},"title":{}}],["disableerror",{"_index":418,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{}},"title":{}}],["disableerrorincr",{"_index":965,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{}},"title":{}}],["disapprov",{"_index":3242,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["disclaim",{"_index":2759,"text":{"asf/disclaimer/":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#check-files-manually":{},"community/vote/#vote-a-sedona-release":{}},"title":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{}}}],["discuss",{"_index":2893,"text":{"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["disjoint",{"_index":469,"text":{"api/flink/Predicate/":{},"api/flink/Predicate/#st_disjoint":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_disjoint":{}},"title":{}}],["disk",{"_index":1486,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v112":{},"tutorial/viz/":{},"tutorial/viz/#store-the-image-on-disk":{}},"title":{"archive/tutorial/viz/#store-map-tiles-on-disk":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"tutorial/viz/#store-map-tiles-on-disk":{},"tutorial/viz/#store-the-image-on-disk":{}}}],["display",{"_index":1857,"text":{"archive/download/zeppelin/":{},"setup/zeppelin/":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{"archive/download/zeppelin/#display-geosparkviz-results":{},"setup/zeppelin/#display-sedonaviz-results":{}}}],["dissect",{"_index":3113,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{}},"title":{}}],["dist",{"_index":3197,"text":{"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["dist/geospark",{"_index":1976,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-from-wheel-file":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installing-from-wheel-file":{}},"title":{}}],["distanc",{"_index":213,"text":{"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_buffer":{},"api/flink/Function/#st_distance":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_distance":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"setup/overview/":{},"setup/overview/#distributed-spatial-queries":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/sql/":{},"tutorial/sql/#knn-query":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-distance-join-query":{}}}],["distance'",{"_index":822,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{}},"title":{}}],["distancejoin",{"_index":813,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["distancejoinqueryflat",{"_index":2080,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{}},"title":{}}],["distancetoler",{"_index":730,"text":{"api/sql/Function/":{},"api/sql/Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{}},"title":{}}],["distinct",{"_index":2951,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["distort",{"_index":2715,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["distribut",{"_index":1010,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/download/cluster/":{},"archive/download/cluster/#set-up-your-apache-spark-cluster":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/download/scalashell/":{},"archive/download/scalashell/#spark-scala-shell":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#reload-a-saved-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#reload-a-saved-spatialrdd":{},"archive/tutorial/rdd/#save-an-spatialrdd-indexed":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"setup/cluster/":{},"setup/cluster/#set-up-your-apache-spark-cluster":{},"setup/flink/install-scala/":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{},"setup/overview/":{},"tutorial/core-python/":{},"tutorial/core-python/#reload-a-saved-spatialrdd":{},"tutorial/core-python/#save-an-spatialrdd-indexed":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#reload-a-saved-spatialrdd":{},"tutorial/rdd/#save-an-spatialrdd-indexed":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{"setup/overview/#distributed-spatial-datasets":{},"setup/overview/#distributed-spatial-queries":{}}}],["distriut",{"_index":3561,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["divid",{"_index":735,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_divide":{}},"title":{}}],["divideband",{"_index":1105,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_divide":{}},"title":{}}],["divis",{"_index":4033,"text":{"tutorial/viz/":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{}},"title":{}}],["do",{"_index":1693,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}},"title":{}}],["doc",{"_index":88,"text":{"api/r-api/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"community/publish/":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"tutorial/core-python/":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#range-query-window":{},"tutorial/raster/":{}},"title":{"api/java-api/":{},"api/python-api/":{},"api/r-api/":{},"archive/api/GeoSpark-Python-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/":{},"community/publish/#compile-r-html-docs":{},"community/publish/#publish-the-doc-website":{},"tutorial/raster/#api-docs":{}}}],["docs.r",{"_index":3331,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{}},"title":{}}],["docs/api/rdoc",{"_index":3329,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{}},"title":{}}],["document",{"_index":876,"text":{"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"community/contact/":{},"community/contact/#community":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/rule/":{},"community/rule/#contributing-to-apache-sedona":{},"community/rule/#develop-a-code-contribution":{},"community/rule/#develop-a-document-contribution":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{}},"title":{"archive/download/compile/#compile-the-documentation":{},"community/rule/#develop-a-document-contribution":{},"setup/compile/#compile-the-documentation":{}}}],["doesn't",{"_index":820,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"setup/release-notes/":{},"setup/release-notes/#v110":{},"setup/release-notes/#v120":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["domin",{"_index":929,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{}},"title":{}}],["don't",{"_index":1810,"text":{"archive/download/project/":{},"archive/download/project/#try-geospark-sql-functions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{}},"title":{}}],["done",{"_index":2560,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{}},"title":{"community/contributor/#committer-done-template":{}}}],["doubl",{"_index":269,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buffer":{},"api/sql/Function/":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_modulo":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/sql/":{},"tutorial/sql/#load-geoparquet":{}},"title":{}}],["doubletyp",{"_index":3760,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["down",{"_index":2740,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/contact/":{},"community/contact/#bug-reports":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["download",{"_index":46,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"archive/download/cluster/":{},"archive/download/cluster/#set-up-your-apache-spark-cluster":{},"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"archive/download/overview/":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#release-the-package":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#check-files-manually":{},"community/vote/#run-the-verify-script":{},"community/vote/#vote-a-sedona-release":{},"download/":{},"download/#120-incubating":{},"download/#121-incubating":{},"setup/cluster/":{},"setup/cluster/#set-up-your-apache-spark-cluster":{},"setup/compile/":{},"setup/compile/#compile-the-documentation":{},"setup/compile/#download-staged-jars":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#snapshot-versions":{},"setup/overview/":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/python-vector-osm/":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{"archive/download/overview/#direct-download":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"download/":{},"setup/compile/#download-staged-jars":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/overview/#download-statistics":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}}}],["download/checkin.csv",{"_index":2279,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["download/checkin.tsv",{"_index":2306,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["download/checkinshape.csv",{"_index":2290,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["download/myshapefil",{"_index":2550,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["download/polygon.json",{"_index":2323,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["download/usa",{"_index":2604,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["downloads/spark",{"_index":3509,"text":{"setup/install-python/":{},"setup/install-python/#setup-environment-variables":{}},"title":{}}],["dplyr",{"_index":3518,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["dresum",{"_index":3188,"text":{"community/publish/":{}},"title":{}}],["dresume=fals",{"_index":3152,"text":{"community/publish/":{}},"title":{}}],["driver",{"_index":1745,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["drop",{"_index":945,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"community/publish/":{},"community/publish/#failed-vote":{},"setup/release-notes/":{},"setup/release-notes/#sedona-viz":{},"setup/release-notes/#v120":{}},"title":{}}],["dropinvalid",{"_index":949,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["dscala",{"_index":3213,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["dscala=2.11",{"_index":3155,"text":{"community/publish/":{},"setup/compile/":{},"setup/compile/#compile-with-different-targets":{}},"title":{}}],["dscala=2.12",{"_index":3157,"text":{"community/publish/":{},"setup/compile/":{},"setup/compile/#compile-with-different-targets":{}},"title":{}}],["dskiptest",{"_index":1774,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"community/develop/":{},"community/publish/":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-with-different-targets":{}},"title":{}}],["dspark",{"_index":3214,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["dspark=2.4",{"_index":3156,"text":{"community/publish/":{},"setup/compile/":{},"setup/compile/#compile-with-different-targets":{}},"title":{}}],["dspark=3.0",{"_index":3423,"text":{"setup/compile/":{},"setup/compile/#compile-with-different-targets":{}},"title":{}}],["dtag=sedona",{"_index":3196,"text":{"community/publish/":{}},"title":{}}],["due",{"_index":1410,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v111":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v130":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"community/publish/":{},"setup/databricks/":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v111":{},"setup/release-notes/#v130":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{}},"title":{}}],["duplic",{"_index":1491,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v112":{}},"title":{}}],["durdev",{"_index":3488,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["dure",{"_index":1894,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}},"title":{}}],["e.g",{"_index":1264,"text":{"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["each",{"_index":59,"text":{"api/sql/Function/":{},"api/sql/Function/#st_dump":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#range-join":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_2":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"download/":{},"download/#github-repository":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-the-documentation":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v112":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/demo/":{},"tutorial/demo/#compile":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_2":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/viz/":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{}},"title":{}}],["earil",{"_index":3675,"text":{"setup/release-notes/":{},"setup/release-notes/#known-issue":{}},"title":{}}],["earlier",{"_index":1082,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-113-and-earlier":{}}}],["earth",{"_index":1645,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["earthdatahdfpointmapp",{"_index":1642,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["easi",{"_index":1787,"text":{"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/tutorial/rdd/":{},"setup/install-scala/":{},"tutorial/rdd/":{}},"title":{}}],["easier",{"_index":2999,"text":{"community/contributor/":{},"community/contributor/#pmc-annoucement":{}},"title":{}}],["easiest",{"_index":3345,"text":{"community/rule/":{},"community/rule/#make-a-pull-request":{}},"title":{}}],["easili",{"_index":2098,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#reload-a-saved-spatialrdd":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#reload-a-saved-spatialrdd":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"tutorial/core-python/":{},"tutorial/core-python/#reload-a-saved-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#reload-a-saved-spatialrdd":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["eclips",{"_index":1805,"text":{"archive/download/project/":{},"archive/download/project/#select-an-ide":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{}},"title":{}}],["ecosystem",{"_index":3046,"text":{"community/publication/":{},"community/publication/#geosparkviz-visualization-system":{},"community/publication/#key-publications":{}},"title":{"community/publication/#geospark-ecosystem":{}}}],["edgecolor",{"_index":2235,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["edit",{"_index":3033,"text":{"community/develop/":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{"setup/databricks/#advanced-editions":{},"setup/databricks/#community-edition-free-tier":{}}}],["effect",{"_index":2680,"text":{"archive/tutorial/viz/":{},"tutorial/viz/":{}},"title":{}}],["effici",{"_index":1506,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v110":{}},"title":{}}],["effort",{"_index":2760,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{}},"title":{}}],["eg",{"_index":627,"text":{"api/sql/Function/":{},"api/sql/Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{}},"title":{}}],["elect",{"_index":3019,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{}},"title":{}}],["element",{"_index":955,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["elements.geometri",{"_index":3844,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["elements.nod",{"_index":3845,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["elements.tag",{"_index":3846,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["elimin",{"_index":1551,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["email",{"_index":2810,"text":{"community/contact/":{},"community/contact/#feature-requests":{},"community/contributor/":{},"community/contributor/#close-a-vote":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{}},"title":{}}],["embarass",{"_index":2933,"text":{"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{}},"title":{}}],["embed",{"_index":1064,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_html":{}},"title":{}}],["empti",{"_index":350,"text":{"api/flink/Function/":{},"api/flink/Function/#st_isempty":{},"api/sql/Function/":{},"api/sql/Function/#st_isempty":{},"api/sql/Function/#st_linemerge":{},"api/sql/Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#sql":{},"setup/release-notes/#v112":{}},"title":{}}],["enabl",{"_index":1854,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#enable-geospark-zeppelin":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sql_2":{},"setup/zeppelin/":{},"setup/zeppelin/#enable-sedona-zeppelin":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{"archive/download/zeppelin/#enable-geospark-zeppelin":{},"setup/zeppelin/#enable-sedona-zeppelin":{}}}],["enabled></releas",{"_index":1344,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#pomxml":{}},"title":{}}],["enabled></snapshot",{"_index":1346,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#pomxml":{}},"title":{}}],["enablehivesupport",{"_index":3774,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["encapsul",{"_index":2696,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["encod",{"_index":525,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/tutorial/rdd/":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"tutorial/rdd/":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["encourag",{"_index":3354,"text":{"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["encrypt",{"_index":3201,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["end",{"_index":345,"text":{"api/flink/Function/":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_transform":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/tutorial/rdd/":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/contributor/":{},"community/contributor/#close-a-vote":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["endfract",{"_index":662,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linesubstring":{}},"title":{}}],["endors",{"_index":2776,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{}},"title":{}}],["enforc",{"_index":2885,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{}},"title":{}}],["engin",{"_index":3092,"text":{"community/publication/":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparkviz-visualization-system":{},"setup/release-notes/":{},"setup/release-notes/#sql_2":{}},"title":{}}],["enhanc",{"_index":1586,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"community/contact/":{},"community/contact/#feature-requests":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{}}],["enjoy",{"_index":1682,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#set-up-dependencies":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/rdd/":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql/":{},"tutorial/sql/#set-up-dependencies":{}},"title":{}}],["enough",{"_index":1744,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"community/contributor/":{},"community/contributor/#committers":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["ensur",{"_index":726,"text":{"api/sql/Function/":{},"api/sql/Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["enter",{"_index":1219,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/contact/#feature-requests":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{}},"title":{}}],["entir",{"_index":104,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_envelope_aggr":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"community/publication/":{},"community/publication/#key-publications":{},"community/publish/":{},"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["enumer",{"_index":1986,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{}},"title":{}}],["env",{"_index":3954,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#initiate-stream-environment":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["envelop",{"_index":105,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_envelope_aggr":{},"api/flink/Function/":{},"api/flink/Function/#st_envelope":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/Function/":{},"api/sql/Function/#st_envelope":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_envelope":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#range-query-window":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["environ",{"_index":1231,"text":{"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/flink/platform/":{},"setup/install-python/":{},"setup/install-python/#setup-environment-variables":{},"setup/install-scala/":{},"setup/install-scala/#spark-sql-shell":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{},"tutorial/flink/sql/":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/sql-pure-sql/":{}},"title":{"setup/databricks/#pure-sql-environment":{},"setup/install-python/#setup-environment-variables":{},"tutorial/flink/sql/#initiate-stream-environment":{}}}],["environmentset",{"_index":4040,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#initiate-stream-environment":{}},"title":{}}],["eof",{"_index":3486,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["epl",{"_index":3574,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{}},"title":{}}],["epsg",{"_index":424,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["epsg.io",{"_index":427,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["epsg:3857",{"_index":421,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["epsg:4326",{"_index":420,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["epsg:4499",{"_index":969,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{}},"title":{}}],["epsg:5070",{"_index":1999,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{}},"title":{}}],["equal",{"_index":267,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buffer":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/Function/":{},"api/sql/Function/#st_buffer":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_logicalover":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"setup/release-notes/":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql_3":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["equip",{"_index":2733,"text":{"archive/tutorial/zeppelin/":{},"tutorial/zeppelin/":{}},"title":{}}],["equival",{"_index":3644,"text":{"setup/release-notes/":{},"setup/release-notes/#sql":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["erni",{"_index":3487,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["error",{"_index":412,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"community/develop/":{},"community/publish/":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#python":{},"setup/release-notes/#rdd":{},"setup/release-notes/#v081-geospark-core":{}},"title":{}}],["especi",{"_index":1484,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"community/rule/":{},"community/rule/#code-of-conduct":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["esri",{"_index":477,"text":{"api/sql/Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{}}}],["essenti",{"_index":3994,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["establish",{"_index":3002,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{}},"title":{}}],["etc",{"_index":604,"text":{"api/sql/Function/":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-other-geometry-files":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-other-geometry-files":{}},"title":{}}],["euclidean",{"_index":288,"text":{"api/flink/Function/":{},"api/flink/Function/#st_distance":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Function/":{},"api/sql/Function/#st_distance":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{}},"title":{}}],["evalu",{"_index":857,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{"community/publication/#third-party-evaluation":{}}}],["even",{"_index":3355,"text":{"community/rule/":{},"community/rule/#review-a-pull-request":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["eventu",{"_index":2726,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#generate-map-tiles":{},"tutorial/viz/":{},"tutorial/viz/#generate-map-tiles":{}},"title":{}}],["everyon",{"_index":3348,"text":{"community/rule/":{},"community/rule/#code-of-conduct":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["everyth",{"_index":2984,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"setup/databricks/":{},"setup/databricks/#community-edition-free-tier":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/sql/":{},"tutorial/sql/#register-sedonasql":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{}}],["ewkb",{"_index":227,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkb":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{}},"title":{}}],["ewkt",{"_index":238,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkt":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkt":{}},"title":{}}],["ex",{"_index":1987,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#output-format_3":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["exactli",{"_index":997,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["examin",{"_index":3232,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{}},"title":{}}],["exampl",{"_index":111,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_envelope_aggr":{},"api/flink/Aggregator/#st_union_aggr":{},"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/flink/Constructor/#st_geomfromgeojson":{},"api/flink/Constructor/#st_geomfromgml":{},"api/flink/Constructor/#st_geomfromkml":{},"api/flink/Constructor/#st_geomfromtext":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/flink/Constructor/#st_geomfromwkt":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Constructor/#st_point":{},"api/flink/Constructor/#st_pointfromtext":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_area":{},"api/flink/Function/#st_asbinary":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_asgeojson":{},"api/flink/Function/#st_asgml":{},"api/flink/Function/#st_askml":{},"api/flink/Function/#st_astext":{},"api/flink/Function/#st_azimuth":{},"api/flink/Function/#st_boundary":{},"api/flink/Function/#st_buffer":{},"api/flink/Function/#st_buildarea":{},"api/flink/Function/#st_distance":{},"api/flink/Function/#st_envelope":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_geohash":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_isempty":{},"api/flink/Function/#st_isring":{},"api/flink/Function/#st_issimple":{},"api/flink/Function/#st_isvalid":{},"api/flink/Function/#st_length":{},"api/flink/Function/#st_npoints":{},"api/flink/Function/#st_numgeometries":{},"api/flink/Function/#st_numinteriorrings":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_reverse":{},"api/flink/Function/#st_setsrid":{},"api/flink/Function/#st_srid":{},"api/flink/Function/#st_transform":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/flink/Function/#st_z":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/AggregateFunction/#st_intersection_aggr":{},"api/sql/AggregateFunction/#st_union_aggr":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Constructor/#st_geomfromgml":{},"api/sql/Constructor/#st_geomfromkml":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_point":{},"api/sql/Constructor/#st_pointfromtext":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/#st_polygonfromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_area":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_asgeojson":{},"api/sql/Function/#st_asgml":{},"api/sql/Function/#st_askml":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_centroid":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_convexhull":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_distance":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_envelope":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_geohash":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_geometrytype":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_intersection":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isempty":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_issimple":{},"api/sql/Function/#st_isvalid":{},"api/sql/Function/#st_length":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"api/sql/Function/#st_multi":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_pointonsurface":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_srid":{},"api/sql/Function/#st_startpoint":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Function/#st_symdifference":{},"api/sql/Function/#st_transform":{},"api/sql/Function/#st_union":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/sql/Function/#st_z":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Predicate/#st_overlaps":{},"api/sql/Predicate/#st_within":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_array":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-loader/#rs_html":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_divide":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_logicalover":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_modulo":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"api/sql/Raster-operators/#rs_normalize":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/sql/Raster-operators/#rs_squareroot":{},"api/sql/Raster-operators/#rs_subtract":{},"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"api/viz/sql/#st_pixelize":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_area":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_centroid":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_envelope":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_length":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/#st_render":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#try-geospark-sql-functions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_1":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#visualize-spatialrdd":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/develop/":{},"community/rule/":{},"community/rule/#develop-a-document-contribution":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-python/#setup-environment-variables":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#snapshot-versions":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global_2":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v120":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_1":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/demo/":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/python-vector-osm/":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#work-with-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#introduction":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#range-query":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#visualize-spatialrdd":{}},"title":{"archive/tutorial/geospark-sql-python/#example-usage-for-shapely-objects":{},"archive/tutorial/geospark-sql-python/#examples":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/sql-python/#example-usage-for-shapely-objects":{},"tutorial/sql-python/#examples":{}}}],["examples/sql",{"_index":3931,"text":{"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{}},"title":{}}],["except",{"_index":405,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v110":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["exclud",{"_index":3580,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/release-notes/":{},"setup/release-notes/#rdd":{}},"title":{}}],["exclus",{"_index":3584,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#jts2geojson-0161":{}},"title":{}}],["execut",{"_index":458,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/scalashell/":{},"archive/download/scalashell/#spark-scala-shell":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{}},"title":{}}],["executor",{"_index":1968,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#installation":{},"tutorial/python-vector-osm/":{}},"title":{"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}}}],["exhibit",{"_index":2948,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["exist",{"_index":927,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/contributor/":{},"community/develop/":{},"community/publish/":{},"community/publish/#set-up-asf-username-for-maven":{},"community/rule/":{},"community/rule/#pick-annouce-a-task-using-jira":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["existingrdd[fclass#239,geometry#240",{"_index":2194,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["exmapl",{"_index":4030,"text":{"tutorial/viz/":{},"tutorial/viz/#visualize-spatialrdd":{}},"title":{}}],["expand",{"_index":603,"text":{"api/sql/Function/":{},"api/sql/Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{}},"title":{}}],["expect",{"_index":2881,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#send-the-invitation":{},"community/rule/":{},"community/rule/#code-of-conduct":{}},"title":{}}],["expertis",{"_index":2877,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{}},"title":{}}],["explain",{"_index":1355,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#colorize-pixels_1":{},"archive/tutorial/viz/#visualize-spatialrdd":{},"setup/release-notes/":{},"setup/release-notes/#v131":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/viz/":{},"tutorial/viz/#colorize-pixels_1":{},"tutorial/viz/#visualize-spatialrdd":{}},"title":{}}],["explan",{"_index":879,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/sql/Parameter/":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/project/":{},"archive/download/project/#quick-start":{},"community/rule/":{},"community/rule/#develop-a-document-contribution":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{}}}],["explicitli",{"_index":524,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["explod",{"_index":1237,"text":{"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["explode(\"elements.id",{"_index":3840,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["explode(\"new",{"_index":3847,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["export",{"_index":3427,"text":{"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/install-python/":{},"setup/install-python/#setup-environment-variables":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{}},"title":{}}],["expos",{"_index":1932,"text":{"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{}},"title":{}}],["expr",{"_index":832,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["express",{"_index":856,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["extend",{"_index":226,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"setup/install-python/":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["extens",{"_index":502,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"tutorial/rdd/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{}},"title":{}}],["exterior",{"_index":291,"text":{"api/flink/Function/":{},"api/flink/Function/#st_exteriorring":{},"api/sql/Function/":{},"api/sql/Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{}},"title":{}}],["exterior_p1",{"_index":2269,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"tutorial/sql-python/":{},"tutorial/sql-python/#multipolygon":{}},"title":{}}],["exterior_p2",{"_index":2272,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"tutorial/sql-python/":{},"tutorial/sql-python/#multipolygon":{}},"title":{}}],["extra",{"_index":1922,"text":{"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{}},"title":{}}],["extract",{"_index":1007,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["extractor",{"_index":3530,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["extrem",{"_index":2684,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["f",{"_index":2564,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{}},"title":{}}],["fa",{"_index":1852,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{}},"title":{}}],["facilit",{"_index":3893,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{}},"title":{}}],["fact",{"_index":2795,"text":{"community/contact/":{},"community/contact/#bug-reports":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["factor",{"_index":1159,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{}},"title":{}}],["fail",{"_index":1418,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/publish/":{},"community/publish/#failed-vote":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/release-notes/":{},"setup/release-notes/#global_2":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v120":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"community/publish/#failed-vote":{}}}],["failur",{"_index":2932,"text":{"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{}},"title":{}}],["failuremessag",{"_index":3287,"text":{"community/publish/":{}},"title":{}}],["fairli",{"_index":3537,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["fals",{"_index":422,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Function/":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_transform":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-wkb-file":{},"archive/tutorial/geospark-core-python/#read-from-wkt-file":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/geospark-sql-python/#polygon":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"community/publish/":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#pomxml":{},"setup/release-notes/":{},"setup/release-notes/#core":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-wkb-file":{},"tutorial/core-python/#read-from-wkt-file":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{},"tutorial/sql-python/#multipoint":{},"tutorial/sql-python/#multipolygon":{},"tutorial/sql-python/#point":{},"tutorial/sql-python/#polygon":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["famili",{"_index":3532,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["familiar",{"_index":3950,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["faq",{"_index":1937,"text":{"archive/tutorial/faq/":{}},"title":{}}],["far",{"_index":2949,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["fast_food|5",{"_index":2212,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["faster",{"_index":1519,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["fat",{"_index":1636,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{}},"title":{"setup/maven-coordinates/#use-sedona-fat-jars":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{}}}],["fclass",{"_index":2167,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["fclass#239",{"_index":2190,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["feather",{"_index":2756,"text":{"asf/asf/":{},"asf/asf/#apache-software-foundation":{}},"title":{}}],["featur",{"_index":779,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/rdd/":{},"community/contact/":{},"community/contact/#feature-requests":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global":{},"setup/release-notes/#sedona-101":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sedona-120":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#sql_1":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{"community/contact/#feature-requests":{}}}],["feedback",{"_index":2784,"text":{"community/contact/":{},"community/contact/#community":{},"community/contact/#feedback":{}},"title":{"community/contact/#feedback":{}}}],["felix",{"_index":2856,"text":{"community/contributor/":{},"community/contributor/#mentors":{}},"title":{}}],["felixcheung@apache.org",{"_index":2858,"text":{"community/contributor/":{},"community/contributor/#mentors":{}},"title":{}}],["fetch",{"_index":1107,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#store-map-tiles-on-disk":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"tutorial/viz/":{},"tutorial/viz/#store-map-tiles-on-disk":{},"tutorial/viz/#store-the-image-on-disk":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["few",{"_index":3648,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-111":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{}},"title":{}}],["ff",{"_index":855,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["fi",{"_index":3096,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{}},"title":{}}],["field",{"_index":994,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"tutorial/core-python/":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{}},"title":{}}],["fielddata",{"_index":1022,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["fieldgeometri",{"_index":1021,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"tutorial/sql/":{},"tutorial/sql/#load-geoparquet":{}},"title":{}}],["fieldheight",{"_index":1020,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["fieldimag",{"_index":1016,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["fieldnam",{"_index":3987,"text":{"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["fieldnband",{"_index":1018,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["fieldorigin",{"_index":1017,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["fieldwidth",{"_index":1019,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["figsiz",{"_index":2229,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["figur",{"_index":3036,"text":{"community/develop/":{},"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["file",{"_index":501,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#self-contained-spark-projects":{},"archive/download/project/#try-geospark-sql-functions":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#reload-a-saved-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/rdd/#reload-a-saved-spatialrdd":{},"archive/tutorial/rdd/#save-an-spatialrdd-indexed":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/contributor/":{},"community/contributor/#create-asf-account":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#release-the-package":{},"community/publish/#set-up-asf-username-for-maven":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"community/publish/#upload-release-candidate":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"community/vote/":{},"community/vote/#check-files-manually":{},"community/vote/#run-the-verify-script":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#mkdocs-website":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v081-geospark-core":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"tutorial/core-python/":{},"tutorial/core-python/#reload-a-saved-spatialrdd":{},"tutorial/core-python/#save-an-spatialrdd-indexed":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/demo/":{},"tutorial/demo/#scala":{},"tutorial/python-vector-osm/":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/rdd/#reload-a-saved-spatialrdd":{},"tutorial/rdd/#save-an-spatialrdd-indexed":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{"archive/tutorial/geospark-core-python/#installing-from-wheel-file":{},"archive/tutorial/geospark-core-python/#read-from-geojson-file":{},"archive/tutorial/geospark-core-python/#read-from-other-geometry-files":{},"archive/tutorial/geospark-core-python/#read-from-wkb-file":{},"archive/tutorial/geospark-core-python/#read-from-wkt-file":{},"archive/tutorial/geospark-sql-python/#installing-from-wheel-file":{},"archive/tutorial/sql/#load-data-from-files":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/vote/#check-files-manually":{},"tutorial/core-python/#read-from-geojson-file":{},"tutorial/core-python/#read-from-other-geometry-files":{},"tutorial/core-python/#read-from-wkb-file":{},"tutorial/core-python/#read-from-wkt-file":{},"tutorial/python-vector-osm/#connecting-spark-sedona-with-saved-hdfs-file":{},"tutorial/sql/#load-data-from-files":{}}}],["file:///home/hp/d...|polygon",{"_index":983,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{}},"title":{}}],["file_nam",{"_index":3814,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["filedatasplitt",{"_index":1883,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/rdd/":{}},"title":{}}],["filescan",{"_index":801,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["fill",{"_index":1024,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_array":{}},"title":{}}],["filter",{"_index":860,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["final",{"_index":1657,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/zeppelin/":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/develop/":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/zeppelin/":{}},"title":{}}],["find",{"_index":782,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#range-join":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_modulo":{},"api/sql/Raster-operators/#rs_squareroot":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/download/project/":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#range-query":{},"community/publish/":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#range-query":{}},"title":{}}],["findspark",{"_index":1966,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#installation":{}},"title":{}}],["fine",{"_index":1806,"text":{"archive/download/project/":{},"archive/download/project/#select-an-ide":{},"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["fingerprint",{"_index":3403,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["finish",{"_index":3368,"text":{"community/vote/":{},"community/vote/#vote-a-sedona-release":{}},"title":{}}],["fiona",{"_index":2123,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["firebrick",{"_index":1220,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{}},"title":{}}],["first",{"_index":633,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_startpoint":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_getband":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"archive/download/compile/#compile-the-source-code":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#failed-vote":{},"community/publish/#upload-release-candidate":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/release-notes/":{},"setup/release-notes/#sedona-100":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["first_spatial_col_index",{"_index":3899,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["fit",{"_index":1610,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["five",{"_index":1942,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{}},"title":{}}],["fix",{"_index":1351,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/develop/":{},"community/publish/":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"community/rule/#make-a-pull-request":{},"setup/release-notes/":{},"setup/release-notes/#core":{},"setup/release-notes/#core_1":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global_2":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#python":{},"setup/release-notes/#python_1":{},"setup/release-notes/#rdd":{},"setup/release-notes/#sedona-100":{},"setup/release-notes/#sedona-101":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sedona-111":{},"setup/release-notes/#sedona-120":{},"setup/release-notes/#sedona-121":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#sql_1":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v081-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v101":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"setup/release-notes/#viz_1":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{}}],["flag",{"_index":1281,"text":{"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{}},"title":{}}],["flat",{"_index":1556,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["flatmaptopair",{"_index":1604,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["flatten",{"_index":3768,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["flege",{"_index":1840,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{}},"title":{}}],["flexibl",{"_index":2677,"text":{"archive/tutorial/viz/":{},"tutorial/viz/":{}},"title":{}}],["flink",{"_index":10,"text":{"":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"setup/flink/install-scala/":{},"setup/flink/modules/":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{},"setup/flink/platform/":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/overview/":{},"setup/overview/#distributed-spatial-datasets":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#flink_1":{},"setup/release-notes/#rdd":{},"setup/release-notes/#sedona-120":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#set-up-dependencies":{}},"title":{"#04162022-sedona-120-incubating-is-released-sedona-now-supports-geospatial-stream-processing-in-apache-flink":{},"#08302022-sedona-121-incubating-is-released-it-supports-spark-24-33-and-flink-112":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{},"setup/release-notes/#flink":{},"setup/release-notes/#flink_1":{}}}],["flink_2.11",{"_index":3311,"text":{"community/publish/":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["flink_2.11/1.2.1",{"_index":3310,"text":{"community/publish/":{}},"title":{}}],["flink_2.12",{"_index":3309,"text":{"community/publish/":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["flink_2.12/1.2.1",{"_index":3308,"text":{"community/publish/":{}},"title":{}}],["flip",{"_index":298,"text":{"api/flink/Function/":{},"api/flink/Function/#st_flipcoordinates":{},"api/sql/Function/":{},"api/sql/Function/#st_flipcoordinates":{}},"title":{}}],["focus",{"_index":2702,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#visualize-spatialrdd":{},"tutorial/viz/":{},"tutorial/viz/#visualize-spatialrdd":{}},"title":{}}],["folder",{"_index":1260,"text":{"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/download/cluster/":{},"archive/download/cluster/#start-your-cluster":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#quick-start":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/download/zeppelin/#create-helium-folder-optional":{},"community/develop/":{},"community/publish/":{},"community/publish/#compile-r-html-docs":{},"community/publish/#publish-the-doc-website":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/rule/":{},"community/rule/#develop-a-document-contribution":{},"community/vote/":{},"community/vote/#check-files-manually":{},"community/vote/#run-the-verify-script":{},"setup/cluster/":{},"setup/cluster/#start-your-cluster":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#mkdocs-website":{},"setup/compile/#run-python-test":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-python/#setup-environment-variables":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/release-notes/":{},"setup/release-notes/#v100":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"setup/zeppelin/#create-helium-folder-optional":{},"tutorial/demo/":{},"tutorial/demo/#compile":{},"tutorial/demo/#folder-structure":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{}},"title":{"archive/download/zeppelin/#create-helium-folder-optional":{},"setup/zeppelin/#create-helium-folder-optional":{},"tutorial/demo/#folder-structure":{}}}],["follow",{"_index":457,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Overview/#quick-start":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-1x-versions":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-2x-versions":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/project/":{},"archive/download/project/#quick-start":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#supported-versions":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#supported-versions":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#initiate-sparksession":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/contact/":{},"community/contact/#community":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#committer-done-template":{},"community/contributor/#mentors":{},"community/contributor/#nominate-a-committer-or-pmc-member":{},"community/contributor/#project-management-committee-pmc":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/develop/":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#prepare-secret-gpg-key":{},"community/publish/#set-up-asf-username-for-maven":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"community/publish/#upload-release-candidate":{},"community/rule/":{},"community/rule/#contributing-to-apache-sedona":{},"community/rule/#develop-a-code-contribution":{},"community/rule/#develop-a-document-contribution":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"community/vote/#vote-a-sedona-release":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#pure-sql-environment":{},"setup/flink/install-scala/":{},"setup/flink/platform/":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#snapshot-versions":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#range-query-window":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/demo/":{},"tutorial/demo/#folder-structure":{},"tutorial/demo/#prerequisites":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#initiate-stream-environment":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql-python/#register-package":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#knn-query":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#range-query":{},"tutorial/sql/#register-sedonasql":{},"tutorial/sql/#save-geoparquet":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#initiate-sparksession":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["footprint",{"_index":1544,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{}},"title":{}}],["forc",{"_index":301,"text":{"api/flink/Function/":{},"api/flink/Function/#st_force_2d":{},"api/sql/Function/":{},"api/sql/Function/#st_force_2d":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["forev",{"_index":2695,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["forget",{"_index":1819,"text":{"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{}},"title":{}}],["form",{"_index":272,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{},"api/flink/Function/#st_isvalid":{},"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_isvalid":{},"api/sql/Function/#st_linemerge":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_mode":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"community/contact/":{},"community/contact/#feedback":{},"community/contributor/":{},"community/contributor/#create-asf-account":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#release-the-package":{}},"title":{}}],["formal",{"_index":2929,"text":{"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/rule/":{},"community/rule/#code-of-conduct":{}},"title":{}}],["format",{"_index":108,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_envelope_aggr":{},"api/flink/Aggregator/#st_union_aggr":{},"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/flink/Constructor/#st_geomfromgeojson":{},"api/flink/Constructor/#st_geomfromgml":{},"api/flink/Constructor/#st_geomfromkml":{},"api/flink/Constructor/#st_geomfromtext":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/flink/Constructor/#st_geomfromwkt":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Constructor/#st_point":{},"api/flink/Constructor/#st_pointfromtext":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_area":{},"api/flink/Function/#st_asbinary":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_asgeojson":{},"api/flink/Function/#st_asgml":{},"api/flink/Function/#st_askml":{},"api/flink/Function/#st_astext":{},"api/flink/Function/#st_azimuth":{},"api/flink/Function/#st_boundary":{},"api/flink/Function/#st_buffer":{},"api/flink/Function/#st_buildarea":{},"api/flink/Function/#st_distance":{},"api/flink/Function/#st_envelope":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_geohash":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_isempty":{},"api/flink/Function/#st_isring":{},"api/flink/Function/#st_issimple":{},"api/flink/Function/#st_isvalid":{},"api/flink/Function/#st_length":{},"api/flink/Function/#st_npoints":{},"api/flink/Function/#st_numgeometries":{},"api/flink/Function/#st_numinteriorrings":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_reverse":{},"api/flink/Function/#st_setsrid":{},"api/flink/Function/#st_srid":{},"api/flink/Function/#st_transform":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/flink/Function/#st_z":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/AggregateFunction/#st_intersection_aggr":{},"api/sql/AggregateFunction/#st_union_aggr":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Constructor/#st_geomfromgml":{},"api/sql/Constructor/#st_geomfromkml":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_point":{},"api/sql/Constructor/#st_pointfromtext":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/#st_polygonfromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_area":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_asgeojson":{},"api/sql/Function/#st_asgml":{},"api/sql/Function/#st_askml":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_centroid":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_convexhull":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_distance":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_envelope":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_geohash":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_geometrytype":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_intersection":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isempty":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_issimple":{},"api/sql/Function/#st_isvalid":{},"api/sql/Function/#st_length":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linemerge":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"api/sql/Function/#st_multi":{},"api/sql/Function/#st_npoints":{},"api/sql/Function/#st_numgeometries":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_pointonsurface":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Function/#st_srid":{},"api/sql/Function/#st_startpoint":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Function/#st_symdifference":{},"api/sql/Function/#st_transform":{},"api/sql/Function/#st_union":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/sql/Function/#st_z":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Predicate/#st_overlaps":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_array":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-loader/#rs_html":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_divide":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_logicalover":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_modulo":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/sql/Raster-operators/#rs_squareroot":{},"api/sql/Raster-operators/#rs_subtract":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"api/viz/sql/#st_encodeimage":{},"api/viz/sql/#st_pixelize":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_area":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_centroid":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_envelope":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_length":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_npoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/#st_render":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_1":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/#output-format":{},"archive/tutorial/rdd/#output-format_1":{},"archive/tutorial/rdd/#output-format_2":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#rdd":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v112":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_1":{},"tutorial/core-python/#output-format_2":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/rdd/#output-format":{},"tutorial/rdd/#output-format_1":{},"tutorial/rdd/#output-format_2":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#save-geoparquet":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_1":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/rdd/#output-format":{},"archive/tutorial/rdd/#output-format_1":{},"archive/tutorial/rdd/#output-format_2":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_1":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#output-format_3":{},"tutorial/rdd/#output-format":{},"tutorial/rdd/#output-format_1":{},"tutorial/rdd/#output-format_2":{}}}],["formatted_df",{"_index":3838,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["formatted_df.createorreplacetempview(\"formatted_df",{"_index":3852,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["formatted_df.printschema",{"_index":3848,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["formatted_df.select(\"new.0\",\"new.1\",\"new.2\",\"new.3.maxspeed\",\"new.3.incline\",\"new.3.surfac",{"_index":3849,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["formatted_df.show(5",{"_index":3841,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["formatted_df.withcolumnrenamed(\"0\",\"id\").withcolumnrenamed(\"1\",\"geom\").withcolumnrenamed(\"2\",\"nodes\").withcolumnrenamed(\"3\",\"tag",{"_index":3851,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["formatutil",{"_index":4103,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{}},"title":{"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{}}}],["former",{"_index":3523,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["formerli",{"_index":3039,"text":{"community/publication/":{},"community/publication/#publication":{}},"title":{}}],["forward",{"_index":3016,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{}},"title":{}}],["found",{"_index":79,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#visualize-spatialrdd":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/develop/":{},"download/":{},"download/#past-releases":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#visualize-spatialrdd":{}},"title":{}}],["foundat",{"_index":2754,"text":{"asf/asf/":{},"asf/asf/#apache-software-foundation":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/rule/":{},"community/rule/#code-of-conduct":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#buildsbt":{}},"title":{"asf/asf/":{},"asf/asf/#apache-software-foundation":{}}}],["four",{"_index":866,"text":{"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/sql/":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#maven-coordinates":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql/":{}},"title":{}}],["foz",{"_index":3804,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["foz_roads_osm.json",{"_index":3815,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["fraction",{"_index":636,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{}},"title":{}}],["framework",{"_index":2738,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparkviz-visualization-system":{},"community/publication/#key-publications":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["frank",{"_index":2895,"text":{"community/contributor/":{},"community/contributor/#call-for-a-vote":{}},"title":{}}],["free",{"_index":3443,"text":{"setup/databricks/":{}},"title":{"setup/databricks/#community-edition-free-tier":{}}}],["frequent",{"_index":1933,"text":{},"title":{"archive/tutorial/faq/":{}}}],["friendli",{"_index":2667,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["fromdatastream",{"_index":4114,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#get-spatial-table":{}},"title":{}}],["front",{"_index":2737,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/publish/":{},"community/publish/#release-the-package":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["fu",{"_index":3115,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{}},"title":{}}],["full",{"_index":1839,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/publication/":{},"community/publication/#key-publications":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{"community/publication/#full-publications":{}}}],["fulli",{"_index":465,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_within":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"setup/release-notes/":{},"setup/release-notes/#v100":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["function",{"_index":35,"text":{"":{},"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Function/":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_transform":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/viz/sql/":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/viz/sql/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#read-from-other-geometry-files":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#other-queries":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/databricks/#initialise":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/databricks/#pure-sql-environment":{},"setup/flink/modules/":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/maven-coordinates/":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#flink_1":{},"setup/release-notes/#rdd":{},"setup/release-notes/#sedona-100":{},"setup/release-notes/#sedona-111":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sedona-viz":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v081-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v110":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#read-from-other-geometry-files":{},"tutorial/core-python/#tips":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#get-datastream":{},"tutorial/flink/sql/#get-spatial-table":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/rdd/":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql-python/#register-package":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#other-queries":{},"tutorial/sql/#register-sedonasql":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{},"api/flink/Function/":{},"api/sql/AggregateFunction/":{},"api/sql/Function/":{},"api/sql/Overview/#function-list":{},"api/viz/sql/#aggregate-functions":{},"api/viz/sql/#regular-functions":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/viz/sql/#aggregate-functions":{},"archive/api/viz/sql/#regular-functions":{},"archive/download/project/#try-geospark-sql-functions":{}}}],["funtion",{"_index":2042,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{}},"title":{}}],["further",{"_index":2765,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{}},"title":{}}],["futur",{"_index":2808,"text":{"community/contact/":{},"community/contact/#feature-requests":{}},"title":{}}],["ga",{"_index":1994,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/rdd/":{}},"title":{}}],["galleri",{"_index":3992,"text":{},"title":{"tutorial/viz-gallery/":{}}}],["gap",{"_index":2732,"text":{"archive/tutorial/zeppelin/":{},"tutorial/zeppelin/":{}},"title":{}}],["gb",{"_index":1748,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["gdf",{"_index":2214,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/geospark-sql-python/#polygon":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{},"tutorial/sql-python/#multipoint":{},"tutorial/sql-python/#multipolygon":{},"tutorial/sql-python/#point":{},"tutorial/sql-python/#polygon":{}},"title":{}}],["gdp_md_est",{"_index":3972,"text":{"tutorial/sql/":{},"tutorial/sql/#load-geoparquet":{}},"title":{}}],["gemeotri",{"_index":2031,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["gemetri",{"_index":2301,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{}},"title":{}}],["gener",{"_index":55,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/rdd/#save-an-spatialrdd-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#colorize-pixels_1":{},"archive/tutorial/viz/#generate-map-tiles":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"archive/tutorial/viz/#store-map-tiles-on-disk":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"archive/tutorial/zeppelin/":{},"community/contact/":{},"community/contact/#mailing-list":{},"community/contributor/":{},"community/contributor/#create-asf-account":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#compile-r-html-docs":{},"community/publish/#failed-vote":{},"community/publish/#prepare-secret-gpg-key":{},"community/publish/#update-mkdocsyml":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"download/":{},"download/#github-repository":{},"setup/compile/":{},"setup/compile/#download-staged-jars":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/overview/":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sedona-viz":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#save-an-spatialrdd-indexed":{},"tutorial/core-python/#save-an-spatialrdd-not-indexed":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/rdd/#save-an-spatialrdd-indexed":{},"tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#colorize-pixels_1":{},"tutorial/viz/#generate-map-tiles":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#store-map-tiles-on-disk":{},"tutorial/viz/#why-scalable-map-visualization":{},"tutorial/zeppelin/":{}},"title":{"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/viz/#generate-a-single-image":{},"archive/tutorial/viz/#generate-map-tiles":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/viz/#generate-a-single-image":{},"tutorial/viz/#generate-map-tiles":{}}}],["general@incubator.apache.org",{"_index":3255,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{}},"title":{}}],["geo_json_file_loc",{"_index":2114,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-geojson-file":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-geojson-file":{}},"title":{}}],["geo_wrapper.jar",{"_index":1956,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{}},"title":{}}],["geodata",{"_index":1947,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_1":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_1":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#write-a-spatial-join-query":{}},"title":{}}],["geodatafram",{"_index":2052,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["geograph",{"_index":1628,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["geohash",{"_index":124,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/flink/Function/":{},"api/flink/Function/#st_geohash":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Function/":{},"api/sql/Function/#st_geohash":{}},"title":{}}],["geoid",{"_index":2333,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["geoinformatica",{"_index":3086,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{}},"title":{}}],["geojson",{"_index":136,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeojson":{},"api/flink/Function/":{},"api/flink/Function/#st_asgeojson":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Function/":{},"api/sql/Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-shapefile-and-geojson":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql/":{},"tutorial/sql/#load-shapefile-and-geojson":{}},"title":{"archive/tutorial/geospark-core-python/#read-from-geojson-file":{},"archive/tutorial/sql/#load-shapefile-and-geojson":{},"tutorial/core-python/#read-from-geojson-file":{},"tutorial/sql/#load-shapefile-and-geojson":{}}}],["geojson:str",{"_index":137,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeojson":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{}},"title":{}}],["geojsongeominputloc",{"_index":542,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{}},"title":{}}],["geojsonread",{"_index":2113,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-geojson-file":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-geojson-file":{},"tutorial/rdd/":{}},"title":{}}],["geom",{"_index":133,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_reverse":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_multi":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_overlaps":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/geospark-sql-python/#polygon":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_3":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#get-spatial-table":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/sql-python/":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{},"tutorial/sql-python/#multipoint":{},"tutorial/sql-python/#multipolygon":{},"tutorial/sql-python/#point":{},"tutorial/sql-python/#polygon":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["geom.lon",{"_index":3864,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["geom_a",{"_index":933,"text":{"api/sql/Predicate/":{},"api/sql/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{}},"title":{}}],["geom_b",{"_index":934,"text":{"api/sql/Predicate/":{},"api/sql/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{}},"title":{}}],["geom_nam",{"_index":4115,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#get-spatial-table":{}},"title":{}}],["geom_point",{"_index":4074,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["geom_polygon",{"_index":4048,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["geometr",{"_index":1629,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{}},"title":{}}],["geometri",{"_index":107,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_envelope_aggr":{},"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/flink/Constructor/#st_geomfromgeojson":{},"api/flink/Constructor/#st_geomfromgml":{},"api/flink/Constructor/#st_geomfromkml":{},"api/flink/Constructor/#st_geomfromtext":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/flink/Constructor/#st_geomfromwkt":{},"api/flink/Function/":{},"api/flink/Function/#st_asbinary":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_asgeojson":{},"api/flink/Function/#st_asgml":{},"api/flink/Function/#st_askml":{},"api/flink/Function/#st_astext":{},"api/flink/Function/#st_boundary":{},"api/flink/Function/#st_buildarea":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_geohash":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_isempty":{},"api/flink/Function/#st_isring":{},"api/flink/Function/#st_isvalid":{},"api/flink/Function/#st_npoints":{},"api/flink/Function/#st_numgeometries":{},"api/flink/Function/#st_numinteriorrings":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_reverse":{},"api/flink/Function/#st_setsrid":{},"api/flink/Function/#st_srid":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Constructor/#st_geomfromgml":{},"api/sql/Constructor/#st_geomfromkml":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_asgeojson":{},"api/sql/Function/#st_asgml":{},"api/sql/Function/#st_askml":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_geohash":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_geometrytype":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_intersection":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isempty":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_isvalid":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linemerge":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"api/sql/Function/#st_multi":{},"api/sql/Function/#st_npoints":{},"api/sql/Function/#st_numgeometries":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Function/#st_srid":{},"api/sql/Function/#st_startpoint":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Function/#st_symdifference":{},"api/sql/Function/#st_union":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_npoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#output-format_1":{},"archive/tutorial/rdd/#output-format_2":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#run-spatial-queries":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sql":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{},"setup/release-notes/#v131":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#range-query-window":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#run-spatial-queries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#output-format_1":{},"tutorial/rdd/#output-format_2":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#point":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#range-query":{},"tutorial/sql/#run-spatial-queries":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#read-from-other-geometry-files":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#read-from-other-geometry-files":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/sql/#create-a-geometry-type-column":{}}}],["geometry#236",{"_index":2192,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["geometry#240",{"_index":2191,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["geometry'",{"_index":354,"text":{"api/flink/Function/":{},"api/flink/Function/#st_issimple":{},"api/sql/Function/":{},"api/sql/Function/#st_issimple":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["geometry/geographi",{"_index":263,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buffer":{},"api/sql/Function/":{},"api/sql/Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{}},"title":{}}],["geometrycollect",{"_index":326,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_numgeometries":{},"api/sql/Function/":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_linemerge":{},"api/sql/Function/#st_numgeometries":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries":{}},"title":{}}],["geometrycollection(point(40",{"_index":592,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{}},"title":{}}],["geometryfactori",{"_index":2571,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#write-a-spatial-knn-query":{}},"title":{}}],["geometryfix",{"_index":3605,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["geometrytyp",{"_index":2132,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/sql-python/":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["geometryudt",{"_index":3643,"text":{"setup/release-notes/":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql_3":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["geometryvalid",{"_index":1283,"text":{"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{}},"title":{}}],["geomstream",{"_index":4096,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#get-datastream":{},"tutorial/flink/sql/#get-spatial-table":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["geomtabl",{"_index":4093,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#get-datastream":{},"tutorial/flink/sql/#get-spatial-table":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#range-query":{}},"title":{}}],["geomtbl",{"_index":4068,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{}},"title":{}}],["geomtbl3857",{"_index":4071,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["geomtri",{"_index":695,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["geom|height|width",{"_index":981,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{}},"title":{}}],["geopanda",{"_index":2051,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-python/#writing-application":{}},"title":{"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}}}],["geoparquet",{"_index":3967,"text":{"tutorial/sql/":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#save-geoparquet":{}},"title":{"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#save-geoparquet":{}}}],["geoparquet_file_name.parquet",{"_index":3976,"text":{"tutorial/sql/":{},"tutorial/sql/#save-geoparquet":{}},"title":{}}],["geoparquetdatalocation1",{"_index":3968,"text":{"tutorial/sql/":{},"tutorial/sql/#load-geoparquet":{}},"title":{}}],["geoparquetoutputloc",{"_index":3975,"text":{"tutorial/sql/":{},"tutorial/sql/#save-geoparquet":{}},"title":{}}],["georg",{"_index":2866,"text":{"community/contributor/":{},"community/contributor/#mentors":{}},"title":{}}],["geospark",{"_index":53,"text":{"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-113-and-earlier":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v130":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/overview/":{},"archive/download/overview/#direct-download":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#quick-start":{},"archive/download/project/#select-an-ide":{},"archive/download/project/#self-contained-spark-projects":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/download/scalashell/#spark-scala-shell":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/download/zeppelin/#compatibility":{},"archive/download/zeppelin/#display-geosparkviz-results":{},"archive/download/zeppelin/#enable-geospark-zeppelin":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/download/zeppelin/#installation":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/faq/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/geospark-core-python/#installing-from-pypi-repositories":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-core-python/#supported-versions":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#installing-from-pypi-repositories":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#supported-versions":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#initiate-sparksession":{},"archive/tutorial/viz/#set-up-dependencies":{},"archive/tutorial/viz/#visualize-spatialrdd":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publication/#key-publications":{},"community/publication/#publication":{},"community/publication/#third-party-evaluation":{},"download/":{},"download/#github-repository":{},"setup/overview/":{},"setup/overview/#download-statistics":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v081-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v100":{},"setup/release-notes/#v101":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"setup/release-notes/#v130":{},"setup/release-notes/#v131":{},"setup/zeppelin/":{},"setup/zeppelin/#installation":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-sql":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-113-and-earlier":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-120-and-later":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/compile/#compile-geospark":{},"archive/download/overview/#install-geospark":{},"archive/download/project/#how-to-use-geospark-in-an-ide":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#try-geospark-sql-functions":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-dependencies-in-zeppelin-spark-interpreter":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/download/zeppelin/#enable-geospark-zeppelin":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"archive/tutorial/geospark-core-python/#geospark":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/zeppelin/":{},"community/publication/#geospark-ecosystem":{},"setup/release-notes/#geospark-legacy-release-notes":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v081-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v091-geospark-core":{}}}],["geospark.core.enum",{"_index":1988,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{}},"title":{}}],["geospark.core.formatmapp",{"_index":2107,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-geojson-file":{},"archive/tutorial/geospark-core-python/#read-from-wkb-file":{},"archive/tutorial/geospark-core-python/#read-from-wkt-file":{}},"title":{}}],["geospark.core.formatmapper.disc_util",{"_index":2100,"text":{"archive/tutorial/geospark-core-python/":{}},"title":{}}],["geospark.core.formatmapper.shapefilepars",{"_index":2116,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-shapefile":{}},"title":{}}],["geospark.core.geom.envelop",{"_index":2022,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{}},"title":{}}],["geospark.core.geom_types.envelop",{"_index":2013,"text":{"archive/tutorial/geospark-core-python/":{}},"title":{}}],["geospark.core.spatialoper",{"_index":2023,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{}},"title":{}}],["geospark.core.spatialrdd",{"_index":1946,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{}},"title":{}}],["geospark.core.spatialrdd.spatial_rdd.spatialrdd",{"_index":2109,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-geojson-file":{},"archive/tutorial/geospark-core-python/#read-from-shapefile":{},"archive/tutorial/geospark-core-python/#read-from-wkb-file":{},"archive/tutorial/geospark-core-python/#read-from-wkt-file":{}},"title":{}}],["geospark.global.charset",{"_index":1271,"text":{"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{}},"title":{}}],["geospark.global.index",{"_index":1295,"text":{"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{}},"title":{}}],["geospark.global.indextyp",{"_index":1297,"text":{"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{}},"title":{}}],["geospark.jar",{"_index":1955,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{}},"title":{}}],["geospark.join.gridtyp",{"_index":1298,"text":{"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{}},"title":{}}],["geospark.join.indexbuildsid",{"_index":1301,"text":{"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{}},"title":{}}],["geospark.join.numpartit",{"_index":1300,"text":{"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{}},"title":{}}],["geospark.join.spatitionsid",{"_index":1302,"text":{"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{}},"title":{}}],["geospark.regist",{"_index":1964,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["geospark.sql.typ",{"_index":2238,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{}},"title":{}}],["geospark.utils.adapt",{"_index":2009,"text":{"archive/tutorial/geospark-core-python/":{}},"title":{}}],["geospark/jar",{"_index":1958,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{}},"title":{}}],["geospark/jars/../geospark",{"_index":1960,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{}},"title":{}}],["geosparkconf",{"_index":1296,"text":{"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"setup/release-notes/":{},"setup/release-notes/#v100":{}},"title":{}}],["geosparkkryoregistr",{"_index":1292,"text":{"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{}},"title":{}}],["geosparkkryoregistrator.getnam",{"_index":2136,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#writing-application":{}},"title":{}}],["geosparkregistr",{"_index":1965,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["geosparkregistrator.registeral",{"_index":2142,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{}},"title":{}}],["geosparkregistrator.registerall(spark",{"_index":2125,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#writing-application":{}},"title":{}}],["geosparkrunnableexampl",{"_index":2275,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{}},"title":{}}],["geosparksim",{"_index":3052,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#key-publications":{}},"title":{"community/publication/#geosparksim-traffic-simulator":{}}}],["geosparksql",{"_index":1270,"text":{"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#package-the-project":{},"archive/download/zeppelin/":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#other-queries":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"archive/tutorial/viz/#set-up-dependencies":{}},"title":{"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/download/zeppelin/#visualize-geosparksql-results":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#geosparksql_1":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{}}}],["geosparksqlregistr",{"_index":1294,"text":{"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{}},"title":{}}],["geosparksqlscalatempl",{"_index":1823,"text":{"archive/download/project/":{},"archive/download/project/#submit-the-compiled-jar":{}},"title":{}}],["geosparkviz",{"_index":1202,"text":{"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"api/viz/sql/#st_encodeimage":{},"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/api/viz/sql/#st_colorize":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/scalashell/":{},"archive/download/scalashell/#spark-scala-shell":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"archive/tutorial/viz/#set-up-dependencies":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"archive/tutorial/viz/#visualize-spatialrdd":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/publication/":{},"community/publication/#geosparkviz-visualization-system":{},"community/publication/#key-publications":{},"setup/release-notes/":{},"setup/release-notes/#v100":{},"setup/release-notes/#v110":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{}},"title":{"archive/download/zeppelin/#display-geosparkviz-results":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/publication/#geosparkviz-visualization-system":{}}}],["geosparkvizkryo",{"_index":2703,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{}},"title":{}}],["geosparkvizkryoregistr",{"_index":1305,"text":{"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{}},"title":{}}],["geosparkvizregistr",{"_index":1307,"text":{"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{}},"title":{}}],["geospati",{"_index":16,"text":{"":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/publication/":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"community/publication/#geosparkviz-visualization-system":{},"community/publication/#key-publications":{},"setup/release-notes/":{},"setup/release-notes/#flink_1":{},"setup/release-notes/#v01-v07":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"#04162022-sedona-120-incubating-is-released-sedona-now-supports-geospatial-stream-processing-in-apache-flink":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{}}}],["geotiff",{"_index":940,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_divide":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/sql/Raster-operators/#rs_squareroot":{},"api/sql/Raster-operators/#rs_subtract":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#sql_2":{}},"title":{"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}}}],["geotiffdatafram",{"_index":980,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#rs_getband":{}},"title":{}}],["geotiffdf",{"_index":948,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{}},"title":{}}],["geotool",{"_index":3421,"text":{"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-with-different-targets":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#global_2":{},"setup/release-notes/#global_3":{}},"title":{"setup/maven-coordinates/#geotools-240":{}}}],["geotyp",{"_index":2102,"text":{"archive/tutorial/geospark-core-python/":{},"tutorial/core-python/":{}},"title":{}}],["geoviz",{"_index":2699,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["get",{"_index":1860,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_3":{}},"title":{}}],["getconf",{"_index":911,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{}},"title":{}}],["getexecutionenviron",{"_index":4039,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#initiate-stream-environment":{}},"title":{}}],["getfield",{"_index":4099,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["getindata",{"_index":2830,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["getnam",{"_index":1291,"text":{"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["getorcr",{"_index":898,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["getpartition",{"_index":2069,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{}},"title":{}}],["getproperti",{"_index":2721,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"tutorial/viz/":{},"tutorial/viz/#store-the-image-on-disk":{}},"title":{}}],["getter",{"_index":1575,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v082-geospark-core":{}},"title":{}}],["getuserdata",{"_index":1951,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{}},"title":{}}],["gi",{"_index":233,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{}},"title":{}}],["gigapixel",{"_index":1703,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{}},"title":{}}],["gis_osm_pois_free_1.shp",{"_index":2164,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["git",{"_index":1766,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-manually":{}},"title":{}}],["gitbox",{"_index":3009,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{}},"title":{}}],["github",{"_index":47,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"archive/download/overview/":{},"archive/download/overview/#direct-download":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/tutorial/faq/":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/publish/#publish-the-doc-website":{},"community/publish/#release-the-package":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#contributing-to-apache-sedona":{},"community/rule/#make-a-pull-request":{},"download/":{},"download/#github-repository":{},"setup/compile/":{},"setup/compile/#download-staged-jars":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/release-notes/":{},"setup/release-notes/#known-issue":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{"community/publish/#obtain-write-access-to-sedona-github-repo":{},"download/#github-repository":{}}}],["gitter",{"_index":2789,"text":{"community/contact/":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{"community/contact/#gitter-chat":{}}}],["give",{"_index":1583,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["given",{"_index":248,"text":{"api/flink/Function/":{},"api/flink/Function/#st_azimuth":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_geohash":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_z":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_geohash":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_startpoint":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_z":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_array":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"api/viz/sql/#st_pixelize":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/#st_render":{},"archive/api/viz/sql/#st_tilename":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/sql/#range-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/sql/":{},"tutorial/sql/#knn-query":{},"tutorial/sql/#range-query":{}},"title":{}}],["global",{"_index":1698,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#python_1":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{}},"title":{"setup/release-notes/#global":{},"setup/release-notes/#global_1":{},"setup/release-notes/#global_2":{},"setup/release-notes/#global_3":{}}}],["globe'></i",{"_index":1853,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{}},"title":{}}],["gml",{"_index":142,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgml":{},"api/flink/Function/":{},"api/flink/Function/#st_asgml":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgml":{},"api/sql/Function/":{},"api/sql/Function/#st_asgml":{}},"title":{}}],["gml:linestr",{"_index":144,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgml":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgml":{}},"title":{}}],["gml:string",{"_index":143,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgml":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgml":{}},"title":{}}],["gnu",{"_index":3564,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["gnugpg",{"_index":3127,"text":{"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{}},"title":{}}],["gnupg",{"_index":3130,"text":{"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{},"community/vote/":{},"community/vote/#install-necessary-software":{}},"title":{}}],["gnupg2",{"_index":3131,"text":{"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{},"community/vote/":{},"community/vote/#install-necessary-software":{}},"title":{}}],["go",{"_index":1759,"text":{"archive/download/cluster/":{},"archive/download/cluster/#start-your-cluster":{},"archive/download/project/":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#display-geosparkviz-results":{},"community/contributor/":{},"community/contributor/#pmc-annoucement":{},"community/develop/":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"setup/cluster/":{},"setup/cluster/#start-your-cluster":{},"setup/compile/":{},"setup/compile/#download-staged-jars":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/zeppelin/":{},"setup/zeppelin/#display-sedonaviz-results":{}},"title":{}}],["goal",{"_index":2937,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["gonzalez",{"_index":1387,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["good",{"_index":1750,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#display-geosparkviz-results":{},"community/contributor/":{},"community/contributor/#mentors":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-scala/":{},"setup/release-notes/":{},"setup/release-notes/#sedona-viz":{},"setup/zeppelin/":{},"setup/zeppelin/#display-sedonaviz-results":{}},"title":{}}],["googl",{"_index":2686,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"community/contact/":{},"community/contact/#feedback":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["gosl",{"_index":2860,"text":{"community/contributor/":{},"community/contributor/#mentors":{}},"title":{}}],["gpd",{"_index":2053,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["gpg",{"_index":3126,"text":{"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"community/vote/#run-the-verify-script":{}},"title":{"community/publish/#prepare-secret-gpg-key":{}}}],["grabtaxi",{"_index":2853,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["grace",{"_index":2926,"text":{"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{}},"title":{}}],["graduat",{"_index":2945,"text":{"community/contributor/":{},"community/contributor/#create-asf-account":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["grain",{"_index":3524,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["granular",{"_index":1572,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v082-geospark-core":{}},"title":{}}],["gray",{"_index":4021,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["great",{"_index":2799,"text":{"community/contact/":{},"community/contact/#bug-reports":{}},"title":{}}],["greater",{"_index":1120,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"community/contact/":{},"community/contact/#feature-requests":{}},"title":{}}],["greaterdf",{"_index":1121,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_greaterthan":{}},"title":{}}],["greaterequaldf",{"_index":1125,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_greaterthanequal":{}},"title":{}}],["green",{"_index":3011,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["greenband",{"_index":1032,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{}},"title":{}}],["grid",{"_index":917,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["gridtyp",{"_index":2065,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{}},"title":{}}],["gridtype.quadtre",{"_index":1588,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["ground",{"_index":3965,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["group",{"_index":1251,"text":{"api/viz/sql/":{},"api/viz/sql/#st_render":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_render":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#render-map-tiles":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#render-map-tiles":{}},"title":{}}],["groupbi",{"_index":2204,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["groupid",{"_index":1312,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-113-and-earlier":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["groupid>org.apache</groupid",{"_index":3028,"text":{"community/develop/":{}},"title":{}}],["gt",{"_index":3496,"text":{},"title":{"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}}}],["guarante",{"_index":378,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointonsurface":{},"api/sql/Function/":{},"api/sql/Function/#st_pointonsurface":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["guid",{"_index":454,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"community/contributor/":{},"community/contributor/#pmc-annoucement":{},"setup/flink/install-scala/":{}},"title":{}}],["guidanc",{"_index":2883,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{}},"title":{}}],["guidelin",{"_index":2910,"text":{"community/contributor/":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{}},"title":{}}],["h",{"_index":1049,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{},"community/publish/":{},"community/publish/#compile-r-html-docs":{}},"title":{}}],["h1|g4020",{"_index":2639,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["h1|g4020|null",{"_index":2625,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["hacker",{"_index":1764,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{}},"title":{}}],["hadoop",{"_index":3614,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["hadoop2.7",{"_index":3430,"text":{"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/install-python/":{},"setup/install-python/#setup-environment-variables":{}},"title":{}}],["hand",{"_index":1858,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#display-geosparkviz-results":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"setup/zeppelin/":{},"setup/zeppelin/#display-sedonaviz-results":{}},"title":{}}],["handl",{"_index":1360,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"setup/release-notes/":{},"setup/release-notes/#sql":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{}},"title":{}}],["hao",{"_index":1462,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["happen",{"_index":3963,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["happi",{"_index":3257,"text":{"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["hard",{"_index":3746,"text":{"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{}},"title":{}}],["hardcod",{"_index":1813,"text":{"archive/download/project/":{},"archive/download/project/#package-the-project":{}},"title":{}}],["harri",{"_index":1405,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["has_non_spatial_attr",{"_index":3900,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["hashset",{"_index":3698,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-core":{}},"title":{}}],["have",{"_index":727,"text":{"api/sql/Function/":{},"api/sql/Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"setup/databricks/":{},"setup/databricks/#pure-sql-environment":{}},"title":{}}],["hdf",{"_index":1582,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global_1":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{},"tutorial/rdd/":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{}},"title":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-spark-sedona-with-saved-hdfs-file":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}}}],["hdf/netcdf",{"_index":3569,"text":{"setup/maven-coordinates/":{}},"title":{}}],["hdfs.create_file(file_nam",{"_index":3817,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["hdfs.delete_file_dir(file_nam",{"_index":3816,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["hdfs://776faf4d6a1e:8020/\"+file_nam",{"_index":3819,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-spark-sedona-with-saved-hdfs-file":{}},"title":{}}],["hdfs://path",{"_index":2088,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{}}],["he/sh",{"_index":2818,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["header",{"_index":540,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"tutorial/core-python/":{},"tutorial/rdd/":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{}},"title":{"community/publish/#check-asf-copyright-in-all-file-headers":{}}}],["heat",{"_index":1206,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/viz/":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/viz/":{}},"title":{}}],["height",{"_index":952,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_array":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{}},"title":{}}],["height:int",{"_index":1028,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{}},"title":{}}],["helium",{"_index":1843,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#create-helium-folder-optional":{},"archive/download/zeppelin/#enable-geospark-zeppelin":{},"archive/download/zeppelin/#installation":{},"archive/tutorial/zeppelin/":{},"setup/zeppelin/":{},"setup/zeppelin/#create-helium-folder-optional":{},"setup/zeppelin/#enable-sedona-zeppelin":{},"setup/zeppelin/#installation":{},"tutorial/zeppelin/":{}},"title":{"archive/download/zeppelin/#create-helium-folder-optional":{},"setup/zeppelin/#create-helium-folder-optional":{}}}],["help",{"_index":1892,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/contact/#mailing-list":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#mentors":{},"community/contributor/#pmc-annoucement":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{}},"title":{}}],["helsinki",{"_index":3095,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{}},"title":{}}],["henc",{"_index":2692,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["here",{"_index":80,"text":{"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Overview/#quick-start":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/overview/":{},"archive/download/overview/#direct-download":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#join-query":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"download/":{},"download/#past-releases":{},"setup/compile/":{},"setup/compile/#compile-the-documentation":{},"setup/compile/#download-staged-jars":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#v01-v07":{},"tutorial/flink/sql/":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql/":{},"tutorial/sql/#join-query":{}},"title":{}}],["hero",{"_index":2590,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{}},"title":{}}],["heterogen",{"_index":1563,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["hi",{"_index":3233,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["hierarchi",{"_index":2958,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["high",{"_index":1982,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/overview/":{},"setup/overview/#rich-spatial-analytics-tools":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz-gallery/":{},"tutorial/viz/":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["higher",{"_index":3455,"text":{"setup/databricks/":{}},"title":{}}],["highest",{"_index":588,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{}},"title":{}}],["highli",{"_index":1875,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["histori",{"_index":2874,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{}},"title":{}}],["hit",{"_index":3453,"text":{"setup/databricks/":{},"setup/databricks/#advanced-editions":{}},"title":{}}],["hive",{"_index":2660,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{}},"title":{}}],["hold",{"_index":1950,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#output-format_3":{}},"title":{}}],["hole",{"_index":671,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makepolygon":{}},"title":{}}],["home",{"_index":0,"text":{},"title":{"":{}}}],["homogen",{"_index":585,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{}},"title":{}}],["honor",{"_index":3364,"text":{"community/rule/":{},"community/rule/#code-of-conduct":{}},"title":{}}],["hopefulli",{"_index":1868,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{}},"title":{}}],["host",{"_index":1783,"text":{"archive/download/overview/":{},"archive/download/overview/#direct-download":{}},"title":{}}],["hotel",{"_index":1993,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/rdd/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["hour",{"_index":2928,"text":{"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["html",{"_index":1061,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_html":{},"community/publish/":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{"community/publish/#compile-r-html-docs":{}}}],["htmlstring",{"_index":1069,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_html":{}},"title":{}}],["http",{"_index":1364,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["http://overpass",{"_index":3799,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["http://sedona.apache.org",{"_index":3259,"text":{"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["http://sedona.apache.org/setup/overview",{"_index":3261,"text":{"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["http://sedona.apache.org/tutorial/rdd",{"_index":3262,"text":{"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["http://www.public.asu.edu/~jiayu2/geospark/javadoc",{"_index":1258,"text":{"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{}},"title":{}}],["http://www.public.asu.edu/~jiayu2/geosparksql/javadoc",{"_index":1303,"text":{"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{}},"title":{}}],["http://www.public.asu.edu/~jiayu2/geosparkviz/javadoc",{"_index":1304,"text":{"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{}},"title":{}}],["https://archive.apache.org/dist/incubator/sedona",{"_index":81,"text":{"download/":{},"download/#past-releases":{}},"title":{}}],["https://cwiki.apache.org/confluence/display/incubator/incubator+release+checklist",{"_index":3246,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["https://dist.apache.org/repos/dist/dev/incubator/sedona",{"_index":3198,"text":{"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["https://dist.apache.org/repos/dist/dev/incubator/sedona/1.2.1",{"_index":3207,"text":{"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["https://dist.apache.org/repos/dist/dev/incubator/sedona/key",{"_index":3203,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["https://dist.apache.org/repos/dist/release/incubator/sedona",{"_index":3270,"text":{"community/publish/":{},"community/publish/#release-the-package":{}},"title":{}}],["https://dist.apache.org/repos/dist/release/incubator/sedona/1.2.1",{"_index":3271,"text":{"community/publish/":{},"community/publish/#release-the-package":{}},"title":{}}],["https://docs.github.com/en/authentication/manag",{"_index":3135,"text":{"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{}},"title":{}}],["https://downloads.apache.org/incubator/sedona/key",{"_index":3240,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["https://gitbox.apache.org/setup",{"_index":3010,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{}},"title":{}}],["https://github.com/apache/incub",{"_index":3004,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#release-the-package":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["https://github.com/datasystemslab/geospark",{"_index":2121,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#introduction":{}},"title":{}}],["https://github.com/datasystemslab/geospark/issues/115",{"_index":1571,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v082-geospark-core":{}},"title":{}}],["https://github.com/orgs/apache/teams/sedona",{"_index":3014,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{}},"title":{}}],["https://gitter.im/apache/sedona",{"_index":3264,"text":{"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["https://help.github.com/articles/secur",{"_index":3006,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{}},"title":{}}],["https://id.apache.org",{"_index":3008,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{}},"title":{}}],["https://incubator.apache.org/guides/committer.html",{"_index":2991,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["https://incubator.apache.org/guides/distribution.html",{"_index":3168,"text":{"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{}},"title":{}}],["https://incubator.apache.org/guides/ppmc.html",{"_index":2911,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["https://infra.apache.org/releas",{"_index":3169,"text":{"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{}},"title":{}}],["https://issues.apache.org/jira/browse/leg",{"_index":3171,"text":{"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{}},"title":{}}],["https://issues.apache.org/jira/browse/scm",{"_index":3284,"text":{"community/publish/":{}},"title":{}}],["https://keyserver.ubuntu.com",{"_index":3205,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["https://lists.apache.org/list.html",{"_index":3248,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["https://lists.apache.org/list.html?private@sedona.apache.org",{"_index":2913,"text":{"community/contributor/":{},"community/contributor/#close-a-vote":{}},"title":{}}],["https://mvnrepository.com/artifact/org.datasyslab/geotool",{"_index":3567,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["https://mvnrepository.com/artifact/org.datasyslab/sernetcdf",{"_index":3570,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#sernetcdf-010_1":{}},"title":{}}],["https://mvnrepository.com/artifact/org.locationtech.jts/jt",{"_index":3576,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{}},"title":{}}],["https://mvnrepository.com/artifact/org.wololo/jts2geojson",{"_index":3582,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#jts2geojson-0161":{}},"title":{}}],["https://oss.sonatype.org/content/repositories/snapshot",{"_index":1335,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#buildsbt":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{}},"title":{}}],["https://people.apache.org/committ",{"_index":2975,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["https://pgp.mit.edu",{"_index":3204,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["https://pypi.org/project/apach",{"_index":3276,"text":{"community/publish/":{},"community/publish/#release-the-package":{}},"title":{}}],["https://pypi.org/project/pyspark",{"_index":1954,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{}},"title":{}}],["https://repo1.maven.org/maven2/org/apache/sedona/sedona",{"_index":3481,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["https://repo1.maven.org/maven2/org/datasyslab/geotool",{"_index":3478,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["https://repository.apache.org",{"_index":3145,"text":{"community/publish/":{},"community/publish/#publish-maven-snapshots":{},"community/publish/#release-the-package":{},"community/publish/#stage-the-release-candidate":{}},"title":{}}],["https://repository.apache.org/content/groups/snapshot",{"_index":3589,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#buildsbt":{},"setup/maven-coordinates/#pomxml":{}},"title":{}}],["https://repository.apache.org/service/local/repositories/orgapachesedona",{"_index":3306,"text":{"community/publish/":{}},"title":{}}],["https://therinspark.com/connections.html",{"_index":3552,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["https://twitter.com/apachesedona",{"_index":3263,"text":{"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["https://whimsy.apache.org/roster/ppmc/sedona",{"_index":3022,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{}},"title":{}}],["https://www.apache.org/dev",{"_index":2990,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["https://www.apache.org/dev/#committ",{"_index":3017,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{}},"title":{}}],["https://www.apache.org/foundation/how",{"_index":2988,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["https://www.apache.org/foundation/policies/conduct.html",{"_index":2995,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["https://www.apache.org/licenses/#cla",{"_index":2972,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["https://www.apache.org/secur",{"_index":86,"text":{"download/":{},"download/#security":{}},"title":{}}],["huge",{"_index":3747,"text":{"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{}},"title":{}}],["hui",{"_index":1400,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["hull",{"_index":598,"text":{"api/sql/Function/":{},"api/sql/Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{}},"title":{}}],["human",{"_index":2093,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{}}],["humid",{"_index":1198,"text":{"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{}},"title":{}}],["i.",{"_index":1863,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"community/publish/":{},"community/publish/#failed-vote":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{}}],["i/o",{"_index":3664,"text":{"setup/release-notes/":{},"setup/release-notes/#sql_2":{}},"title":{}}],["icd",{"_index":3093,"text":{"community/publication/":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparkviz-visualization-system":{}},"title":{}}],["icla",{"_index":2967,"text":{"community/contributor/":{},"community/contributor/#create-asf-account":{}},"title":{"community/contributor/#pmc-accept-and-icla-instruction":{}}}],["icon",{"_index":1850,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{}},"title":{}}],["id",{"_index":1337,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#package-the-project":{},"archive/download/project/#try-geospark-sql-functions":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/geospark-sql-python/#polygon":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#mentors":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#project-management-committee-pmc":{},"community/develop/":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/publish/#set-up-asf-username-for-maven":{},"community/rule/":{},"community/rule/#make-a-pull-request":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#pomxml":{},"setup/release-notes/":{},"setup/release-notes/#v131":{},"tutorial/core-python/":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{},"tutorial/rdd/":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/sql-python/":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{},"tutorial/sql-python/#multipoint":{},"tutorial/sql-python/#multipolygon":{},"tutorial/sql-python/#point":{},"tutorial/sql-python/#polygon":{},"tutorial/sql-python/#supported-shapely-objects":{}},"title":{"archive/download/project/#how-to-use-geospark-in-an-ide":{},"archive/download/project/#select-an-ide":{},"community/develop/#ide":{},"community/develop/#ide_1":{},"community/develop/#ide_2":{}}}],["id=#1068",{"_index":854,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["id=#62",{"_index":844,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["id>apache.releases.https</id",{"_index":3144,"text":{"community/publish/":{},"community/publish/#set-up-asf-username-for-maven":{}},"title":{}}],["id>apache.snapshots.https</id",{"_index":3141,"text":{"community/publish/":{},"community/publish/#set-up-asf-username-for-maven":{}},"title":{}}],["idea",{"_index":1802,"text":{"archive/download/project/":{},"archive/download/project/#select-an-ide":{},"community/develop/":{},"community/develop/#ide":{},"community/publish/":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{}},"title":{}}],["identifi",{"_index":393,"text":{"api/flink/Function/":{},"api/flink/Function/#st_setsrid":{},"api/flink/Function/#st_srid":{},"api/sql/Function/":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_srid":{}},"title":{}}],["idiomat",{"_index":3515,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["ieee",{"_index":3090,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{}},"title":{}}],["ignor",{"_index":967,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#sedona-core":{}},"title":{}}],["igua\u00e7u",{"_index":3805,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["illegalargumentexcept",{"_index":1493,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["ilya",{"_index":1407,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["imag",{"_index":943,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_divide":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"api/sql/Raster-operators/#rs_squareroot":{},"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"api/viz/sql/#st_render":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#colorize-pixels_1":{},"archive/tutorial/viz/#generate-a-single-image":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/viz/#store-map-tiles-on-disk":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#sedona-viz":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#v120":{},"tutorial/viz/":{},"tutorial/viz/#colorize-pixels_1":{},"tutorial/viz/#generate-a-single-image":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#render-the-image":{},"tutorial/viz/#store-map-tiles-on-disk":{},"tutorial/viz/#store-the-image-on-disk":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{"archive/tutorial/viz/#generate-a-single-image":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"tutorial/viz/#generate-a-single-image":{},"tutorial/viz/#render-the-image":{},"tutorial/viz/#store-the-image-on-disk":{}}}],["image(band2",{"_index":1179,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_subtract":{}},"title":{}}],["image(exampl",{"_index":1166,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_normalizeddifference":{}},"title":{}}],["image.data",{"_index":977,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["image.geometri",{"_index":1009,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["image.height",{"_index":975,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["image.nband",{"_index":978,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["image.origin",{"_index":973,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["image.width",{"_index":976,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["imagegener",{"_index":1707,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"tutorial/viz/":{},"tutorial/viz/#store-the-image-on-disk":{}},"title":{}}],["imagetyp",{"_index":2724,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"tutorial/viz/":{},"tutorial/viz/#store-the-image-on-disk":{}},"title":{}}],["imbruced@apache.org",{"_index":2831,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["img",{"_index":1062,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_html":{},"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{}},"title":{}}],["immedi",{"_index":3499,"text":{"setup/install-python/":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{}},"title":{}}],["impact",{"_index":2138,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["implement",{"_index":691,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"setup/flink/modules/":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["implicitli",{"_index":2950,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["import",{"_index":899,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#read-from-geojson-file":{},"archive/tutorial/geospark-core-python/#read-from-shapefile":{},"archive/tutorial/geospark-core-python/#read-from-wkb-file":{},"archive/tutorial/geospark-core-python/#read-from-wkt-file":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/geospark-sql-python/#polygon":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/contributor/#send-the-invitation":{},"community/develop/":{},"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/rule/":{},"community/rule/#pick-annouce-a-task-using-jira":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/databricks/":{},"setup/databricks/#initialise":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#read-from-geojson-file":{},"tutorial/core-python/#read-from-shapefile":{},"tutorial/core-python/#read-from-wkb-file":{},"tutorial/core-python/#read-from-wkt-file":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/demo/":{},"tutorial/demo/#scala":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{},"tutorial/sql-python/#multipoint":{},"tutorial/sql-python/#multipolygon":{},"tutorial/sql-python/#point":{},"tutorial/sql-python/#polygon":{},"tutorial/sql-python/#register-package":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{"community/develop/#import-the-project":{},"community/develop/#import-the-project_1":{},"community/develop/#import-the-project_2":{}}}],["improv",{"_index":1476,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"community/contact/":{},"community/contact/#feedback":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#python":{},"setup/release-notes/#rdd":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v112":{},"setup/release-notes/#viz_1":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{}},"title":{}}],["inaccur",{"_index":1672,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["inc",{"_index":2841,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["inclin",{"_index":3887,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["includ",{"_index":228,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_makevalid":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/viz/":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"community/rule/#review-a-pull-request":{},"community/vote/":{},"community/vote/#check-files-manually":{},"community/vote/#run-the-verify-script":{},"community/vote/#vote-a-sedona-release":{},"setup/compile/":{},"setup/compile/#compile-with-different-targets":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#sedona-100":{},"setup/release-notes/#sedona-101":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sedona-111":{},"setup/release-notes/#sedona-120":{},"setup/release-notes/#sedona-121":{},"setup/release-notes/#v131":{},"tutorial/flink/sql/":{},"tutorial/raster/":{},"tutorial/rdd/":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql/":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz/":{}},"title":{}}],["incompat",{"_index":1674,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#sedona-viz":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["incorpor",{"_index":2807,"text":{"community/contact/":{},"community/contact/#feature-requests":{}},"title":{}}],["increas",{"_index":1918,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{}},"title":{}}],["incub",{"_index":4,"text":{"":{},"asf/asf/":{},"asf/asf/#apache-software-foundation":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"community/contributor/#mentors":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#send-the-invitation":{},"community/develop/":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#failed-vote":{},"community/publish/#publish-the-doc-website":{},"community/publish/#release-the-package":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"download/":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#snapshot-versions":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#sedona-100":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{}},"title":{"#04162022-sedona-120-incubating-is-released-sedona-now-supports-geospatial-stream-processing-in-apache-flink":{},"#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39":{},"#08302022-sedona-121-incubating-is-released-it-supports-spark-24-33-and-flink-112":{},"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{},"#11232021-sedona-111-incubating-is-released-it-now-supports-spark-32":{},"download/#120-incubating":{},"download/#121-incubating":{}}}],["incubating,org.apache.sedona:sedona",{"_index":3555,"text":{"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{}},"title":{}}],["incubating,org.datasyslab:geotool",{"_index":3556,"text":{"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["incubating.jar",{"_index":3217,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{}},"title":{}}],["incubating.pom",{"_index":3293,"text":{"community/publish/":{}},"title":{}}],["incubating.pom.asc",{"_index":3292,"text":{"community/publish/":{}},"title":{}}],["incubating/*.jar",{"_index":3493,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["incubating/apach",{"_index":3273,"text":{"community/publish/":{},"community/publish/#release-the-package":{}},"title":{}}],["incubating/docs/setup/releas",{"_index":3260,"text":{"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["incubating/geotool",{"_index":3476,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["incubating/sedona",{"_index":3290,"text":{"community/publish/":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["incubator.apache.org",{"_index":2921,"text":{"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/publish/":{}},"title":{"community/publish/#vote-in-general-incubatorapacheorg":{}}}],["incur",{"_index":1600,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["index",{"_index":556,"text":{"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_removepoint":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_fetchregion":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#save-an-spatialrdd-indexed":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/overview/":{},"setup/overview/#distributed-spatial-queries":{},"setup/release-notes/":{},"setup/release-notes/#python_1":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v110":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/core-python/#save-an-spatialrdd-indexed":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#save-an-spatialrdd-indexed":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{}},"title":{"archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#save-an-spatialrdd-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/core-python/#save-an-spatialrdd-indexed":{},"tutorial/core-python/#save-an-spatialrdd-not-indexed":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/rdd/#save-an-spatialrdd-indexed":{},"tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{}}}],["index.html",{"_index":2976,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/publish/":{},"community/publish/#compile-r-html-docs":{}},"title":{}}],["indexedrawrdd",{"_index":1898,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{}}],["indexedrdd",{"_index":1899,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["indextyp",{"_index":2038,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{}},"title":{}}],["indic",{"_index":922,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{}},"title":{}}],["individu",{"_index":972,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["inform",{"_index":425,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/rule/":{},"community/rule/#code-of-conduct":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["infra",{"_index":3146,"text":{"community/publish/":{},"community/publish/#publish-maven-snapshots":{}},"title":{}}],["infrastructur",{"_index":2767,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contributor/":{},"community/contributor/#committer-done-template":{}},"title":{}}],["init",{"_index":3456,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/databricks/#pure-sql-environment":{}},"title":{"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}}}],["init.sh",{"_index":3485,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["initi",{"_index":1531,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"community/publication/":{},"community/publication/#publication":{},"setup/databricks/":{},"setup/databricks/#initialise":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v100":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#initiate-stream-environment":{},"tutorial/raster/":{},"tutorial/raster/#initial-setup":{},"tutorial/rdd/":{},"tutorial/sql-pure-sql/":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/#initiate-sparksession":{},"tutorial/flink/sql/#initiate-stream-environment":{},"tutorial/raster/#initial-setup":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/#initiate-sparksession":{}}}],["initialis",{"_index":3468,"text":{"setup/databricks/":{}},"title":{"setup/databricks/#initialise":{}}}],["inlcud",{"_index":3366,"text":{"community/vote/":{},"community/vote/#vote-a-sedona-release":{}},"title":{}}],["inmemoryfileindex[file:/projects/geospark/counties.csv",{"_index":2198,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{}},"title":{}}],["inmemoryfileindex[file:/projects/sedona/counties.csv",{"_index":3942,"text":{"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["inner",{"_index":805,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{}},"title":{}}],["input",{"_index":118,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_union_aggr":{},"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_reverse":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_multi":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#rs_base64":{},"api/viz/sql/":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/viz/sql/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{"api/sql/Raster-loader/":{}}}],["input_loc",{"_index":1989,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{}},"title":{}}],["inputloc",{"_index":1881,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/rdd/":{}},"title":{}}],["inputt",{"_index":2552,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["insid",{"_index":2141,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["inspect",{"_index":3545,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["instac",{"_index":2561,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{}},"title":{}}],["instal",{"_index":1729,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/overview/":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/download/zeppelin/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-from-pypi-repositories":{},"archive/tutorial/geospark-core-python/#installing-from-source":{},"archive/tutorial/geospark-core-python/#installing-from-wheel-file":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installing-from-pypi-repositories":{},"archive/tutorial/geospark-sql-python/#installing-from-source":{},"archive/tutorial/geospark-sql-python/#installing-from-wheel-file":{},"archive/tutorial/zeppelin/":{},"community/develop/":{},"community/develop/#ide":{},"community/publish/":{},"community/publish/#compile-r-html-docs":{},"community/publish/#prepare-secret-gpg-key":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"community/vote/#run-the-verify-script":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-with-different-targets":{},"setup/compile/#mkdocs-website":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#community-edition-free-tier":{},"setup/databricks/#initialise":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/databricks/#pure-sql-environment":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/release-notes/":{},"setup/release-notes/#known-issue":{},"setup/zeppelin/":{},"tutorial/core-python/":{},"tutorial/core-python/#installation":{},"tutorial/demo/":{},"tutorial/demo/#prerequisites":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/sql-python/":{},"tutorial/sql-python/#installation":{},"tutorial/zeppelin/":{}},"title":{"archive/download/overview/#install-geospark":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/download/zeppelin/#installation":{},"archive/tutorial/geospark-core-python/#installing-from-pypi-repositories":{},"archive/tutorial/geospark-core-python/#installing-from-source":{},"archive/tutorial/geospark-core-python/#installing-from-wheel-file":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#installing-from-pypi-repositories":{},"archive/tutorial/geospark-sql-python/#installing-from-source":{},"archive/tutorial/geospark-sql-python/#installing-from-wheel-file":{},"community/vote/#install-necessary-software":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-r/":{},"setup/install-scala/":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"setup/zeppelin/#installation":{},"tutorial/core-python/#installation":{},"tutorial/sql-python/#installation":{}}}],["instanc",{"_index":1931,"text":{"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["instanti",{"_index":3540,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["instead",{"_index":768,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_getband":{},"api/viz/sql/":{},"api/viz/sql/#st_render":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"community/develop/":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/release-notes/":{},"setup/release-notes/#sedona-121":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{}},"title":{}}],["instreamingmod",{"_index":4042,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#initiate-stream-environment":{}},"title":{}}],["instruct",{"_index":68,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"download/":{},"download/#verify-the-integrity":{}},"title":{"community/contributor/#pmc-accept-and-icla-instruction":{}}}],["int",{"_index":129,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/flink/Function/":{},"api/flink/Function/#st_geohash":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Function/":{},"api/sql/Function/#st_geohash":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{}},"title":{}}],["integ",{"_index":394,"text":{"api/flink/Function/":{},"api/flink/Function/#st_setsrid":{},"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_setsrid":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{},"tutorial/sql-python/#supported-shapely-objects":{}},"title":{}}],["integertyp",{"_index":2241,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/sql-python/":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["integr",{"_index":65,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/geospark-sql-python/":{},"download/":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/overview/":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v131":{},"tutorial/sql-python/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"download/#verify-the-integrity":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}}}],["inteira",{"_index":3859,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["intelij",{"_index":3318,"text":{"community/publish/":{}},"title":{}}],["intellij",{"_index":1801,"text":{"archive/download/project/":{},"archive/download/project/#select-an-ide":{},"community/develop/":{},"community/develop/#ide":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{}},"title":{}}],["inter",{"_index":3951,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["interact",{"_index":1753,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/scalashell/":{},"archive/download/scalashell/#spark-scala-shell":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#send-the-invitation":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-python/":{},"setup/install-scala/":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{}},"title":{}}],["interest",{"_index":3962,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["interfac",{"_index":1856,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#enable-geospark-zeppelin":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#introduction":{},"community/publish/":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/release-notes/":{},"setup/release-notes/#r":{},"setup/zeppelin/":{},"setup/zeppelin/#enable-sedona-zeppelin":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["interior",{"_index":338,"text":{"api/flink/Function/":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_numinteriorrings":{},"api/sql/Function/":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{}},"title":{}}],["interior_p1",{"_index":2270,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"tutorial/sql-python/":{},"tutorial/sql-python/#multipolygon":{}},"title":{}}],["intern",{"_index":806,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"community/publication/":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#geosparkviz-visualization-system":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["interpol",{"_index":631,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{}},"title":{}}],["interpret",{"_index":692,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"archive/download/zeppelin/":{},"setup/zeppelin/":{}},"title":{"archive/download/zeppelin/#add-geospark-dependencies-in-zeppelin-spark-interpreter":{},"setup/zeppelin/#add-sedona-dependencies-in-zeppelin-spark-interpreter":{}}}],["intersect",{"_index":356,"text":{"api/flink/Function/":{},"api/flink/Function/#st_issimple":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_intersects":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_intersection_aggr":{},"api/sql/Function/":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_intersection":{},"api/sql/Function/#st_issimple":{},"api/sql/Function/#st_symdifference":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["introduct",{"_index":102,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_envelope_aggr":{},"api/flink/Aggregator/#st_union_aggr":{},"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/flink/Constructor/#st_geomfromgeojson":{},"api/flink/Constructor/#st_geomfromgml":{},"api/flink/Constructor/#st_geomfromkml":{},"api/flink/Constructor/#st_geomfromtext":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/flink/Constructor/#st_geomfromwkt":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Constructor/#st_point":{},"api/flink/Constructor/#st_pointfromtext":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_area":{},"api/flink/Function/#st_asbinary":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_asgeojson":{},"api/flink/Function/#st_asgml":{},"api/flink/Function/#st_askml":{},"api/flink/Function/#st_astext":{},"api/flink/Function/#st_azimuth":{},"api/flink/Function/#st_boundary":{},"api/flink/Function/#st_buffer":{},"api/flink/Function/#st_buildarea":{},"api/flink/Function/#st_distance":{},"api/flink/Function/#st_envelope":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_geohash":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_isempty":{},"api/flink/Function/#st_isring":{},"api/flink/Function/#st_issimple":{},"api/flink/Function/#st_isvalid":{},"api/flink/Function/#st_length":{},"api/flink/Function/#st_npoints":{},"api/flink/Function/#st_numgeometries":{},"api/flink/Function/#st_numinteriorrings":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_reverse":{},"api/flink/Function/#st_setsrid":{},"api/flink/Function/#st_srid":{},"api/flink/Function/#st_transform":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/flink/Function/#st_z":{},"api/flink/Overview/":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/AggregateFunction/#st_intersection_aggr":{},"api/sql/AggregateFunction/#st_union_aggr":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Constructor/#st_geomfromgml":{},"api/sql/Constructor/#st_geomfromkml":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_point":{},"api/sql/Constructor/#st_pointfromtext":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/#st_polygonfromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_area":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_asgeojson":{},"api/sql/Function/#st_asgml":{},"api/sql/Function/#st_askml":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_centroid":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_convexhull":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_distance":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_envelope":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_geohash":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_geometrytype":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_intersection":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isempty":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_issimple":{},"api/sql/Function/#st_isvalid":{},"api/sql/Function/#st_length":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linemerge":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"api/sql/Function/#st_multi":{},"api/sql/Function/#st_npoints":{},"api/sql/Function/#st_numgeometries":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_pointonsurface":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Function/#st_srid":{},"api/sql/Function/#st_startpoint":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Function/#st_symdifference":{},"api/sql/Function/#st_transform":{},"api/sql/Function/#st_union":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/sql/Function/#st_z":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"api/sql/Overview/":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Predicate/#st_overlaps":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_array":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-loader/#rs_html":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_divide":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_logicalover":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_modulo":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"api/sql/Raster-operators/#rs_normalize":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/sql/Raster-operators/#rs_squareroot":{},"api/sql/Raster-operators/#rs_subtract":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"api/viz/sql/#st_encodeimage":{},"api/viz/sql/#st_pixelize":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_area":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_centroid":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_envelope":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_length":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_npoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/#st_render":{},"archive/api/viz/sql/#st_tilename":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"setup/flink/modules/":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{},"setup/install-r/":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"tutorial/core-python/":{},"tutorial/sql-python/":{}},"title":{"api/flink/Overview/#introduction":{},"api/sql/Overview/#introduction":{},"archive/api/sql/GeoSparkSQL-Overview/#introduction":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-sql-python/#introduction":{},"setup/install-r/#introduction":{},"tutorial/core-python/#introduction":{},"tutorial/sql-python/#introduction":{}}}],["invalid",{"_index":678,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"community/publish/":{},"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["invis",{"_index":2955,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["invit",{"_index":2780,"text":{"community/contact/":{},"community/contact/#community":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#nominate-a-committer-or-pmc-member":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{}},"title":{"community/contributor/#send-the-invitation":{}}}],["invok",{"_index":1902,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["involv",{"_index":2779,"text":{"community/contact/":{},"community/contact/#community":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#send-a-notice-to-ipmc":{}},"title":{}}],["io",{"_index":3890,"text":{"tutorial/raster/":{},"tutorial/raster/#api-docs":{}},"title":{}}],["ip",{"_index":1731,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{}},"title":{}}],["ip:7077",{"_index":1798,"text":{"archive/download/project/":{},"archive/download/project/#quick-start":{},"archive/download/project/#submit-the-compiled-jar":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{}},"title":{}}],["ipmc",{"_index":2916,"text":{"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{}},"title":{"community/contributor/#send-a-notice-to-ipmc":{}}}],["ipykernel",{"_index":3750,"text":{"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{}}],["ipython.display",{"_index":3756,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["isn't",{"_index":1286,"text":{"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{}},"title":{}}],["iso_a3",{"_index":3971,"text":{"tutorial/sql/":{},"tutorial/sql/#load-geoparquet":{}},"title":{}}],["isolate_id",{"_index":3834,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["isolate_total_nod",{"_index":3830,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["isolate_total_nodes[\"total_nodes\"].iloc[0",{"_index":3832,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["issu",{"_index":83,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/faq/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/contact/#feature-requests":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#send-the-invitation":{},"download/":{},"download/#security":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/release-notes/":{},"setup/release-notes/#core_1":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global_1":{},"setup/release-notes/#python":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v101":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{"community/contact/#issue-tracker":{},"setup/release-notes/#known-issue":{}}}],["issuer",{"_index":3395,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["it'",{"_index":1138,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_logicalover":{}},"title":{}}],["itali",{"_index":3111,"text":{"community/publication/":{},"community/publication/#geosparkviz-visualization-system":{}},"title":{}}],["item",{"_index":2897,"text":{"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{}},"title":{}}],["iter",{"_index":1558,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["itself",{"_index":605,"text":{"api/sql/Function/":{},"api/sql/Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{}},"title":{}}],["jackson",{"_index":3581,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#jts2geojson-0161":{}},"title":{}}],["jar",{"_index":57,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/overview/":{},"archive/download/overview/#direct-download":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"community/develop/":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"download/":{},"download/#github-repository":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-with-different-targets":{},"setup/compile/#download-staged-jars":{},"setup/databricks/":{},"setup/databricks/#community-edition-free-tier":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-python/#setup-environment-variables":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"setup/release-notes/#v01-v07":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{"archive/download/project/#submit-the-compiled-jar":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"setup/compile/#download-staged-jars":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{}}}],["java",{"_index":93,"text":{"api/java-api/":{},"api/viz/java-api/":{},"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"api/viz/sql/#st_render":{},"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/#st_render":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#select-an-ide":{},"archive/download/project/#self-contained-spark-projects":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/viz/":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#run-python-test":{},"setup/flink/install-scala/":{},"setup/flink/platform/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/overview/":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/demo/":{},"tutorial/demo/#prerequisites":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/flink/sql/":{},"tutorial/raster/":{},"tutorial/rdd/":{},"tutorial/sql/":{},"tutorial/viz/":{}},"title":{"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"setup/compile/#compile-scala-java-source-code":{},"tutorial/demo/#scala-and-java-examples":{}}}],["java/scala",{"_index":1938,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{}},"title":{}}],["javaconvers",{"_index":3984,"text":{"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["javadoc",{"_index":90,"text":{"api/java-api/":{},"api/viz/java-api/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"community/publish/":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{"archive/api/sql/GeoSparkSQL-javadoc/":{},"community/publish/#javadoc-and-scaladoc":{}}}],["javardd",{"_index":1887,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}},"title":{}}],["javasparkcontext",{"_index":1880,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}},"title":{}}],["jbonofre@apache.org",{"_index":2865,"text":{"community/contributor/":{},"community/contributor/#mentors":{}},"title":{}}],["jdk",{"_index":1640,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/demo/":{},"tutorial/demo/#prerequisites":{}},"title":{}}],["jdk/jre",{"_index":1637,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["jean",{"_index":2862,"text":{"community/contributor/":{},"community/contributor/#mentors":{}},"title":{}}],["jia",{"_index":1403,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"community/publication/":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#geosparkviz-visualization-system":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{}},"title":{}}],["jiayu@apache.org",{"_index":2850,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["jinxuan",{"_index":2845,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{}},"title":{}}],["jinxuanw@apache.org",{"_index":2849,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["jira",{"_index":2794,"text":{"community/contact/":{},"community/contact/#bug-reports":{},"community/contact/#feature-requests":{},"community/rule/":{},"community/rule/#make-a-pull-request":{},"community/rule/#pick-annouce-a-task-using-jira":{}},"title":{"community/rule/#pick-annouce-a-task-using-jira":{}}}],["job",{"_index":1914,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["jobj",{"_index":3919,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["jobj[70",{"_index":3920,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["join",{"_index":777,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#read-from-other-geometry-files":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_2":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#join-query":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/overview/":{},"setup/overview/#distributed-spatial-queries":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#python_1":{},"setup/release-notes/#sedona-100":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#read-from-other-geometry-files":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_2":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#work-with-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#join-query":{},"tutorial/sql/#register-sedonasql":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/sql/#join-query":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/sql/#join-query":{}}}],["join_typ",{"_index":4006,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["joinqueri",{"_index":1652,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{}},"title":{}}],["joinquery.distancejoinqueryflat",{"_index":3741,"text":{"tutorial/core-python/":{},"tutorial/core-python/#tips":{}},"title":{}}],["joinquery.spatialjoin",{"_index":3740,"text":{"tutorial/core-python/":{},"tutorial/core-python/#tips":{}},"title":{}}],["joinquery.spatialjoinquery/distancejoinqueri",{"_index":3697,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-core":{}},"title":{}}],["joinquery.spatialjoinqueryflat",{"_index":3742,"text":{"tutorial/core-python/":{},"tutorial/core-python/#tips":{}},"title":{}}],["joinquerypartitioningtyp",{"_index":2591,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes_2":{}},"title":{}}],["joinqueryraw",{"_index":3729,"text":{"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{}},"title":{}}],["joinresultdf",{"_index":2674,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["joinresultpairrdd",{"_index":2675,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["jonathan",{"_index":1392,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["jordan",{"_index":1452,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["journal",{"_index":3087,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{}},"title":{}}],["journey",{"_index":1784,"text":{"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"setup/flink/install-scala/":{},"setup/install-scala/":{}},"title":{}}],["jpg",{"_index":1676,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["jre",{"_index":1730,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["js",{"_index":1837,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{}},"title":{}}],["json",{"_index":2549,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/rdd/":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{}}],["json.dumps(data",{"_index":3818,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["jt",{"_index":1429,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"setup/release-notes/#v120":{}},"title":{"setup/maven-coordinates/#locationtech-jts-core-1180":{}}}],["jts2geojson",{"_index":3578,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/release-notes/":{},"setup/release-notes/#global_2":{},"setup/release-notes/#global_3":{}},"title":{"setup/maven-coordinates/#jts2geojson-0161":{}}}],["jtsplu",{"_index":1690,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["judgement",{"_index":463,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{}},"title":{}}],["juli",{"_index":3112,"text":{"community/publication/":{},"community/publication/#geosparkviz-visualization-system":{}},"title":{}}],["julienpeloton",{"_index":1455,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["junit",{"_index":3344,"text":{"community/rule/":{},"community/rule/#develop-a-code-contribution":{}},"title":{}}],["jupyt",{"_index":3498,"text":{"setup/install-python/":{},"setup/install-python/#setup-environment-variables":{},"setup/release-notes/":{},"setup/release-notes/#global_2":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/raster/":{},"tutorial/raster/#tutorials":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{}},"title":{"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}}}],["jvm",{"_index":1803,"text":{"archive/download/project/":{},"archive/download/project/#select-an-ide":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{}},"title":{}}],["k",{"_index":1673,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_1":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"setup/overview/":{},"setup/overview/#distributed-spatial-queries":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_1":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_1":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#write-a-spatial-knn-query":{}},"title":{}}],["kanchan",{"_index":2825,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["kanchanchy@apache.org",{"_index":2829,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["kdb",{"_index":1564,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-partitioning":{}},"title":{}}],["kdbtree",{"_index":918,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{}},"title":{}}],["kddi",{"_index":2843,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["keep",{"_index":2985,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["keepcollaped=tru",{"_index":681,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{}},"title":{}}],["keepcollapsed:boolean",{"_index":684,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{}},"title":{}}],["keepcollapsed=fals",{"_index":683,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{}},"title":{}}],["keivan",{"_index":1396,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["kemper",{"_index":3082,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["kept",{"_index":2672,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{}},"title":{}}],["kernel",{"_index":3749,"text":{"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{}}],["key",{"_index":67,"text":{"community/publication/":{},"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"download/":{},"download/#verify-the-integrity":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{}},"title":{"community/publication/#key-publications":{},"community/publish/#prepare-secret-gpg-key":{}}}],["key#gener",{"_index":3137,"text":{"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{}},"title":{}}],["key'",{"_index":3397,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["kimahriman@apache.org",{"_index":2824,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["kind",{"_index":867,"text":{"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{}},"title":{}}],["kipf",{"_index":3078,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["kml",{"_index":150,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromkml":{},"api/flink/Function/":{},"api/flink/Function/#st_askml":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromkml":{},"api/sql/Function/":{},"api/sql/Function/#st_askml":{}},"title":{}}],["kml:string",{"_index":151,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromkml":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromkml":{}},"title":{}}],["knn",{"_index":1566,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_1":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_1":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/sql/":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_1":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/flink/sql/":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_1":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/sql/":{}},"title":{"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/sql/#knn-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/flink/sql/#knn-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/sql/#knn-query":{}}}],["knnqueri",{"_index":2058,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#write-a-spatial-knn-query":{}},"title":{}}],["know",{"_index":1616,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#send-the-invitation":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{}}],["known",{"_index":223,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asbinary":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_astext":{},"api/sql/Function/":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/release-notes/":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{}},"title":{"setup/release-notes/#known-issue":{}}}],["koci\u0144ski",{"_index":1389,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["komissarov",{"_index":1391,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["kroon|point",{"_index":2219,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["kryo",{"_index":1520,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v110":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["kryoseri",{"_index":1290,"text":{"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["kryoserializer.getnam",{"_index":2135,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["kryp",{"_index":1526,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["kyro",{"_index":1919,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{}},"title":{}}],["l",{"_index":3332,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{}},"title":{}}],["lab",{"_index":3040,"text":{"community/publication/":{},"community/publication/#publication":{}},"title":{}}],["lack",{"_index":235,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["lambda",{"_index":2021,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{}},"title":{}}],["lancast",{"_index":2608,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["lang",{"_index":26,"text":{"":{}},"title":{"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{}}}],["languag",{"_index":1804,"text":{"archive/download/project/":{},"archive/download/project/#select-an-ide":{},"setup/release-notes/":{},"setup/release-notes/#sedona-110":{},"tutorial/raster/":{},"tutorial/rdd-r/":{},"tutorial/sql-r/":{},"tutorial/viz-r/":{}},"title":{"setup/flink/platform/":{},"setup/platform/":{},"tutorial/rdd-r/#spatial-rdd-applications-in-r-language":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}}}],["larg",{"_index":1444,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-scala/":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v120":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}}}],["larger",{"_index":1825,"text":{"archive/download/project/":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes_2":{}},"title":{}}],["last",{"_index":373,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointn":{},"api/sql/Function/":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"community/contributor/":{},"community/publish/":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{}},"title":{}}],["lat/lon",{"_index":402,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["later",{"_index":770,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivideexplode":{},"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-120-and-later":{}}}],["latest",{"_index":49,"text":{"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"download/":{},"download/#github-repository":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/release-notes/":{},"setup/release-notes/#known-issue":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{}},"title":{}}],["latter",{"_index":3526,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["launch",{"_index":3752,"text":{"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{}}],["layer",{"_index":2727,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#generate-map-tiles":{},"tutorial/viz/":{},"tutorial/viz/#generate-map-tiles":{}},"title":{}}],["ldap",{"_index":3021,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{}},"title":{}}],["lead",{"_index":1820,"text":{"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#python":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{}},"title":{}}],["leaflet",{"_index":1836,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{}},"title":{}}],["learn",{"_index":1791,"text":{"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/zeppelin/":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/rule/":{},"community/rule/#develop-a-document-contribution":{},"setup/install-scala/":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd/":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/sql/":{},"tutorial/sql/#range-query":{},"tutorial/zeppelin/":{}},"title":{}}],["learner",{"_index":1788,"text":{"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"setup/install-scala/":{}},"title":{}}],["lefcoln",{"_index":3733,"text":{"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{}},"title":{}}],["left",{"_index":923,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_2":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_2":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_2":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["left_attribute1",{"_index":3980,"text":{"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["left_attribute2",{"_index":3981,"text":{"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["left_col1",{"_index":3732,"text":{"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{}},"title":{}}],["leftcoveredbyright",{"_index":3660,"text":{"setup/release-notes/":{},"setup/release-notes/#core":{}},"title":{}}],["leftgeometri",{"_index":3989,"text":{"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["leftrdd",{"_index":3986,"text":{"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["legaci",{"_index":3710,"text":{"setup/release-notes/":{}},"title":{"setup/release-notes/#geospark-legacy-release-notes":{}}}],["legal",{"_index":2886,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["legend",{"_index":2230,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["leitschuh",{"_index":1393,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["length",{"_index":638,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/rdd/":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/rdd/":{}},"title":{}}],["lenient",{"_index":3927,"text":{"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{}},"title":{}}],["less",{"_index":266,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buffer":{},"api/sql/Function/":{},"api/sql/Function/#st_buffer":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["lessdf",{"_index":1128,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_lessthan":{}},"title":{}}],["lessequaldf",{"_index":1131,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_lessthanequal":{}},"title":{}}],["lesser",{"_index":3565,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["let'",{"_index":3190,"text":{"community/publish/":{}},"title":{}}],["level",{"_index":1245,"text":{"api/viz/sql/":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#generate-map-tiles":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#generate-map-tiles":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["leverag",{"_index":2734,"text":{"archive/tutorial/zeppelin/":{},"tutorial/zeppelin/":{}},"title":{}}],["le\u015bn",{"_index":2221,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["lgpl",{"_index":3507,"text":{"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["li",{"_index":2833,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["libari",{"_index":3563,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["libcurl4",{"_index":3326,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{}},"title":{}}],["libgeo",{"_index":3433,"text":{"setup/compile/":{},"setup/compile/#run-python-test":{}},"title":{}}],["librari",{"_index":1786,"text":{"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#initialise":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/databricks/#pure-sql-environment":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-scala/":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#rdd":{},"setup/release-notes/#sedona-viz":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["licens",{"_index":1413,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#sedona-viz":{},"setup/release-notes/#v120":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{}},"title":{}}],["lie",{"_index":379,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointonsurface":{},"api/sql/Function/":{},"api/sql/Function/#st_pointonsurface":{}},"title":{}}],["light",{"_index":4018,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["lightgray",{"_index":2236,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["limit",{"_index":1756,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#work-with-data":{},"tutorial/sql/":{},"tutorial/sql/#knn-query":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["line",{"_index":176,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linemerge":{},"api/sql/Function/#st_removepoint":{},"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"community/develop/":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/release-notes/":{},"setup/release-notes/#sedona-101":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sedona-111":{},"setup/release-notes/#sedona-120":{},"setup/release-notes/#sedona-121":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/sql-python/":{},"tutorial/sql-python/#linestring":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#register-sedonasql":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{}}],["line1",{"_index":2258,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"tutorial/sql-python/":{},"tutorial/sql-python/#multilinestring":{}},"title":{}}],["line2",{"_index":2259,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"tutorial/sql-python/":{},"tutorial/sql-python/#multilinestring":{}},"title":{}}],["linear",{"_index":261,"text":{"api/flink/Function/":{},"api/flink/Function/#st_boundary":{},"api/flink/Function/#st_interiorringn":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["lineshap",{"_index":547,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_linefromtext":{}},"title":{}}],["linestr",{"_index":168,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_isring":{},"api/flink/Function/#st_pointn":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linemerge":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/rdd/#query-center-geometry":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#range-query-window":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/sql-python/":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#supported-shapely-objects":{}},"title":{"archive/tutorial/geospark-sql-python/#linestring":{},"tutorial/sql-python/#linestring":{}}}],["linestring(0",{"_index":347,"text":{"api/flink/Function/":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_isring":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_pointonsurface":{},"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{}},"title":{}}],["linestring(1",{"_index":173,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{}},"title":{}}],["linestring(10",{"_index":762,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{}},"title":{}}],["linestring(100",{"_index":617,"text":{"api/sql/Function/":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_startpoint":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{}},"title":{}}],["linestring(21",{"_index":763,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{}},"title":{}}],["linestring(25",{"_index":641,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{}},"title":{}}],["linestring(5",{"_index":761,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{}},"title":{}}],["linestring(6",{"_index":676,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makepolygon":{}},"title":{}}],["linestring(60",{"_index":764,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{}},"title":{}}],["linestring(7",{"_index":674,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makepolygon":{}},"title":{}}],["linestring(85",{"_index":765,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{}},"title":{}}],["linestring,linestr",{"_index":2076,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_2":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_2":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_2":{}},"title":{}}],["linestring><coordin",{"_index":152,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromkml":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromkml":{}},"title":{}}],["linestring_rdd",{"_index":2104,"text":{"archive/tutorial/geospark-core-python/":{},"tutorial/core-python/":{}},"title":{}}],["linestringobject",{"_index":2577,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{}},"title":{}}],["linestringrdd",{"_index":1687,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-typed-spatialrdd":{}},"title":{}}],["linestringshap",{"_index":549,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{}},"title":{}}],["linestringt",{"_index":548,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{}},"title":{}}],["linet",{"_index":546,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_linefromtext":{}},"title":{}}],["linework",{"_index":274,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{},"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{}},"title":{}}],["linha",{"_index":3858,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["link",{"_index":2925,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/publish/#release-the-package":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{}},"title":{}}],["linux/mac",{"_index":3420,"text":{"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{}},"title":{}}],["list",{"_index":612,"text":{"api/sql/Function/":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Overview/":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/viz/sql/":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/viz/sql/":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#installation":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_1":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_1":{},"community/contact/":{},"community/contact/#mailing-list":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/publish/":{},"community/publish/#failed-vote":{},"community/publish/#prepare-secret-gpg-key":{},"community/publish/#update-mkdocsyml":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"setup/zeppelin/":{},"setup/zeppelin/#installation":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_1":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_1":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"community/contact/#mailing-list":{},"community/contributor/":{}}}],["lit",{"_index":3767,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["littl",{"_index":2783,"text":{"community/contact/":{},"community/contact/#community":{}},"title":{}}],["littler",{"_index":3325,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{}},"title":{}}],["liu",{"_index":1463,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["live",{"_index":3350,"text":{"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["livi",{"_index":1913,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["load",{"_index":541,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#load-shapefile-and-geojson":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v081-geospark-core":{},"setup/release-notes/#v112":{},"setup/release-notes/#v120":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#load-shapefile-and-geojson":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#load-shapefile-and-geojson":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#load-shapefile-and-geojson":{}}}],["load_spatial_index_rdd_from_disc",{"_index":2106,"text":{"archive/tutorial/geospark-core-python/":{},"tutorial/core-python/":{}},"title":{}}],["load_spatial_rdd_from_disc",{"_index":2101,"text":{"archive/tutorial/geospark-core-python/":{},"tutorial/core-python/":{}},"title":{}}],["loader",{"_index":941,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#rs_getband":{}},"title":{"api/sql/Raster-loader/#geotiff-dataframe-loader":{}}}],["local",{"_index":895,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/download/project/#try-geospark-sql-functions":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"community/publish/":{},"community/publish/#update-mkdocsyml":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/demo/":{},"tutorial/demo/#prerequisites":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{"tutorial/demo/#run-template-projects-locally":{}}}],["locat",{"_index":639,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/release-notes/":{},"setup/release-notes/#v110":{},"setup/release-notes/#v120":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{}},"title":{}}],["locationtech",{"_index":3572,"text":{"setup/maven-coordinates/":{}},"title":{"setup/maven-coordinates/#locationtech-jts-core-1180":{}}}],["lock",{"_index":3699,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{}}],["log",{"_index":1596,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#python":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["logdiffer",{"_index":1136,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_logicaldifference":{}},"title":{}}],["logic",{"_index":462,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/project/":{},"archive/download/project/#self-contained-spark-projects":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{}},"title":{}}],["logicaldiffer",{"_index":1134,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_logicaldifference":{}},"title":{}}],["logicalov",{"_index":1139,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_logicalover":{}},"title":{}}],["logo",{"_index":2757,"text":{"asf/asf/":{},"asf/asf/#apache-software-foundation":{}},"title":{}}],["logov",{"_index":1141,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_logicalover":{}},"title":{}}],["long",{"_index":2016,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"tutorial/core-python/":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/sql/":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["long/lat",{"_index":1991,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/rdd/":{}},"title":{}}],["longer",{"_index":1607,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["longitude/latitud",{"_index":1276,"text":{"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["longtyp",{"_index":3759,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["look",{"_index":1953,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["loop",{"_index":1609,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["lot",{"_index":2659,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#other-queries":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#other-queries":{}},"title":{}}],["low",{"_index":3525,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{}},"title":{}}],["lower",{"_index":682,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["lowercas",{"_index":506,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["lp",{"_index":2848,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["lsad",{"_index":2335,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["lt",{"_index":3447,"text":{"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/databricks/#install-sedona-from-the-web-ui":{}},"title":{}}],["luca",{"_index":1482,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["l\u00f3gica",{"_index":3861,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["m",{"_index":1975,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-from-wheel-file":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installing-from-wheel-file":{},"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{}}],["m2/settings.xml",{"_index":3138,"text":{"community/publish/":{},"community/publish/#set-up-asf-username-for-maven":{}},"title":{}}],["mac",{"_index":3128,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{},"community/publish/#prepare-secret-gpg-key":{},"community/vote/":{},"community/vote/#install-necessary-software":{}},"title":{}}],["machin",{"_index":1770,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/compile/#compile-the-source-code":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"community/publish/":{},"community/publish/#compile-r-html-docs":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#mkdocs-website":{},"setup/release-notes/":{},"setup/release-notes/#known-issue":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{},"tutorial/demo/":{},"tutorial/demo/#prerequisites":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{}}],["maco",{"_index":3365,"text":{"community/vote/":{},"community/vote/#install-necessary-software":{},"community/vote/#vote-a-sedona-release":{}},"title":{}}],["macro",{"_index":3440,"text":{"setup/compile/":{},"setup/compile/#mkdocs-website":{}},"title":{}}],["made",{"_index":3388,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["magnitud",{"_index":4017,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["mail",{"_index":2791,"text":{"community/contact/":{},"community/contact/#mailing-list":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{"community/contact/#mailing-list":{}}}],["main",{"_index":2697,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"community/contributor/":{},"community/contributor/#committers":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"tutorial/demo/":{},"tutorial/demo/#scala":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["mainli",{"_index":2701,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#visualize-spatialrdd":{},"tutorial/viz/":{},"tutorial/viz/#visualize-spatialrdd":{}},"title":{}}],["maintain",{"_index":829,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"community/publish/":{},"community/publish/#release-the-package":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"tutorial/core-python/":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{}},"title":{}}],["mainten",{"_index":3601,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-101":{},"setup/release-notes/#sedona-111":{},"setup/release-notes/#sedona-121":{}},"title":{}}],["major",{"_index":1650,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#project-management-committee-pmc":{},"community/publish/":{},"community/publish/#upload-release-candidate":{},"setup/release-notes/":{},"setup/release-notes/#flink_1":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#r":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sedona-120":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["make",{"_index":517,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/rdd/":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#create-asf-account":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/develop/":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#compile-r-html-docs":{},"community/publish/#failed-vote":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#contributing-to-apache-sedona":{},"community/rule/#review-a-pull-request":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/release-notes/":{},"setup/release-notes/#python":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/demo/":{},"tutorial/demo/#prerequisites":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{}},"title":{"community/rule/#make-a-pull-request":{}}}],["malka",{"_index":1395,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{}},"title":{}}],["malka@apache.org",{"_index":2837,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["manag",{"_index":1769,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#select-an-ide":{},"archive/tutorial/sql/":{},"community/contributor/":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#send-the-invitation":{},"community/publication/":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#geosparkviz-visualization-system":{},"community/publication/#key-publications":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/install-scala/":{},"tutorial/flink/sql/":{},"tutorial/sql/":{}},"title":{"community/contributor/#project-management-committee-pmc":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{}}}],["mandatori",{"_index":1046,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{}},"title":{}}],["mani",{"_index":232,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/download/project/":{},"archive/download/project/#select-an-ide":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/rdd/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{}}],["manipul",{"_index":3520,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["manner",{"_index":2771,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{}},"title":{}}],["mannuali",{"_index":3300,"text":{"community/publish/":{}},"title":{}}],["manual",{"_index":1577,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/scalashell/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"community/publish/":{},"community/vote/":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#setup-environment-variables":{},"setup/install-scala/":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#v082-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{"archive/download/scalashell/#download-geospark-jar-manually":{},"community/vote/#check-files-manually":{},"setup/install-scala/#download-sedona-jar-manually":{}}}],["map",{"_index":32,"text":{"":{},"api/viz/sql/":{},"api/viz/sql/#st_tilename":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#generate-map-tiles":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#store-map-tiles-on-disk":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"community/publication/":{},"community/publication/#key-publications":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/release-notes/":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sql_2":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/raster/":{},"tutorial/raster/#api-docs":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/viz-gallery/":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#generate-map-tiles":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#store-map-tiles-on-disk":{},"tutorial/viz/#why-scalable-map-visualization":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{},"archive/tutorial/viz/#generate-map-tiles":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#store-map-tiles-on-disk":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"tutorial/raster/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/#generate-map-tiles":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#store-map-tiles-on-disk":{},"tutorial/viz/#why-scalable-map-visualization":{}}}],["mapbox",{"_index":2687,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["mapfunct",{"_index":4098,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["mappartit",{"_index":1603,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["mapper",{"_index":1606,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["mariano",{"_index":1386,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["markdown",{"_index":1777,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{}},"title":{}}],["mask",{"_index":1119,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{}},"title":{}}],["maskedvalu",{"_index":1123,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{}},"title":{}}],["massiv",{"_index":2698,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["master",{"_index":60,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"download/":{},"download/#github-repository":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/install-scala/#self-contained-spark-projects":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["master(\"loc",{"_index":1814,"text":{"archive/download/project/":{},"archive/download/project/#package-the-project":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["master(\"spark://spark",{"_index":3775,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["master:7077",{"_index":3776,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["match",{"_index":998,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"community/vote/#vote-a-sedona-release":{},"setup/databricks/":{}},"title":{}}],["materi",{"_index":1780,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{}},"title":{}}],["matrix",{"_index":1910,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["matter",{"_index":2304,"text":{"archive/tutorial/rdd/":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"tutorial/rdd/":{}},"title":{}}],["maven",{"_index":1308,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v111":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/overview/":{},"archive/download/overview/#direct-download":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/download/project/#select-an-ide":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#set-up-dependencies":{},"community/develop/":{},"community/publish/":{},"community/publish/#failed-vote":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/overview/":{},"setup/overview/#download-statistics":{},"setup/release-notes/":{},"setup/release-notes/#global_2":{},"setup/release-notes/#v101":{},"setup/release-notes/#v110":{},"setup/release-notes/#v111":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"tutorial/demo/":{},"tutorial/demo/#prerequisites":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#set-up-dependencies":{},"tutorial/rdd/":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql/":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz/":{},"tutorial/viz/#set-up-dependencies":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"community/publish/#publish-maven-snapshots":{},"community/publish/#set-up-asf-username-for-maven":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#maven-coordinates":{}}}],["mavencoordiant",{"_index":3554,"text":{"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{}},"title":{}}],["max",{"_index":1208,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#colorize-pixels":{},"tutorial/viz/":{},"tutorial/viz/#colorize-pixels":{}},"title":{}}],["maxar",{"_index":2823,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["maxi",{"_index":192,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{}},"title":{}}],["maximum",{"_index":432,"text":{"api/flink/Function/":{},"api/flink/Function/#st_xmax":{},"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_xmax":{}},"title":{}}],["maximumi",{"_index":1113,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{}},"title":{}}],["maximumx",{"_index":1112,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{}},"title":{}}],["maxspe",{"_index":3886,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["maxvertic",{"_index":738,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{}},"title":{}}],["maxweight:doubl",{"_index":1204,"text":{"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{}},"title":{}}],["maxx",{"_index":191,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{}},"title":{}}],["maxx:decim",{"_index":195,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{}},"title":{}}],["maxy:decim",{"_index":196,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{}},"title":{}}],["mbr",{"_index":1656,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["mdm",{"_index":3123,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{}},"title":{}}],["mean",{"_index":95,"text":{"api/java-api/":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_mean":{},"api/viz/java-api/":{},"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/publish/":{},"community/publish/#publish-the-doc-website":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["mean_area",{"_index":3957,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["mean_area_sdf",{"_index":3956,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["meandf",{"_index":1143,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_mean":{}},"title":{}}],["meant",{"_index":2957,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["meantim",{"_index":2681,"text":{"archive/tutorial/viz/":{}},"title":{}}],["mechan",{"_index":2887,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{}},"title":{}}],["megapixel",{"_index":1704,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{}},"title":{}}],["member",{"_index":1560,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#project-management-committee-pmc":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{"community/contributor/#nominate-a-committer-or-pmc-member":{}}}],["membership",{"_index":2938,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["memori",{"_index":1543,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{}},"title":{}}],["memory_onli",{"_index":1996,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{}},"title":{}}],["mention",{"_index":2237,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"community/publication/":{},"community/publication/#key-publications":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/sql-python/":{},"tutorial/sql-python/#supported-shapely-objects":{}},"title":{}}],["mentor",{"_index":2855,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#create-asf-account":{},"community/contributor/#mentors":{}},"title":{"community/contributor/#mentors":{}}}],["merg",{"_index":654,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linemerge":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v112":{}},"title":{}}],["messag",{"_index":2918,"text":{"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{}},"title":{}}],["meta",{"_index":1939,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{}},"title":{}}],["meter",{"_index":825,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["method",{"_index":1469,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#read-from-other-geometry-files":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#read-from-other-geometry-files":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-python/#writing-application":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{}}}],["mgmt",{"_index":3020,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{}},"title":{}}],["microscop",{"_index":3048,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#key-publications":{}},"title":{}}],["mikhtoniuk",{"_index":1457,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["mile",{"_index":2595,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{}},"title":{}}],["min/max",{"_index":4108,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{}},"title":{}}],["mind",{"_index":3358,"text":{"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["mine",{"_index":1699,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/demo/":{},"tutorial/demo/#folder-structure":{}},"title":{}}],["mini",{"_index":190,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{}},"title":{}}],["minimum",{"_index":211,"text":{"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_xmin":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_xmin":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#set-up-dependencies":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/rdd/":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql/":{},"tutorial/sql/#set-up-dependencies":{}},"title":{}}],["minimumi",{"_index":1111,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{}},"title":{}}],["minimumx",{"_index":1110,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{}},"title":{}}],["minut",{"_index":1776,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/develop/":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{}},"title":{}}],["minx",{"_index":189,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{}},"title":{}}],["minx:decim",{"_index":193,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{}},"title":{}}],["miny:decim",{"_index":194,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{}},"title":{}}],["mishra",{"_index":1459,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["miss",{"_index":1536,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["mistak",{"_index":3672,"text":{"setup/release-notes/":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#python":{}},"title":{}}],["mit",{"_index":1414,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["mix",{"_index":1768,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{}},"title":{}}],["mkdir",{"_index":3206,"text":{"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["mkdoc",{"_index":1778,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"community/publish/":{},"community/publish/#publish-the-doc-website":{},"community/publish/#update-mkdocsyml":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{}},"title":{"setup/compile/#mkdocs-website":{}}}],["mkdocs.yml",{"_index":1782,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"community/publish/":{},"community/publish/#failed-vote":{},"community/publish/#publish-the-doc-website":{},"community/publish/#update-mkdocsyml":{},"community/rule/":{},"community/rule/#develop-a-document-contribution":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{}},"title":{"community/publish/#update-mkdocsyml":{}}}],["ml",{"_index":3529,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["ml_",{"_index":3531,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["mobil",{"_index":3122,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{}},"title":{}}],["mode",{"_index":302,"text":{"api/flink/Function/":{},"api/flink/Function/#st_force_2d":{},"api/sql/Function/":{},"api/sql/Function/#st_force_2d":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_mode":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/download/project/#try-geospark-sql-functions":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/download/scalashell/#spark-scala-shell":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/release-notes/":{},"setup/release-notes/#v082-geospark-core":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["modedf",{"_index":1146,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_mode":{}},"title":{}}],["model",{"_index":1559,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["modern",{"_index":3073,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["modif",{"_index":3349,"text":{"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["modifi",{"_index":2753,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{}}],["modified_polygon_sdf",{"_index":3960,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["modul",{"_index":1412,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"community/develop/":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/flink/modules/":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/modules/":{},"setup/release-notes/":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#v120":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/sql-python/":{},"tutorial/sql-python/#supported-shapely-objects":{}},"title":{"setup/flink/modules/":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{}}}],["modulo",{"_index":1149,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_modulo":{}},"title":{}}],["modulodf",{"_index":1152,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_modulo":{}},"title":{}}],["moham",{"_index":2838,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"community/publication/":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#geosparkviz-visualization-system":{}},"title":{}}],["moment",{"_index":3178,"text":{"community/publish/":{},"community/publish/#update-mkdocsyml":{},"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["mon",{"_index":3389,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["monitor",{"_index":2978,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["monotonically_increasing_id",{"_index":3772,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["more",{"_index":958,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/viz/":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"community/contact/":{},"community/contact/#feature-requests":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/develop/":{},"community/develop/#python-developers":{},"community/develop/#r-developers":{},"community/publish/":{},"community/publish/#release-the-package":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["moreov",{"_index":2143,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["mosarwat@apache.org",{"_index":2842,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["motel",{"_index":2174,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["move",{"_index":1872,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"community/publish/":{},"community/publish/#release-the-package":{},"setup/release-notes/":{},"setup/release-notes/#sedona-python":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{}}],["much",{"_index":2782,"text":{"community/contact/":{},"community/contact/#community":{}},"title":{}}],["multi",{"_index":363,"text":{"api/flink/Function/":{},"api/flink/Function/#st_numgeometries":{},"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_numgeometries":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries":{}},"title":{}}],["multi)linestr",{"_index":328,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geometryn":{},"api/sql/Function/":{},"api/sql/Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{}},"title":{}}],["multi)point",{"_index":327,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geometryn":{},"api/sql/Function/":{},"api/sql/Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{}},"title":{}}],["multi)polygon",{"_index":330,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geometryn":{},"api/sql/Function/":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{}},"title":{}}],["multicurv",{"_index":329,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geometryn":{},"api/sql/Function/":{},"api/sql/Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{}},"title":{}}],["multigeometri",{"_index":572,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_multi":{}},"title":{}}],["multilin",{"_index":3821,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-spark-sedona-with-saved-hdfs-file":{}},"title":{}}],["multilinestr",{"_index":652,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"tutorial/sql-python/":{},"tutorial/sql-python/#multilinestring":{},"tutorial/sql-python/#supported-shapely-objects":{}},"title":{"archive/tutorial/geospark-sql-python/#multilinestring":{},"tutorial/sql-python/#multilinestring":{}}}],["multilinestring((0",{"_index":278,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{},"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{}},"title":{}}],["multipartit",{"_index":3691,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-core":{}},"title":{}}],["multipl",{"_index":694,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/download/project/":{},"archive/download/project/#self-contained-spark-projects":{},"archive/tutorial/rdd/":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"tutorial/rdd/":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["multipli",{"_index":1155,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{}},"title":{}}],["multiplyband",{"_index":1157,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_multiply":{}},"title":{}}],["multiplydf",{"_index":1103,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_divide":{},"api/sql/Raster-operators/#rs_multiply":{}},"title":{}}],["multiplyfactor",{"_index":1162,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_multiplyfactor":{}},"title":{}}],["multiplyfactordf",{"_index":1160,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_multiplyfactor":{}},"title":{}}],["multipoint",{"_index":581,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_multi":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"tutorial/sql-python/":{},"tutorial/sql-python/#multipoint":{},"tutorial/sql-python/#supported-shapely-objects":{}},"title":{"archive/tutorial/geospark-sql-python/#multipoint":{},"tutorial/sql-python/#multipoint":{}}}],["multipoint((1",{"_index":333,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geometryn":{},"api/sql/Function/":{},"api/sql/Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{}},"title":{}}],["multipoint(40",{"_index":595,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{}},"title":{}}],["multipolygon",{"_index":775,"text":{"api/sql/Function/":{},"api/sql/Function/#st_symdifference":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/sql-python/":{},"tutorial/sql-python/#multipolygon":{},"tutorial/sql-python/#supported-shapely-objects":{}},"title":{"archive/tutorial/geospark-sql-python/#multipolygon":{},"tutorial/sql-python/#multipolygon":{}}}],["multipolygon(((0",{"_index":282,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{},"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{}},"title":{}}],["munich",{"_index":3084,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["museum",{"_index":2210,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["mutabl",{"_index":3685,"text":{"setup/release-notes/":{},"setup/release-notes/#core_1":{}},"title":{}}],["mutat",{"_index":3961,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["mvn",{"_index":1772,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"community/develop/":{},"community/publish/":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"community/vote/#run-the-verify-script":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-with-different-targets":{}},"title":{}}],["mydatafram",{"_index":870,"text":{"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/tutorial/sql/":{},"tutorial/sql/":{}},"title":{}}],["mygeosparksqldemo",{"_index":1293,"text":{"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{}},"title":{}}],["mygeosparkvizdemo",{"_index":1306,"text":{"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{}},"title":{}}],["myloc",{"_index":2585,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-spatial-knn-query":{}},"title":{}}],["mynam",{"_index":4112,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-row-objects":{}},"title":{}}],["mypointid",{"_index":804,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{}},"title":{}}],["mypolygonid",{"_index":800,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{}},"title":{}}],["mysedonasqldemo",{"_index":897,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{}},"title":{}}],["mysedonavizdemo",{"_index":1190,"text":{"api/viz/sql/":{},"api/viz/sql/#quick-start":{}},"title":{}}],["myshapefil",{"_index":509,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["myshapefile.dbf",{"_index":515,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["myshapefile.shp",{"_index":513,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["myshapefile.shx",{"_index":514,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["mytabl",{"_index":4035,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["n",{"_index":332,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/sql/Function/":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_pointn":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["n/a",{"_index":3668,"text":{"setup/release-notes/":{},"setup/release-notes/#viz":{}},"title":{}}],["na",{"_index":3860,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["name",{"_index":995,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/viz/sql/":{},"api/viz/sql/#st_tilename":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#initiate-sparksession":{},"community/contributor/":{},"community/contributor/#close-a-vote":{},"community/contributor/#committer-done-template":{},"community/contributor/#mentors":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#project-management-committee-pmc":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#make-a-pull-request":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{},"setup/flink/modules/":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#snapshot-versions":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"tutorial/core-python/":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#get-spatial-table":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql/":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#initiate-sparksession":{}},"title":{"archive/tutorial/viz/#create-tile-name":{},"tutorial/viz/#create-tile-name":{}}}],["name1",{"_index":3251,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["name2",{"_index":3252,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["name3",{"_index":3253,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["name4",{"_index":3254,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["name_point",{"_index":4075,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["name_polygon",{"_index":4049,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["nasa",{"_index":1643,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global_1":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["nativ",{"_index":1686,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/viz/":{}},"title":{}}],["nativejavagener",{"_index":1717,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{}},"title":{}}],["nband",{"_index":954,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{}},"title":{}}],["nbr",{"_index":1078,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{}},"title":{}}],["nd",{"_index":3906,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["ndbi",{"_index":1079,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_normalizeddifference":{}},"title":{}}],["ndvi",{"_index":1167,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_normalizeddifference":{}},"title":{}}],["nearest",{"_index":2062,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#knn-query":{},"setup/overview/":{},"setup/overview/#distributed-spatial-queries":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/sql/":{},"tutorial/sql/#knn-query":{}},"title":{}}],["nearnest",{"_index":2055,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-spatial-knn-query":{}},"title":{}}],["neat",{"_index":1718,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{}},"title":{}}],["necessari",{"_index":1735,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"community/rule/#develop-a-document-contribution":{},"community/vote/":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-python/":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{}},"title":{"community/vote/#install-necessary-software":{}}}],["necessarili",{"_index":2774,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{}},"title":{}}],["need",{"_index":410,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#self-contained-spark-projects":{},"archive/download/project/#try-geospark-sql-functions":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/download/zeppelin/#installation":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#generate-map-tiles":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#send-the-invitation":{},"community/develop/":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{},"setup/databricks/":{},"setup/databricks/#community-edition-free-tier":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/databricks/#pure-sql-environment":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-python/#setup-environment-variables":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#snapshot-versions":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v120":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"setup/zeppelin/#installation":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#generate-map-tiles":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#render-map-tiles":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{}}],["neg",{"_index":369,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointn":{},"api/sql/Function/":{},"api/sql/Function/#st_pointn":{}},"title":{}}],["neighbor",{"_index":2056,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#knn-query":{},"setup/overview/":{},"setup/overview/#distributed-spatial-queries":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/sql/":{},"tutorial/sql/#knn-query":{}},"title":{}}],["nest",{"_index":1008,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["nestedloopjudg",{"_index":3654,"text":{"setup/release-notes/":{},"setup/release-notes/#global_1":{}},"title":{}}],["netanel",{"_index":1394,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{}},"title":{}}],["netcdf/hdf",{"_index":1632,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-typed-spatialrdd":{}},"title":{}}],["network",{"_index":1752,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#key-publications":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["neumann",{"_index":3080,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["new",{"_index":483,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Function/":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"community/contact/":{},"community/contact/#feature-requests":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#call-for-a-vote":{},"community/contributor/#close-a-vote":{},"community/contributor/#committer-done-template":{},"community/contributor/#create-asf-account":{},"community/contributor/#nominate-a-committer-or-pmc-member":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#failed-vote":{},"community/publish/#prepare-secret-gpg-key":{},"community/rule/":{},"community/rule/#pick-annouce-a-task-using-jira":{},"setup/install-scala/":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global":{},"setup/release-notes/#sedona-100":{},"setup/release-notes/#sedona-101":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sedona-111":{},"setup/release-notes/#sedona-120":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#sql_1":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/viz/":{},"tutorial/viz/#store-the-image-on-disk":{}},"title":{}}],["new.3.nam",{"_index":3850,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["new_geometri",{"_index":3973,"text":{"tutorial/sql/":{},"tutorial/sql/#load-geoparquet":{}},"title":{}}],["newband",{"_index":1087,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{}},"title":{}}],["newcountyshap",{"_index":2648,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#range-query":{},"tutorial/sql/":{},"tutorial/sql/#knn-query":{},"tutorial/sql/#range-query":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["newcountyshape|_c1|_c2",{"_index":2649,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["newer",{"_index":2880,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{}},"title":{}}],["newest",{"_index":1961,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#installation":{}},"title":{}}],["newinst",{"_index":4041,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#initiate-stream-environment":{}},"title":{}}],["newlevel",{"_index":1886,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}},"title":{}}],["newli",{"_index":2763,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/rule/":{},"community/rule/#develop-a-document-contribution":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["next",{"_index":2968,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/publish/":{},"community/publish/#publish-the-doc-website":{}},"title":{}}],["node",{"_index":1969,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#installation":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}}}],["nodepattern",{"_index":3449,"text":{"setup/databricks/":{},"setup/databricks/#advanced-editions":{}},"title":{}}],["nomin",{"_index":2891,"text":{"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{}},"title":{"community/contributor/#nominate-a-committer-or-pmc-member":{}}}],["non",{"_index":520,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"tutorial/core-python/":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}}}],["none",{"_index":1472,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-from-wheel-file":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installing-from-wheel-file":{},"setup/release-notes/":{},"setup/release-notes/#v101":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{}},"title":{}}],["nonsens",{"_index":1200,"text":{"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{}},"title":{}}],["noreport",{"_index":3333,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{}},"title":{}}],["noreturn",{"_index":2131,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{}},"title":{}}],["normal",{"_index":1077,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_normalize":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/project/":{},"archive/download/project/#submit-the-compiled-jar":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["normalizeddf",{"_index":1168,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_normalizeddifference":{}},"title":{}}],["normalizeddiffer",{"_index":1089,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{}},"title":{}}],["normdiffer",{"_index":1170,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_normalizeddifference":{}},"title":{}}],["notabl",{"_index":2896,"text":{"community/contributor/":{},"community/contributor/#call-for-a-vote":{}},"title":{}}],["note",{"_index":91,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/java-api/":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Function/":{},"api/sql/Function/#st_linemerge":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_transform":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#range-join":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/viz/java-api/":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"api/viz/sql/#st_tilename":{},"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/overview/":{},"archive/download/overview/#direct-download":{},"archive/download/project/":{},"archive/download/project/#quick-start":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#installation":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#python":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/viz/":{},"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/contributor/#send-the-invitation":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#publish-the-doc-website":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#develop-a-document-contribution":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/release-notes/":{},"setup/zeppelin/":{},"setup/zeppelin/#installation":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/demo/":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#range-query":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"setup/release-notes/":{},"setup/release-notes/#geospark-legacy-release-notes":{}}}],["notebook",{"_index":2741,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#setup-environment-variables":{},"setup/release-notes/":{},"setup/release-notes/#global_2":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/raster/":{},"tutorial/raster/#tutorials":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}}}],["notes.md",{"_index":3237,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["noth",{"_index":1620,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["notic",{"_index":1888,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/vote/":{},"community/vote/#check-files-manually":{},"community/vote/#vote-a-sedona-release":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{"community/contributor/#send-a-notice-to-ipmc":{}}}],["notif",{"_index":413,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{}},"title":{}}],["notifi",{"_index":2977,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["novemb",{"_index":3103,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{}},"title":{}}],["now",{"_index":15,"text":{"":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#display-geosparkviz-results":{},"archive/tutorial/faq/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#render-map-tiles":{},"community/contributor/":{},"community/contributor/#close-a-vote":{},"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#sedona-121":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#v01-v07":{},"setup/zeppelin/":{},"setup/zeppelin/#display-sedonaviz-results":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#render-map-tiles":{}},"title":{"#04162022-sedona-120-incubating-is-released-sedona-now-supports-geospatial-stream-processing-in-apache-flink":{},"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{},"#11232021-sedona-111-incubating-is-released-it-now-supports-spark-32":{}}}],["npm",{"_index":3277,"text":{"community/publish/":{},"community/publish/#release-the-package":{}},"title":{}}],["nth",{"_index":325,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_pointn":{},"api/sql/Function/":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_pointn":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{}},"title":{}}],["null",{"_index":250,"text":{"api/flink/Function/":{},"api/flink/Function/#st_azimuth":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_z":{},"api/sql/Function/":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_z":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["nullabl",{"_index":951,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"tutorial/core-python/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["nullpointerexcept",{"_index":3663,"text":{"setup/release-notes/":{},"setup/release-notes/#core":{}},"title":{}}],["nullpointexcept",{"_index":1441,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["null|nul",{"_index":2626,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["null|point",{"_index":2224,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["num_partit",{"_index":3709,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-python":{}},"title":{}}],["number",{"_index":361,"text":{"api/flink/Function/":{},"api/flink/Function/#st_npoints":{},"api/flink/Function/#st_numgeometries":{},"api/flink/Function/#st_numinteriorrings":{},"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_numgeometries":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Function/#st_subdivide":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#rs_getband":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/rdd/":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/release-notes/":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#v112":{},"setup/release-notes/#v131":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["numer",{"_index":1411,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"community/contributor/":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["o",{"_index":3336,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["object",{"_index":573,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_multi":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_1":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#read-from-other-geometry-files":{},"archive/tutorial/geospark-core-python/#reload-a-saved-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_1":{},"archive/tutorial/rdd/#output-format_2":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/rdd/#reload-a-saved-spatialrdd":{},"archive/tutorial/rdd/#save-an-spatialrdd-indexed":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/overview/":{},"setup/release-notes/":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_1":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#read-from-other-geometry-files":{},"tutorial/core-python/#reload-a-saved-spatialrdd":{},"tutorial/core-python/#save-an-spatialrdd-indexed":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_1":{},"tutorial/rdd/#output-format_2":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/rdd/#reload-a-saved-spatialrdd":{},"tutorial/rdd/#save-an-spatialrdd-indexed":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"archive/tutorial/geospark-sql-python/#creating-spark-dataframe-based-on-shapely-objects":{},"archive/tutorial/geospark-sql-python/#example-usage-for-shapely-objects":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"setup/overview/#complex-spatial-objects":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/sql-python/#creating-spark-dataframe-based-on-shapely-objects":{},"tutorial/sql-python/#example-usage-for-shapely-objects":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/viz/#pixelize-spatial-objects":{}}}],["object_rdd",{"_index":2020,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{}},"title":{}}],["objectfil",{"_index":2598,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["objectrdd",{"_index":2287,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_2":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_2":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{}},"title":{}}],["objectrdd.indexedrawrdd.saveasobjectfile(\"hdfs://path",{"_index":2596,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["objectrdda",{"_index":2592,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{}},"title":{}}],["objectrddb",{"_index":2593,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{}},"title":{}}],["observ",{"_index":1196,"text":{"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{}},"title":{}}],["obtain",{"_index":1052,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_getband":{},"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/download/project/":{},"archive/download/project/#quick-start":{},"community/contact/":{},"community/contact/#community":{},"community/publish/":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{}},"title":{"community/publish/#obtain-write-access-to-sedona-github-repo":{}}}],["occasion",{"_index":2986,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["occupi",{"_index":2303,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["offer",{"_index":2676,"text":{"archive/tutorial/viz/":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"tutorial/viz/":{}},"title":{}}],["offici",{"_index":1348,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#introduction":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#v131":{},"tutorial/core-python/":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#range-query-window":{}},"title":{}}],["offset",{"_index":1882,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/rdd/":{}},"title":{}}],["old",{"_index":52,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/rdd/":{},"download/":{},"download/#github-repository":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/rdd/":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/#geospark-viz-old":{}}}],["omit",{"_index":587,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{}},"title":{}}],["on",{"_index":658,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_multi":{},"api/sql/Function/#st_removepoint":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#self-contained-spark-projects":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_2":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/viz/#store-map-tiles-on-disk":{},"archive/tutorial/zeppelin/":{},"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"community/publish/":{},"community/publish/#set-up-asf-username-for-maven":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/release-notes/":{},"setup/release-notes/#sedona-101":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_2":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#render-the-image":{},"tutorial/viz/#store-map-tiles-on-disk":{},"tutorial/zeppelin/":{}},"title":{}}],["onc",{"_index":2037,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"community/contributor/":{},"community/contributor/#create-asf-account":{},"community/contributor/#pmc-annoucement":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["onofr",{"_index":2864,"text":{"community/contributor/":{},"community/contributor/#mentors":{}},"title":{}}],["op",{"_index":4047,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["open",{"_index":1807,"text":{"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#enable-geospark-zeppelin":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"community/develop/":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/zeppelin/":{},"setup/zeppelin/#enable-sedona-zeppelin":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{"archive/download/project/#open-geospark-template-project":{}}}],["openjdk",{"_index":1678,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["openssl",{"_index":3327,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{}},"title":{}}],["openstreetmap",{"_index":1246,"text":{"api/viz/sql/":{},"api/viz/sql/#st_tilename":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{}},"title":{}}],["oper",{"_index":456,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/raster/":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{"api/sql/Raster-operators/":{}}}],["opinion",{"_index":2963,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["optim",{"_index":778,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql/":{},"tutorial/sql/#register-sedonasql":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{}}}],["option",{"_index":126,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Function/":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_transform":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_html":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"api/viz/sql/#st_render":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/download/zeppelin/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"setup/compile/":{},"setup/compile/#compile-with-different-targets":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#python":{},"setup/release-notes/#v01-v07":{},"setup/zeppelin/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd/":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#load-geoparquet":{}},"title":{"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/download/zeppelin/#create-helium-folder-optional":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"setup/zeppelin/#create-helium-folder-optional":{}}}],["order",{"_index":386,"text":{"api/flink/Function/":{},"api/flink/Function/#st_reverse":{},"api/flink/Function/#st_transform":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/Function/":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_transform":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_orderingequals":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#knn-query":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/databricks/#pure-sql-environment":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#snapshot-versions":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/sql/":{},"tutorial/sql/#knn-query":{}},"title":{}}],["orenstein",{"_index":1451,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["org",{"_index":900,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"setup/databricks/":{},"setup/databricks/#initialise":{}},"title":{}}],["org.apache.flink.types.row",{"_index":4113,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-row-objects":{}},"title":{}}],["org.apache.maven.plugins:maven",{"_index":3193,"text":{"community/publish/":{}},"title":{}}],["org.apache.sedona",{"_index":3566,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["org.apache.sedona.core.formatmapper.formatutil",{"_index":4104,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{}},"title":{}}],["org.apache.sedona.core.serde.sedonakryoregistr",{"_index":894,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{}},"title":{}}],["org.apache.sedona.core.spatialrdd.spatialrdd",{"_index":3921,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["org.apache.sedona.core.spatialrdd.spatialrdd@422afc5a",{"_index":3922,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["org.apache.sedona.viz.core.serde.sedonavizkryoregistr",{"_index":1189,"text":{"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["org.apache.sedona.viz.sql.sedonavizextensions,org.apache.sedona.sql.sedonasqlextens",{"_index":3492,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{}},"title":{}}],["org.apache.sedona:sedona",{"_index":3462,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{}},"title":{}}],["org.apache.spark",{"_index":1817,"text":{"archive/download/project/":{},"archive/download/project/#package-the-project":{}},"title":{}}],["org.apache.spark.serializer.kryoseri",{"_index":892,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["org.apache.spark.sql.catalyst.expressions.gener",{"_index":3448,"text":{"setup/databricks/":{},"setup/databricks/#advanced-editions":{}},"title":{}}],["org.apache.spark.sql.geosparksql.expressions.st_contain",{"_index":1288,"text":{"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{}},"title":{}}],["org.apache.spark.sql.sedona_sql.expressions.st_contain",{"_index":864,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{}},"title":{}}],["org.datasyslab",{"_index":1313,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-113-and-earlier":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["org.datasyslab.geospark.serde.geosparkkryoregistr",{"_index":2137,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{}},"title":{}}],["org.datasyslab:geospark:1.2.0,org.datasyslab:geospark",{"_index":1828,"text":{"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{}},"title":{}}],["org.datasyslab:geospark:geospark_vers",{"_index":1827,"text":{"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{}},"title":{}}],["org.datasyslab:geotool",{"_index":3464,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["org.datasyslab:sernetcdf:0.1.0",{"_index":3547,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["org.locationtech.jt",{"_index":3577,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{}},"title":{}}],["org.locationtech.jts.geom.geometri",{"_index":4097,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["org.locationtech.jts.geom.geometryfactori",{"_index":4110,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{}},"title":{}}],["org.locationtech.jts:jt",{"_index":3548,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["org.wololo",{"_index":3583,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#jts2geojson-0161":{}},"title":{}}],["org.wololo:jts2geojson:0.14.3",{"_index":3550,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["org/apache/sedona/sedona",{"_index":3288,"text":{"community/publish/":{}},"title":{}}],["organ",{"_index":3012,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"tutorial/python-vector-osm/":{}},"title":{"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}}}],["origin",{"_index":230,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_linemerge":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#v01-v07":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/core-python/":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{}},"title":{}}],["osgeo",{"_index":3562,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["osm",{"_index":3754,"text":{"tutorial/python-vector-osm/":{}},"title":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}}}],["osm_id|cod",{"_index":2215,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["oss",{"_index":1334,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#buildsbt":{}},"title":{}}],["other",{"_index":3633,"text":{"setup/release-notes/":{},"setup/release-notes/#rdd":{}},"title":{}}],["otherwis",{"_index":251,"text":{"api/flink/Function/":{},"api/flink/Function/#st_azimuth":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_z":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Function/":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_z":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["othwerwis",{"_index":3560,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["ouput",{"_index":1215,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{}},"title":{}}],["out",{"_index":339,"text":{"api/flink/Function/":{},"api/flink/Function/#st_interiorringn":{},"api/sql/Function/":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#generate-a-single-image":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/develop/":{},"community/publish/":{},"community/publish/#publish-the-doc-website":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{},"tutorial/viz/":{},"tutorial/viz/#generate-a-single-image":{}},"title":{}}],["out:json",{"_index":3802,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["outcom",{"_index":3356,"text":{"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["outlin",{"_index":2273,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/viz/":{},"tutorial/flink/sql/":{},"tutorial/rdd/":{},"tutorial/sql/":{},"tutorial/viz/":{}},"title":{}}],["outofmemori",{"_index":1443,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["output",{"_index":255,"text":{"api/flink/Function/":{},"api/flink/Function/#st_azimuth":{},"api/flink/Function/#st_boundary":{},"api/flink/Function/#st_buildarea":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_isring":{},"api/flink/Function/#st_numinteriorrings":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_reverse":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/flink/Function/#st_z":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_startpoint":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/sql/Function/#st_z":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-loader/#rs_html":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_1":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format":{},"archive/tutorial/rdd/#output-format_1":{},"archive/tutorial/rdd/#output-format_2":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_1":{},"tutorial/core-python/#output-format_2":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format":{},"tutorial/rdd/#output-format_1":{},"tutorial/rdd/#output-format_2":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{"api/sql/Raster-loader/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_1":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/rdd/#output-format":{},"archive/tutorial/rdd/#output-format_1":{},"archive/tutorial/rdd/#output-format_2":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_1":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#output-format_3":{},"tutorial/rdd/#output-format":{},"tutorial/rdd/#output-format_1":{},"tutorial/rdd/#output-format_2":{}}}],["output_loc",{"_index":4008,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["over",{"_index":1747,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#range-query":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#range-query":{},"tutorial/sql/":{},"tutorial/sql/#range-query":{}},"title":{}}],["overal",{"_index":2931,"text":{"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{}},"title":{}}],["overflow",{"_index":1593,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["overhead",{"_index":1601,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["overlap",{"_index":937,"text":{"api/sql/Predicate/":{},"api/sql/Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{}},"title":{}}],["overlay",{"_index":2735,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["overlayoper",{"_index":1712,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{}},"title":{}}],["overload",{"_index":1940,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{}},"title":{}}],["overpass",{"_index":3797,"text":{"tutorial/python-vector-osm/":{}},"title":{"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}}}],["overpass_queri",{"_index":3801,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["overpass_url",{"_index":3798,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["overrid",{"_index":1005,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["oversight",{"_index":2944,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["overview",{"_index":448,"text":{},"title":{"api/flink/Overview/":{},"setup/overview/":{}}}],["overwrit",{"_index":1001,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["owner",{"_index":3401,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["p",{"_index":2186,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["p.fclass",{"_index":2185,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["p1",{"_index":3872,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["p1.id",{"_index":3873,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["p2",{"_index":3881,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["p2.id",{"_index":3874,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["p2.inclin",{"_index":3876,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["p2.maxspe",{"_index":3875,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["p2.name",{"_index":3878,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["p2.node",{"_index":3879,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["p2.surfac",{"_index":3877,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["p2.total_nod",{"_index":3880,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["packag",{"_index":1793,"text":{"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#installation":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#introduction":{},"community/publish/":{},"community/publish/#release-the-package":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"setup/zeppelin/":{},"setup/zeppelin/#installation":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{}},"title":{"archive/download/project/#package-the-project":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"community/publish/#release-the-package":{},"tutorial/demo/#compile-and-package":{},"tutorial/sql-python/#register-package":{}}}],["page",{"_index":1083,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"archive/download/cluster/":{},"archive/download/cluster/#set-up-your-apache-spark-cluster":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/viz/":{},"community/contributor/":{},"community/publish/":{},"community/publish/#publish-sedona":{},"community/publish/#release-the-package":{},"community/publish/#update-mkdocsyml":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{},"setup/cluster/":{},"setup/cluster/#set-up-your-apache-spark-cluster":{},"tutorial/flink/sql/":{},"tutorial/rdd/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/viz/":{}},"title":{}}],["pair",{"_index":784,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_2":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_2":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_2":{}},"title":{}}],["pair_rdd",{"_index":4004,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["pairrdd",{"_index":2073,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_2":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_2":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_2":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["panda",{"_index":2145,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["pandey",{"_index":3076,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["paper",{"_index":3044,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#geosparkviz-visualization-system":{},"community/publication/#key-publications":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["para",{"_index":3661,"text":{"setup/release-notes/":{},"setup/release-notes/#core":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["paragraph",{"_index":2742,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["parallel",{"_index":1710,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"tutorial/viz/":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["param",{"_index":2130,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{}},"title":{}}],["paramet",{"_index":408,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_transform":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/viz/sql/":{},"api/viz/sql/#st_render":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v110":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-spatial-range-query":{}},"title":{"api/sql/Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/":{}}}],["params={'data",{"_index":3810,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["parent",{"_index":3027,"text":{"community/develop/":{}},"title":{}}],["parquet",{"_index":3687,"text":{"setup/release-notes/":{},"setup/release-notes/#sql_3":{}},"title":{}}],["pars",{"_index":3907,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["part",{"_index":601,"text":{"api/sql/Function/":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_symdifference":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#v112":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["part3",{"_index":451,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/tutorial/sql/":{},"setup/release-notes/":{},"setup/release-notes/#v100":{},"tutorial/flink/sql/":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql/":{}},"title":{}}],["parti",{"_index":3053,"text":{"community/publication/":{},"setup/maven-coordinates/":{}},"title":{"community/publication/#third-party-evaluation":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{}}}],["partial",{"_index":2120,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#python":{}},"title":{}}],["particip",{"_index":2781,"text":{"community/contact/":{},"community/contact/#community":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#send-the-invitation":{},"community/rule/":{},"community/rule/#code-of-conduct":{}},"title":{}}],["particular",{"_index":1051,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_modulo":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["partit",{"_index":830,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#rdd":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v112":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-distance-join-query":{}},"title":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/rdd/#use-spatial-partitioning":{}}}],["partition",{"_index":2071,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-partitioning":{}},"title":{}}],["partitionfilt",{"_index":2199,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["pass",{"_index":1439,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"community/vote/#vote-a-sedona-release":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v120":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/sql-python/":{},"tutorial/sql-python/#register-package":{},"tutorial/sql/":{},"tutorial/sql/#register-sedonasql":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{}}],["password",{"_index":1724,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#set-up-asf-username-for-maven":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["password>your_asf_password</password",{"_index":3143,"text":{"community/publish/":{},"community/publish/#set-up-asf-username-for-maven":{}},"title":{}}],["past",{"_index":77,"text":{"community/contributor/":{},"community/contributor/#close-a-vote":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"download/":{},"download/#past-releases":{}},"title":{"download/#past-releases":{}}}],["patch",{"_index":1481,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/contact/#community":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#pmc-annoucement":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["path",{"_index":204,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromtext":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/develop/":{},"community/publish/":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"setup/release-notes/#v080-geospark-core":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-spark-sedona-with-saved-hdfs-file":{},"tutorial/rdd/":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{}}],["path/to/geosparkjars.jar",{"_index":1833,"text":{"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{}},"title":{}}],["path/to/sedonajars.jar",{"_index":3557,"text":{"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-manually":{}},"title":{}}],["path/to/yourjar.jar",{"_index":1799,"text":{"archive/download/project/":{},"archive/download/project/#quick-start":{},"archive/download/project/#submit-the-compiled-jar":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{}},"title":{}}],["path>/incub",{"_index":3933,"text":{"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{}},"title":{}}],["path_to_input_geotiff_imag",{"_index":1003,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["patienc",{"_index":1754,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["pattern",{"_index":1908,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["paw",{"_index":1388,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["pawelkocinski",{"_index":3385,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["pd",{"_index":3757,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["pd.dataframe(isolate_ids[\"id\"].iloc[0]).drop_dupl",{"_index":3836,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["pdt",{"_index":3393,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["peer",{"_index":2956,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["peniaziev",{"_index":1449,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["peopl",{"_index":1925,"text":{"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"community/contact/":{},"community/contact/#community":{},"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{}},"title":{}}],["per",{"_index":58,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"download/":{},"download/#github-repository":{},"setup/compile/":{},"setup/compile/#download-staged-jars":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#dataframe-to-spatialrdd":{}},"title":{}}],["percival",{"_index":2867,"text":{"community/contributor/":{},"community/contributor/#mentors":{}},"title":{}}],["percivall@apache.org",{"_index":2868,"text":{"community/contributor/":{},"community/contributor/#mentors":{}},"title":{}}],["perform",{"_index":780,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global_1":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v131":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{}},"title":{}}],["perimet",{"_index":359,"text":{"api/flink/Function/":{},"api/flink/Function/#st_length":{},"api/sql/Function/":{},"api/sql/Function/#st_length":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_length":{}},"title":{}}],["period",{"_index":2888,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#send-a-notice-to-ipmc":{}},"title":{}}],["permalink",{"_index":3247,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["perman",{"_index":2086,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-an-spatialrdd-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"tutorial/core-python/":{},"tutorial/core-python/#save-an-spatialrdd-indexed":{},"tutorial/core-python/#save-an-spatialrdd-not-indexed":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/rdd/":{},"tutorial/rdd/#save-an-spatialrdd-indexed":{},"tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{}},"title":{"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql/#save-to-permanent-storage":{}}}],["permiss",{"_index":3374,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["perr",{"_index":1453,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["persist",{"_index":1485,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v112":{}},"title":{}}],["perspect",{"_index":3041,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publication/#key-publications":{}},"title":{}}],["petabyt",{"_index":1644,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["pgp",{"_index":3200,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{}},"title":{}}],["phase",{"_index":1654,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["physic",{"_index":789,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["pick",{"_index":1861,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"community/rule/":{},"community/rule/#pick-annouce-a-task-using-jira":{},"setup/databricks/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"community/rule/#pick-annouce-a-task-using-jira":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}}}],["pid",{"_index":2728,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#render-map-tiles":{},"tutorial/viz/":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#render-map-tiles":{}},"title":{}}],["pip",{"_index":1972,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-from-pypi-repositories":{},"archive/tutorial/geospark-core-python/#installing-from-wheel-file":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installing-from-pypi-repositories":{},"archive/tutorial/geospark-sql-python/#installing-from-wheel-file":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{},"setup/compile/#run-python-test":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/release-notes/":{},"setup/release-notes/#known-issue":{}},"title":{}}],["pip3",{"_index":3434,"text":{"setup/compile/":{},"setup/compile/#run-python-test":{}},"title":{}}],["pipelin",{"_index":1709,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["pipenv",{"_index":1974,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-from-wheel-file":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installing-from-wheel-file":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{}}],["pipfil",{"_index":3501,"text":{"setup/install-python/":{}},"title":{}}],["pixel",{"_index":1150,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_modulo":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"api/viz/sql/#st_pixelize":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/#st_render":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#render-the-image":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#colorize-pixels_1":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#colorize-pixels_1":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#pixelize-spatial-objects":{}}}],["pixelaggreg",{"_index":2716,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#render-the-image":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#render-the-image":{}},"title":{}}],["place",{"_index":718,"text":{"api/sql/Function/":{},"api/sql/Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#self-contained-spark-projects":{},"community/publish/":{},"community/publish/#upload-release-candidate":{},"community/rule/":{},"community/rule/#develop-a-document-contribution":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{}},"title":{}}],["plain",{"_index":2661,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{}},"title":{}}],["plan",{"_index":790,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["platform",{"_index":3502,"text":{"setup/install-python/":{},"setup/install-python/#install-sedona":{}},"title":{}}],["play",{"_index":3497,"text":{"setup/install-python/":{},"setup/install-python/#setup-environment-variables":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{}}],["pleas",{"_index":84,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/java-api/":{},"api/r-api/":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/viz/java-api/":{},"api/viz/sql/":{},"api/viz/sql/#st_tilename":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-1x-versions":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-2x-versions":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#display-geosparkviz-results":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/faq/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#installing-from-pypi-repositories":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#installing-from-pypi-repositories":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#load-shapefile-and-geojson":{},"archive/tutorial/sql/#other-queries":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#send-the-invitation":{},"community/develop/":{},"community/publication/":{},"community/publication/#key-publications":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#failed-vote":{},"community/publish/#prepare-secret-gpg-key":{},"community/publish/#release-the-package":{},"community/publish/#set-up-asf-username-for-maven":{},"community/publish/#update-mkdocsyml":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#code-of-conduct":{},"community/rule/#develop-a-document-contribution":{},"community/rule/#make-a-pull-request":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"download/":{},"download/#security":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#mkdocs-website":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/install-scala/#spark-sql-shell":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v120":{},"setup/zeppelin/":{},"setup/zeppelin/#display-sedonaviz-results":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#installation":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#range-query-window":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/demo/":{},"tutorial/demo/#prerequisites":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql-python/":{},"tutorial/sql-python/#installation":{},"tutorial/sql-python/#register-package":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#load-shapefile-and-geojson":{},"tutorial/sql/#other-queries":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#visualize-spatialrdd":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{}}],["plot",{"_index":1213,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#sedona-viz":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#render-the-image":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["plug",{"_index":3748,"text":{"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{}},"title":{}}],["plugin",{"_index":2729,"text":{"archive/tutorial/zeppelin/":{},"community/develop/":{},"community/develop/#ide":{},"community/publish/":{},"community/publish/#failed-vote":{},"community/publish/#release-the-package":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"tutorial/zeppelin/":{}},"title":{}}],["plugin:2.3.2:perform",{"_index":3194,"text":{"community/publish/":{}},"title":{}}],["pmc",{"_index":2811,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#close-a-vote":{},"community/contributor/#committer-done-template":{},"community/contributor/#create-asf-account":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#project-management-committee-pmc":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{"community/contributor/":{},"community/contributor/#nominate-a-committer-or-pmc-member":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#project-management-committee-pmc":{}}}],["pmc/ppmc'",{"_index":2964,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["png",{"_index":1227,"text":{"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"api/viz/sql/#st_render":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/#st_render":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"tutorial/viz/":{},"tutorial/viz/#store-the-image-on-disk":{}},"title":{}}],["podl",{"_index":2939,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["poi",{"_index":2182,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["point",{"_index":179,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_point":{},"api/flink/Constructor/#st_pointfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_azimuth":{},"api/flink/Function/#st_buffer":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_issimple":{},"api/flink/Function/#st_npoints":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_z":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_point":{},"api/sql/Constructor/#st_pointfromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_centroid":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_issimple":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_minimumboundingradius":{},"api/sql/Function/#st_npoints":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_pointonsurface":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_startpoint":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_z":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_centroid":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Function/#st_npoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v091-geospark-core":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#range-query-window":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"archive/tutorial/geospark-sql-python/#point":{},"tutorial/sql-python/#point":{}}}],["point(0",{"_index":712,"text":{"api/sql/Function/":{},"api/sql/Function/#st_pointonsurface":{}},"title":{}}],["point(1",{"_index":709,"text":{"api/sql/Function/":{},"api/sql/Function/#st_multi":{}},"title":{}}],["point(100",{"_index":733,"text":{"api/sql/Function/":{},"api/sql/Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{}},"title":{}}],["point(160",{"_index":624,"text":{"api/sql/Function/":{},"api/sql/Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{}},"title":{}}],["point(2.5",{"_index":715,"text":{"api/sql/Function/":{},"api/sql/Function/#st_pointonsurface":{}},"title":{}}],["point(21",{"_index":560,"text":{"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{}},"title":{}}],["point(21.427834",{"_index":319,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geohash":{},"api/sql/Function/":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_geohash":{}},"title":{}}],["point(40.7128",{"_index":160,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromtext":{},"api/flink/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{}},"title":{}}],["point(45.342524",{"_index":579,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collect":{}},"title":{}}],["point,polygon",{"_index":2074,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_2":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_2":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_2":{}},"title":{}}],["point/polygon/linestr",{"_index":2570,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{}},"title":{}}],["point_rdd",{"_index":2000,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{}},"title":{}}],["pointb",{"_index":253,"text":{"api/flink/Function/":{},"api/flink/Function/#st_azimuth":{},"api/sql/Function/":{},"api/sql/Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{}},"title":{}}],["pointdata",{"_index":3937,"text":{"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql-pure-sql/#work-with-data":{}},"title":{}}],["pointdf",{"_index":113,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_envelope_aggr":{},"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{}},"title":{}}],["pointdf.pointshap",{"_index":834,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["pointdf1",{"_index":809,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{}},"title":{}}],["pointdf2",{"_index":810,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{}},"title":{}}],["pointdf2.pointshap",{"_index":850,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["pointer",{"_index":1568,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v082-geospark-core":{}},"title":{}}],["pointobject",{"_index":2572,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#write-a-spatial-knn-query":{}},"title":{}}],["pointraw",{"_index":3932,"text":{"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-pure-sql/#transform-the-data":{}},"title":{}}],["pointrdd",{"_index":1877,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{}},"title":{}}],["pointrdd/polygonrdd/linestringrdd",{"_index":2099,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{}}],["pointrddinputloc",{"_index":2284,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{}},"title":{}}],["pointrddoffset",{"_index":2285,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{}},"title":{}}],["pointrddsplitt",{"_index":2286,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{}},"title":{}}],["points_geom",{"_index":2165,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["points_tb",{"_index":3862,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["points_tb.createorreplacetempview(\"points_tb",{"_index":3868,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["points_tb.printschema",{"_index":3867,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["points_tb.select(\"new.0\",\"new.1",{"_index":3865,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["points_tb.show(5",{"_index":3869,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["points_tb.withcolumnrenamed(\"0\",\"lat\").withcolumnrenamed(\"1\",\"lon",{"_index":3866,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["pointshap",{"_index":184,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_point":{},"api/flink/Constructor/#st_pointfromtext":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_point":{},"api/sql/Constructor/#st_pointfromtext":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql-pure-sql/#work-with-data":{}},"title":{}}],["pointshape#415",{"_index":853,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["pointshape#43",{"_index":793,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{}},"title":{}}],["pointshape#52",{"_index":836,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["pointshape1",{"_index":811,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{}},"title":{}}],["pointshape1#12",{"_index":814,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{}},"title":{}}],["pointshape2",{"_index":812,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{}},"title":{}}],["pointshape2#33",{"_index":815,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{}},"title":{}}],["pointtabl",{"_index":185,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_point":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_point":{},"api/sql/Constructor/#st_pointfromtext":{},"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_pixelize":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["pois_per_counti",{"_index":2203,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["polgyon",{"_index":599,"text":{"api/sql/Function/":{},"api/sql/Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{}},"title":{}}],["polit",{"_index":3351,"text":{"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["polygon",{"_index":116,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_union_aggr":{},"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_boundary":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_numinteriorrings":{},"api/flink/Function/#st_reverse":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_intersection_aggr":{},"api/sql/AggregateFunction/#st_union_aggr":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/#st_polygonfromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_symdifference":{},"api/sql/Function/#st_union":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/geospark-sql-python/#polygon":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v091-geospark-core":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#range-query-window":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql-pure-sql/#work-with-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#multipolygon":{},"tutorial/sql-python/#polygon":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#knn-query":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#range-query":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{"archive/tutorial/geospark-sql-python/#polygon":{},"tutorial/sql-python/#polygon":{}}}],["polygon((0",{"_index":304,"text":{"api/flink/Function/":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_orderingequals":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{}},"title":{}}],["polygon((1",{"_index":564,"text":{"api/sql/Function/":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{}},"title":{}}],["polygon((15",{"_index":745,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["polygon((2",{"_index":474,"text":{"api/flink/Predicate/":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_orderingequals":{}},"title":{}}],["polygon((20",{"_index":746,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["polygon((26.428571428571427",{"_index":747,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["polygon((30",{"_index":756,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["polygon((34.0476190",{"_index":754,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["polygon((35",{"_index":739,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["polygon((37.8571428",{"_index":751,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["polygon((37.857142857142854",{"_index":743,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["polygon((45",{"_index":758,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["polygon,linestr",{"_index":2077,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_2":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_2":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_2":{}},"title":{}}],["polygon,polygon",{"_index":2075,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_2":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_2":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_2":{}},"title":{}}],["polygon.csv",{"_index":4003,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["polygon.json",{"_index":2322,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["polygon0",{"_index":4050,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["polygon1",{"_index":4051,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["polygon2",{"_index":4052,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["polygon3",{"_index":4054,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["polygon4",{"_index":4056,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["polygon5",{"_index":4058,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["polygon6",{"_index":4060,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["polygon7",{"_index":4062,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["polygon8",{"_index":4064,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["polygon9",{"_index":4066,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["polygon_rdd",{"_index":2103,"text":{"archive/tutorial/geospark-core-python/":{},"tutorial/core-python/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["polygon_sdf",{"_index":3948,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["polygondata",{"_index":3938,"text":{"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql-pure-sql/#work-with-data":{}},"title":{}}],["polygondf",{"_index":119,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_union_aggr":{},"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_area":{},"api/flink/Function/#st_asbinary":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_asgeojson":{},"api/flink/Function/#st_asgml":{},"api/flink/Function/#st_askml":{},"api/flink/Function/#st_astext":{},"api/flink/Function/#st_buffer":{},"api/flink/Function/#st_distance":{},"api/flink/Function/#st_envelope":{},"api/flink/Function/#st_isempty":{},"api/flink/Function/#st_issimple":{},"api/flink/Function/#st_isvalid":{},"api/flink/Function/#st_length":{},"api/flink/Function/#st_npoints":{},"api/flink/Function/#st_setsrid":{},"api/flink/Function/#st_srid":{},"api/flink/Function/#st_transform":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_intersection_aggr":{},"api/sql/AggregateFunction/#st_union_aggr":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_area":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_asgeojson":{},"api/sql/Function/#st_asgml":{},"api/sql/Function/#st_askml":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_centroid":{},"api/sql/Function/#st_convexhull":{},"api/sql/Function/#st_distance":{},"api/sql/Function/#st_envelope":{},"api/sql/Function/#st_geometrytype":{},"api/sql/Function/#st_intersection":{},"api/sql/Function/#st_isempty":{},"api/sql/Function/#st_issimple":{},"api/sql/Function/#st_isvalid":{},"api/sql/Function/#st_length":{},"api/sql/Function/#st_npoints":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Function/#st_srid":{},"api/sql/Function/#st_transform":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_area":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_centroid":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Function/#st_envelope":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_length":{},"archive/api/sql/GeoSparkSQL-Function/#st_npoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_pixelize":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{}},"title":{}}],["polygonjsondf",{"_index":537,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{}},"title":{}}],["polygonobject",{"_index":2575,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{}},"title":{}}],["polygonraw",{"_index":3935,"text":{"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-pure-sql/#transform-the-data":{}},"title":{}}],["polygonrdd",{"_index":1878,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-typed-spatialrdd":{}},"title":{}}],["polygonrdd/linestringrdd",{"_index":2288,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["polygonrddendoffset",{"_index":2298,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["polygonrddinputloc",{"_index":2296,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["polygonrddsplitt",{"_index":2299,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["polygonrddstartoffset",{"_index":2297,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["polygonshap",{"_index":120,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_union_aggr":{},"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeojson":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_intersection_aggr":{},"api/sql/AggregateFunction/#st_union_aggr":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/#st_polygonfromtext":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql-pure-sql/#work-with-data":{}},"title":{}}],["polygonshape#20",{"_index":792,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{}},"title":{}}],["polygonshape#30",{"_index":842,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["polygont",{"_index":139,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeojson":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{}},"title":{}}],["polyon",{"_index":2295,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["pom",{"_index":3299,"text":{"community/publish/":{}},"title":{}}],["pom.xml",{"_index":885,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-1x-versions":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-2x-versions":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#self-contained-spark-projects":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#set-up-dependencies":{},"community/develop/":{},"community/publish/":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#snapshot-versions":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#set-up-dependencies":{},"tutorial/rdd/":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql/":{},"tutorial/sql/#set-up-dependencies":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{},"setup/maven-coordinates/#pomxml":{}}}],["pop_est",{"_index":3969,"text":{"tutorial/sql/":{},"tutorial/sql/#load-geoparquet":{}},"title":{}}],["posit",{"_index":557,"text":{"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"community/contributor/#nominate-a-committer-or-pmc-member":{}},"title":{}}],["possess",{"_index":1217,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/rdd/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/rdd/":{}},"title":{}}],["possibl",{"_index":913,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#output-format_3":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["postfix",{"_index":3180,"text":{"community/publish/":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{}},"title":{}}],["postgi",{"_index":231,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{}},"title":{}}],["ppmc",{"_index":2917,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/publish/#publish-sedona":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["ppmc/pmc",{"_index":2960,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["pr",{"_index":1357,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"community/rule/":{},"community/rule/#make-a-pull-request":{},"community/rule/#review-a-pull-request":{},"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{}},"title":{}}],["practic",{"_index":2148,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["pre",{"_index":1225,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/download/overview/":{},"archive/download/overview/#direct-download":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-manually":{}},"title":{}}],["precis",{"_index":127,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/flink/Function/":{},"api/flink/Function/#st_geohash":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Function/":{},"api/sql/Function/#st_geohash":{}},"title":{}}],["predic",{"_index":461,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{"api/flink/Predicate/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Predicate/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Predicate/":{}}}],["predict",{"_index":3964,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["prefer",{"_index":2973,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["preliminari",{"_index":1723,"text":{"archive/download/cluster/":{},"setup/cluster/":{}},"title":{"archive/download/cluster/#preliminary":{},"setup/cluster/#preliminary":{}}}],["prepar",{"_index":3124,"text":{"community/publish/":{},"setup/install-python/":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{"community/publish/#prepare-secret-gpg-key":{},"setup/install-python/#prepare-python-adapter-jar":{}}}],["prerequisit",{"_index":3745,"text":{"tutorial/demo/":{}},"title":{"tutorial/demo/#prerequisites":{}}}],["present",{"_index":3514,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["preserv",{"_index":3639,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sql":{}},"title":{}}],["previou",{"_index":690,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"tutorial/viz/":{},"tutorial/viz/#store-the-image-on-disk":{}},"title":{}}],["previous",{"_index":1580,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v081-geospark-core":{}},"title":{}}],["price",{"_index":1265,"text":{"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/core-python/":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["primari",{"_index":3402,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["primaryroad",{"_index":4002,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["print",{"_index":1199,"text":{"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v112":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{}},"title":{}}],["print(ids[0].iloc[1",{"_index":3837,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["print(total_nod",{"_index":3833,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["println",{"_index":912,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{}},"title":{}}],["printschema",{"_index":500,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"tutorial/core-python/":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-geoparquet":{}},"title":{}}],["privat",{"_index":2920,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#send-a-notice-to-ipmc":{},"setup/databricks/":{}},"title":{}}],["private@incubator.apache.org",{"_index":2919,"text":{"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{}},"title":{}}],["private@sedona.apache.org",{"_index":2894,"text":{"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"community/contributor/#close-a-vote":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["priviledg",{"_index":3275,"text":{"community/publish/":{},"community/publish/#release-the-package":{}},"title":{}}],["problem",{"_index":2966,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/rule/":{},"community/rule/#make-a-pull-request":{}},"title":{}}],["problemat",{"_index":3670,"text":{"setup/release-notes/":{},"setup/release-notes/#python":{}},"title":{}}],["proceed",{"_index":3089,"text":{"community/publication/":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#geosparkviz-visualization-system":{}},"title":{}}],["process",{"_index":18,"text":{"":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contributor/":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/release-notes/":{},"setup/release-notes/#flink_1":{},"setup/release-notes/#v01-v07":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{"#04162022-sedona-120-incubating-is-released-sedona-now-supports-geospatial-stream-processing-in-apache-flink":{}}}],["produc",{"_index":236,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{}},"title":{}}],["product",{"_index":3001,"text":{"community/contributor/":{},"community/contributor/#pmc-annoucement":{}},"title":{}}],["profession",{"_index":2725,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#generate-map-tiles":{},"tutorial/viz/":{},"tutorial/viz/#generate-map-tiles":{}},"title":{}}],["profil",{"_index":1336,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{}},"title":{}}],["program",{"_index":453,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{}},"title":{}}],["progress",{"_index":2979,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["project",{"_index":794,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/download/project/#select-an-ide":{},"archive/download/project/#self-contained-spark-projects":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#visualize-spatialrdd":{},"asf/asf/":{},"asf/asf/#apache-software-foundation":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contact/":{},"community/contact/#community":{},"community/contact/#mailing-list":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#close-a-vote":{},"community/contributor/#committer-done-template":{},"community/contributor/#mentors":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#project-management-committee-pmc":{},"community/contributor/#send-the-invitation":{},"community/develop/":{},"community/publish/":{},"community/publish/#release-the-package":{},"community/rule/":{},"community/rule/#contributing-to-apache-sedona":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"community/vote/#vote-a-sedona-release":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/demo/#scala":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/rdd/":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz/":{},"tutorial/viz/#visualize-spatialrdd":{}},"title":{"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#package-the-project":{},"archive/download/project/#self-contained-spark-projects":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"community/contributor/#project-management-committee-pmc":{},"community/develop/#import-the-project":{},"community/develop/#import-the-project_1":{},"community/develop/#import-the-project_2":{},"setup/install-scala/#self-contained-spark-projects":{},"tutorial/demo/#run-template-projects-locally":{}}}],["project.org/package=apache.sedona",{"_index":3512,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["promot",{"_index":2814,"text":{"community/contributor/":{},"community/contributor/#committers":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["proof",{"_index":3360,"text":{"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["proper",{"_index":1808,"text":{"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"community/rule/":{},"community/rule/#develop-a-document-contribution":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}}}],["properli",{"_index":1921,"text":{"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/demo/#scala-and-java-examples":{}},"title":{}}],["properti",{"_index":528,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"setup/release-notes/":{},"setup/release-notes/#v131":{},"tutorial/rdd/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["propos",{"_index":2930,"text":{"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{}},"title":{}}],["provid",{"_index":877,"text":{"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/scalashell/":{},"archive/download/scalashell/#spark-scala-shell":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/contact/":{},"community/contact/#community":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/publish/":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v131":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{}}],["pt_rdd",{"_index":3897,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["public",{"_index":66,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/publication/":{},"community/publish/":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"download/":{},"download/#verify-the-integrity":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{"community/publication/":{},"community/publication/#full-publications":{},"community/publication/#key-publications":{},"community/publication/#publication":{}}}],["publish",{"_index":1529,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"community/publish/":{},"community/publish/#publish-maven-snapshots":{},"community/publish/#publish-sedona":{},"community/publish/#release-the-package":{},"community/publish/#update-mkdocsyml":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/release-notes/":{},"setup/release-notes/#v101":{}},"title":{"community/publish/":{},"community/publish/#publish-maven-snapshots":{},"community/publish/#publish-releases":{},"community/publish/#publish-sedona":{},"community/publish/#publish-snapshots":{},"community/publish/#publish-the-doc-website":{}}}],["publishing.html",{"_index":3170,"text":{"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{}},"title":{}}],["pull",{"_index":3337,"text":{"community/rule/":{},"community/rule/#contributing-to-apache-sedona":{},"community/rule/#make-a-pull-request":{},"community/rule/#review-a-pull-request":{}},"title":{"community/rule/#make-a-pull-request":{},"community/rule/#review-a-pull-request":{}}}],["purdu",{"_index":3066,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["pure",{"_index":3471,"text":{"setup/databricks/":{},"setup/install-scala/":{},"setup/install-scala/#spark-sql-shell":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{},"tutorial/sql-pure-sql/":{}},"title":{"setup/databricks/#pure-sql-environment":{},"tutorial/sql-pure-sql/":{}}}],["purpl",{"_index":4020,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["purpos",{"_index":1926,"text":{"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{}},"title":{}}],["push",{"_index":3316,"text":{"community/publish/":{},"community/publish/#publish-the-doc-website":{},"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["pushdown",{"_index":781,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{}},"title":{"api/sql/Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{}}}],["pushedfilt",{"_index":2200,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["put",{"_index":1214,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["pvldb",{"_index":3071,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["px",{"_index":1209,"text":{"api/viz/sql/":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_render":{},"archive/api/viz/sql/#st_tilename":{}},"title":{}}],["py3",{"_index":1977,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-from-wheel-file":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installing-from-wheel-file":{}},"title":{}}],["pycharm",{"_index":3037,"text":{"community/develop/":{},"community/develop/#ide_1":{}},"title":{}}],["pypi",{"_index":1971,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"community/publish/":{},"community/publish/#release-the-package":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/overview/":{},"setup/overview/#download-statistics":{},"setup/release-notes/":{},"setup/release-notes/#known-issue":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{"archive/tutorial/geospark-core-python/#installing-from-pypi-repositories":{},"archive/tutorial/geospark-sql-python/#installing-from-pypi-repositories":{}}}],["pyspark",{"_index":1952,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/release-notes/":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#python":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["pyspark.sql",{"_index":1963,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["pyspark.sql.funct",{"_index":3762,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["pyspark.sql.sparksess",{"_index":2126,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["pyspark.sql.typ",{"_index":2240,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/sql-python/":{},"tutorial/sql-python/#supported-shapely-objects":{}},"title":{}}],["pyspark==3.0.1",{"_index":3438,"text":{"setup/compile/":{},"setup/compile/#run-python-test":{}},"title":{}}],["pysparksql",{"_index":3504,"text":{"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{}},"title":{}}],["pytest",{"_index":3439,"text":{"setup/compile/":{},"setup/compile/#run-python-test":{}},"title":{}}],["python",{"_index":43,"text":{"":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v130":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-from-wheel-file":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#supported-versions":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#installing-from-wheel-file":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#supported-versions":{},"community/develop/":{},"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-with-different-targets":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#community-edition-free-tier":{},"setup/databricks/#initialise":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/flink/modules/":{},"setup/flink/modules/#api-availability":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-python/#setup-environment-variables":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/modules/":{},"setup/modules/#api-availability":{},"setup/overview/":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#python":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#v130":{},"setup/release-notes/#v131":{},"tutorial/core-python/":{},"tutorial/core-python/#installation":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/raster/":{},"tutorial/raster/#tutorials":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-python/":{},"tutorial/sql-python/#installation":{},"tutorial/sql-python/#introduction":{},"tutorial/sql-python/#sedonasql":{}},"title":{"#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39":{},"api/python-api/":{},"archive/api/GeoSpark-Python-API/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#python":{},"archive/tutorial/geospark-core-python/#spatial-rdd-applications-in-python":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#python":{},"archive/tutorial/geospark-sql-python/#spatial-sql-application-in-python":{},"community/develop/#python-developers":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"setup/compile/#run-python-test":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/release-notes/#python":{},"setup/release-notes/#python_1":{},"setup/release-notes/#sedona-python":{},"tutorial/core-python/":{},"tutorial/core-python/#spatial-rdd-applications-in-python":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/sql-python/":{},"tutorial/sql-python/#spatial-sql-application-in-python":{}}}],["python/scala",{"_index":3472,"text":{"setup/databricks/":{},"setup/databricks/#pure-sql-environment":{}},"title":{}}],["python3",{"_index":1979,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-from-source":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installing-from-source":{},"community/publish/":{},"community/publish/#release-the-package":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#run-python-test":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{}},"title":{}}],["pythonpath",{"_index":3426,"text":{"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/install-python/":{},"setup/install-python/#setup-environment-variables":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{}}],["pythonpath=$spark_home/python",{"_index":3431,"text":{"setup/compile/":{},"setup/compile/#run-python-test":{}},"title":{}}],["pywebhdfs.webhdf",{"_index":3769,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["pywebhdfscli",{"_index":3770,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["pywebhdfsclient(host='179.106.229.159',port='50070",{"_index":3812,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["q",{"_index":3380,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["qjciaaaaaabakdwaa",{"_index":1042,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{}},"title":{}}],["qjooaaaaaabalegaa",{"_index":1043,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{}},"title":{}}],["qt",{"_index":3808,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["quad",{"_index":1508,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"setup/overview/":{},"setup/overview/#distributed-spatial-queries":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v110":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-partitioning":{}},"title":{}}],["quadrantsegments:int",{"_index":700,"text":{"api/sql/Function/":{},"api/sql/Function/#st_minimumboundingcircle":{}},"title":{}}],["quadtre",{"_index":843,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_2":{}},"title":{}}],["qualif",{"_index":2872,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{}},"title":{}}],["qualiti",{"_index":2875,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{}},"title":{}}],["quantil",{"_index":2234,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["queri",{"_index":318,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geohash":{},"api/sql/Function/":{},"api/sql/Function/#st_geohash":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/project/":{},"archive/download/project/#try-geospark-sql-functions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_1":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format":{},"archive/tutorial/rdd/#output-format_1":{},"archive/tutorial/rdd/#output-format_2":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#join-query":{},"archive/tutorial/sql/#other-queries":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/sql/#run-spatial-queries":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/flink/modules/":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/overview/":{},"setup/overview/#distributed-spatial-queries":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_1":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#range-query-window":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#run-spatial-queries":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format":{},"tutorial/rdd/#output-format_1":{},"tutorial/rdd/#output-format_2":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#join-query":{},"tutorial/sql/#other-queries":{},"tutorial/sql/#range-query":{},"tutorial/sql/#register-sedonasql":{},"tutorial/sql/#run-spatial-queries":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/viz/":{}},"title":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/#join-query":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/sql/#other-queries":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#run-spatial-queries":{},"setup/overview/#distributed-spatial-queries":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#range-query-window":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#run-spatial-queries":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql/#join-query":{},"tutorial/sql/#knn-query":{},"tutorial/sql/#other-queries":{},"tutorial/sql/#range-query":{},"tutorial/sql/#run-spatial-queries":{}}}],["query_result",{"_index":2034,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-spatial-range-query":{}},"title":{}}],["query_window_rdd",{"_index":2068,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-spatial-join-query":{}},"title":{}}],["queryresult",{"_index":2568,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["querywindow",{"_index":2569,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["querywindowrdd",{"_index":2066,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_2":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_2":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{}},"title":{}}],["question",{"_index":1935,"text":{"community/contact/":{},"community/contact/#mailing-list":{},"community/rule/":{},"community/rule/#make-a-pull-request":{}},"title":{"archive/tutorial/faq/":{}}}],["quick",{"_index":865,"text":{"api/sql/Overview/":{},"api/viz/sql/":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/viz/sql/":{},"archive/download/project/":{},"tutorial/core-python/":{},"tutorial/core-python/#installation":{},"tutorial/sql-python/":{},"tutorial/sql-python/#installation":{}},"title":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/viz/sql/#quick-start":{},"archive/download/overview/":{},"archive/download/project/#quick-start":{}}}],["quickli",{"_index":2802,"text":{"community/contact/":{},"community/contact/#bug-reports":{}},"title":{}}],["quot",{"_index":3085,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["r",{"_index":25,"text":{"":{},"api/r-api/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"community/develop/":{},"community/publish/":{},"community/publish/#compile-r-html-docs":{},"community/publish/#release-the-package":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"setup/flink/modules/":{},"setup/flink/modules/#api-availability":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/modules/":{},"setup/modules/#api-availability":{},"setup/overview/":{},"setup/overview/#distributed-spatial-queries":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#r":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#v110":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/raster/":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{},"api/r-api/":{},"community/develop/#r-developers":{},"community/publish/#compile-r-html-docs":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"setup/install-r/":{},"setup/release-notes/#r":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#spatial-rdd-applications-in-r-language":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}}}],["radian",{"_index":249,"text":{"api/flink/Function/":{},"api/flink/Function/#st_azimuth":{},"api/sql/Function/":{},"api/sql/Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{}},"title":{}}],["radiu",{"_index":704,"text":{"api/sql/Function/":{},"api/sql/Function/#st_minimumboundingradius":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{}},"title":{}}],["radius'",{"_index":1275,"text":{"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{}},"title":{}}],["radius:decim",{"_index":1273,"text":{"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{}},"title":{}}],["rang",{"_index":340,"text":{"api/flink/Function/":{},"api/flink/Function/#st_interiorringn":{},"api/sql/Function/":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#range-join":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#range-query":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/overview/":{},"setup/overview/#distributed-spatial-queries":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#range-query-window":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#range-query":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql/":{},"tutorial/sql/#range-query":{}},"title":{"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/#range-query":{},"tutorial/core-python/#range-query-window":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/flink/sql/#range-query":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql/#range-query":{}}}],["range_query_window",{"_index":2025,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-spatial-range-query":{}},"title":{}}],["rangefilt",{"_index":3659,"text":{"setup/release-notes/":{},"setup/release-notes/#core":{}},"title":{}}],["rangejoin",{"_index":791,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"setup/release-notes/":{},"setup/release-notes/#v112":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["rangequeri",{"_index":2024,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["rangequery.spatialrangequeri",{"_index":3743,"text":{"tutorial/core-python/":{},"tutorial/core-python/#tips":{}},"title":{}}],["rangequeryraw",{"_index":3725,"text":{"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-spatial-range-query":{}},"title":{}}],["rangequerywindow",{"_index":2566,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["rank",{"_index":2656,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#knn-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#knn-query":{},"tutorial/sql/":{},"tutorial/sql/#knn-query":{}},"title":{}}],["rapid",{"_index":3352,"text":{"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["raster",{"_index":30,"text":{"":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_count":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sql_2":{},"tutorial/raster/":{},"tutorial/raster/#api-docs":{}},"title":{"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{},"api/sql/Raster-loader/":{},"api/sql/Raster-operators/":{},"tutorial/raster/":{}}}],["rasteroverlayoper",{"_index":1714,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{}},"title":{}}],["rat",{"_index":3159,"text":{"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{}},"title":{}}],["rate",{"_index":2584,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-spatial-knn-query":{}},"title":{}}],["rational",{"_index":2805,"text":{"community/contact/":{},"community/contact/#feature-requests":{}},"title":{}}],["raw",{"_index":2609,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["raw('org.locationtech.jts.geom.geometri",{"_index":4070,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{}},"title":{}}],["rawdf",{"_index":2610,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["rawjvmspatialrdd",{"_index":2090,"text":{"archive/tutorial/geospark-core-python/":{},"tutorial/core-python/":{}},"title":{}}],["rawspatialdf",{"_index":490,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{}},"title":{}}],["rawspatialrdd",{"_index":484,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{}},"title":{}}],["rawspatialrdd/indexedrawrdd",{"_index":1915,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["rc1",{"_index":3186,"text":{"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["rc1/apach",{"_index":3229,"text":{"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["rc1/docs/setup/compile.md",{"_index":3238,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["rc1/docs/setup/releas",{"_index":3236,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["rc2",{"_index":3268,"text":{"community/publish/":{},"community/publish/#failed-vote":{}},"title":{}}],["rd",{"_index":1252,"text":{"api/viz/sql/":{},"api/viz/sql/#st_render":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["rdd",{"_index":1183,"text":{"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#load-shapefile-and-geojson":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#visualize-spatialrdd":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/overview/":{},"setup/overview/#distributed-spatial-datasets":{},"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/demo/":{},"tutorial/demo/#folder-structure":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/sql/":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#load-shapefile-and-geojson":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#visualize-spatialrdd":{}},"title":{"api/viz/java-api/":{},"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#spatial-rdd-applications-in-python":{},"archive/tutorial/rdd/":{},"setup/release-notes/#rdd":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/#spatial-rdd-applications-in-python":{},"tutorial/rdd-r/#spatial-rdd-applications-in-r-language":{}}}],["rdd/sql",{"_index":3591,"text":{"setup/modules/":{},"setup/modules/#api-availability":{}},"title":{}}],["rdd1.partitiontre",{"_index":1590,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["rdd1.spatialpartit",{"_index":1589,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["rdd2.spatialpartit",{"_index":1591,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["rdd_with_other_attribut",{"_index":2019,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{}},"title":{}}],["rddwithotherattribut",{"_index":2563,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{}},"title":{}}],["rdoc",{"_index":3328,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{}},"title":{}}],["re",{"_index":2669,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/develop/":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["read",{"_index":89,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/java-api/":{},"api/r-api/":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/viz/java-api/":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/project/":{},"archive/download/project/#quick-start":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#display-geosparkviz-results":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/faq/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#load-shapefile-and-geojson":{},"archive/tutorial/sql/#other-queries":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#set-up-dependencies":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#release-the-package":{},"community/rule/":{},"community/rule/#code-of-conduct":{},"community/rule/#develop-a-document-contribution":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/release-notes/":{},"setup/release-notes/#rdd":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v100":{},"setup/release-notes/#v120":{},"setup/zeppelin/":{},"setup/zeppelin/#display-sedonaviz-results":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/core-python/":{},"tutorial/core-python/#installation":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#set-up-dependencies":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql-python/":{},"tutorial/sql-python/#installation":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#load-shapefile-and-geojson":{},"tutorial/sql/#other-queries":{},"tutorial/sql/#range-query":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#set-up-dependencies":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/geospark-core-python/#read-from-geojson-file":{},"archive/tutorial/geospark-core-python/#read-from-other-geometry-files":{},"archive/tutorial/geospark-core-python/#read-from-shapefile":{},"archive/tutorial/geospark-core-python/#read-from-wkb-file":{},"archive/tutorial/geospark-core-python/#read-from-wkt-file":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#read-from-geojson-file":{},"tutorial/core-python/#read-from-other-geometry-files":{},"tutorial/core-python/#read-from-shapefile":{},"tutorial/core-python/#read-from-wkb-file":{},"tutorial/core-python/#read-from-wkt-file":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{}}}],["read_fil",{"_index":2163,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["readabl",{"_index":2094,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{}}],["reader",{"_index":1359,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#rdd":{},"setup/release-notes/#v110":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{}},"title":{}}],["readers/writ",{"_index":3714,"text":{"setup/flink/modules/":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{}},"title":{}}],["readfromcr",{"_index":959,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{}},"title":{}}],["readgeometri",{"_index":4105,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{}},"title":{}}],["readi",{"_index":1785,"text":{"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{}}],["reading/writ",{"_index":3538,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["readschema",{"_index":2201,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["readtestscala",{"_index":2600,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{}},"title":{}}],["readtocr",{"_index":960,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["readtogeometryrdd",{"_index":486,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-geojson-file":{},"archive/tutorial/geospark-core-python/#read-from-shapefile":{},"archive/tutorial/geospark-core-python/#read-from-wkb-file":{},"archive/tutorial/geospark-core-python/#read-from-wkt-file":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-geojson-file":{},"tutorial/core-python/#read-from-shapefile":{},"tutorial/core-python/#read-from-wkb-file":{},"tutorial/core-python/#read-from-wkt-file":{},"tutorial/rdd/":{}},"title":{}}],["real",{"_index":1655,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/viz-gallery/":{}},"title":{}}],["reason",{"_index":1285,"text":{"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["receiv",{"_index":2812,"text":{"community/contributor/":{}},"title":{}}],["recognit",{"_index":2935,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["recommend",{"_index":1666,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"community/develop/":{},"community/develop/#ide":{},"community/develop/#ide_1":{},"community/develop/#ide_2":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{}},"title":{}}],["record",{"_index":606,"text":{"api/sql/Function/":{},"api/sql/Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{}},"title":{}}],["recov",{"_index":4101,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["rectangl",{"_index":2036,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"tutorial/core-python/":{},"tutorial/core-python/#range-query-window":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{}},"title":{}}],["rectanglerdd",{"_index":1945,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{}},"title":{}}],["red",{"_index":1218,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{}},"title":{}}],["redband",{"_index":1030,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{}},"title":{}}],["redesign",{"_index":1866,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{}}],["redirect",{"_index":3377,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["redo",{"_index":3267,"text":{"community/publish/":{},"community/publish/#failed-vote":{}},"title":{}}],["reduc",{"_index":717,"text":{"api/sql/Function/":{},"api/sql/Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["refactor",{"_index":1684,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#rdd":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["refenc",{"_index":391,"text":{"api/flink/Function/":{},"api/flink/Function/#st_setsrid":{},"api/flink/Function/#st_srid":{},"api/sql/Function/":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_srid":{}},"title":{}}],["refer",{"_index":85,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/viz/sql/":{},"api/viz/sql/#st_tilename":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"download/":{},"download/#security":{},"setup/overview/":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}}}],["reffer",{"_index":2139,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{}},"title":{}}],["refin",{"_index":1653,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["reflect",{"_index":2775,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["regard",{"_index":3265,"text":{"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["regexp_replac",{"_index":3763,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["region",{"_index":1109,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{}},"title":{}}],["regist",{"_index":2129,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"asf/asf/":{},"asf/asf/#apache-software-foundation":{},"setup/databricks/":{},"setup/databricks/#pure-sql-environment":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/python-vector-osm/":{},"tutorial/raster/":{},"tutorial/raster/#initial-setup":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-python/":{},"tutorial/sql-python/#register-package":{},"tutorial/sql/":{},"tutorial/sql/#register-sedonasql":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/sql-python/#register-package":{},"tutorial/sql/#register-sedonasql":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}}}],["registeral",{"_index":903,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"setup/databricks/":{},"setup/databricks/#initialise":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#register-package":{},"tutorial/sql/":{},"tutorial/sql/#register-sedonasql":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{}}],["registerfunc",{"_index":4046,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{}},"title":{}}],["registertyp",{"_index":4045,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{}},"title":{}}],["registr",{"_index":1502,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#v112":{},"tutorial/python-vector-osm/":{}},"title":{"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}}}],["regular",{"_index":1192,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{}},"title":{"api/viz/sql/#regular-functions":{},"archive/api/viz/sql/#regular-functions":{}}}],["regularli",{"_index":2870,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{}},"title":{}}],["reinstal",{"_index":3679,"text":{"setup/release-notes/":{},"setup/release-notes/#known-issue":{}},"title":{}}],["reject",{"_index":3357,"text":{"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["rel",{"_index":4016,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["relat",{"_index":2556,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"community/rule/":{},"community/rule/#code-of-conduct":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["relationship",{"_index":729,"text":{"api/sql/Function/":{},"api/sql/Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{}},"title":{}}],["relativepath",{"_index":3031,"text":{"community/develop/":{}},"title":{}}],["releas",{"_index":5,"text":{"":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v111":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v130":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/overview/":{},"archive/download/overview/#direct-download":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"community/contact/":{},"community/contact/#feature-requests":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#failed-vote":{},"community/publish/#publish-sedona":{},"community/publish/#publish-the-doc-website":{},"community/publish/#release-the-package":{},"community/publish/#stage-the-release-candidate":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"community/vote/#vote-a-sedona-release":{},"download/":{},"download/#github-repository":{},"download/#past-releases":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/flink/platform/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#snapshot-versions":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/overview/":{},"setup/overview/#download-statistics":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#sedona-100":{},"setup/release-notes/#sedona-101":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sedona-111":{},"setup/release-notes/#sedona-120":{},"setup/release-notes/#sedona-121":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v100":{},"setup/release-notes/#v111":{},"setup/release-notes/#v130":{},"setup/release-notes/#v131":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{"#04162022-sedona-120-incubating-is-released-sedona-now-supports-geospatial-stream-processing-in-apache-flink":{},"#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39":{},"#08302022-sedona-121-incubating-is-released-it-supports-spark-24-33-and-flink-112":{},"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{},"#11232021-sedona-111-incubating-is-released-it-now-supports-spark-32":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"community/publish/#publish-releases":{},"community/publish/#release-the-package":{},"community/publish/#stage-the-release-candidate":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{},"download/#past-releases":{},"setup/release-notes/":{},"setup/release-notes/#geospark-legacy-release-notes":{}}}],["release:perform",{"_index":3189,"text":{"community/publish/":{}},"title":{}}],["release:prepar",{"_index":3149,"text":{"community/publish/":{}},"title":{}}],["releases><en",{"_index":1343,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#pomxml":{}},"title":{}}],["reli",{"_index":3450,"text":{"setup/databricks/":{},"setup/databricks/#advanced-editions":{}},"title":{}}],["reload",{"_index":2097,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#reload-a-saved-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#reload-a-saved-spatialrdd":{},"community/develop/":{},"tutorial/core-python/":{},"tutorial/core-python/#reload-a-saved-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#reload-a-saved-spatialrdd":{}},"title":{"archive/tutorial/geospark-core-python/#reload-a-saved-spatialrdd":{},"archive/tutorial/rdd/#reload-a-saved-spatialrdd":{},"tutorial/core-python/#reload-a-saved-spatialrdd":{},"tutorial/rdd/#reload-a-saved-spatialrdd":{}}}],["remain",{"_index":2682,"text":{"archive/tutorial/viz/":{}},"title":{}}],["rememb",{"_index":3026,"text":{"community/develop/":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["remov",{"_index":722,"text":{"api/sql/Function/":{},"api/sql/Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"community/develop/":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#python":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["removehol",{"_index":1280,"text":{"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{}},"title":{}}],["removeholes:boolean",{"_index":1282,"text":{"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{}},"title":{}}],["renam",{"_index":996,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["render",{"_index":1253,"text":{"api/viz/sql/":{},"api/viz/sql/#st_render":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"tutorial/viz/":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#render-the-image":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#render-the-image":{}}}],["repeat",{"_index":3191,"text":{"community/publish/":{}},"title":{}}],["repeatedli",{"_index":1895,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{}},"title":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}}}],["replac",{"_index":1534,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/tutorial/rdd/":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/publish/":{},"community/publish/#publish-the-doc-website":{},"community/publish/#set-up-asf-username-for-maven":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v100":{},"tutorial/rdd/":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#render-the-image":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["repli",{"_index":2940,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["replic",{"_index":1897,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["repo",{"_index":1341,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{},"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"community/publish/":{},"community/publish/#failed-vote":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/rule/":{},"community/rule/#contributing-to-apache-sedona":{},"community/rule/#make-a-pull-request":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#pomxml":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{"community/publish/#obtain-write-access-to-sedona-github-repo":{}}}],["report",{"_index":2785,"text":{"community/contact/":{},"community/contact/#bug-reports":{},"community/contact/#community":{},"community/contributor/":{},"community/contributor/#close-a-vote":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#make-a-pull-request":{}},"title":{"community/contact/#bug-reports":{}}}],["report.txt",{"_index":3165,"text":{"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{}},"title":{}}],["repositori",{"_index":48,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/overview/":{},"archive/download/overview/#direct-download":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#introduction":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#committers":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"download/":{},"download/#github-repository":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#pomxml":{},"setup/maven-coordinates/#snapshot-versions":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"tutorial/demo/":{},"tutorial/demo/#folder-structure":{}},"title":{"archive/tutorial/geospark-core-python/#installing-from-pypi-repositories":{},"archive/tutorial/geospark-sql-python/#installing-from-pypi-repositories":{},"download/#github-repository":{}}}],["repository.apache.org",{"_index":3266,"text":{"community/publish/":{},"community/publish/#failed-vote":{}},"title":{}}],["repres",{"_index":264,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buffer":{},"api/flink/Function/#st_exteriorring":{},"api/sql/Function/":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"community/rule/":{},"community/rule/#code-of-conduct":{}},"title":{}}],["represent",{"_index":224,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asbinary":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_asgeojson":{},"api/flink/Function/#st_asgml":{},"api/flink/Function/#st_askml":{},"api/flink/Function/#st_astext":{},"api/flink/Function/#st_force_2d":{},"api/sql/Function/":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_asgeojson":{},"api/sql/Function/#st_asgml":{},"api/sql/Function/#st_askml":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_makevalid":{},"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{}},"title":{}}],["republish",{"_index":1532,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"setup/release-notes/":{},"setup/release-notes/#v100":{}},"title":{}}],["request",{"_index":2803,"text":{"community/contact/":{},"community/contact/#feature-requests":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#create-asf-account":{},"community/rule/":{},"community/rule/#contributing-to-apache-sedona":{},"community/rule/#make-a-pull-request":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{"community/contact/#feature-requests":{},"community/rule/#make-a-pull-request":{},"community/rule/#review-a-pull-request":{}}}],["requests.get(overpass_url",{"_index":3809,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["request\u2019",{"_index":3361,"text":{"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["requir",{"_index":409,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/publish/":{},"community/publish/#publish-maven-snapshots":{},"community/rule/":{},"community/rule/#develop-a-document-contribution":{},"community/rule/#review-a-pull-request":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#sedona-viz":{},"setup/release-notes/#v01-v07":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["research",{"_index":3043,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#geosparkviz-visualization-system":{},"community/publication/#key-publications":{}},"title":{}}],["resili",{"_index":3521,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["resolut",{"_index":1236,"text":{"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_pixelize":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/overview/":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"tutorial/viz-gallery/":{},"tutorial/viz/":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["resolution_i",{"_index":3996,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["resolution_x",{"_index":3995,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["resolutionx:int",{"_index":1238,"text":{"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_pixelize":{}},"title":{}}],["resolutiony:int",{"_index":1239,"text":{"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_pixelize":{}},"title":{}}],["resolv",{"_index":1332,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#buildsbt":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"community/publish/":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#buildsbt":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["resourc",{"_index":2691,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["respect",{"_index":1151,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_modulo":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{}},"title":{}}],["respons",{"_index":2882,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#send-the-invitation":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["response.json",{"_index":3811,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["rest",{"_index":2594,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{}},"title":{}}],["restart",{"_index":1855,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#enable-geospark-zeppelin":{},"setup/zeppelin/":{},"setup/zeppelin/#enable-sedona-zeppelin":{}},"title":{}}],["restaur",{"_index":2315,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["result",{"_index":321,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geohash":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_geohash":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_multi":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Function/#st_symdifference":{},"api/sql/Function/#st_union":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/zeppelin/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_1":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"community/contributor/#close-a-vote":{},"community/contributor/#nominate-a-committer-or-pmc-member":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v112":{},"setup/zeppelin/":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_1":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{"archive/download/zeppelin/#display-geosparkviz-results":{},"archive/download/zeppelin/#visualize-geosparksql-results":{},"setup/zeppelin/#display-sedonaviz-results":{},"setup/zeppelin/#visualize-sedonasql-results":{}}}],["result][vot",{"_index":3249,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["retriev",{"_index":1085,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/core-python/":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/flink/sql/":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{}},"title":{"tutorial/flink/sql/#retrieve-geometries":{}}}],["return",{"_index":103,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_envelope_aggr":{},"api/flink/Aggregator/#st_union_aggr":{},"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_area":{},"api/flink/Function/#st_asbinary":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_asgeojson":{},"api/flink/Function/#st_asgml":{},"api/flink/Function/#st_askml":{},"api/flink/Function/#st_astext":{},"api/flink/Function/#st_azimuth":{},"api/flink/Function/#st_boundary":{},"api/flink/Function/#st_buffer":{},"api/flink/Function/#st_buildarea":{},"api/flink/Function/#st_distance":{},"api/flink/Function/#st_envelope":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_geohash":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_isring":{},"api/flink/Function/#st_length":{},"api/flink/Function/#st_npoints":{},"api/flink/Function/#st_numgeometries":{},"api/flink/Function/#st_numinteriorrings":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_reverse":{},"api/flink/Function/#st_srid":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/flink/Function/#st_z":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/AggregateFunction/#st_intersection_aggr":{},"api/sql/AggregateFunction/#st_union_aggr":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_area":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_asgeojson":{},"api/sql/Function/#st_asgml":{},"api/sql/Function/#st_askml":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_centroid":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_convexhull":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_distance":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_envelope":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_geohash":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_geometrytype":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_intersection":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_length":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linemerge":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"api/sql/Function/#st_multi":{},"api/sql/Function/#st_npoints":{},"api/sql/Function/#st_numgeometries":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_pointonsurface":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_srid":{},"api/sql/Function/#st_startpoint":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Function/#st_symdifference":{},"api/sql/Function/#st_union":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/sql/Function/#st_z":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Predicate/#st_overlaps":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-loader/#rs_html":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_logicalover":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"api/viz/sql/#st_encodeimage":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_area":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_centroid":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_envelope":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_length":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_npoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/#st_render":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-other-geometry-files":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#knn-query":{},"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-other-geometry-files":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#knn-query":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["reupload",{"_index":3301,"text":{"community/publish/":{}},"title":{}}],["revers",{"_index":387,"text":{"api/flink/Function/":{},"api/flink/Function/#st_reverse":{},"api/sql/Function/":{},"api/sql/Function/#st_reverse":{}},"title":{}}],["review",{"_index":2766,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{"community/rule/#review-a-pull-request":{}}}],["revis",{"_index":3441,"text":{"setup/compile/":{},"setup/compile/#mkdocs-website":{}},"title":{}}],["rewrit",{"_index":3705,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{}}],["rf",{"_index":3167,"text":{"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["rgb",{"_index":1045,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{}},"title":{}}],["rgba(112,36,228,0.9",{"_index":1223,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{}},"title":{}}],["rich",{"_index":3597,"text":{"setup/overview/":{}},"title":{"setup/overview/#rich-spatial-analytics-tools":{}}}],["right",{"_index":924,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format_2":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"community/develop/":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_2":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format_2":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["right_attribute1",{"_index":3982,"text":{"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["right_attribute2",{"_index":3983,"text":{"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["rightcol1",{"_index":3734,"text":{"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{}},"title":{}}],["rightcol2",{"_index":3735,"text":{"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{}},"title":{}}],["rightgeometri",{"_index":3990,"text":{"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["rightrdd",{"_index":3988,"text":{"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["ring",{"_index":292,"text":{"api/flink/Function/":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_numinteriorrings":{},"api/sql/Function/":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{}},"title":{}}],["rishabh",{"_index":1458,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["rm",{"_index":3166,"text":{"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["road",{"_index":3049,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#key-publications":{}},"title":{}}],["roads_tb",{"_index":3884,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["roads_tb.createorreplacetempview(\"roads_tb",{"_index":3888,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["roads_tb.show(5",{"_index":3889,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["role",{"_index":2987,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/rule/":{},"community/rule/#code-of-conduct":{}},"title":{}}],["rompf",{"_index":3065,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["root",{"_index":1173,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_squareroot":{},"archive/download/cluster/":{},"archive/download/cluster/#start-your-cluster":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/project/":{},"archive/download/project/#quick-start":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#create-helium-folder-optional":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"community/develop/":{},"community/publish/":{},"community/publish/#compile-r-html-docs":{},"community/publish/#publish-the-doc-website":{},"setup/cluster/":{},"setup/cluster/#start-your-cluster":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#mkdocs-website":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/zeppelin/":{},"setup/zeppelin/#create-helium-folder-optional":{},"tutorial/core-python/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#point":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-geoparquet":{}},"title":{}}],["rootdf",{"_index":1174,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_squareroot":{}},"title":{}}],["round",{"_index":719,"text":{"api/sql/Function/":{},"api/sql/Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{}},"title":{}}],["routin",{"_index":3522,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["row",{"_index":767,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivideexplode":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#get-datastream":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{"tutorial/flink/sql/#create-row-objects":{}}}],["rs_add",{"_index":1071,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{}},"title":{"api/sql/Raster-operators/#rs_add":{}}}],["rs_add(band1",{"_index":1074,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{}},"title":{}}],["rs_append",{"_index":1076,"text":{"api/sql/Raster-operators/":{}},"title":{"api/sql/Raster-operators/#rs_append":{}}}],["rs_append(data",{"_index":1086,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{}},"title":{}}],["rs_appendnormalizeddiffer",{"_index":3621,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["rs_array",{"_index":1023,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_array":{}},"title":{"api/sql/Raster-loader/#rs_array":{}}}],["rs_array(h*w",{"_index":1040,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{}},"title":{}}],["rs_array(length:int",{"_index":1025,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_array":{}},"title":{}}],["rs_base64",{"_index":1026,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{}},"title":{"api/sql/Raster-loader/#rs_base64":{}}}],["rs_base64(h",{"_index":1036,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{}},"title":{}}],["rs_bitwiseand",{"_index":1091,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_bitwiseand":{}},"title":{"api/sql/Raster-operators/#rs_bitwiseand":{}}}],["rs_bitwiseand(band1",{"_index":1094,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_bitwiseand":{}},"title":{}}],["rs_bitwiseor",{"_index":1096,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_bitwiseor":{}},"title":{"api/sql/Raster-operators/#rs_bitwiseor":{}}}],["rs_bitwiseor(band1",{"_index":1098,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_bitwiseor":{}},"title":{}}],["rs_count",{"_index":1099,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_count":{}},"title":{"api/sql/Raster-operators/#rs_count":{}}}],["rs_count(band1",{"_index":1101,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_count":{}},"title":{}}],["rs_divid",{"_index":1102,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_divide":{}},"title":{"api/sql/Raster-operators/#rs_divide":{}}}],["rs_divide(band1",{"_index":1104,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_divide":{}},"title":{}}],["rs_fetchregion",{"_index":1106,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{}},"title":{"api/sql/Raster-operators/#rs_fetchregion":{}}}],["rs_fetchregion(band,array(0",{"_index":1116,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{}},"title":{}}],["rs_getband",{"_index":1050,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{}},"title":{"api/sql/Raster-loader/#rs_getband":{}}}],["rs_getband(data",{"_index":1057,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_getband":{}},"title":{}}],["rs_greaterthan",{"_index":1118,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_greaterthan":{}},"title":{"api/sql/Raster-operators/#rs_greaterthan":{}}}],["rs_greaterthan(band",{"_index":1122,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_greaterthan":{}},"title":{}}],["rs_greaterthanequ",{"_index":1124,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_greaterthanequal":{}},"title":{"api/sql/Raster-operators/#rs_greaterthanequal":{}}}],["rs_greaterthanequal(band",{"_index":1126,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_greaterthanequal":{}},"title":{}}],["rs_html",{"_index":1060,"text":{"api/sql/Raster-loader/":{}},"title":{"api/sql/Raster-loader/#rs_html":{}}}],["rs_html(base64:str",{"_index":1065,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_html":{}},"title":{}}],["rs_html(encodedstr",{"_index":1067,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_html":{}},"title":{}}],["rs_lessthan",{"_index":1127,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_lessthan":{}},"title":{"api/sql/Raster-operators/#rs_lessthan":{}}}],["rs_lessthan(band",{"_index":1129,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_lessthan":{}},"title":{}}],["rs_lessthanequ",{"_index":1130,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_lessthanequal":{}},"title":{"api/sql/Raster-operators/#rs_lessthanequal":{}}}],["rs_lessthanequal(band",{"_index":1132,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_lessthanequal":{}},"title":{}}],["rs_logicaldiffer",{"_index":1133,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_logicaldifference":{}},"title":{"api/sql/Raster-operators/#rs_logicaldifference":{}}}],["rs_logicaldifference(band1",{"_index":1135,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_logicaldifference":{}},"title":{}}],["rs_logicalov",{"_index":1137,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_logicalover":{}},"title":{"api/sql/Raster-operators/#rs_logicalover":{}}}],["rs_logicalover(band1",{"_index":1140,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_logicalover":{}},"title":{}}],["rs_mean",{"_index":1142,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_mean":{}},"title":{"api/sql/Raster-operators/#rs_mean":{}}}],["rs_mean(band",{"_index":1144,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_mean":{}},"title":{}}],["rs_mode",{"_index":1145,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_mode":{}},"title":{"api/sql/Raster-operators/#rs_mode":{}}}],["rs_mode(band",{"_index":1147,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_mode":{}},"title":{}}],["rs_modulo",{"_index":1148,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_modulo":{}},"title":{"api/sql/Raster-operators/#rs_modulo":{}}}],["rs_modulo(band",{"_index":1153,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_modulo":{}},"title":{}}],["rs_multipli",{"_index":1154,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_multiply":{}},"title":{"api/sql/Raster-operators/#rs_multiply":{}}}],["rs_multiply(band1",{"_index":1156,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_multiply":{}},"title":{}}],["rs_multiplyfactor",{"_index":1158,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_multiplyfactor":{}},"title":{"api/sql/Raster-operators/#rs_multiplyfactor":{}}}],["rs_multiplyfactor(band1",{"_index":1161,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_multiplyfactor":{}},"title":{}}],["rs_normal",{"_index":1163,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_normalize":{}},"title":{"api/sql/Raster-operators/#rs_normalize":{}}}],["rs_normalizeddiffer",{"_index":1080,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_normalizeddifference":{}},"title":{"api/sql/Raster-operators/#rs_normalizeddifference":{}}}],["rs_normalizeddifference(band1",{"_index":1169,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_normalizeddifference":{}},"title":{}}],["rs_squareroot",{"_index":1171,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_squareroot":{}},"title":{"api/sql/Raster-operators/#rs_squareroot":{}}}],["rs_squareroot(band",{"_index":1175,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_squareroot":{}},"title":{}}],["rs_subtract",{"_index":1177,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_subtract":{}},"title":{"api/sql/Raster-operators/#rs_subtract":{}}}],["rs_subtract(band1",{"_index":1181,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_subtract":{}},"title":{}}],["rsa",{"_index":3202,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["rsa4096",{"_index":3132,"text":{"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{}},"title":{}}],["rscript",{"_index":3330,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{}},"title":{}}],["rstudio",{"_index":3038,"text":{"community/develop/":{},"community/develop/#ide_2":{}},"title":{}}],["rtree",{"_index":915,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes_1":{}},"title":{}}],["rubi",{"_index":3062,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["rule",{"_index":1546,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{"community/rule/":{}}}],["run",{"_index":1569,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/download/project/#try-geospark-sql-functions":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-from-wheel-file":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installing-from-wheel-file":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#run-spatial-queries":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#initiate-sparksession":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"community/develop/":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#compile-r-html-docs":{},"community/publish/#publish-the-doc-website":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#initialise":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-python/#setup-environment-variables":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/release-notes/":{},"setup/release-notes/#v082-geospark-core":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/demo/":{},"tutorial/demo/#compile":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/demo/#scala":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#run-spatial-queries":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#range-query":{},"tutorial/sql/#run-spatial-queries":{},"tutorial/viz/":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#initiate-sparksession":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{"archive/tutorial/sql/#run-spatial-queries":{},"archive/tutorial/zeppelin/":{},"community/develop/#run-unit-tests":{},"community/vote/#run-the-verify-script":{},"setup/compile/#run-python-test":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/flink/sql/#run-spatial-queries":{},"tutorial/sql/#run-spatial-queries":{}}}],["runtim",{"_index":3451,"text":{"setup/databricks/":{},"setup/databricks/#advanced-editions":{}},"title":{}}],["s",{"_index":3891,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["s00twy01mt",{"_index":131,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{}},"title":{}}],["s3",{"_index":1384,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v131":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/rdd/":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["s_epsg",{"_index":1997,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{}},"title":{}}],["sachio",{"_index":1398,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["safe",{"_index":1874,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{}}],["safegraph",{"_index":2834,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["safeti",{"_index":3609,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["sagar1993",{"_index":1460,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["same",{"_index":98,"text":{"api/flink/Function/":{},"api/flink/Function/#st_isclosed":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_orderingequals":{},"api/java-api/":{},"api/sql/Function/":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_orderingequals":{},"api/viz/java-api/":{},"api/viz/sql/":{},"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"archive/api/viz/sql/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#colorize-pixels_1":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"archive/tutorial/viz/#store-map-tiles-on-disk":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#snapshot-versions":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/core-python/":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/demo/":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#colorize-pixels_1":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#store-map-tiles-on-disk":{}},"title":{}}],["sampl",{"_index":1573,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v082-geospark-core":{}},"title":{}}],["samplenumb",{"_index":1576,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v082-geospark-core":{}},"title":{}}],["saniti",{"_index":3546,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["sarwat",{"_index":2839,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"community/publication/":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#geosparkviz-visualization-system":{}},"title":{}}],["satisfi",{"_index":785,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"community/rule/":{},"community/rule/#develop-a-document-contribution":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["sauer",{"_index":1454,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["save",{"_index":999,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#reload-a-saved-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#reload-a-saved-spatialrdd":{},"archive/tutorial/rdd/#save-an-spatialrdd-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#reload-a-saved-spatialrdd":{},"tutorial/core-python/#save-an-spatialrdd-indexed":{},"tutorial/core-python/#save-an-spatialrdd-not-indexed":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/python-vector-osm/":{},"tutorial/rdd/":{},"tutorial/rdd/#reload-a-saved-spatialrdd":{},"tutorial/rdd/#save-an-spatialrdd-indexed":{},"tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql/":{},"tutorial/sql/#save-geoparquet":{},"tutorial/sql/#save-to-permanent-storage":{}},"title":{"archive/tutorial/geospark-core-python/#reload-a-saved-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/#reload-a-saved-spatialrdd":{},"archive/tutorial/rdd/#save-an-spatialrdd-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"tutorial/core-python/#reload-a-saved-spatialrdd":{},"tutorial/core-python/#save-an-spatialrdd-indexed":{},"tutorial/core-python/#save-an-spatialrdd-not-indexed":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/python-vector-osm/#connecting-spark-sedona-with-saved-hdfs-file":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{},"tutorial/rdd/#reload-a-saved-spatialrdd":{},"tutorial/rdd/#save-an-spatialrdd-indexed":{},"tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql/#save-geoparquet":{},"tutorial/sql/#save-to-permanent-storage":{}}}],["saveasgeojson",{"_index":2089,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{}}],["saveasobjectfil",{"_index":2091,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{}}],["saveastextfil",{"_index":2087,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{}}],["saveaswkb",{"_index":1367,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"setup/release-notes/":{},"setup/release-notes/#v131":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{}}],["saveaswkt",{"_index":1369,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"setup/release-notes/":{},"setup/release-notes/#v131":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{}}],["saved_rdd",{"_index":2105,"text":{"archive/tutorial/geospark-core-python/":{},"tutorial/core-python/":{}},"title":{}}],["savedrdd",{"_index":2597,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["saver",{"_index":2800,"text":{"community/contact/":{},"community/contact/#bug-reports":{}},"title":{}}],["saverasterimageaslocalfil",{"_index":2720,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"tutorial/viz/":{},"tutorial/viz/#store-the-image-on-disk":{}},"title":{}}],["sbin/start",{"_index":1762,"text":{"archive/download/cluster/":{},"archive/download/cluster/#start-your-cluster":{},"setup/cluster/":{},"setup/cluster/#start-your-cluster":{}},"title":{}}],["sbt",{"_index":1794,"text":{"archive/download/project/":{},"archive/download/project/#quick-start":{},"archive/download/project/#select-an-ide":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"tutorial/demo/":{},"tutorial/demo/#compile":{},"tutorial/demo/#prerequisites":{},"tutorial/demo/#scala":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{}},"title":{}}],["sc",{"_index":2001,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#read-from-geojson-file":{},"archive/tutorial/geospark-core-python/#read-from-shapefile":{},"archive/tutorial/geospark-core-python/#read-from-wkb-file":{},"archive/tutorial/geospark-core-python/#read-from-wkt-file":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#read-from-geojson-file":{},"tutorial/core-python/#read-from-shapefile":{},"tutorial/core-python/#read-from-wkb-file":{},"tutorial/core-python/#read-from-wkt-file":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["scala",{"_index":40,"text":{"":{},"api/java-api/":{},"api/viz/java-api/":{},"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#select-an-ide":{},"archive/download/project/#self-contained-spark-projects":{},"archive/download/scalashell/":{},"archive/download/scalashell/#spark-scala-shell":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/viz/":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/develop/":{},"community/develop/#ide":{},"community/publish/":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-with-different-targets":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#initialise":{},"setup/flink/install-scala/":{},"setup/flink/platform/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/overview/":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global":{},"setup/release-notes/#global_3":{},"setup/release-notes/#rdd":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/demo/":{},"tutorial/demo/#folder-structure":{},"tutorial/demo/#prerequisites":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/demo/#scala":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/flink/sql/":{},"tutorial/raster/":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"archive/download/scalashell/":{},"archive/download/scalashell/#spark-scala-shell":{},"setup/compile/#compile-scala-java-source-code":{},"setup/install-scala/#spark-scala-shell":{},"tutorial/demo/#scala":{},"tutorial/demo/#scala-and-java-examples":{}}}],["scala/java",{"_index":87,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"community/develop/":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/flink/modules/":{},"setup/flink/modules/#api-availability":{},"setup/flink/platform/":{},"setup/modules/":{},"setup/modules/#api-availability":{},"setup/platform/":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{}},"title":{"api/java-api/":{},"archive/api/GeoSpark-Scala-and-Java-API/":{},"community/develop/#scalajava-developers":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"tutorial/demo/":{},"tutorial/flink/sql/":{},"tutorial/rdd/":{},"tutorial/sql/":{},"tutorial/viz/":{}}}],["scala/java/python/r",{"_index":3559,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-fat-jars":{}},"title":{}}],["scalabl",{"_index":1838,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/viz/":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#geosparkviz-visualization-system":{},"community/publication/#key-publications":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/viz/":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"archive/tutorial/viz/#why-scalable-map-visualization":{},"tutorial/viz/#why-scalable-map-visualization":{}}}],["scaladoc",{"_index":878,"text":{"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"community/publish/":{},"tutorial/sql/":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{"community/publish/#javadoc-and-scaladoc":{}}}],["scalaexample.scala",{"_index":1809,"text":{"archive/download/project/":{},"archive/download/project/#try-geospark-sql-functions":{}},"title":{}}],["scale",{"_index":1681,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}}}],["scan",{"_index":2193,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["scatter",{"_index":1212,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/viz/":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{}},"title":{}}],["scenario",{"_index":1765,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["schema",{"_index":992,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/geospark-sql-python/#polygon":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/sql-python/":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{},"tutorial/sql-python/#multipoint":{},"tutorial/sql-python/#multipolygon":{},"tutorial/sql-python/#point":{},"tutorial/sql-python/#polygon":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["scheme",{"_index":2233,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["scientif",{"_index":3106,"text":{"community/publication/":{},"community/publication/#geosparkviz-visualization-system":{}},"title":{}}],["scm",{"_index":3185,"text":{"community/publish/":{},"community/publish/#failed-vote":{}},"title":{}}],["scope",{"_index":1816,"text":{"archive/download/project/":{},"archive/download/project/#package-the-project":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{}},"title":{}}],["script",{"_index":3160,"text":{"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#compile-r-html-docs":{},"community/publish/#failed-vote":{},"community/publish/#update-mkdocsyml":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"community/vote/#vote-a-sedona-release":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/databricks/#pure-sql-environment":{}},"title":{"community/vote/#run-the-verify-script":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}}}],["scroll",{"_index":2739,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["sdf",{"_index":3913,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["sdf_regist",{"_index":3944,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["sdist",{"_index":3278,"text":{"community/publish/":{},"community/publish/#release-the-package":{}},"title":{}}],["se",{"_index":563,"text":{"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{}},"title":{}}],["seamlessli",{"_index":94,"text":{"api/java-api/":{},"api/viz/java-api/":{},"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["search",{"_index":426,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"community/contact/":{},"community/contact/#bug-reports":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/python-vector-osm/":{}},"title":{"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}}}],["seattl",{"_index":3101,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{}},"title":{}}],["second",{"_index":635,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makevalid":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/zeppelin/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/core-python/":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/zeppelin/":{}},"title":{}}],["secret",{"_index":3125,"text":{"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{}},"title":{"community/publish/#prepare-secret-gpg-key":{}}}],["section",{"_index":1353,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/rule/":{},"community/rule/#contributing-to-apache-sedona":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/release-notes/":{},"setup/release-notes/#v131":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["secur",{"_index":82,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"download/":{},"download/#security":{}},"title":{"download/#security":{}}}],["sedona",{"_index":2,"text":{"":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Overview/#quick-start":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"asf/asf/":{},"asf/asf/#apache-software-foundation":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/contact/#feature-requests":{},"community/contact/#feedback":{},"community/contact/#mailing-list":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#committer-done-template":{},"community/contributor/#committers":{},"community/contributor/#create-asf-account":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#project-management-committee-pmc":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/contributor/#send-the-invitation":{},"community/develop/":{},"community/publication/":{},"community/publication/#publication":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#compile-r-html-docs":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/publish/#publish-sedona":{},"community/publish/#publish-the-doc-website":{},"community/publish/#release-the-package":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#contributing-to-apache-sedona":{},"community/rule/#develop-a-code-contribution":{},"community/rule/#develop-a-document-contribution":{},"community/rule/#make-a-pull-request":{},"community/rule/#review-a-pull-request":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"community/vote/#vote-a-sedona-release":{},"download/":{},"download/#past-releases":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-with-different-targets":{},"setup/compile/#download-staged-jars":{},"setup/compile/#mkdocs-website":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/databricks/#community-edition-free-tier":{},"setup/databricks/#initialise":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/databricks/#pure-sql-environment":{},"setup/flink/install-scala/":{},"setup/flink/modules/":{},"setup/flink/platform/":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-python/#setup-environment-variables":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/install-scala/#spark-sql-shell":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/maven-coordinates/#snapshot-versions":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/overview/":{},"setup/overview/#download-statistics":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#core":{},"setup/release-notes/#core_1":{},"setup/release-notes/#flink":{},"setup/release-notes/#flink_1":{},"setup/release-notes/#global":{},"setup/release-notes/#global_1":{},"setup/release-notes/#global_2":{},"setup/release-notes/#global_3":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#python":{},"setup/release-notes/#python_1":{},"setup/release-notes/#r":{},"setup/release-notes/#rdd":{},"setup/release-notes/#sedona-100":{},"setup/release-notes/#sedona-101":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sedona-111":{},"setup/release-notes/#sedona-120":{},"setup/release-notes/#sedona-121":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#sql_1":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#viz_1":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"setup/zeppelin/#compatibility":{},"setup/zeppelin/#display-sedonaviz-results":{},"setup/zeppelin/#enable-sedona-zeppelin":{},"setup/zeppelin/#install-sedona-zeppelin":{},"setup/zeppelin/#installation":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#installation":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#range-query-window":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/demo/":{},"tutorial/demo/#folder-structure":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/flink/sql/#set-up-dependencies":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/python-vector-osm/":{},"tutorial/raster/":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#installation":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#introduction":{},"tutorial/sql-python/#register-package":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#register-sedonasql":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#initiate-sparksession":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#set-up-dependencies":{},"tutorial/viz/#store-the-image-on-disk":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{"#04162022-sedona-120-incubating-is-released-sedona-now-supports-geospatial-stream-processing-in-apache-flink":{},"#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39":{},"#08302022-sedona-121-incubating-is-released-it-supports-spark-24-33-and-flink-112":{},"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{},"#11232021-sedona-111-incubating-is-released-it-now-supports-spark-32":{},"community/develop/#develop-sedona":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/publish/#publish-sedona":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"community/rule/#contributing-to-apache-sedona":{},"community/vote/#vote-a-sedona-release":{},"setup/compile/#compile-sedona-source-code":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/flink/install-scala/":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-r/":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/overview/#what-can-sedona-do":{},"setup/release-notes/#sedona-100":{},"setup/release-notes/#sedona-101":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sedona-111":{},"setup/release-notes/#sedona-120":{},"setup/release-notes/#sedona-121":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sedona-viz":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-dependencies-in-zeppelin-spark-interpreter":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"setup/zeppelin/#enable-sedona-zeppelin":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-spark-sedona-with-saved-hdfs-file":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}}}],["sedona.apache.org",{"_index":2923,"text":{"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/publish/":{},"community/publish/#publish-the-doc-website":{}},"title":{"community/publish/#vote-in-dev-sedonaapacheorg":{}}}],["sedona.core.enum",{"_index":3720,"text":{"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{}},"title":{}}],["sedona.core.formatmapp",{"_index":3737,"text":{"tutorial/core-python/":{},"tutorial/core-python/#read-from-geojson-file":{},"tutorial/core-python/#read-from-wkb-file":{},"tutorial/core-python/#read-from-wkt-file":{}},"title":{}}],["sedona.core.formatmapper.disc_util",{"_index":3736,"text":{"tutorial/core-python/":{}},"title":{}}],["sedona.core.formatmapper.shapefilepars",{"_index":3739,"text":{"tutorial/core-python/":{},"tutorial/core-python/#read-from-shapefile":{}},"title":{}}],["sedona.core.geom.envelop",{"_index":3723,"text":{"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-spatial-range-query":{}},"title":{}}],["sedona.core.geom_types.envelop",{"_index":3722,"text":{"tutorial/core-python/":{}},"title":{}}],["sedona.core.spatialoper",{"_index":3724,"text":{"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/core-python/#write-a-spatial-range-query":{}},"title":{}}],["sedona.core.spatialrdd",{"_index":3718,"text":{"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{}},"title":{}}],["sedona.core.spatialrdd.spatial_rdd.spatialrdd",{"_index":3738,"text":{"tutorial/core-python/":{},"tutorial/core-python/#read-from-geojson-file":{},"tutorial/core-python/#read-from-shapefile":{},"tutorial/core-python/#read-from-wkb-file":{},"tutorial/core-python/#read-from-wkt-file":{}},"title":{}}],["sedona.current_git_tag",{"_index":3175,"text":{"community/publish/":{},"community/publish/#failed-vote":{},"community/publish/#update-mkdocsyml":{}},"title":{}}],["sedona.current_rc",{"_index":3174,"text":{"community/publish/":{},"community/publish/#failed-vote":{},"community/publish/#update-mkdocsyml":{}},"title":{}}],["sedona.current_snapshot",{"_index":3176,"text":{"community/publish/":{},"community/publish/#update-mkdocsyml":{}},"title":{}}],["sedona.current_vers",{"_index":3173,"text":{"community/publish/":{},"community/publish/#update-mkdocsyml":{}},"title":{}}],["sedona.git",{"_index":3162,"text":{"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["sedona.global.charset",{"_index":527,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"tutorial/rdd/":{}},"title":{}}],["sedona.global.index",{"_index":906,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Parameter/#usage":{}},"title":{}}],["sedona.global.indextyp",{"_index":914,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{}},"title":{}}],["sedona.join.gridtyp",{"_index":916,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{}},"title":{}}],["sedona.join.indexbuildsid",{"_index":919,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{}},"title":{}}],["sedona.join.numpartit",{"_index":925,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{}},"title":{}}],["sedona.join.spatitionsid",{"_index":928,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{}},"title":{}}],["sedona.next_vers",{"_index":3177,"text":{"community/publish/":{},"community/publish/#publish-the-doc-website":{},"community/publish/#update-mkdocsyml":{}},"title":{}}],["sedona.regist",{"_index":3764,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#register-package":{}},"title":{}}],["sedona.register.geo_registr",{"_index":3469,"text":{"setup/databricks/":{},"setup/databricks/#initialise":{}},"title":{}}],["sedona.sql.typ",{"_index":3943,"text":{"tutorial/sql-python/":{},"tutorial/sql-python/#supported-shapely-objects":{}},"title":{}}],["sedona.staged.apache.org",{"_index":3317,"text":{"community/publish/":{},"community/publish/#publish-the-doc-website":{}},"title":{}}],["sedona.util",{"_index":3765,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["sedona.utils.adapt",{"_index":3721,"text":{"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-spatial-range-query":{}},"title":{}}],["sedona/blob/master/python/sedona/version.pi",{"_index":3181,"text":{"community/publish/":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{}},"title":{}}],["sedona/blob/master/r/descript",{"_index":3182,"text":{"community/publish/":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{}},"title":{}}],["sedona/blob/master/zeppelin/package.json",{"_index":3183,"text":{"community/publish/":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{}},"title":{}}],["sedona/blob/sedona",{"_index":3235,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["sedona/examples/sql/src/test/resources/testenvelope.csv",{"_index":3936,"text":{"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{}},"title":{}}],["sedona/examples/sql/src/test/resources/testpoint.csv",{"_index":3934,"text":{"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{}},"title":{}}],["sedona/releases/tag/sedona",{"_index":3239,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["sedona/sql",{"_index":3034,"text":{"community/develop/":{}},"title":{}}],["sedona/zeppelin",{"_index":3712,"text":{"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{}},"title":{}}],["sedona@twitt",{"_index":2788,"text":{"community/contact/":{},"community/contact/#twitter":{}},"title":{}}],["sedona_current_rc",{"_index":3371,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["sedona_current_vers",{"_index":3372,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["sedona_read_dsv_to_typed_rdd",{"_index":3898,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["sedona_read_geojson",{"_index":3946,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["sedona_render_choropleth_map",{"_index":4012,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["sedona_render_scatter_plot",{"_index":4007,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["sedona_spatial_join_count_by_key",{"_index":4005,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["sedonaconf",{"_index":910,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{}},"title":{}}],["sedonaflinkregistr",{"_index":4044,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{}},"title":{}}],["sedonakryoregistr",{"_index":3505,"text":{"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{}},"title":{}}],["sedonakryoregistrator.getnam",{"_index":3792,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["sedonaregistr",{"_index":3470,"text":{"setup/databricks/":{},"setup/databricks/#initialise":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#register-package":{}},"title":{}}],["sedonaregistrator.registeral",{"_index":3940,"text":{"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["sedonaregistrator.registerall(spark",{"_index":3795,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["sedonarunnableexampl",{"_index":3923,"text":{"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{}},"title":{}}],["sedonasql",{"_index":449,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#range-join":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"setup/zeppelin/":{},"tutorial/core-python/":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/raster/":{},"tutorial/raster/#initial-setup":{},"tutorial/rdd/":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#other-queries":{},"tutorial/sql/#range-query":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{"api/sql/Optimizer/#sedonasql-query-optimizer":{},"setup/zeppelin/#visualize-sedonasql-results":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/#register-sedonasql":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}}}],["sedonasqlregistr",{"_index":902,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"setup/databricks/":{},"setup/databricks/#initialise":{},"tutorial/sql/":{},"tutorial/sql/#register-sedonasql":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{}}],["sedonaviz",{"_index":3558,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{},"tutorial/viz/#visualize-spatialrdd":{},"tutorial/viz/#why-scalable-map-visualization":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"setup/zeppelin/#display-sedonaviz-results":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}}}],["sedonavizkryoregistr",{"_index":3924,"text":{"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["sedonavizregistr",{"_index":1191,"text":{"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{}}],["see",{"_index":239,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkt":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkt":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#installation":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#generate-a-single-image":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/install-python/":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/install-scala/#spark-sql-shell":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"setup/zeppelin/":{},"setup/zeppelin/#installation":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#generate-a-single-image":{},"tutorial/viz/#visualize-spatialrdd":{}},"title":{}}],["select",{"_index":112,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_envelope_aggr":{},"api/flink/Aggregator/#st_union_aggr":{},"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/flink/Constructor/#st_geomfromgeojson":{},"api/flink/Constructor/#st_geomfromgml":{},"api/flink/Constructor/#st_geomfromkml":{},"api/flink/Constructor/#st_geomfromtext":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/flink/Constructor/#st_geomfromwkt":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Constructor/#st_point":{},"api/flink/Constructor/#st_pointfromtext":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_area":{},"api/flink/Function/#st_asbinary":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_asgeojson":{},"api/flink/Function/#st_asgml":{},"api/flink/Function/#st_askml":{},"api/flink/Function/#st_astext":{},"api/flink/Function/#st_azimuth":{},"api/flink/Function/#st_boundary":{},"api/flink/Function/#st_buffer":{},"api/flink/Function/#st_buildarea":{},"api/flink/Function/#st_distance":{},"api/flink/Function/#st_envelope":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_geohash":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_isempty":{},"api/flink/Function/#st_isring":{},"api/flink/Function/#st_issimple":{},"api/flink/Function/#st_isvalid":{},"api/flink/Function/#st_length":{},"api/flink/Function/#st_npoints":{},"api/flink/Function/#st_numgeometries":{},"api/flink/Function/#st_numinteriorrings":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_reverse":{},"api/flink/Function/#st_setsrid":{},"api/flink/Function/#st_srid":{},"api/flink/Function/#st_transform":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/flink/Function/#st_z":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/AggregateFunction/#st_intersection_aggr":{},"api/sql/AggregateFunction/#st_union_aggr":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Constructor/#st_geomfromgml":{},"api/sql/Constructor/#st_geomfromkml":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_point":{},"api/sql/Constructor/#st_pointfromtext":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/#st_polygonfromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_area":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_asgeojson":{},"api/sql/Function/#st_asgml":{},"api/sql/Function/#st_askml":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_centroid":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_convexhull":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_distance":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_envelope":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_geohash":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_geometrytype":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_intersection":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isempty":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_issimple":{},"api/sql/Function/#st_isvalid":{},"api/sql/Function/#st_length":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linemerge":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"api/sql/Function/#st_multi":{},"api/sql/Function/#st_npoints":{},"api/sql/Function/#st_numgeometries":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_pointonsurface":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Function/#st_srid":{},"api/sql/Function/#st_startpoint":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Function/#st_symdifference":{},"api/sql/Function/#st_transform":{},"api/sql/Function/#st_union":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/sql/Function/#st_z":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Predicate/#st_overlaps":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#rs_array":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_divide":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_logicalover":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_modulo":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"api/sql/Raster-operators/#rs_normalize":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/sql/Raster-operators/#rs_squareroot":{},"api/sql/Raster-operators/#rs_subtract":{},"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"api/viz/sql/#st_pixelize":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_area":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_centroid":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_envelope":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_length":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_npoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/#st_render":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/develop/":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql-pure-sql/#work-with-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#introduction":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#knn-query":{},"tutorial/sql/#range-query":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#render-the-image":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"archive/download/project/#select-an-ide":{}}}],["selectexpr",{"_index":873,"text":{"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_html":{}},"title":{}}],["self",{"_index":355,"text":{"api/flink/Function/":{},"api/flink/Function/#st_issimple":{},"api/sql/Function/":{},"api/sql/Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#self-contained-spark-projects":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{"archive/download/project/":{},"archive/download/project/#self-contained-spark-projects":{},"setup/install-scala/#self-contained-spark-projects":{}}}],["semen",{"_index":1390,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["send",{"_index":2809,"text":{"community/contact/":{},"community/contact/#feature-requests":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#send-a-notice-to-ipmc":{}},"title":{"community/contributor/#send-a-notice-to-ipmc":{},"community/contributor/#send-the-invitation":{}}}],["sent",{"_index":3342,"text":{"community/rule/":{},"community/rule/#pick-annouce-a-task-using-jira":{}},"title":{}}],["separ",{"_index":1499,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#v101":{},"setup/release-notes/#v112":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{}}}],["seq",{"_index":3979,"text":{"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}},"title":{}}],["sequenc",{"_index":2146,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["serd",{"_index":3726,"text":{"tutorial/core-python/":{},"tutorial/core-python/#write-a-spatial-range-query":{}},"title":{}}],["sergii",{"_index":1456,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["serhuela",{"_index":1464,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["serial",{"_index":1509,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/release-notes/":{},"setup/release-notes/#sql":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v110":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{"archive/tutorial/geospark-core-python/#geospark-serializers":{},"tutorial/core-python/#apache-sedona-serializers":{}}}],["sernetcdf",{"_index":1633,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{"setup/maven-coordinates/#sernetcdf-010_1":{}}}],["serv",{"_index":1697,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"community/publish/":{},"community/publish/#update-mkdocsyml":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["server",{"_index":1229,"text":{"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"community/publish/":{},"community/publish/#set-up-asf-username-for-maven":{},"community/publish/#upload-release-candidate":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["session",{"_index":888,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/python-vector-osm/":{},"tutorial/raster/":{},"tutorial/raster/#initial-setup":{},"tutorial/sql-pure-sql/":{}},"title":{"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/sql-pure-sql/#initiate-session":{}}}],["set",{"_index":389,"text":{"api/flink/Function/":{},"api/flink/Function/#st_setsrid":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Function/":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_symdifference":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#set-up-asf-username-for-maven":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#initiate-stream-environment":{},"tutorial/raster/":{},"tutorial/raster/#initial-setup":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql/":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{"archive/download/cluster/":{},"archive/download/cluster/#set-up-your-apache-spark-cluster":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/viz/#set-up-dependencies":{},"community/publish/#set-up-asf-username-for-maven":{},"setup/cluster/":{},"setup/cluster/#set-up-your-apache-spark-cluster":{},"tutorial/flink/sql/#set-up-dependencies":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz/#set-up-dependencies":{}}}],["setappnam",{"_index":2274,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{}},"title":{}}],["setmast",{"_index":2276,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{}},"title":{}}],["setnetcdf",{"_index":1634,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["setproperti",{"_index":531,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["setter",{"_index":1574,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v082-geospark-core":{}},"title":{}}],["setup",{"_index":3508,"text":{"setup/install-python/":{},"setup/install-python/#setup-environment-variables":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/raster/":{}},"title":{"setup/install-python/#setup-environment-variables":{},"tutorial/raster/#initial-setup":{}}}],["setup.pi",{"_index":1980,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-from-source":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installing-from-source":{},"community/publish/":{},"community/publish/#release-the-package":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/release-notes/":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#python":{}},"title":{}}],["setuptool",{"_index":3435,"text":{"setup/compile/":{},"setup/compile/#run-python-test":{}},"title":{}}],["setuserdata",{"_index":4102,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["sever",{"_index":1474,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"setup/release-notes/":{},"setup/release-notes/#v112":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}},"title":{}}],["sew",{"_index":649,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{}},"title":{}}],["sh",{"_index":3474,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["sha512",{"_index":74,"text":{"download/":{},"download/#120-incubating":{},"download/#121-incubating":{}},"title":{}}],["shahida",{"_index":1397,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["shape",{"_index":508,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_pixelize":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"community/contributor/":{},"community/contributor/#mentors":{},"setup/install-python/":{},"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#range-query-window":{},"tutorial/rdd/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-python/#writing-application":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{"archive/tutorial/geospark-sql-python/#creating-spark-dataframe-based-on-shapely-objects":{},"archive/tutorial/geospark-sql-python/#example-usage-for-shapely-objects":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"tutorial/sql-python/#creating-spark-dataframe-based-on-shapely-objects":{},"tutorial/sql-python/#example-usage-for-shapely-objects":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#supported-shapely-objects":{}}}],["shape_file_loc",{"_index":2117,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-shapefile":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-shapefile":{}},"title":{}}],["shapefiel",{"_index":1417,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["shapefil",{"_index":478,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-shapefile-and-geojson":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#rdd":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v110":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql/":{},"tutorial/sql/#load-shapefile-and-geojson":{}},"title":{"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/geospark-core-python/#read-from-shapefile":{},"archive/tutorial/sql/#load-shapefile-and-geojson":{},"tutorial/core-python/#read-from-shapefile":{},"tutorial/sql/#load-shapefile-and-geojson":{}}}],["shapefile1",{"_index":511,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["shapefile2",{"_index":512,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["shapefileinputloc",{"_index":489,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["shapefilerdd.getspatialrdd",{"_index":1585,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["shapefileread",{"_index":485,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-shapefile":{},"archive/tutorial/rdd/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-shapefile":{},"tutorial/rdd/":{}},"title":{}}],["shapefilereader.readtogeometryrdd",{"_index":530,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["shapely.geometri",{"_index":2059,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/geospark-sql-python/#polygon":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/sql-python/":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{},"tutorial/sql-python/#multipoint":{},"tutorial/sql-python/#multipolygon":{},"tutorial/sql-python/#point":{},"tutorial/sql-python/#polygon":{}},"title":{}}],["shapely.geometry.basegeometri",{"_index":1948,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{}},"title":{}}],["shapely.geometry.point.point",{"_index":2081,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_3":{}},"title":{}}],["share",{"_index":1912,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["shasum",{"_index":3224,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["shell",{"_index":293,"text":{"api/flink/Function/":{},"api/flink/Function/#st_exteriorring":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/download/scalashell/#spark-scala-shell":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/sql-python/":{},"tutorial/sql-python/#register-package":{},"tutorial/sql/":{},"tutorial/sql/#register-sedonasql":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{"archive/download/scalashell/":{},"archive/download/scalashell/#spark-scala-shell":{},"setup/install-scala/#spark-scala-shell":{},"setup/install-scala/#spark-sql-shell":{}}}],["shi",{"_index":1461,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["shift",{"_index":3694,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-core":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{}},"title":{}}],["short",{"_index":3097,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{}},"title":{}}],["shorten",{"_index":1695,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["shouldn't",{"_index":2952,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["show",{"_index":499,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-loader/#rs_html":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/geospark-sql-python/#polygon":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/develop/":{},"tutorial/demo/":{},"tutorial/demo/#folder-structure":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{},"tutorial/sql-python/#multipoint":{},"tutorial/sql-python/#multipolygon":{},"tutorial/sql-python/#point":{},"tutorial/sql-python/#polygon":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#knn-query":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#range-query":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["shown",{"_index":2889,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/develop/":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["shp",{"_index":503,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/rdd/":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/rdd/":{}},"title":{}}],["shuffl",{"_index":831,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["shx",{"_index":504,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/tutorial/rdd/":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v081-geospark-core":{},"tutorial/rdd/":{}},"title":{}}],["side",{"_index":828,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v120":{}},"title":{}}],["siginicantli",{"_index":1614,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["sigmod",{"_index":3058,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["sign",{"_index":3387,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["signatur",{"_index":72,"text":{"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"community/vote/#vote-a-sedona-release":{},"download/":{},"download/#120-incubating":{},"download/#121-incubating":{}},"title":{}}],["signific",{"_index":1870,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{}}],["significantli",{"_index":1542,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-partitioning":{}},"title":{}}],["sigspati",{"_index":3099,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{}},"title":{}}],["simba",{"_index":3070,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["simialr",{"_index":1427,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["similar",{"_index":1941,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/rdd/":{},"community/publish/":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/rdd/":{}},"title":{}}],["simpl",{"_index":419,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"setup/install-scala/":{}},"title":{}}],["simpler",{"_index":3527,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["simpli",{"_index":1775,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"setup/compile/":{},"setup/compile/#compile-with-different-targets":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/rdd/":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{}},"title":{}}],["simplifi",{"_index":725,"text":{"api/sql/Function/":{},"api/sql/Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v112":{}},"title":{}}],["simul",{"_index":3051,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#key-publications":{}},"title":{"community/publication/#geosparksim-traffic-simulator":{}}}],["singl",{"_index":364,"text":{"api/flink/Function/":{},"api/flink/Function/#st_numgeometries":{},"api/flink/Function/#st_pointn":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_numgeometries":{},"api/sql/Function/#st_pointn":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/viz/sql/":{},"api/viz/sql/#st_render":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_render":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#colorize-pixels_1":{},"archive/tutorial/viz/#generate-a-single-image":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/viz/#store-map-tiles-on-disk":{},"community/develop/":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#range-query":{},"tutorial/rdd/":{},"tutorial/sql/":{},"tutorial/sql/#range-query":{},"tutorial/viz/":{},"tutorial/viz/#colorize-pixels_1":{},"tutorial/viz/#generate-a-single-image":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#render-the-image":{},"tutorial/viz/#store-map-tiles-on-disk":{}},"title":{"archive/tutorial/viz/#generate-a-single-image":{},"tutorial/viz/#generate-a-single-image":{}}}],["site",{"_index":3315,"text":{"community/publish/":{},"community/publish/#publish-the-doc-website":{}},"title":{}}],["site/api/javadoc",{"_index":3321,"text":{"community/publish/":{}},"title":{}}],["site/api/javadoc/sql",{"_index":3319,"text":{"community/publish/":{}},"title":{}}],["situat",{"_index":2934,"text":{"community/contributor/":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["six",{"_index":1920,"text":{"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"community/publish/":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["size",{"_index":1048,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v110":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["size(el",{"_index":3827,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["skel",{"_index":3807,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["skew",{"_index":1696,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["skip",{"_index":1409,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v111":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v130":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#v111":{},"setup/release-notes/#v130":{}},"title":{}}],["skipsyntaxinvalidgeometri",{"_index":2320,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["slave",{"_index":3753,"text":{"tutorial/python-vector-osm/":{}},"title":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}}}],["slight",{"_index":1873,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{}}],["slow",{"_index":1893,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}},"title":{}}],["small",{"_index":1475,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v112":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}}}],["small.csv",{"_index":3896,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["smalldf",{"_index":276,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{}},"title":{}}],["smaller",{"_index":1518,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["smallest",{"_index":697,"text":{"api/sql/Function/":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{}},"title":{}}],["snapshot",{"_index":1259,"text":{"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#buildsbt":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"community/publish/":{},"community/publish/#publish-maven-snapshots":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#buildsbt":{},"setup/maven-coordinates/#pomxml":{},"setup/maven-coordinates/#snapshot-versions":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"community/publish/#publish-maven-snapshots":{},"community/publish/#publish-snapshots":{},"setup/maven-coordinates/#snapshot-versions":{}}}],["snapshots><en",{"_index":1345,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#pomxml":{}},"title":{}}],["softwar",{"_index":2755,"text":{"asf/asf/":{},"asf/asf/#apache-software-foundation":{},"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/rule/":{},"community/rule/#code-of-conduct":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#buildsbt":{},"tutorial/demo/":{},"tutorial/demo/#prerequisites":{}},"title":{"asf/asf/#apache-software-foundation":{},"community/vote/#install-necessary-software":{}}}],["solut",{"_index":2096,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"tutorial/core-python/":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["solv",{"_index":1538,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["someth",{"_index":2562,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{}},"title":{}}],["sometim",{"_index":693,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#snapshot-versions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{}},"title":{}}],["sonatyp",{"_index":1333,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#buildsbt":{}},"title":{}}],["soon",{"_index":99,"text":{"api/python-api/":{},"archive/api/GeoSpark-Python-API/":{},"archive/tutorial/faq/":{}},"title":{}}],["sourc",{"_index":50,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/overview/":{},"archive/download/overview/#direct-download":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#develop-a-document-contribution":{},"community/vote/":{},"community/vote/#check-files-manually":{},"community/vote/#run-the-verify-script":{},"community/vote/#vote-a-sedona-release":{},"download/":{},"download/#120-incubating":{},"download/#121-incubating":{},"download/#github-repository":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#global":{},"setup/release-notes/#global_3":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/raster/":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/tutorial/geospark-core-python/#installing-from-source":{},"archive/tutorial/geospark-sql-python/#installing-from-source":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-sedona-source-code":{}}}],["sourcecr",{"_index":399,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{}},"title":{}}],["sourcecrs:str",{"_index":416,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{}},"title":{}}],["sourcecrscod",{"_index":2557,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{}},"title":{}}],["spark",{"_index":7,"text":{"":{},"api/flink/Constructor/":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_asgeojson":{},"api/flink/Function/#st_asgml":{},"api/flink/Function/#st_askml":{},"api/flink/Function/#st_buffer":{},"api/flink/Function/#st_distance":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_isempty":{},"api/flink/Function/#st_transform":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_disjoint":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/AggregateFunction/#st_intersection_aggr":{},"api/sql/AggregateFunction/#st_union_aggr":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_point":{},"api/sql/Constructor/#st_pointfromtext":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/#st_polygonfromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_area":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_asgeojson":{},"api/sql/Function/#st_asgml":{},"api/sql/Function/#st_askml":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_centroid":{},"api/sql/Function/#st_convexhull":{},"api/sql/Function/#st_distance":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_envelope":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_geometrytype":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_intersection":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isempty":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_issimple":{},"api/sql/Function/#st_isvalid":{},"api/sql/Function/#st_length":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_srid":{},"api/sql/Function/#st_startpoint":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_transform":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/sql/Function/#st_z":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Predicate/#st_overlaps":{},"api/sql/Predicate/#st_within":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_array":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-loader/#rs_html":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_divide":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_logicalover":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_modulo":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"api/sql/Raster-operators/#rs_normalize":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/sql/Raster-operators/#rs_squareroot":{},"api/sql/Raster-operators/#rs_subtract":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"api/viz/sql/#st_encodeimage":{},"api/viz/sql/#st_pixelize":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_area":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_centroid":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_envelope":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_length":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/#st_render":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/cluster/#set-up-your-apache-spark-cluster":{},"archive/download/cluster/#start-your-cluster":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/download/project/#self-contained-spark-projects":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/download/scalashell/#spark-scala-shell":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#compatibility":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/geospark-core-python/#supported-versions":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#linestring":{},"archive/tutorial/geospark-sql-python/#multilinestring":{},"archive/tutorial/geospark-sql-python/#multipoint":{},"archive/tutorial/geospark-sql-python/#multipolygon":{},"archive/tutorial/geospark-sql-python/#point":{},"archive/tutorial/geospark-sql-python/#polygon":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#supported-versions":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#set-up-dependencies":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/publication/":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#geosparkviz-visualization-system":{},"community/publication/#key-publications":{},"community/publication/#third-party-evaluation":{},"community/publish/":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/cluster/#set-up-your-apache-spark-cluster":{},"setup/cluster/#start-your-cluster":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#compile-with-different-targets":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/databricks/#initialise":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/modules/":{},"setup/overview/":{},"setup/overview/#distributed-spatial-datasets":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#global_2":{},"setup/release-notes/#global_3":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#python":{},"setup/release-notes/#sedona-121":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#sql_1":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v101":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"setup/release-notes/#v120":{},"setup/release-notes/#viz_1":{},"setup/zeppelin/":{},"setup/zeppelin/#compatibility":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/raster/":{},"tutorial/raster/#initial-setup":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#introduction":{},"tutorial/sql-python/#linestring":{},"tutorial/sql-python/#multilinestring":{},"tutorial/sql-python/#multipoint":{},"tutorial/sql-python/#multipolygon":{},"tutorial/sql-python/#point":{},"tutorial/sql-python/#polygon":{},"tutorial/sql-python/#register-package":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#register-sedonasql":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{},"tutorial/viz/#set-up-dependencies":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{"#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39":{},"#08302022-sedona-121-incubating-is-released-it-supports-spark-24-33-and-flink-112":{},"#11232021-sedona-111-incubating-is-released-it-now-supports-spark-32":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-1x-versions":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-2x-versions":{},"archive/download/cluster/":{},"archive/download/cluster/#set-up-your-apache-spark-cluster":{},"archive/download/project/#self-contained-spark-projects":{},"archive/download/scalashell/":{},"archive/download/scalashell/#spark-scala-shell":{},"archive/download/zeppelin/#add-geospark-dependencies-in-zeppelin-spark-interpreter":{},"archive/tutorial/geospark-core-python/#apache-spark":{},"archive/tutorial/geospark-sql-python/#apache-spark":{},"archive/tutorial/geospark-sql-python/#creating-spark-dataframe-based-on-shapely-objects":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"setup/cluster/":{},"setup/cluster/#set-up-your-apache-spark-cluster":{},"setup/install-r/#connect-to-spark":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/install-scala/#spark-scala-shell":{},"setup/install-scala/#spark-sql-shell":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/release-notes/#sql-for-spark":{},"setup/zeppelin/#add-sedona-dependencies-in-zeppelin-spark-interpreter":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-spark-sedona-with-saved-hdfs-file":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/sql-python/#creating-spark-dataframe-based-on-shapely-objects":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}}}],["spark.createdatafram",{"_index":2147,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["spark.driver.maxresults",{"_index":1741,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["spark.driver.memori",{"_index":1738,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["spark.jars.packag",{"_index":3506,"text":{"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{}},"title":{}}],["spark.kryo.registr",{"_index":893,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["spark.network.timeout",{"_index":1740,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["spark.read.json(path",{"_index":3820,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-spark-sedona-with-saved-hdfs-file":{}},"title":{}}],["spark.seri",{"_index":891,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{}},"title":{}}],["spark.sparkcontext",{"_index":3796,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["spark.sql",{"_index":2747,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["spark.sql(\"select",{"_index":3826,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["spark.sql.adaptive.coalescepartitions.en",{"_index":3783,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["spark.sql.extens",{"_index":3491,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{}},"title":{}}],["spark.sql.extensions=org.apache.sedona.sql.sedonasqlextens",{"_index":3939,"text":{"tutorial/sql-python/":{},"tutorial/sql-python/#register-package":{},"tutorial/sql/":{},"tutorial/sql/#register-sedonasql":{}},"title":{}}],["spark.sql.extensions=org.apache.sedona.viz.sql.sedonavizextensions,org.apache.sedona.sql.sedonasqlextens",{"_index":4031,"text":{"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{}}],["spark1.x",{"_index":1864,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{}},"title":{}}],["spark://localhost:7077",{"_index":1831,"text":{"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{}},"title":{}}],["spark://your",{"_index":1797,"text":{"archive/download/project/":{},"archive/download/project/#quick-start":{},"archive/download/project/#submit-the-compiled-jar":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{}},"title":{}}],["spark_connect",{"_index":3543,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["spark_hom",{"_index":3425,"text":{"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/install-python/":{},"setup/install-python/#setup-environment-variables":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{}}],["spark_home/jar",{"_index":1970,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-python/#setup-environment-variables":{}},"title":{}}],["spark_home=$pwd/spark",{"_index":3428,"text":{"setup/compile/":{},"setup/compile/#run-python-test":{}},"title":{}}],["spark_sess",{"_index":3551,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["sparkconf",{"_index":905,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"setup/release-notes/":{},"setup/release-notes/#v100":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{}},"title":{}}],["sparkcontext",{"_index":488,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{}},"title":{"archive/tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#initiate-sparkcontext":{}}}],["sparkimagegener",{"_index":1716,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{}},"title":{}}],["sparklyr",{"_index":3513,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["sparklyr::spark_connect",{"_index":3553,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["sparksess",{"_index":487,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Overview/#quick-start":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/rdd/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#knn-query":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#range-query":{},"tutorial/sql/#register-sedonasql":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/#initiate-sparksession":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/#initiate-sparksession":{}}}],["sparksession.table(\"images\").take(1)(0)(0).asinstanceof[imageserializablewrapper].getimag",{"_index":2719,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"tutorial/viz/":{},"tutorial/viz/#store-the-image-on-disk":{}},"title":{}}],["sparksql",{"_index":480,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#set-up-dependencies":{},"setup/release-notes/":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#v101":{},"setup/release-notes/#v110":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/rdd/":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql/":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz/":{},"tutorial/viz/#set-up-dependencies":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23_1":{}}}],["sparkvers",{"_index":1818,"text":{"archive/download/project/":{},"archive/download/project/#package-the-project":{}},"title":{}}],["spatailrdd",{"_index":3894,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{}},"title":{}}],["spatial",{"_index":390,"text":{"api/flink/Function/":{},"api/flink/Function/#st_setsrid":{},"api/flink/Function/#st_srid":{},"api/flink/Function/#st_transform":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Function/":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_srid":{},"api/sql/Function/#st_transform":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"api/viz/sql/#st_colorize":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/api/viz/sql/#st_colorize":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_1":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#read-from-other-geometry-files":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#output-format":{},"archive/tutorial/rdd/#output-format_1":{},"archive/tutorial/rdd/#output-format_2":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#run-spatial-queries":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#generate-a-single-image":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#key-publications":{},"community/publication/#third-party-evaluation":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/flink/modules/":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/overview/":{},"setup/overview/#distributed-spatial-datasets":{},"setup/overview/#distributed-spatial-queries":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/release-notes/":{},"setup/release-notes/#rdd":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v100":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_1":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#read-from-other-geometry-files":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/demo/":{},"tutorial/demo/#folder-structure":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#run-spatial-queries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#output-format":{},"tutorial/rdd/#output-format_1":{},"tutorial/rdd/#output-format_2":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#run-spatial-queries":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#generate-a-single-image":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#why-scalable-map-visualization":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#spatial-rdd-applications-in-python":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#spatial-sql-application-in-python":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#run-spatial-queries":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"setup/overview/#complex-spatial-objects":{},"setup/overview/#distributed-spatial-datasets":{},"setup/overview/#distributed-spatial-queries":{},"setup/overview/#rich-spatial-analytics-tools":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/#spatial-rdd-applications-in-python":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/flink/sql/#convert-spatial-datastream-to-spatial-table":{},"tutorial/flink/sql/#convert-spatial-table-to-spatial-datastream":{},"tutorial/flink/sql/#get-spatial-table":{},"tutorial/flink/sql/#run-spatial-queries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd-r/#spatial-rdd-applications-in-r-language":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-python/#spatial-sql-application-in-python":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/#run-spatial-queries":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#pixelize-spatial-objects":{}}}],["spatial_col",{"_index":3918,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["spatial_df",{"_index":2005,"text":{"archive/tutorial/geospark-core-python/":{},"tutorial/core-python/":{}},"title":{}}],["spatial_join_result",{"_index":2183,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["spatial_rdd",{"_index":2010,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["spatial_rdd.spatialpartitioning(grid_typ",{"_index":3708,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-python":{}},"title":{}}],["spatialddf",{"_index":2643,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{}},"title":{}}],["spatialdf",{"_index":494,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#range-query":{},"tutorial/rdd/":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#knn-query":{},"tutorial/sql/#range-query":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["spatialindex",{"_index":841,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{}}],["spatialjoin",{"_index":3730,"text":{"tutorial/core-python/":{},"tutorial/core-python/#write-a-distance-join-query":{}},"title":{}}],["spatialjoinqueri",{"_index":2070,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-spatial-join-query":{}},"title":{}}],["spatialjoinqueryflat",{"_index":2072,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes_2":{}},"title":{}}],["spatialjoinqueryflat/distancejoinqueryflat",{"_index":1555,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["spatialknnqueri",{"_index":2063,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"setup/release-notes/":{},"setup/release-notes/#core":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#write-a-spatial-knn-query":{}},"title":{}}],["spatialpairrdd",{"_index":2673,"text":{"archive/tutorial/sql/":{},"tutorial/sql/":{}},"title":{"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{}}}],["spatialpartit",{"_index":2067,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"setup/release-notes/":{},"setup/release-notes/#sedona-python":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{}},"title":{"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{}}}],["spatialpartitionedrdd",{"_index":1896,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["spatialpartitionedrdd/indexedrdd",{"_index":1911,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["spatialrangequeri",{"_index":2035,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["spatialrdd",{"_index":482,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#read-from-other-geometry-files":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#reload-a-saved-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/#output-format":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#reload-a-saved-spatialrdd":{},"archive/tutorial/rdd/#save-an-spatialrdd-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#load-shapefile-and-geojson":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"archive/tutorial/viz/":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v112":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#read-from-other-geometry-files":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#reload-a-saved-spatialrdd":{},"tutorial/core-python/#save-an-spatialrdd-indexed":{},"tutorial/core-python/#save-an-spatialrdd-not-indexed":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/rdd/#output-format":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#reload-a-saved-spatialrdd":{},"tutorial/rdd/#save-an-spatialrdd-indexed":{},"tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#load-shapefile-and-geojson":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{}},"title":{"archive/tutorial/geospark-core-python/#create-a-spatialrdd":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#reload-a-saved-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/rdd/#create-a-spatialrdd":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#reload-a-saved-spatialrdd":{},"archive/tutorial/rdd/#save-an-spatialrdd-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/sql/#convert-between-dataframe-and-spatialrdd":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"archive/tutorial/viz/#visualize-spatialrdd":{},"tutorial/core-python/#create-a-spatialrdd":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#reload-a-saved-spatialrdd":{},"tutorial/core-python/#save-an-spatialrdd-indexed":{},"tutorial/core-python/#save-an-spatialrdd-not-indexed":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/rdd/#create-a-spatialrdd":{},"tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#reload-a-saved-spatialrdd":{},"tutorial/rdd/#save-an-spatialrdd-indexed":{},"tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/sql/#convert-between-dataframe-and-spatialrdd":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/#visualize-spatialrdd":{}}}],["spatialrdd'",{"_index":2078,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-distance-join-query":{}},"title":{}}],["spatialrdd.flipcoordin",{"_index":3695,"text":{"setup/release-notes/":{},"setup/release-notes/#sedona-core":{}},"title":{}}],["speak",{"_index":3519,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["special",{"_index":1943,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-typed-spatialrdd":{}},"title":{}}],["specif",{"_index":1084,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-annoucement":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["specifi",{"_index":1445,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v120":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{}},"title":{}}],["spectral",{"_index":1072,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"api/sql/Raster-operators/#rs_subtract":{}},"title":{}}],["speed",{"_index":1587,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#viz_1":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-partitioning":{}},"title":{}}],["split",{"_index":3766,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["splitter",{"_index":1884,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{}},"title":{}}],["sponsor",{"_index":2762,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{}},"title":{}}],["sql",{"_index":34,"text":{"":{},"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_envelope_aggr":{},"api/flink/Aggregator/#st_union_aggr":{},"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/flink/Constructor/#st_geomfromgeojson":{},"api/flink/Constructor/#st_geomfromgml":{},"api/flink/Constructor/#st_geomfromkml":{},"api/flink/Constructor/#st_geomfromtext":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/flink/Constructor/#st_geomfromwkt":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Constructor/#st_point":{},"api/flink/Constructor/#st_pointfromtext":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_asgeojson":{},"api/flink/Function/#st_asgml":{},"api/flink/Function/#st_askml":{},"api/flink/Function/#st_buffer":{},"api/flink/Function/#st_distance":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_isempty":{},"api/flink/Function/#st_transform":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/AggregateFunction/#st_intersection_aggr":{},"api/sql/AggregateFunction/#st_union_aggr":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Constructor/#st_geomfromgml":{},"api/sql/Constructor/#st_geomfromkml":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_point":{},"api/sql/Constructor/#st_pointfromtext":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/#st_polygonfromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_area":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_asgeojson":{},"api/sql/Function/#st_asgml":{},"api/sql/Function/#st_askml":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_centroid":{},"api/sql/Function/#st_convexhull":{},"api/sql/Function/#st_distance":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_envelope":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_geometrytype":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_intersection":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isempty":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_issimple":{},"api/sql/Function/#st_isvalid":{},"api/sql/Function/#st_length":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_srid":{},"api/sql/Function/#st_startpoint":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_transform":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/sql/Function/#st_z":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Overview/#quick-start":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Predicate/#st_overlaps":{},"api/sql/Predicate/#st_within":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_array":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-loader/#rs_html":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_divide":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_logicalover":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_modulo":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"api/sql/Raster-operators/#rs_normalize":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/sql/Raster-operators/#rs_squareroot":{},"api/sql/Raster-operators/#rs_subtract":{},"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"api/viz/sql/#st_pixelize":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_area":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_centroid":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_envelope":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_length":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/#st_render":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#try-geospark-sql-functions":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#compatibility":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/publish/":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/databricks/#initialise":{},"setup/databricks/#pure-sql-environment":{},"setup/flink/modules/":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/install-scala/#spark-sql-shell":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/modules/":{},"setup/modules/#api-availability":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#python_1":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v100":{},"setup/release-notes/#v101":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"setup/zeppelin/":{},"setup/zeppelin/#compatibility":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/demo/":{},"tutorial/demo/#folder-structure":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/raster/":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#introduction":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#knn-query":{},"tutorial/sql/#range-query":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#set-up-dependencies":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-sql":{},"archive/download/project/#try-geospark-sql-functions":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#spatial-sql-application-in-python":{},"archive/tutorial/sql/":{},"setup/databricks/#pure-sql-environment":{},"setup/install-scala/#spark-sql-shell":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#sql_1":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#sql_3":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-python/#spatial-sql-application-in-python":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}}}],["sql,sedona",{"_index":1187,"text":{"api/viz/sql/":{},"api/viz/sql/#quick-start":{}},"title":{}}],["sql.jar",{"_index":2124,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{}},"title":{}}],["sql/datafram",{"_index":881,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#visualize-spatialrdd":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"tutorial/viz/":{},"tutorial/viz/#visualize-spatialrdd":{}},"title":{}}],["sql/mm",{"_index":450,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/tutorial/sql/":{},"setup/release-notes/":{},"setup/release-notes/#v100":{},"tutorial/flink/sql/":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql/":{}},"title":{}}],["sql/src/main/scala/org/apache/sedona/sql/utils/*.scala",{"_index":3320,"text":{"community/publish/":{}},"title":{}}],["sql_2.1",{"_index":1320,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21":{}},"title":{}}],["sql_2.2",{"_index":1318,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22":{}},"title":{}}],["sql_2.3",{"_index":1316,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{}},"title":{}}],["sql_2.3:1.2.0,org.datasyslab:geospark",{"_index":1829,"text":{"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{}},"title":{}}],["sqlqueri",{"_index":4037,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["squar",{"_index":1172,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_squareroot":{}},"title":{}}],["squareroot",{"_index":1176,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_squareroot":{}},"title":{}}],["src",{"_index":73,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_html":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"download/":{},"download/#120-incubating":{},"download/#121-incubating":{}},"title":{}}],["src.tar.gz",{"_index":3211,"text":{"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["src.tar.gz.asc",{"_index":3230,"text":{"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["src.tar.gz.sha512",{"_index":3226,"text":{"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["src/.git",{"_index":3208,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["src/core/target/sedona",{"_index":3216,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["src/flink/target/sedona",{"_index":3222,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["src/python",{"_index":3220,"text":{"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["src/sql/target/sedona",{"_index":3218,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["src/viz/target/sedona",{"_index":3219,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["srdd",{"_index":1667,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["srid",{"_index":229,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_setsrid":{},"api/flink/Function/#st_srid":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_srid":{}},"title":{}}],["srsname=\"epsg:4269\"><gml:coordin",{"_index":145,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgml":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgml":{}},"title":{}}],["ssdbm",{"_index":3108,"text":{"community/publication/":{},"community/publication/#geosparkviz-visualization-system":{}},"title":{}}],["ssh",{"_index":1725,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["sstd",{"_index":3121,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{}},"title":{}}],["st",{"_index":1438,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#v120":{}},"title":{}}],["st_",{"_index":875,"text":{"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"setup/databricks/":{},"setup/databricks/#initialise":{},"setup/databricks/#pure-sql-environment":{}},"title":{}}],["st_3ddistanc",{"_index":209,"text":{"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"setup/release-notes/":{},"setup/release-notes/#sql":{}},"title":{"api/flink/Function/#st_3ddistance":{},"api/sql/Function/#st_3ddistance":{}}}],["st_addpoint",{"_index":554,"text":{"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/sql/Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{}}}],["st_addpoint(geom",{"_index":559,"text":{"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{}},"title":{}}],["st_area",{"_index":219,"text":{"api/flink/Function/":{},"api/flink/Function/#st_area":{},"api/sql/Function/":{},"api/sql/Function/#st_area":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_area":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{"api/flink/Function/#st_area":{},"api/sql/Function/#st_area":{},"archive/api/sql/GeoSparkSQL-Function/#st_area":{}}}],["st_asbinari",{"_index":221,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asbinary":{},"api/sql/Function/":{},"api/sql/Function/#st_asbinary":{},"setup/release-notes/":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql_1":{}},"title":{"api/flink/Function/#st_asbinary":{},"api/sql/Function/#st_asbinary":{}}}],["st_asewkb",{"_index":225,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkb":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{},"setup/release-notes/":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql_1":{}},"title":{"api/flink/Function/#st_asewkb":{},"api/sql/Function/#st_asewkb":{}}}],["st_asewkt",{"_index":237,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkt":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkt":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{"api/flink/Function/#st_asewkt":{},"api/sql/Function/#st_asewkt":{}}}],["st_asgeojson",{"_index":241,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asgeojson":{},"api/sql/Function/":{},"api/sql/Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{}},"title":{"api/flink/Function/#st_asgeojson":{},"api/sql/Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{}}}],["st_asgml",{"_index":242,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asgml":{},"api/sql/Function/":{},"api/sql/Function/#st_asgml":{}},"title":{"api/flink/Function/#st_asgml":{},"api/sql/Function/#st_asgml":{}}}],["st_askml",{"_index":243,"text":{"api/flink/Function/":{},"api/flink/Function/#st_askml":{},"api/sql/Function/":{},"api/sql/Function/#st_askml":{}},"title":{"api/flink/Function/#st_askml":{},"api/sql/Function/#st_askml":{}}}],["st_astext",{"_index":244,"text":{"api/flink/Function/":{},"api/flink/Function/#st_astext":{},"api/sql/Function/":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_pointonsurface":{},"api/sql/Function/#st_reverse":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#render-the-image":{},"setup/release-notes/":{},"setup/release-notes/#sql":{},"setup/release-notes/#v120":{},"tutorial/viz/":{},"tutorial/viz/#render-the-image":{}},"title":{"api/flink/Function/#st_astext":{},"api/sql/Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{}}}],["st_astext(bound",{"_index":2749,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["st_astext(countyshap",{"_index":3974,"text":{"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{}},"title":{}}],["st_astext(shap",{"_index":2744,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["st_astext(st_pointonsurface(st_geomfromtext('linestring(0",{"_index":713,"text":{"api/sql/Function/":{},"api/sql/Function/#st_pointonsurface":{}},"title":{}}],["st_astext(st_pointonsurface(st_geomfromtext('point(0",{"_index":711,"text":{"api/sql/Function/":{},"api/sql/Function/#st_pointonsurface":{}},"title":{}}],["st_astext(st_pointonsurface(st_geomfromtext('polygon((0",{"_index":714,"text":{"api/sql/Function/":{},"api/sql/Function/#st_pointonsurface":{}},"title":{}}],["st_azimuth",{"_index":245,"text":{"api/flink/Function/":{},"api/flink/Function/#st_azimuth":{},"api/sql/Function/":{},"api/sql/Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/flink/Function/#st_azimuth":{},"api/sql/Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{}}}],["st_azimuth(pointa",{"_index":252,"text":{"api/flink/Function/":{},"api/flink/Function/#st_azimuth":{},"api/sql/Function/":{},"api/sql/Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{}},"title":{}}],["st_boundari",{"_index":257,"text":{"api/flink/Function/":{},"api/flink/Function/#st_boundary":{},"api/sql/Function/":{},"api/sql/Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/flink/Function/#st_boundary":{},"api/sql/Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{}}}],["st_boundary(geom",{"_index":260,"text":{"api/flink/Function/":{},"api/flink/Function/#st_boundary":{},"api/sql/Function/":{},"api/sql/Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{}},"title":{}}],["st_buffer",{"_index":262,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buffer":{},"api/sql/Function/":{},"api/sql/Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{}},"title":{"api/flink/Function/#st_buffer":{},"api/sql/Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{}}}],["st_buildarea",{"_index":270,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{},"api/sql/Function/":{},"api/sql/Function/#st_buildarea":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{"api/flink/Function/#st_buildarea":{},"api/sql/Function/#st_buildarea":{}}}],["st_centroid",{"_index":570,"text":{"api/sql/Function/":{},"api/sql/Function/#st_centroid":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_centroid":{}},"title":{"api/sql/Function/#st_centroid":{},"archive/api/sql/GeoSparkSQL-Function/#st_centroid":{}}}],["st_circl",{"_index":1272,"text":{"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{}}}],["st_collect",{"_index":275,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buildarea":{},"api/sql/Function/":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_multi":{},"setup/release-notes/":{},"setup/release-notes/#sql":{}},"title":{"api/sql/Function/#st_collect":{}}}],["st_collect(*geom",{"_index":576,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collect":{}},"title":{}}],["st_collect(geom",{"_index":577,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collect":{}},"title":{}}],["st_collectionextract",{"_index":584,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{},"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{"api/sql/Function/#st_collectionextract":{}}}],["st_color",{"_index":1193,"text":{"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#colorize-pixels":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"tutorial/viz/":{},"tutorial/viz/#colorize-pixels":{}},"title":{"api/viz/sql/#st_colorize":{},"archive/api/viz/sql/#st_colorize":{}}}],["st_contain",{"_index":197,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#range-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#work-with-data":{},"tutorial/sql/":{},"tutorial/sql/#range-query":{}},"title":{"api/flink/Predicate/#st_contains":{},"api/sql/Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{}}}],["st_contains(polygondf.polygonshap",{"_index":833,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["st_contains(polygonshape#30",{"_index":838,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["st_convexhul",{"_index":596,"text":{"api/sql/Function/":{},"api/sql/Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{"api/sql/Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{}}}],["st_cross",{"_index":931,"text":{"api/sql/Predicate/":{},"api/sql/Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{"api/sql/Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{}}}],["st_differ",{"_index":600,"text":{"api/sql/Function/":{},"api/sql/Function/#st_difference":{},"setup/release-notes/":{},"setup/release-notes/#sql":{}},"title":{"api/sql/Function/#st_difference":{}}}],["st_disjoinnt",{"_index":470,"text":{"api/flink/Predicate/":{},"api/flink/Predicate/#st_disjoint":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_disjoint":{}},"title":{}}],["st_disjoint",{"_index":468,"text":{"api/flink/Predicate/":{},"api/flink/Predicate/#st_disjoint":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_disjoint":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{"api/flink/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_disjoint":{}}}],["st_distanc",{"_index":287,"text":{"api/flink/Function/":{},"api/flink/Function/#st_distance":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Function/":{},"api/sql/Function/#st_distance":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#knn-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/sql/":{},"tutorial/sql/#knn-query":{}},"title":{"api/flink/Function/#st_distance":{},"api/sql/Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{}}}],["st_distance(pointdf1.pointshap",{"_index":849,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["st_distance(pointshape#52",{"_index":852,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["st_distance(st_polygonfromenvelope(1.0,100.0,1000.0,1100.0",{"_index":2658,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#knn-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#knn-query":{},"tutorial/sql/":{},"tutorial/sql/#knn-query":{}},"title":{}}],["st_dump",{"_index":602,"text":{"api/sql/Function/":{},"api/sql/Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/sql/Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{}}}],["st_dump(geom",{"_index":608,"text":{"api/sql/Function/":{},"api/sql/Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{}},"title":{}}],["st_dumppoint",{"_index":611,"text":{"api/sql/Function/":{},"api/sql/Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/sql/Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{}}}],["st_dumppoints(geom",{"_index":614,"text":{"api/sql/Function/":{},"api/sql/Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{}},"title":{}}],["st_encodeimag",{"_index":1226,"text":{"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{"api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/#st_encodeimage":{}}}],["st_encodeimage(imag",{"_index":2748,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["st_endpoint",{"_index":615,"text":{"api/sql/Function/":{},"api/sql/Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/sql/Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{}}}],["st_endpoint(geom",{"_index":616,"text":{"api/sql/Function/":{},"api/sql/Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{}},"title":{}}],["st_envelop",{"_index":289,"text":{"api/flink/Function/":{},"api/flink/Function/#st_envelope":{},"api/sql/Function/":{},"api/sql/Function/#st_envelope":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_envelope":{}},"title":{"api/flink/Function/#st_envelope":{},"api/sql/Function/#st_envelope":{},"archive/api/sql/GeoSparkSQL-Function/#st_envelope":{}}}],["st_envelope_aggr",{"_index":101,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_envelope_aggr":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_pixelize":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{"api/flink/Aggregator/#st_envelope_aggr":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{}}}],["st_equal",{"_index":935,"text":{"api/sql/Predicate/":{},"api/sql/Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{"api/sql/Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{}}}],["st_exterior",{"_index":290,"text":{"api/flink/Function/":{},"api/flink/Function/#st_exteriorring":{},"api/sql/Function/":{},"api/sql/Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/flink/Function/#st_exteriorring":{},"api/sql/Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{}}}],["st_exteriorring(a:geometri",{"_index":294,"text":{"api/flink/Function/":{},"api/flink/Function/#st_exteriorring":{}},"title":{}}],["st_exteriorring(geom",{"_index":625,"text":{"api/sql/Function/":{},"api/sql/Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{}},"title":{}}],["st_flipcoordin",{"_index":296,"text":{"api/flink/Function/":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_transform":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/flink/Function/#st_flipcoordinates":{},"api/sql/Function/#st_flipcoordinates":{}}}],["st_flipcoordinates(a:geometri",{"_index":299,"text":{"api/flink/Function/":{},"api/flink/Function/#st_flipcoordinates":{},"api/sql/Function/":{},"api/sql/Function/#st_flipcoordinates":{}},"title":{}}],["st_force_2d",{"_index":300,"text":{"api/flink/Function/":{},"api/flink/Function/#st_force_2d":{},"api/sql/Function/":{},"api/sql/Function/#st_force_2d":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{"api/flink/Function/#st_force_2d":{},"api/sql/Function/#st_force_2d":{}}}],["st_geohash",{"_index":316,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geohash":{},"api/sql/Function/":{},"api/sql/Function/#st_geohash":{},"setup/release-notes/":{},"setup/release-notes/#flink_1":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#sql_1":{}},"title":{"api/flink/Function/#st_geohash":{},"api/sql/Function/#st_geohash":{}}}],["st_geohash(geom",{"_index":317,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geohash":{},"api/sql/Function/":{},"api/sql/Function/#st_geohash":{}},"title":{}}],["st_geometryn",{"_index":323,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geometryn":{},"api/sql/Function/":{},"api/sql/Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/flink/Function/#st_geometryn":{},"api/sql/Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{}}}],["st_geometryn(geom",{"_index":331,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geometryn":{},"api/sql/Function/":{},"api/sql/Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{}},"title":{}}],["st_geometrytyp",{"_index":626,"text":{"api/sql/Function/":{},"api/sql/Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{"api/sql/Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{}}}],["st_geomfromgeohash",{"_index":122,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql_1":{}},"title":{"api/flink/Constructor/#st_geomfromgeohash":{},"api/sql/Constructor/#st_geomfromgeohash":{}}}],["st_geomfromgeohash(geohash",{"_index":128,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{}},"title":{}}],["st_geomfromgeojson",{"_index":134,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeojson":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"setup/release-notes/":{},"setup/release-notes/#flink_1":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{"api/flink/Constructor/#st_geomfromgeojson":{},"api/sql/Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{}}}],["st_geomfromgeojson(polygontable._c0",{"_index":543,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{}},"title":{}}],["st_geomfromgml",{"_index":141,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgml":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgml":{}},"title":{"api/flink/Constructor/#st_geomfromgml":{},"api/sql/Constructor/#st_geomfromgml":{}}}],["st_geomfromkml",{"_index":149,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromkml":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromkml":{}},"title":{"api/flink/Constructor/#st_geomfromkml":{},"api/sql/Constructor/#st_geomfromkml":{}}}],["st_geomfromtext",{"_index":155,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_boundary":{},"api/flink/Function/#st_geohash":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_isring":{},"api/flink/Function/#st_numinteriorrings":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_geohash":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"api/sql/Function/#st_multi":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_startpoint":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{}},"title":{"api/flink/Constructor/#st_geomfromtext":{},"api/sql/Constructor/#st_geomfromtext":{}}}],["st_geomfromtext('point",{"_index":3915,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["st_geomfromwkb",{"_index":162,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#v112":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{"api/flink/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{}}}],["st_geomfromwkt",{"_index":158,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromtext":{},"api/flink/Constructor/#st_geomfromwkt":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Function/":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_symdifference":{},"api/sql/Function/#st_union":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_orderingequals":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{"api/flink/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{}}}],["st_geomfromwkt(_c0",{"_index":2006,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"tutorial/core-python/":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{}},"title":{}}],["st_geomfromwkt(geom",{"_index":2152,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["st_geomfromwkt(geom#232",{"_index":2195,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["st_geomfromwkt(geom_polygon",{"_index":4069,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{}},"title":{}}],["st_geomfromwkt(image.geometri",{"_index":974,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["st_geomfromwkt(rddshap",{"_index":495,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{}},"title":{}}],["st_geomfromwkt/wkb/text",{"_index":3610,"text":{"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["st_i",{"_index":438,"text":{"api/flink/Function/":{},"api/flink/Function/#st_y":{},"api/sql/Function/":{},"api/sql/Function/#st_y":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/flink/Function/#st_y":{},"api/sql/Function/#st_y":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{}}}],["st_interiorringn",{"_index":337,"text":{"api/flink/Function/":{},"api/flink/Function/#st_interiorringn":{},"api/sql/Function/":{},"api/sql/Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/flink/Function/#st_interiorringn":{},"api/sql/Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{}}}],["st_interiorringn(geom",{"_index":341,"text":{"api/flink/Function/":{},"api/flink/Function/#st_interiorringn":{},"api/sql/Function/":{},"api/sql/Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{}},"title":{}}],["st_intersect",{"_index":471,"text":{"api/flink/Predicate/":{},"api/flink/Predicate/#st_intersects":{},"api/sql/Function/":{},"api/sql/Function/#st_intersection":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#range-join":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#range-query":{},"setup/release-notes/":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql/":{},"tutorial/sql/#range-query":{}},"title":{"api/flink/Predicate/#st_intersects":{},"api/sql/Function/#st_intersection":{},"api/sql/Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{}}}],["st_intersection_aggr",{"_index":476,"text":{"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_intersection_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{"api/sql/AggregateFunction/#st_intersection_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr":{}}}],["st_intersects(p.geometri",{"_index":2187,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["st_isclos",{"_index":342,"text":{"api/flink/Function/":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_isring":{},"api/sql/Function/":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/flink/Function/#st_isclosed":{},"api/sql/Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{}}}],["st_isclosed(geom",{"_index":346,"text":{"api/flink/Function/":{},"api/flink/Function/#st_isclosed":{},"api/sql/Function/":{},"api/sql/Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{}},"title":{}}],["st_isempti",{"_index":348,"text":{"api/flink/Function/":{},"api/flink/Function/#st_isempty":{},"api/sql/Function/":{},"api/sql/Function/#st_isempty":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{"api/flink/Function/#st_isempty":{},"api/sql/Function/#st_isempty":{}}}],["st_isr",{"_index":351,"text":{"api/flink/Function/":{},"api/flink/Function/#st_isring":{},"api/sql/Function/":{},"api/sql/Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/flink/Function/#st_isring":{},"api/sql/Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{}}}],["st_isring(geom",{"_index":353,"text":{"api/flink/Function/":{},"api/flink/Function/#st_isring":{},"api/sql/Function/":{},"api/sql/Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{}},"title":{}}],["st_issimpl",{"_index":352,"text":{"api/flink/Function/":{},"api/flink/Function/#st_isring":{},"api/flink/Function/#st_issimple":{},"api/sql/Function/":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{"api/flink/Function/#st_issimple":{},"api/sql/Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{}}}],["st_isvalid",{"_index":357,"text":{"api/flink/Function/":{},"api/flink/Function/#st_isvalid":{},"api/sql/Function/":{},"api/sql/Function/#st_isvalid":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{"api/flink/Function/#st_isvalid":{},"api/sql/Function/#st_isvalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{}}}],["st_length",{"_index":358,"text":{"api/flink/Function/":{},"api/flink/Function/#st_length":{},"api/sql/Function/":{},"api/sql/Function/#st_length":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_length":{}},"title":{"api/flink/Function/#st_length":{},"api/sql/Function/#st_length":{},"archive/api/sql/GeoSparkSQL-Function/#st_length":{}}}],["st_linefromtext",{"_index":167,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_linefromtext":{},"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{"api/flink/Constructor/#st_linefromtext":{},"api/sql/Constructor/#st_linefromtext":{}}}],["st_lineinterpolatepoint",{"_index":630,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{}},"title":{"api/sql/Function/#st_lineinterpolatepoint":{}}}],["st_linemerg",{"_index":648,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/sql/Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{}}}],["st_linestr",{"_index":628,"text":{"api/sql/Function/":{},"api/sql/Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{}},"title":{}}],["st_linestringfromtext",{"_index":177,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{}},"title":{"api/flink/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{}}}],["st_linestringfromtext(replace(replace(cast(coordin",{"_index":3885,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["st_linesubstr",{"_index":655,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linesubstring":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{}},"title":{"api/sql/Function/#st_linesubstring":{}}}],["st_makepolygon",{"_index":669,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makepolygon":{},"setup/release-notes/":{},"setup/release-notes/#sql_1":{}},"title":{"api/sql/Function/#st_makepolygon":{}}}],["st_makepolygon(geom",{"_index":672,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makepolygon":{}},"title":{}}],["st_makevalid",{"_index":677,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#v131":{}},"title":{"api/sql/Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{}}}],["st_makevalid(geom)|st_makevalid(geom",{"_index":685,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{}},"title":{}}],["st_min",{"_index":3625,"text":{"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{}}],["st_minimumboundingcircl",{"_index":696,"text":{"api/sql/Function/":{},"api/sql/Function/#st_minimumboundingcircle":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{}},"title":{"api/sql/Function/#st_minimumboundingcircle":{}}}],["st_minimumboundingcircle(geom",{"_index":699,"text":{"api/sql/Function/":{},"api/sql/Function/#st_minimumboundingcircle":{}},"title":{}}],["st_minimumboundingradiu",{"_index":701,"text":{"api/sql/Function/":{},"api/sql/Function/#st_minimumboundingradius":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{}},"title":{"api/sql/Function/#st_minimumboundingradius":{}}}],["st_minimumboundingradius(geom",{"_index":705,"text":{"api/sql/Function/":{},"api/sql/Function/#st_minimumboundingradius":{}},"title":{}}],["st_multi",{"_index":706,"text":{"api/sql/Function/":{},"api/sql/Function/#st_multi":{},"setup/release-notes/":{},"setup/release-notes/#sql":{}},"title":{"api/sql/Function/#st_multi":{}}}],["st_multi(geom",{"_index":708,"text":{"api/sql/Function/":{},"api/sql/Function/#st_multi":{}},"title":{}}],["st_npoint",{"_index":360,"text":{"api/flink/Function/":{},"api/flink/Function/#st_npoints":{},"api/sql/Function/":{},"api/sql/Function/#st_npoints":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_npoints":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{"api/flink/Function/#st_npoints":{},"api/sql/Function/#st_npoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_npoints":{}}}],["st_numgeometri",{"_index":362,"text":{"api/flink/Function/":{},"api/flink/Function/#st_numgeometries":{},"api/sql/Function/":{},"api/sql/Function/#st_numgeometries":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/flink/Function/#st_numgeometries":{},"api/sql/Function/#st_numgeometries":{},"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries":{}}}],["st_numinterior",{"_index":365,"text":{"api/flink/Function/":{},"api/flink/Function/#st_numinteriorrings":{},"api/sql/Function/":{},"api/sql/Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/flink/Function/#st_numinteriorrings":{},"api/sql/Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{}}}],["st_numinteriorrings(geom",{"_index":366,"text":{"api/flink/Function/":{},"api/flink/Function/#st_numinteriorrings":{},"api/sql/Function/":{},"api/sql/Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{}},"title":{}}],["st_orderingequ",{"_index":472,"text":{"api/flink/Predicate/":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_orderingequals":{},"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{}},"title":{"api/flink/Predicate/#st_orderingequals":{},"api/sql/Predicate/#st_orderingequals":{}}}],["st_orderingequals(a",{"_index":473,"text":{"api/flink/Predicate/":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_orderingequals":{}},"title":{}}],["st_overlap",{"_index":936,"text":{"api/sql/Predicate/":{},"api/sql/Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{"api/sql/Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{}}}],["st_pixel",{"_index":1235,"text":{"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_pixelize":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"setup/release-notes/#viz_1":{},"tutorial/viz/":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{"api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/#st_pixelize":{}}}],["st_point",{"_index":178,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_point":{},"api/flink/Function/":{},"api/flink/Function/#st_azimuth":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_z":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_point":{},"api/sql/Function/":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_z":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#v120":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{"api/flink/Constructor/#st_point":{},"api/sql/Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{}}}],["st_point(cast(_c0#0",{"_index":817,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{}},"title":{}}],["st_point(cast(_c0#21",{"_index":818,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{}},"title":{}}],["st_point(cast(_c0#31",{"_index":802,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{}},"title":{}}],["st_point(cast(_c0#48",{"_index":839,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["st_point(cast(inputtable._c0",{"_index":2553,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["st_pointfromtext",{"_index":186,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_pointfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{}},"title":{"api/flink/Constructor/#st_pointfromtext":{},"api/sql/Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{}}}],["st_pointn",{"_index":367,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointn":{},"api/sql/Function/":{},"api/sql/Function/#st_pointn":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{"api/flink/Function/#st_pointn":{},"api/sql/Function/#st_pointn":{}}}],["st_pointn(a:geometri",{"_index":374,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointn":{}},"title":{}}],["st_pointn(geom",{"_index":710,"text":{"api/sql/Function/":{},"api/sql/Function/#st_pointn":{}},"title":{}}],["st_pointonsurfac",{"_index":377,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointonsurface":{},"api/sql/Function/":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{"api/flink/Function/#st_pointonsurface":{},"api/sql/Function/#st_pointonsurface":{}}}],["st_pointonsurface(a:geometri",{"_index":381,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointonsurface":{},"api/sql/Function/":{},"api/sql/Function/#st_pointonsurface":{}},"title":{}}],["st_polygon",{"_index":629,"text":{"api/sql/Function/":{},"api/sql/Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{}},"title":{}}],["st_polygonfromenvelop",{"_index":188,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql-pure-sql/#work-with-data":{}},"title":{"api/flink/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{}}}],["st_polygonfromenvelope(1.0,100.0,1000.0,1100.0",{"_index":2655,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#range-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#range-query":{},"tutorial/sql/":{},"tutorial/sql/#range-query":{}},"title":{}}],["st_polygonfromenvelope(cast(_c0#0",{"_index":795,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#predicate-pushdown":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#predicate-pushdown":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{}},"title":{}}],["st_polygonfromenvelope(cast(_c0#22",{"_index":845,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{}},"title":{}}],["st_polygonfromtext",{"_index":203,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{}},"title":{"api/flink/Constructor/#st_polygonfromtext":{},"api/sql/Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{}}}],["st_precisionreduc",{"_index":716,"text":{"api/sql/Function/":{},"api/sql/Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{"api/sql/Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{}}}],["st_removepoint",{"_index":721,"text":{"api/sql/Function/":{},"api/sql/Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/sql/Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{}}}],["st_removepoint(geom",{"_index":723,"text":{"api/sql/Function/":{},"api/sql/Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{}},"title":{}}],["st_render",{"_index":1250,"text":{"api/viz/sql/":{},"api/viz/sql/#st_render":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_render":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#render-the-image":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"setup/release-notes/#viz_1":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#render-the-image":{}},"title":{"api/viz/sql/#st_render":{},"archive/api/viz/sql/#st_render":{}}}],["st_revers",{"_index":384,"text":{"api/flink/Function/":{},"api/flink/Function/#st_reverse":{},"api/sql/Function/":{},"api/sql/Function/#st_reverse":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{"api/flink/Function/#st_reverse":{},"api/sql/Function/#st_reverse":{}}}],["st_saveaswkb",{"_index":2668,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{}},"title":{}}],["st_saveaswkt",{"_index":2663,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{}},"title":{}}],["st_saveaswkt(countyshap",{"_index":2666,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{}},"title":{}}],["st_setsrid",{"_index":240,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_setsrid":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_setsrid":{},"setup/release-notes/":{},"setup/release-notes/#sql_1":{}},"title":{"api/flink/Function/#st_setsrid":{},"api/sql/Function/#st_setsrid":{}}}],["st_simplifypreservetopolog",{"_index":724,"text":{"api/sql/Function/":{},"api/sql/Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{"api/sql/Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{}}}],["st_srid",{"_index":396,"text":{"api/flink/Function/":{},"api/flink/Function/#st_srid":{},"api/sql/Function/":{},"api/sql/Function/#st_srid":{},"setup/release-notes/":{},"setup/release-notes/#sql_1":{}},"title":{"api/flink/Function/#st_srid":{},"api/sql/Function/#st_srid":{}}}],["st_startpoint",{"_index":731,"text":{"api/sql/Function/":{},"api/sql/Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/sql/Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{}}}],["st_startpoint(geom",{"_index":732,"text":{"api/sql/Function/":{},"api/sql/Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{}},"title":{}}],["st_subdivid",{"_index":734,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"setup/release-notes/":{},"setup/release-notes/#sql_2":{}},"title":{"api/sql/Function/#st_subdivide":{}}}],["st_subdivide(geom",{"_index":737,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["st_subdivideexplod",{"_index":766,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivideexplode":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/release-notes/":{},"setup/release-notes/#sql_2":{}},"title":{"api/sql/Function/#st_subdivideexplode":{}}}],["st_subdivideexplode(geom",{"_index":769,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivideexplode":{}},"title":{}}],["st_symdiffer",{"_index":773,"text":{"api/sql/Function/":{},"api/sql/Function/#st_symdifference":{}},"title":{"api/sql/Function/#st_symdifference":{}}}],["st_symmdiffer",{"_index":3637,"text":{"setup/release-notes/":{},"setup/release-notes/#sql":{}},"title":{}}],["st_tilenam",{"_index":1242,"text":{"api/viz/sql/":{},"api/viz/sql/#st_tilename":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-tile-name":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"tutorial/viz/":{},"tutorial/viz/#create-tile-name":{}},"title":{"api/viz/sql/#st_tilename":{},"archive/api/viz/sql/#st_tilename":{}}}],["st_touch",{"_index":938,"text":{"api/sql/Predicate/":{},"api/sql/Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{"api/sql/Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{}}}],["st_transform",{"_index":397,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{"api/flink/Function/#st_transform":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{}}}],["st_transform(countyshap",{"_index":2647,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["st_union",{"_index":776,"text":{"api/sql/Function/":{},"api/sql/Function/#st_union":{},"setup/release-notes/":{},"setup/release-notes/#sql":{}},"title":{"api/sql/Function/#st_union":{}}}],["st_union_aggr",{"_index":115,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_union_aggr":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_union_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{"api/flink/Aggregator/#st_union_aggr":{},"api/sql/AggregateFunction/#st_union_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr":{}}}],["st_within",{"_index":788,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#range-join":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_within":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#range-query":{},"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql/":{},"tutorial/sql/#range-query":{}},"title":{"api/sql/Predicate/#st_within":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{}}}],["st_x",{"_index":428,"text":{"api/flink/Function/":{},"api/flink/Function/#st_x":{},"api/sql/Function/":{},"api/sql/Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{}},"title":{"api/flink/Function/#st_x":{},"api/sql/Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{}}}],["st_x(pointa",{"_index":429,"text":{"api/flink/Function/":{},"api/flink/Function/#st_x":{},"api/sql/Function/":{},"api/sql/Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{}},"title":{}}],["st_xmax",{"_index":431,"text":{"api/flink/Function/":{},"api/flink/Function/#st_xmax":{},"api/sql/Function/":{},"api/sql/Function/#st_xmax":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{"api/flink/Function/#st_xmax":{},"api/sql/Function/#st_xmax":{}}}],["st_xmin",{"_index":436,"text":{"api/flink/Function/":{},"api/flink/Function/#st_xmin":{},"api/sql/Function/":{},"api/sql/Function/#st_xmin":{}},"title":{"api/flink/Function/#st_xmin":{},"api/sql/Function/#st_xmin":{}}}],["st_y(pointa",{"_index":439,"text":{"api/flink/Function/":{},"api/flink/Function/#st_y":{},"api/sql/Function/":{},"api/sql/Function/#st_y":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{}},"title":{}}],["st_y_min",{"_index":443,"text":{"api/flink/Function/":{},"api/flink/Function/#st_ymin":{},"api/sql/Function/":{},"api/sql/Function/#st_ymin":{}},"title":{}}],["st_ymax",{"_index":441,"text":{"api/flink/Function/":{},"api/flink/Function/#st_ymax":{},"api/sql/Function/":{},"api/sql/Function/#st_ymax":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{"api/flink/Function/#st_ymax":{},"api/sql/Function/#st_ymax":{}}}],["st_ymin",{"_index":442,"text":{"api/flink/Function/":{},"api/flink/Function/#st_ymin":{},"api/sql/Function/":{},"api/sql/Function/#st_ymin":{},"setup/release-notes/":{},"setup/release-notes/#flink":{},"setup/release-notes/#sql-for-spark":{}},"title":{"api/flink/Function/#st_ymin":{},"api/sql/Function/#st_ymin":{}}}],["st_z",{"_index":444,"text":{"api/flink/Function/":{},"api/flink/Function/#st_z":{},"api/sql/Function/":{},"api/sql/Function/#st_z":{},"setup/release-notes/":{},"setup/release-notes/#sql":{}},"title":{"api/flink/Function/#st_z":{},"api/sql/Function/#st_z":{}}}],["st_z(pointa",{"_index":446,"text":{"api/flink/Function/":{},"api/flink/Function/#st_z":{},"api/sql/Function/":{},"api/sql/Function/#st_z":{}},"title":{}}],["stabil",{"_index":2770,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{}},"title":{}}],["stage",{"_index":930,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"community/publish/":{},"community/publish/#failed-vote":{},"community/publish/#publish-the-doc-website":{},"community/publish/#release-the-package":{},"community/publish/#stage-the-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"setup/compile/":{}},"title":{"community/publish/#stage-the-release-candidate":{},"setup/compile/#download-staged-jars":{}}}],["stagingid",{"_index":3304,"text":{"community/publish/":{}},"title":{}}],["standalon",{"_index":3632,"text":{"setup/release-notes/":{},"setup/release-notes/#rdd":{}},"title":{}}],["standard",{"_index":452,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/tutorial/sql/":{},"setup/release-notes/":{},"setup/release-notes/#v100":{},"tutorial/flink/sql/":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql/":{}},"title":{}}],["start",{"_index":344,"text":{"api/flink/Function/":{},"api/flink/Function/#st_isclosed":{},"api/sql/Function/":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Overview/":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_getband":{},"api/viz/sql/":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/viz/sql/":{},"archive/download/cluster/":{},"archive/download/cluster/#start-your-cluster":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#quick-start":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/viz/":{},"archive/tutorial/zeppelin/":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/cluster/":{},"setup/cluster/#start-your-cluster":{},"setup/databricks/":{},"setup/databricks/#initialise":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#installation":{},"tutorial/raster/":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-python/":{},"tutorial/sql-python/#installation":{}},"title":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/viz/sql/#quick-start":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/api/viz/sql/#quick-start":{},"archive/download/cluster/#start-your-cluster":{},"archive/download/overview/":{},"archive/download/project/#quick-start":{},"setup/cluster/#start-your-cluster":{}}}],["startfract",{"_index":661,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linesubstring":{}},"title":{}}],["startup",{"_index":3490,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["state",{"_index":1929,"text":{"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"community/publication/":{},"community/publication/#publication":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{}},"title":{}}],["statefp",{"_index":2324,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["statement",{"_index":2582,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-spatial-knn-query":{}},"title":{}}],["statist",{"_index":3107,"text":{"community/publication/":{},"community/publication/#geosparkviz-visualization-system":{},"setup/overview/":{}},"title":{"setup/overview/#download-statistics":{}}}],["statu",{"_index":2773,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/rule/":{},"community/rule/#make-a-pull-request":{}},"title":{}}],["stay",{"_index":1876,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/core-python/":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{}},"title":{}}],["steep",{"_index":1790,"text":{"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"setup/install-scala/":{}},"title":{}}],["step",{"_index":1503,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#installation":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#nominate-a-committer-or-pmc-member":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/publish/":{},"community/publish/#failed-vote":{},"community/publish/#prepare-secret-gpg-key":{},"community/publish/#publish-maven-snapshots":{},"community/publish/#stage-the-release-candidate":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"community/vote/#run-the-verify-script":{},"community/vote/#vote-a-sedona-release":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v112":{},"setup/zeppelin/":{},"setup/zeppelin/#installation":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/flink/sql/":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd/":{},"tutorial/sql/":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["still",{"_index":1552,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["stitch",{"_index":1705,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{}},"title":{}}],["storag",{"_index":1668,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-an-spatialrdd-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#save-an-spatialrdd-indexed":{},"tutorial/core-python/#save-an-spatialrdd-not-indexed":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/rdd/":{},"tutorial/rdd/#save-an-spatialrdd-indexed":{},"tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{}},"title":{"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql/#save-to-permanent-storage":{}}}],["storagelevel",{"_index":1613,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["store",{"_index":1691,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#save-an-spatialrdd-indexed":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#store-map-tiles-on-disk":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#save-an-spatialrdd-indexed":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#save-an-spatialrdd-indexed":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/viz/":{},"tutorial/viz/#store-map-tiles-on-disk":{},"tutorial/viz/#store-the-image-on-disk":{}},"title":{"archive/tutorial/viz/#store-map-tiles-on-disk":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/viz/#store-map-tiles-on-disk":{},"tutorial/viz/#store-the-image-on-disk":{}}}],["str",{"_index":1949,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{}},"title":{}}],["straightforward",{"_index":3528,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["strategi",{"_index":2601,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#register-geosparksql":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/sql/":{},"tutorial/sql/#register-sedonasql":{}},"title":{}}],["stream",{"_index":17,"text":{"":{},"setup/release-notes/":{},"setup/release-notes/#flink_1":{},"tutorial/flink/sql/":{}},"title":{"#04162022-sedona-120-incubating-is-released-sedona-now-supports-geospatial-stream-processing-in-apache-flink":{},"tutorial/flink/sql/#initiate-stream-environment":{}}}],["streamexecutionenviron",{"_index":4038,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#initiate-stream-environment":{},"tutorial/flink/sql/#register-sedonasql":{}},"title":{}}],["streamtableenviron",{"_index":4043,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#initiate-stream-environment":{},"tutorial/flink/sql/#register-sedonasql":{}},"title":{}}],["strength",{"_index":2778,"text":{"community/contact/":{},"community/contact/#community":{}},"title":{}}],["string",{"_index":125,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/flink/Function/":{},"api/flink/Function/#st_asgeojson":{},"api/flink/Function/#st_asgml":{},"api/flink/Function/#st_askml":{},"api/flink/Function/#st_astext":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Constructor/#st_geomfromwkb":{},"api/sql/Function/":{},"api/sql/Function/#st_asgeojson":{},"api/sql/Function/#st_asgml":{},"api/sql/Function/#st_askml":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_geometrytype":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_html":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"api/viz/sql/#st_encodeimage":{},"api/viz/sql/#st_tilename":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"setup/release-notes/":{},"setup/release-notes/#v100":{},"setup/release-notes/#v112":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["stringdf",{"_index":2665,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{}},"title":{}}],["stringtyp",{"_index":3978,"text":{"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["stripmargin",{"_index":498,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"tutorial/rdd/":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#knn-query":{},"tutorial/sql/#range-query":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["struct",{"_index":702,"text":{"api/sql/Function/":{},"api/sql/Function/#st_minimumboundingradius":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["struct<county_code:string,geom:str",{"_index":2202,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{}},"title":{}}],["structfield",{"_index":2242,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"tutorial/sql-python/":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["structfield,stringtyp",{"_index":3758,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}},"title":{}}],["structtyp",{"_index":2243,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/sql-python/":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["structur",{"_index":510,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/rdd/":{},"community/develop/":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/demo/":{},"tutorial/demo/#folder-structure":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{}},"title":{"tutorial/demo/#folder-structure":{}}}],["style",{"_index":2700,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["sub",{"_index":970,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{}},"title":{}}],["subject",{"_index":2907,"text":{"community/contributor/":{},"community/contributor/#close-a-vote":{},"community/contributor/#committer-done-template":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#pmc-annoucement":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#make-a-pull-request":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["submiss",{"_index":3000,"text":{"community/contributor/":{},"community/contributor/#pmc-annoucement":{},"community/publish/":{},"community/publish/#release-the-package":{}},"title":{}}],["submit",{"_index":1795,"text":{"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/download/project/#submit-the-compiled-jar":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/contact/#community":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/develop/":{},"community/publish/":{},"community/publish/#release-the-package":{},"community/rule/":{},"community/rule/#make-a-pull-request":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/sql-python/":{},"tutorial/sql-python/#register-package":{},"tutorial/sql/":{},"tutorial/sql/#register-sedonasql":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{"archive/download/project/#submit-the-compiled-jar":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{}}}],["submodul",{"_index":3023,"text":{"community/develop/":{}},"title":{}}],["subscrib",{"_index":2982,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["subscribe@sedona.apache.org",{"_index":2983,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["subsequ",{"_index":2905,"text":{"community/contributor/":{}},"title":{}}],["subset",{"_index":1108,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{}},"title":{}}],["substr",{"_index":657,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linesubstring":{}},"title":{}}],["subtract",{"_index":1178,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_subtract":{}},"title":{}}],["subtractdf",{"_index":1180,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_subtract":{}},"title":{}}],["success",{"_index":2772,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contributor/":{},"community/contributor/#close-a-vote":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["successful/not",{"_index":2915,"text":{"community/contributor/":{},"community/contributor/#close-a-vote":{}},"title":{}}],["successfulli",{"_index":3367,"text":{"community/vote/":{},"community/vote/#vote-a-sedona-release":{}},"title":{}}],["such",{"_index":783,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Optimizer/#range-join":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-other-geometry-files":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/publish/":{},"community/publish/#upload-release-candidate":{},"community/rule/":{},"community/rule/#make-a-pull-request":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-other-geometry-files":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/core-python/#tips":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#why-scalable-map-visualization":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["sudo",{"_index":3323,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{},"setup/compile/":{},"setup/compile/#run-python-test":{}},"title":{}}],["suffer",{"_index":2689,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["suffici",{"_index":2876,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["suffix",{"_index":3588,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#snapshot-versions":{}},"title":{}}],["suggest",{"_index":1800,"text":{"archive/download/project/":{},"archive/download/project/#select-an-ide":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"community/rule/":{},"community/rule/#review-a-pull-request":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["suit",{"_index":1981,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{}},"title":{}}],["sumdf",{"_index":1073,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{}},"title":{}}],["summar",{"_index":2683,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["summari",{"_index":1624,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["sumofband",{"_index":1075,"text":{"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{}},"title":{}}],["super",{"_index":2589,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/viz/":{}},"title":{}}],["superhero",{"_index":2587,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{}},"title":{}}],["suppli",{"_index":1612,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["supplifi",{"_index":1608,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["support",{"_index":6,"text":{"":{},"api/flink/Function/":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#range-join":{},"api/sql/Optimizer/#sedonasql-query-optimizer":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Parameter/#usage":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#geosparksql-query-optimizer":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/project/":{},"archive/download/project/#select-an-ide":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#supported-versions":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#supported-versions":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/sql/":{},"archive/tutorial/viz/":{},"community/publication/":{},"community/publication/#geosparkviz-visualization-system":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/maven-coordinates/":{},"setup/overview/":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#flink_1":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#sql":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#sql_1":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v100":{},"setup/release-notes/#v101":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"setup/release-notes/#v120":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/flink/sql/":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/raster/":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{}},"title":{"#04162022-sedona-120-incubating-is-released-sedona-now-supports-geospatial-stream-processing-in-apache-flink":{},"#05252021-sedona-101-incubating-is-released-it-supports-spark-23-31-scala-211-212-python-36-39":{},"#08302022-sedona-121-incubating-is-released-it-supports-spark-24-33-and-flink-112":{},"#10062021-sedona-110-incubating-is-released-r-lang-api-is-available-on-cran-raster-data-and-map-algebra-sql-functions-are-now-supported":{},"#11232021-sedona-111-incubating-is-released-it-now-supports-spark-32":{},"archive/tutorial/geospark-core-python/#supported-versions":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#supported-versions":{},"tutorial/sql-python/#supported-shapely-objects":{}}}],["supported\u2014pleas",{"_index":3977,"text":{"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["suppos",{"_index":2278,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["sure",{"_index":518,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/rdd/":{},"community/develop/":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#compile-r-html-docs":{},"community/publish/#failed-vote":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#jts2geojson-0161":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/demo/":{},"tutorial/demo/#prerequisites":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/rdd/":{}},"title":{}}],["surfac",{"_index":380,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointonsurface":{},"api/sql/Function/":{},"api/sql/Function/#st_pointonsurface":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["sustain",{"_index":2873,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{}},"title":{}}],["svg",{"_index":1720,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#sedona-viz":{}},"title":{}}],["svn",{"_index":3015,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{}},"title":{}}],["swakai@apache.org",{"_index":2844,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["swap",{"_index":403,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{}},"title":{}}],["switch",{"_index":1562,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["symmetr",{"_index":774,"text":{"api/sql/Function/":{},"api/sql/Function/#st_symdifference":{}},"title":{}}],["symposium",{"_index":3119,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{}},"title":{}}],["symptom",{"_index":2965,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["sysmt",{"_index":2714,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["system",{"_index":392,"text":{"api/flink/Function/":{},"api/flink/Function/#st_setsrid":{},"api/flink/Function/#st_srid":{},"api/flink/Function/#st_transform":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Function/":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_srid":{},"api/sql/Function/#st_transform":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/project/":{},"archive/download/project/#select-an-ide":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparkviz-visualization-system":{},"community/publication/#key-publications":{},"community/publication/#publication":{},"community/publication/#third-party-evaluation":{},"community/publish/":{},"community/publish/#release-the-package":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/install-python/":{},"setup/overview/":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#store-the-image-on-disk":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"community/publication/#geosparkviz-visualization-system":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}}}],["t",{"_index":539,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["t_epsg",{"_index":1998,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{}},"title":{}}],["tab",{"_index":3461,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["tabl",{"_index":772,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivideexplode":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"setup/flink/modules/":{},"setup/flink/modules/#api-availability":{},"setup/flink/modules/#sedona-modules-for-apache-flink":{},"setup/release-notes/":{},"setup/release-notes/#flink_1":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#get-spatial-table":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{}},"title":{"tutorial/flink/sql/#convert-spatial-datastream-to-spatial-table":{},"tutorial/flink/sql/#convert-spatial-table-to-spatial-datastream":{},"tutorial/flink/sql/#get-spatial-table":{}}}],["table/sql",{"_index":3595,"text":{"setup/overview/":{},"setup/overview/#distributed-spatial-datasets":{}},"title":{}}],["tableenv",{"_index":4036,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#get-datastream":{},"tutorial/flink/sql/#get-spatial-table":{},"tutorial/flink/sql/#initiate-stream-environment":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["tableenv'",{"_index":4094,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#get-datastream":{},"tutorial/flink/sql/#get-spatial-table":{}},"title":{}}],["tag",{"_index":1063,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_html":{},"community/publish/":{},"community/publish/#failed-vote":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/compile/":{},"setup/compile/#download-staged-jars":{}},"title":{}}],["tahboub",{"_index":3063,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["tahir",{"_index":3105,"text":{"community/publication/":{},"community/publication/#geosparkviz-visualization-system":{}},"title":{}}],["tailor",{"_index":2730,"text":{"archive/tutorial/zeppelin/":{},"tutorial/zeppelin/":{}},"title":{}}],["take",{"_index":1547,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/develop/":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["taken",{"_index":2974,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["talk",{"_index":3045,"text":{"community/publication/":{},"community/publication/#key-publications":{}},"title":{}}],["tar",{"_index":3209,"text":{"community/publish/":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["target",{"_index":964,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_modulo":{},"archive/download/project/":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"setup/compile/":{},"setup/release-notes/":{},"setup/release-notes/#global_3":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql-python/":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{"setup/compile/#compile-with-different-targets":{}}}],["target/point",{"_index":2723,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"tutorial/viz/":{},"tutorial/viz/#store-the-image-on-disk":{}},"title":{}}],["target/scala",{"_index":1822,"text":{"archive/download/project/":{},"archive/download/project/#submit-the-compiled-jar":{}},"title":{}}],["targetband",{"_index":1056,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_getband":{}},"title":{}}],["targetband:int",{"_index":1054,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_getband":{}},"title":{}}],["targetcr",{"_index":400,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{}},"title":{}}],["targetcrs:str",{"_index":417,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{}},"title":{}}],["targetcrscod",{"_index":2559,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{}},"title":{}}],["task",{"_index":2942,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/rule/":{}},"title":{"community/rule/#pick-annouce-a-task-using-jira":{}}}],["tb",{"_index":3825,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["tb.select(\"elements.id\").topanda",{"_index":3835,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["tb.select(\"total_nodes\").topanda",{"_index":3831,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["tb.show(5",{"_index":3829,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["tbl",{"_index":3914,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["team",{"_index":3013,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["technic",{"_index":3083,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{},"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["tell",{"_index":1659,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"community/develop/":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{}}],["temp",{"_index":2708,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#render-the-image":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["temperatur",{"_index":1197,"text":{"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{}},"title":{}}],["tempfil",{"_index":4009,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["templat",{"_index":1781,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#quick-start":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#visualize-spatialrdd":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/contributor/":{},"community/rule/":{},"community/rule/#make-a-pull-request":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"tutorial/demo/":{},"tutorial/demo/#compile":{},"tutorial/demo/#folder-structure":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/demo/#scala":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{"archive/download/project/#open-geospark-template-project":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"community/contributor/#committer-done-template":{},"tutorial/demo/#run-template-projects-locally":{}}}],["templates/committervote.txt",{"_index":2892,"text":{"community/contributor/":{},"community/contributor/#nominate-a-committer-or-pmc-member":{}},"title":{}}],["tempor",{"_index":3120,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{}},"title":{}}],["temporarili",{"_index":1677,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["termin",{"_index":1761,"text":{"archive/download/cluster/":{},"archive/download/cluster/#start-your-cluster":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/scalashell/":{},"archive/download/scalashell/#spark-scala-shell":{},"community/develop/":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/cluster/":{},"setup/cluster/#start-your-cluster":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/install-python/":{},"setup/install-python/#setup-environment-variables":{},"tutorial/demo/":{},"tutorial/demo/#compile":{}},"title":{}}],["test",{"_index":349,"text":{"api/flink/Function/":{},"api/flink/Function/#st_isempty":{},"api/flink/Function/#st_issimple":{},"api/flink/Function/#st_isvalid":{},"api/sql/Function/":{},"api/sql/Function/#st_isempty":{},"api/sql/Function/#st_issimple":{},"api/sql/Function/#st_isvalid":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#python":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/develop/":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"community/rule/#review-a-pull-request":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#mkdocs-website":{},"setup/compile/#run-python-test":{},"setup/flink/platform/":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/platform/":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#sql":{},"setup/release-notes/#v01-v07":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#work-with-data":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{"community/develop/#run-unit-tests":{},"setup/compile/#run-python-test":{}}}],["test_data",{"_index":591,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{}},"title":{}}],["testattribute0",{"_index":3901,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["tests/resources/county_small.tsv",{"_index":2003,"text":{"archive/tutorial/geospark-core-python/":{},"tutorial/core-python/":{}},"title":{}}],["text",{"_index":169,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Constructor/#st_pointfromtext":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_astext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_pointfromtext":{},"api/sql/Constructor/#st_polygonfromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{}},"title":{}}],["text:str",{"_index":171,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Constructor/#st_pointfromtext":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_pointfromtext":{},"api/sql/Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{}},"title":{}}],["thank",{"_index":1480,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"community/contributor/":{},"community/contributor/#mentors":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["that'",{"_index":1284,"text":{"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{}},"title":{}}],["themselv",{"_index":1488,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/":{},"setup/release-notes/#v112":{}},"title":{}}],["therefor",{"_index":1903,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/rdd/":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{}},"title":{}}],["think",{"_index":2817,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["third",{"_index":660,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linesubstring":{},"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"community/publication/":{},"setup/maven-coordinates/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{"community/publication/#third-party-evaluation":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{}}}],["thoma",{"_index":3079,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["those",{"_index":2962,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{}},"title":{}}],["thread",{"_index":2898,"text":{"community/contributor/":{},"community/contributor/#call-for-a-vote":{},"community/contributor/#close-a-vote":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["three",{"_index":957,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"community/publish/":{},"setup/release-notes/":{},"setup/release-notes/#known-issue":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/rdd/#use-spatial-partitioning":{}},"title":{}}],["through",{"_index":869,"text":{"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/tutorial/sql/":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"tutorial/flink/sql/":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql/":{}},"title":{}}],["throw",{"_index":404,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#v110":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{}},"title":{}}],["tiark",{"_index":3064,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["ticket",{"_index":3341,"text":{"community/rule/":{},"community/rule/#make-a-pull-request":{},"community/rule/#pick-annouce-a-task-using-jira":{}},"title":{}}],["tier",{"_index":3444,"text":{"setup/databricks/":{}},"title":{"setup/databricks/#community-edition-free-tier":{}}}],["tile",{"_index":1243,"text":{"api/viz/sql/":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#generate-map-tiles":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#store-map-tiles-on-disk":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"tutorial/viz/":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#generate-map-tiles":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#store-map-tiles-on-disk":{}},"title":{"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#generate-map-tiles":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#store-map-tiles-on-disk":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#generate-map-tiles":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#store-map-tiles-on-disk":{}}}],["tileimg",{"_index":1257,"text":{"api/viz/sql/":{},"api/viz/sql/#st_render":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_render":{}},"title":{}}],["tilenam",{"_index":1256,"text":{"api/viz/sql/":{},"api/viz/sql/#st_render":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_render":{}},"title":{}}],["time",{"_index":1517,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v081-geospark-core":{},"setup/release-notes/#v110":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["timeout",{"_index":1751,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["tip",{"_index":2580,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"setup/compile/":{},"setup/compile/#compile-with-different-targets":{},"tutorial/core-python/":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{}},"title":{"tutorial/core-python/#tips":{}}}],["tmp/choropleth",{"_index":4013,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["tmp/polygon.json",{"_index":3947,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["to_spatial_rdd",{"_index":3912,"text":{"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{}},"title":{}}],["tociek",{"_index":1465,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["todatastream",{"_index":4095,"text":{"tutorial/flink/sql/":{},"tutorial/flink/sql/#get-datastream":{}},"title":{}}],["today",{"_index":2909,"text":{"community/contributor/":{}},"title":{}}],["todf",{"_index":492,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/sql/":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["todo",{"_index":3853,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["togeth",{"_index":650,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linemerge":{},"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{}},"title":{}}],["toler",{"_index":3926,"text":{"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{}},"title":{}}],["tool",{"_index":234,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"setup/overview/":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{"setup/overview/#rich-spatial-analytics-tools":{}}}],["top",{"_index":2941,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["topanda",{"_index":2144,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["topolog",{"_index":728,"text":{"api/sql/Function/":{},"api/sql/Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{}},"title":{}}],["tordd",{"_index":2555,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{}},"title":{}}],["tospatialrdd",{"_index":2011,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/core-python/":{},"tutorial/rdd/":{},"tutorial/sql/":{},"tutorial/sql/#dataframe-to-spatialrdd":{}},"title":{}}],["tostr",{"_index":1468,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"setup/release-notes/":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{}},"title":{}}],["total",{"_index":637,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_getband":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"community/contributor/":{},"community/contributor/#close-a-vote":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}},"title":{}}],["total_nod",{"_index":3828,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["totalbands:int",{"_index":1055,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_getband":{}},"title":{}}],["totext",{"_index":2664,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{}},"title":{}}],["touch",{"_index":939,"text":{"api/sql/Predicate/":{},"api/sql/Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{}},"title":{}}],["trace",{"_index":1930,"text":{"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{}},"title":{}}],["track",{"_index":2797,"text":{"community/contact/":{},"community/contact/#bug-reports":{}},"title":{}}],["tracker",{"_index":2793,"text":{"community/contact/":{},"community/contact/#bug-reports":{}},"title":{"community/contact/#issue-tracker":{}}}],["tractc",{"_index":2328,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["trademark",{"_index":2758,"text":{"asf/asf/":{},"asf/asf/#apache-software-foundation":{},"community/contributor/":{},"community/contributor/#become-a-committer":{}},"title":{}}],["traffic",{"_index":3050,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#key-publications":{}},"title":{"community/publication/#geosparksim-traffic-simulator":{}}}],["trajectori",{"_index":3596,"text":{"setup/overview/":{},"setup/overview/#complex-spatial-objects":{}},"title":{}}],["tranform",{"_index":962,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{}},"title":{}}],["transfer",{"_index":1232,"text":{"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{}},"title":{}}],["transform",{"_index":398,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/overview/":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v081-geospark-core":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}}}],["transfrom",{"_index":2712,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["translat",{"_index":3953,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["treat",{"_index":1201,"text":{"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["tree",{"_index":1507,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"community/publish/":{},"community/publish/#compile-r-html-docs":{},"setup/overview/":{},"setup/overview/#distributed-spatial-queries":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v110":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-partitioning":{}},"title":{}}],["tremend",{"_index":2693,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"tutorial/viz/":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["tri",{"_index":1789,"text":{"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"setup/install-scala/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{}},"title":{"archive/download/project/#try-geospark-sql-functions":{}}}],["trigger",{"_index":787,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#range-join":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#range-join":{}},"title":{}}],["troubl",{"_index":3024,"text":{"community/develop/":{}},"title":{}}],["true",{"_index":343,"text":{"api/flink/Function/":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_isring":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_intersects":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/Function/":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_makevalid":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Parameter/#usage":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Predicate/#st_overlaps":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#read-from-wkb-file":{},"archive/tutorial/geospark-core-python/#read-from-wkt-file":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"community/publish/":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#pomxml":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#read-from-wkb-file":{},"tutorial/core-python/#read-from-wkt-file":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-spark-sedona-with-saved-hdfs-file":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["trust",{"_index":3399,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["truth",{"_index":3966,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["tsv",{"_index":1985,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-typed-spatialrdd":{}},"title":{}}],["tune",{"_index":1859,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/core-python/":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{}},"title":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{}}}],["tupl",{"_index":2239,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"tutorial/sql-python/":{},"tutorial/sql-python/#supported-shapely-objects":{}},"title":{}}],["turn",{"_index":2140,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"community/contributor/":{},"community/contributor/#mentors":{},"tutorial/sql-python/":{},"tutorial/sql-python/#writing-application":{}},"title":{}}],["tutori",{"_index":1352,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#display-geosparkviz-results":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#visualize-spatialrdd":{},"community/publication/":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{},"setup/release-notes/":{},"setup/release-notes/#v131":{},"setup/zeppelin/":{},"setup/zeppelin/#display-sedonaviz-results":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/raster/":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#visualize-spatialrdd":{}},"title":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#advanced-tutorial-tune-your-geospark-rdd-application":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#advanced-tutorial-tune-your-sedona-rdd-application":{},"tutorial/raster/#tutorials":{}}}],["twine",{"_index":3274,"text":{"community/publish/":{},"community/publish/#release-the-package":{}},"title":{}}],["twitter",{"_index":2787,"text":{"community/contact/":{},"community/publish/":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{"community/contact/#twitter":{}}}],["two",{"_index":247,"text":{"api/flink/Function/":{},"api/flink/Function/#st_azimuth":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Function/":{},"api/sql/Function/#st_azimuth":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/sql/Raster-operators/#rs_subtract":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_2":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#output-format_2":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/zeppelin/":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/publish/#upload-release-candidate":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/install-python/":{},"setup/install-python/#setup-environment-variables":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_2":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#get-spatial-table":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#output-format_2":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/zeppelin/":{}},"title":{}}],["tyep",{"_index":2704,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{}},"title":{}}],["type",{"_index":519,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_geometrytype":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#query-center-geometry":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-indexed":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#save-an-spatialrdd-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/sql/#run-spatial-queries":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#render-the-image":{},"setup/databricks/":{},"setup/databricks/#initialise":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/release-notes/":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"setup/release-notes/#v120":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"tutorial/core-python/":{},"tutorial/core-python/#query-center-geometry":{},"tutorial/core-python/#range-query-window":{},"tutorial/core-python/#save-an-spatialrdd-indexed":{},"tutorial/core-python/#save-an-spatialrdd-not-indexed":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/flink/sql/#run-spatial-queries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#save-an-spatialrdd-indexed":{},"tutorial/rdd/#save-an-spatialrdd-not-indexed":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#range-query":{},"tutorial/sql/#register-sedonasql":{},"tutorial/sql/#run-spatial-queries":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#render-the-image":{}},"title":{"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/sql/#create-a-geometry-type-column":{}}}],["type:int",{"_index":590,"text":{"api/sql/Function/":{},"api/sql/Function/#st_collectionextract":{}},"title":{}}],["typeid",{"_index":3286,"text":{"community/publish/":{}},"title":{}}],["typic",{"_index":1879,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{}},"title":{}}],["typo",{"_index":1648,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["u",{"_index":3314,"text":{"community/publish/":{},"setup/compile/":{},"setup/compile/#run-python-test":{}},"title":{}}],["u3r0p",{"_index":322,"text":{"api/flink/Function/":{},"api/flink/Function/#st_geohash":{},"api/sql/Function/":{},"api/sql/Function/#st_geohash":{}},"title":{}}],["uber",{"_index":3571,"text":{"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{}},"title":{}}],["ubuntu",{"_index":3322,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{}},"title":{}}],["udf",{"_index":1501,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#v112":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["udt",{"_index":2122,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#introduction":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-r/#introduction":{}},"title":{}}],["ui",{"_index":3445,"text":{"setup/databricks/":{},"setup/databricks/#community-edition-free-tier":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{"setup/databricks/#install-sedona-from-the-web-ui":{}}}],["unbalanc",{"_index":1561,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v091-geospark-core":{}},"title":{}}],["unchang",{"_index":3386,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["uncompress",{"_index":1760,"text":{"archive/download/cluster/":{},"archive/download/cluster/#start-your-cluster":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/cluster/":{},"setup/cluster/#start-your-cluster":{}},"title":{}}],["undefin",{"_index":1419,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["under",{"_index":1533,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/download/project/":{},"archive/download/project/#submit-the-compiled-jar":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#v100":{}},"title":{}}],["undergo",{"_index":2761,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{}},"title":{}}],["understand",{"_index":2890,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/develop/":{},"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["uniform",{"_index":1211,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{}},"title":{}}],["union",{"_index":117,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_union_aggr":{},"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_union_aggr":{},"api/sql/Function/":{},"api/sql/Function/#st_union":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr":{}},"title":{}}],["uniqu",{"_index":1262,"text":{"archive/api/sql/GeoSparkSQL-Constructor/":{}},"title":{}}],["unit",{"_index":823,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"community/develop/":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{"community/develop/#run-unit-tests":{}}}],["univers",{"_index":2828,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"community/publication/":{},"community/publication/#publication":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["unknown",{"_index":3396,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/release-notes/":{},"setup/release-notes/#sql_3":{}},"title":{}}],["unlimit",{"_index":1267,"text":{"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{}},"title":{}}],["unnecessari",{"_index":1631,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["unstal",{"_index":3676,"text":{"setup/release-notes/":{},"setup/release-notes/#known-issue":{}},"title":{}}],["until",{"_index":2764,"text":{"asf/disclaimer/":{},"asf/disclaimer/#disclaimer":{},"community/contributor/":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#review-a-pull-request":{}},"title":{}}],["unzip",{"_index":3418,"text":{"community/vote/":{},"community/vote/#check-files-manually":{}},"title":{}}],["up",{"_index":686,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/sql/":{},"archive/tutorial/viz/":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/vote/":{},"community/vote/#check-files-manually":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#viz_1":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/flink/sql/":{},"tutorial/raster/":{},"tutorial/raster/#initial-setup":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/viz/":{}},"title":{"archive/download/cluster/":{},"archive/download/cluster/#set-up-your-apache-spark-cluster":{},"archive/tutorial/rdd/#set-up-dependencies":{},"archive/tutorial/sql/#set-up-dependencies":{},"archive/tutorial/viz/#set-up-dependencies":{},"community/publish/#set-up-asf-username-for-maven":{},"setup/cluster/":{},"setup/cluster/#set-up-your-apache-spark-cluster":{},"tutorial/flink/sql/#set-up-dependencies":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz/#set-up-dependencies":{}}}],["upcom",{"_index":1329,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#snapshot-versions":{}},"title":{}}],["updat",{"_index":1651,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"community/publish/":{},"community/publish/#publish-the-doc-website":{},"community/rule/":{},"community/rule/#develop-a-code-contribution":{},"setup/release-notes/":{},"setup/release-notes/#flink_1":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#r":{},"setup/release-notes/#sql_2":{},"setup/release-notes/#v01-v07":{}},"title":{"community/publish/#update-mkdocsyml":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{}}}],["upgrad",{"_index":689,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#global_2":{},"setup/release-notes/#global_3":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#viz_1":{}},"title":{}}],["upload",{"_index":1967,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"community/publish/":{},"community/publish/#publish-the-doc-website":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{}},"title":{"community/publish/#upload-release-candidate":{}}}],["upload_jar",{"_index":1962,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#writing-application":{}},"title":{}}],["upon",{"_index":1779,"text":{"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{}},"title":{}}],["uppercas",{"_index":1330,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{}},"title":{}}],["upstream",{"_index":2836,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["url",{"_index":1342,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#pomxml":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#pomxml":{}},"title":{}}],["us",{"_index":97,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/java-api/":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Function/":{},"api/sql/Function/#st_linemerge":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Function/#st_transform":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"api/viz/java-api/":{},"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"api/viz/sql/#st_render":{},"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#package-the-project":{},"archive/download/project/#quick-start":{},"archive/download/project/#select-an-ide":{},"archive/download/project/#self-contained-spark-projects":{},"archive/download/project/#submit-the-compiled-jar":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#installing-from-pypi-repositories":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#read-from-other-geometry-files":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#installing-from-pypi-repositories":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#knn-query":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#load-shapefile-and-geojson":{},"archive/tutorial/sql/#range-query":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#colorize-pixels_1":{},"archive/tutorial/viz/#initiate-sparksession":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/viz/#store-map-tiles-on-disk":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/contact/":{},"community/contact/#community":{},"community/contact/#mailing-list":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/contributor/#create-asf-account":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/publish/":{},"community/publish/#failed-vote":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/publish/#publish-the-doc-website":{},"community/publish/#release-the-package":{},"community/publish/#upload-release-candidate":{},"community/rule/":{},"community/rule/#make-a-pull-request":{},"community/vote/":{},"community/vote/#install-necessary-software":{},"community/vote/#run-the-verify-script":{},"setup/compile/":{},"setup/compile/#download-staged-jars":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/databricks/#community-edition-free-tier":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/databricks/#pure-sql-environment":{},"setup/flink/install-scala/":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/install-scala/#spark-sql-shell":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global_1":{},"setup/release-notes/#global_2":{},"setup/release-notes/#rdd":{},"setup/release-notes/#sedona-core":{},"setup/release-notes/#sedona-python":{},"setup/release-notes/#sedona-sql":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#sql_3":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v112":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#read-from-other-geometry-files":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/demo/":{},"tutorial/demo/#folder-structure":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#get-datastream":{},"tutorial/flink/sql/#get-spatial-table":{},"tutorial/flink/sql/#initiate-stream-environment":{},"tutorial/flink/sql/#knn-query":{},"tutorial/flink/sql/#range-query":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#load-data":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/#introduction":{},"tutorial/sql-python/#register-package":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-python/#writing-application":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#knn-query":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#load-shapefile-and-geojson":{},"tutorial/sql/#range-query":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/viz/":{},"tutorial/viz/#colorize-pixels_1":{},"tutorial/viz/#initiate-sparksession":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#render-the-image":{},"tutorial/viz/#store-map-tiles-on-disk":{},"tutorial/viz/#store-the-image-on-disk":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{"archive/download/project/#how-to-use-geospark-in-an-ide":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"community/rule/#pick-annouce-a-task-using-jira":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/zeppelin/":{}}}],["usa",{"_index":2602,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{}},"title":{}}],["usacounti",{"_index":2670,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/":{},"tutorial/sql/#dataframe-to-spatialrdd":{}},"title":{}}],["usag",{"_index":904,"text":{"api/sql/Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/geospark-sql-python/":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/sql-python/":{}},"title":{"api/sql/Parameter/#usage":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/tutorial/geospark-sql-python/#example-usage-for-shapely-objects":{},"tutorial/sql-python/#example-usage-for-shapely-objects":{}}}],["uselongitudelatitudeord",{"_index":1278,"text":{"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{}},"title":{}}],["uselongitudelatitudeorder:boolean",{"_index":1279,"text":{"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{}},"title":{}}],["user",{"_index":96,"text":{"api/java-api/":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/viz/java-api/":{},"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/download/scalashell/":{},"archive/download/scalashell/#spark-scala-shell":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#be-aware-of-spatial-rdd-partitions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#register-geosparksql":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#register-geosparksql-and-geosparkviz":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/install-scala/":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#core_1":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global_3":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v081-geospark-core":{},"setup/release-notes/#v082-geospark-core":{},"setup/release-notes/#v112":{},"setup/release-notes/#v120":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#be-aware-of-spatial-rdd-partitions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#register-sedonasql":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#register-sedonasql-and-sedonaviz":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["user.dir",{"_index":2722,"text":{"archive/tutorial/viz/":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"tutorial/viz/":{},"tutorial/viz/#store-the-image-on-disk":{}},"title":{}}],["user_data",{"_index":2054,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{}},"title":{}}],["user_name='root",{"_index":3813,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["userdata",{"_index":1646,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd/":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{}},"title":{}}],["usernam",{"_index":3003,"text":{"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{}},"title":{"community/publish/#set-up-asf-username-for-maven":{}}}],["username>your_asf_id</usernam",{"_index":3142,"text":{"community/publish/":{},"community/publish/#set-up-asf-username-for-maven":{}},"title":{}}],["using_index",{"_index":2033,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"tutorial/core-python/":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/core-python/#write-a-spatial-range-query":{}},"title":{}}],["usingindex",{"_index":2567,"text":{"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{}},"title":{}}],["usr/lib/spark",{"_index":3542,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["ustronie|point",{"_index":2222,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["usual",{"_index":2946,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/develop/":{},"community/publish/":{}},"title":{}}],["utf",{"_index":3335,"text":{"community/publish/":{},"community/publish/#compile-r-html-docs":{}},"title":{}}],["utf8",{"_index":532,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["util",{"_index":901,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_2":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"setup/databricks/":{},"setup/databricks/#initialise":{},"setup/release-notes/":{},"setup/release-notes/#v082-geospark-core":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/core-python/#use-spatial-indexes_2":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{}},"title":{}}],["uuid",{"_index":1261,"text":{"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"setup/release-notes/":{},"setup/release-notes/#v120":{}},"title":{}}],["uuid1",{"_index":1268,"text":{"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{}},"title":{}}],["uuid2",{"_index":1269,"text":{"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{}},"title":{}}],["v",{"_index":3313,"text":{"community/publish/":{}},"title":{}}],["v0.1",{"_index":1622,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"setup/release-notes/":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/#v01-v07":{}}}],["v0.7",{"_index":1623,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"setup/release-notes/":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/#v01-v07":{}}}],["v0.8.0",{"_index":1581,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"setup/release-notes/":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/#v080-geospark-core":{}}}],["v0.8.1",{"_index":1578,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"setup/release-notes/":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/#v081-geospark-core":{},"setup/release-notes/#v081-geospark-core":{}}}],["v0.8.2",{"_index":1567,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"setup/release-notes/":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/#v082-geospark-core":{},"setup/release-notes/#v082-geospark-core":{}}}],["v0.9.1",{"_index":1535,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"setup/release-notes/":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"setup/release-notes/#v091-geospark-core":{}}}],["v1.0.0",{"_index":475,"text":{"api/sql/AggregateFunction/":{},"api/sql/AggregateFunction/#st_envelope_aggr":{},"api/sql/AggregateFunction/#st_intersection_aggr":{},"api/sql/AggregateFunction/#st_union_aggr":{},"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/#st_linestringfromtext":{},"api/sql/Constructor/#st_point":{},"api/sql/Constructor/#st_pointfromtext":{},"api/sql/Constructor/#st_polygonfromenvelope":{},"api/sql/Constructor/#st_polygonfromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_addpoint":{},"api/sql/Function/#st_area":{},"api/sql/Function/#st_asgeojson":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_azimuth":{},"api/sql/Function/#st_boundary":{},"api/sql/Function/#st_buffer":{},"api/sql/Function/#st_centroid":{},"api/sql/Function/#st_convexhull":{},"api/sql/Function/#st_distance":{},"api/sql/Function/#st_dump":{},"api/sql/Function/#st_dumppoints":{},"api/sql/Function/#st_endpoint":{},"api/sql/Function/#st_envelope":{},"api/sql/Function/#st_exteriorring":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_geometryn":{},"api/sql/Function/#st_geometrytype":{},"api/sql/Function/#st_interiorringn":{},"api/sql/Function/#st_intersection":{},"api/sql/Function/#st_isclosed":{},"api/sql/Function/#st_isring":{},"api/sql/Function/#st_issimple":{},"api/sql/Function/#st_isvalid":{},"api/sql/Function/#st_length":{},"api/sql/Function/#st_linemerge":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_npoints":{},"api/sql/Function/#st_numgeometries":{},"api/sql/Function/#st_numinteriorrings":{},"api/sql/Function/#st_precisionreduce":{},"api/sql/Function/#st_removepoint":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Function/#st_startpoint":{},"api/sql/Function/#st_transform":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_y":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_contains":{},"api/sql/Predicate/#st_crosses":{},"api/sql/Predicate/#st_equals":{},"api/sql/Predicate/#st_intersects":{},"api/sql/Predicate/#st_overlaps":{},"api/sql/Predicate/#st_touches":{},"api/sql/Predicate/#st_within":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"api/viz/sql/#st_encodeimage":{},"api/viz/sql/#st_pixelize":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_envelope_aggr":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_union_aggr":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_linestringfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_pointfromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromenvelope":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_polygonfromtext":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_area":{},"archive/api/sql/GeoSparkSQL-Function/#st_centroid":{},"archive/api/sql/GeoSparkSQL-Function/#st_convexhull":{},"archive/api/sql/GeoSparkSQL-Function/#st_distance":{},"archive/api/sql/GeoSparkSQL-Function/#st_envelope":{},"archive/api/sql/GeoSparkSQL-Function/#st_length":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_contains":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_intersects":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_within":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"setup/release-notes/":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"setup/release-notes/#v100":{}}}],["v1.0.1",{"_index":640,"text":{"api/sql/Function/":{},"api/sql/Function/#st_lineinterpolatepoint":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_minimumboundingcircle":{},"api/sql/Function/#st_minimumboundingradius":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/release-notes/":{},"setup/release-notes/#known-issue":{},"tutorial/sql-pure-sql/":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"setup/release-notes/#v101":{}}}],["v1.1.0",{"_index":673,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makepolygon":{},"api/sql/Function/#st_subdivide":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#rs_array":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_divide":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_logicalover":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_modulo":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"api/sql/Raster-operators/#rs_normalize":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/sql/Raster-operators/#rs_squareroot":{},"api/sql/Raster-operators/#rs_subtract":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_intersection":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/release-notes/":{},"tutorial/raster/":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/#v110":{}}}],["v1.1.1",{"_index":533,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeohash":{},"api/sql/Function/":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_geohash":{},"api/sql/Function/#st_setsrid":{},"api/sql/Function/#st_srid":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"setup/release-notes/":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/#v111":{},"setup/release-notes/#v111":{}}}],["v1.1.2",{"_index":1473,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"setup/release-notes/":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"setup/release-notes/#v112":{}}}],["v1.1.3",{"_index":1274,"text":{"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_circle":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"setup/release-notes/":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"setup/release-notes/#v113":{}}}],["v1.2.0",{"_index":138,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeojson":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/flink/Constructor/#st_geomfromwkt":{},"api/flink/Constructor/#st_pointfromtext":{},"api/flink/Constructor/#st_polygonfromenvelope":{},"api/flink/Constructor/#st_polygonfromtext":{},"api/flink/Function/":{},"api/flink/Function/#st_buffer":{},"api/flink/Function/#st_distance":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_geohash":{},"api/flink/Function/#st_transform":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_contains":{},"api/flink/Predicate/#st_intersects":{},"api/sql/Function/":{},"api/sql/Function/#st_3ddistance":{},"api/sql/Function/#st_collect":{},"api/sql/Function/#st_difference":{},"api/sql/Function/#st_multi":{},"api/sql/Function/#st_symdifference":{},"api/sql/Function/#st_union":{},"api/sql/Function/#st_z":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/#st_issimple":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_precisionreduce":{},"archive/api/sql/GeoSparkSQL-Predicate/":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_crosses":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_equals":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_overlaps":{},"archive/api/sql/GeoSparkSQL-Predicate/#st_touches":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/#st_pixelize":{},"archive/api/viz/sql/#st_render":{},"archive/api/viz/sql/#st_tilename":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/tutorial/rdd/":{},"setup/release-notes/":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"setup/release-notes/#v120":{}}}],["v1.2.1",{"_index":130,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgeohash":{},"api/flink/Constructor/#st_geomfromtext":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/flink/Constructor/#st_linefromtext":{},"api/flink/Constructor/#st_linestringfromtext":{},"api/flink/Constructor/#st_point":{},"api/flink/Function/":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_buildarea":{},"api/flink/Function/#st_exteriorring":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_isempty":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_pointonsurface":{},"api/flink/Function/#st_reverse":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/flink/Predicate/":{},"api/flink/Predicate/#st_disjoint":{},"api/flink/Predicate/#st_orderingequals":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_buildarea":{},"api/sql/Function/#st_collectionextract":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_isempty":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_pointonsurface":{},"api/sql/Function/#st_reverse":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/sql/Predicate/":{},"api/sql/Predicate/#st_disjoint":{},"api/sql/Predicate/#st_orderingequals":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_append":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/":{},"archive/api/sql/GeoSparkSQL-AggregateFunction/#st_intersection_aggr":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometrytype":{},"archive/api/sql/GeoSparkSQL-Function/#st_npoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{}},"title":{}}],["v1.3.0",{"_index":110,"text":{"api/flink/Aggregator/":{},"api/flink/Aggregator/#st_envelope_aggr":{},"api/flink/Aggregator/#st_union_aggr":{},"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromgml":{},"api/flink/Constructor/#st_geomfromkml":{},"api/flink/Function/":{},"api/flink/Function/#st_3ddistance":{},"api/flink/Function/#st_area":{},"api/flink/Function/#st_asbinary":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asgeojson":{},"api/flink/Function/#st_asgml":{},"api/flink/Function/#st_askml":{},"api/flink/Function/#st_astext":{},"api/flink/Function/#st_azimuth":{},"api/flink/Function/#st_boundary":{},"api/flink/Function/#st_envelope":{},"api/flink/Function/#st_geometryn":{},"api/flink/Function/#st_interiorringn":{},"api/flink/Function/#st_isclosed":{},"api/flink/Function/#st_isring":{},"api/flink/Function/#st_issimple":{},"api/flink/Function/#st_isvalid":{},"api/flink/Function/#st_length":{},"api/flink/Function/#st_npoints":{},"api/flink/Function/#st_numgeometries":{},"api/flink/Function/#st_numinteriorrings":{},"api/flink/Function/#st_setsrid":{},"api/flink/Function/#st_srid":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_z":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgml":{},"api/sql/Constructor/#st_geomfromkml":{},"api/sql/Function/":{},"api/sql/Function/#st_asgml":{},"api/sql/Function/#st_askml":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"setup/release-notes/":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/#v130":{},"setup/release-notes/#v130":{}}}],["v1.3.1",{"_index":1347,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"setup/release-notes/":{}},"title":{"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/#v131":{}}}],["v1.3.2",{"_index":1287,"text":{"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_addpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_asgeojson":{},"archive/api/sql/GeoSparkSQL-Function/#st_azimuth":{},"archive/api/sql/GeoSparkSQL-Function/#st_boundary":{},"archive/api/sql/GeoSparkSQL-Function/#st_dump":{},"archive/api/sql/GeoSparkSQL-Function/#st_dumppoints":{},"archive/api/sql/GeoSparkSQL-Function/#st_endpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_exteriorring":{},"archive/api/sql/GeoSparkSQL-Function/#st_geometryn":{},"archive/api/sql/GeoSparkSQL-Function/#st_interiorringn":{},"archive/api/sql/GeoSparkSQL-Function/#st_isclosed":{},"archive/api/sql/GeoSparkSQL-Function/#st_isring":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/api/sql/GeoSparkSQL-Function/#st_numgeometries":{},"archive/api/sql/GeoSparkSQL-Function/#st_numinteriorrings":{},"archive/api/sql/GeoSparkSQL-Function/#st_removepoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_startpoint":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{}},"title":{}}],["v2.4",{"_index":3283,"text":{"community/publish/":{}},"title":{}}],["v3.1.0",{"_index":3671,"text":{"setup/release-notes/":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#python":{}},"title":{}}],["val",{"_index":909,"text":{"api/sql/Parameter/":{},"api/sql/Parameter/#usage":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{},"api/sql/Raster-loader/#rs_getband":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_add":{},"api/sql/Raster-operators/#rs_append":{},"api/sql/Raster-operators/#rs_bitwiseand":{},"api/sql/Raster-operators/#rs_bitwiseor":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_divide":{},"api/sql/Raster-operators/#rs_fetchregion":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_logicalover":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_mode":{},"api/sql/Raster-operators/#rs_modulo":{},"api/sql/Raster-operators/#rs_multiply":{},"api/sql/Raster-operators/#rs_multiplyfactor":{},"api/sql/Raster-operators/#rs_normalizeddifference":{},"api/sql/Raster-operators/#rs_squareroot":{},"api/sql/Raster-operators/#rs_subtract":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/rdd/#use-spatial-indexes_2":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#read-other-attributes-in-an-spatialrdd":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/rdd/#use-spatial-indexes_2":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql/":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{}},"title":{}}],["valid",{"_index":679,"text":{"api/sql/Function/":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_simplifypreservetopology":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/api/sql/GeoSparkSQL-Function/#st_simplifypreservetopology":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{}},"title":{}}],["valu",{"_index":370,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointn":{},"api/flink/Function/#st_transform":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Function/":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_pointn":{},"api/sql/Function/#st_transform":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Parameter/":{},"api/sql/Parameter/#explanation":{},"api/sql/Parameter/#usage":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_array":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_count":{},"api/sql/Raster-operators/#rs_greaterthan":{},"api/sql/Raster-operators/#rs_greaterthanequal":{},"api/sql/Raster-operators/#rs_lessthan":{},"api/sql/Raster-operators/#rs_lessthanequal":{},"api/sql/Raster-operators/#rs_logicaldifference":{},"api/sql/Raster-operators/#rs_logicalover":{},"api/sql/Raster-operators/#rs_mean":{},"api/sql/Raster-operators/#rs_modulo":{},"api/sql/Raster-operators/#rs_normalize":{},"api/sql/Raster-operators/#rs_squareroot":{},"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{},"archive/api/sql/GeoSparkSQL-Parameter/#usage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#v091-geospark-core":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#retrieve-geometries":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["var",{"_index":481,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/sql/#spatialpairrdd-to-dataframe":{},"archive/tutorial/sql/#spatialrdd-to-dataframe":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#initiate-sparksession":{},"archive/tutorial/viz/#store-the-image-on-disk":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#load-geoparquet":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/#spatialpairrdd-to-dataframe":{},"tutorial/sql/#spatialrdd-to-dataframe":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{},"tutorial/viz/#store-the-image-on-disk":{}},"title":{}}],["vari",{"_index":4014,"text":{"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{}},"title":{}}],["variabl",{"_index":3184,"text":{"community/publish/":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/install-python/":{},"setup/install-python/#setup-environment-variables":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{}},"title":{"setup/install-python/#setup-environment-variables":{}}}],["variou",{"_index":1205,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{}}],["varun",{"_index":3075,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["vector",{"_index":1713,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#sedona-viz":{},"tutorial/python-vector-osm/":{}},"title":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#example-of-spark-sedona-hdfs-with-slave-nodes-and-osm-vector-data-consults":{}}}],["vectoroverlayoper",{"_index":1715,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{}},"title":{}}],["venu",{"_index":3054,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["verb",{"_index":3949,"text":{"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["veri",{"_index":1505,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelization-and-pixel-aggregation":{},"setup/release-notes/":{},"setup/release-notes/#v110":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/viz/":{},"tutorial/viz/#pixelization-and-pixel-aggregation":{}},"title":{}}],["verifi",{"_index":64,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"community/contact/":{},"community/contact/#bug-reports":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"download/":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-a-geometry-type-column":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{}},"title":{"community/vote/#run-the-verify-script":{},"download/#verify-the-integrity":{}}}],["verification/gener",{"_index":3136,"text":{"community/publish/":{},"community/publish/#prepare-secret-gpg-key":{}},"title":{}}],["verify.out",{"_index":3378,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["verify.sh",{"_index":3373,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["verion",{"_index":1865,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{}},"title":{}}],["versa",{"_index":3535,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["version",{"_index":69,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_flipcoordinates":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_makevalid":{},"archive/api/GeoSpark-Scala-and-Java-API/":{},"archive/api/GeoSpark-Scala-and-Java-API/#scala-and-java-api":{},"archive/api/sql/GeoSparkSQL-javadoc/":{},"archive/api/sql/GeoSparkSQL-javadoc/#scala-and-java-api":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-core_1":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-113-and-earlier":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#python":{},"archive/tutorial/geospark-core-python/#supported-versions":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/geospark-sql-python/#supported-versions":{},"community/contributor/":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#publish-the-doc-website":{},"community/publish/#update-mkdocsyml":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"community/vote/":{},"community/vote/#check-files-manually":{},"community/vote/#install-necessary-software":{},"community/vote/#run-the-verify-script":{},"download/":{},"setup/compile/":{},"setup/compile/#run-python-test":{},"setup/databricks/":{},"setup/databricks/#advanced-editions":{},"setup/install-python/":{},"setup/install-python/#install-sedona":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#jts2geojson-0161":{},"setup/maven-coordinates/#locationtech-jts-core-1180":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/maven-coordinates/#snapshot-versions":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#global_2":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#sedona-100":{},"setup/release-notes/#sedona-101":{},"setup/release-notes/#sedona-110":{},"setup/release-notes/#sedona-111":{},"setup/release-notes/#sedona-120":{},"setup/release-notes/#sedona-121":{},"setup/release-notes/#v01-v07":{},"setup/release-notes/#v080-geospark-core":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/jupyter-notebook/":{},"tutorial/jupyter-notebook/#python-jupyter-notebook-examples":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/viz-gallery/":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-1x-versions":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#apache-spark-2x-versions":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"archive/tutorial/geospark-core-python/#supported-versions":{},"archive/tutorial/geospark-sql-python/#supported-versions":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"download/#versions":{},"setup/maven-coordinates/#snapshot-versions":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}}}],["version>23</vers",{"_index":3030,"text":{"community/develop/":{}},"title":{}}],["versu",{"_index":3452,"text":{"setup/databricks/":{},"setup/databricks/#advanced-editions":{}},"title":{}}],["vertex",{"_index":385,"text":{"api/flink/Function/":{},"api/flink/Function/#st_reverse":{},"api/sql/Function/":{},"api/sql/Function/#st_reverse":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#range-query-window":{},"tutorial/rdd/":{},"tutorial/rdd/#range-query-window":{}},"title":{}}],["vertic",{"_index":736,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivide":{}},"title":{}}],["veto",{"_index":2902,"text":{"community/contributor/":{},"community/contributor/#call-for-a-vote":{}},"title":{}}],["via",{"_index":526,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/download/cluster/":{},"archive/download/cluster/#start-your-cluster":{},"archive/tutorial/rdd/":{},"community/contributor/":{},"community/contributor/#pmc-annoucement":{},"community/publish/":{},"community/publish/#release-the-package":{},"setup/cluster/":{},"setup/cluster/#start-your-cluster":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"tutorial/rdd/":{}},"title":{"archive/tutorial/zeppelin/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}}}],["vice",{"_index":3534,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["view",{"_index":771,"text":{"api/sql/Function/":{},"api/sql/Function/#st_subdivideexplode":{},"api/viz/sql/":{},"api/viz/sql/#st_pixelize":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_makevalid":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#render-map-tiles":{},"archive/tutorial/viz/#render-the-image":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#send-the-invitation":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#transform-the-data":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#create-spatial-dataframe":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#render-the-image":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["virtualenvwrapp",{"_index":3436,"text":{"setup/compile/":{},"setup/compile/#run-python-test":{}},"title":{}}],["visibl",{"_index":3346,"text":{"community/rule/":{},"community/rule/#make-a-pull-request":{}},"title":{}}],["visit",{"_index":1757,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["visual",{"_index":1185,"text":{"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#quick-start":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"community/publication/":{},"community/publication/#geosparkviz-visualization-system":{},"community/publication/#key-publications":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/overview/":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/release-notes/":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#v01-v07":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/viz-r/":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/viz/#why-scalable-map-visualization":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"archive/download/zeppelin/#visualize-geosparksql-results":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#visualize-spatialrdd":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"community/publication/#geosparkviz-visualization-system":{},"setup/zeppelin/#visualize-sedonasql-results":{},"tutorial/viz-r/#map-visualization-applications-in-r-language":{},"tutorial/viz/#visualize-spatialrdd":{},"tutorial/viz/#why-scalable-map-visualization":{}}}],["visul",{"_index":4029,"text":{"tutorial/viz/":{}},"title":{}}],["viz",{"_index":1188,"text":{"api/viz/sql/":{},"api/viz/sql/#quick-start":{},"archive/api/viz/Babylon-Scala-and-Java-API/":{},"archive/api/viz/Babylon-Scala-and-Java-API/#scala-and-java-api-for-rdd":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-113-and-earlier":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#snapshot-versions":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v100":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v101":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v113":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#compatibility":{},"community/publish/":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/modules/":{},"setup/modules/#api-availability":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/release-notes/":{},"setup/release-notes/#v100":{},"setup/release-notes/#v101":{},"setup/release-notes/#v110":{},"setup/release-notes/#v112":{},"setup/release-notes/#v113":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{},"setup/zeppelin/":{},"setup/zeppelin/#compatibility":{},"tutorial/demo/":{},"tutorial/demo/#folder-structure":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/rdd/":{},"tutorial/rdd/#set-up-dependencies":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{},"tutorial/sql/":{},"tutorial/sql/#set-up-dependencies":{},"tutorial/viz/":{},"tutorial/viz/#initiate-sparksession":{},"tutorial/viz/#set-up-dependencies":{},"tutorial/viz/#store-the-image-on-disk":{},"tutorial/viz/#visualize-spatialrdd":{}},"title":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-113-and-earlier":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#geospark-viz-120-and-later":{},"archive/download/GeoSpark-All-Modules-Release-notes/#geospark-viz-old":{},"setup/release-notes/#geospark-viz-old":{},"setup/release-notes/#sedona-viz":{},"setup/release-notes/#viz":{},"setup/release-notes/#viz_1":{}}}],["viz_2.1",{"_index":1323,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-21_1":{}},"title":{}}],["viz_2.2",{"_index":1322,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-22_1":{}},"title":{}}],["viz_2.3",{"_index":1321,"text":{"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/":{},"archive/download/GeoSpark-All-Modules-Maven-Central-Coordinates/#for-sparksql-23_1":{}},"title":{}}],["viz_2.3:1.2.0",{"_index":1830,"text":{"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{}},"title":{}}],["volunt",{"_index":2777,"text":{"community/contact/":{},"community/contact/#community":{}},"title":{}}],["von",{"_index":2859,"text":{"community/contributor/":{},"community/contributor/#mentors":{}},"title":{}}],["vongosling@apache.org",{"_index":2861,"text":{"community/contributor/":{},"community/contributor/#mentors":{}},"title":{}}],["voronoi",{"_index":1299,"text":{"archive/api/sql/GeoSparkSQL-Parameter/":{},"archive/api/sql/GeoSparkSQL-Parameter/#explanation":{}},"title":{}}],["vote",{"_index":2884,"text":{"community/contributor/":{},"community/contributor/#become-a-committer":{},"community/contributor/#call-for-a-vote":{},"community/contributor/#close-a-vote":{},"community/contributor/#nominate-a-committer-or-pmc-member":{},"community/contributor/#send-a-notice-to-ipmc":{},"community/contributor/#send-the-invitation":{},"community/publish/":{},"community/publish/#check-asf-copyright-in-all-file-headers":{},"community/publish/#failed-vote":{},"community/publish/#upload-release-candidate":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{}},"title":{"community/contributor/#call-for-a-vote":{},"community/contributor/#close-a-vote":{},"community/publish/#failed-vote":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/vote/":{},"community/vote/#vote-a-sedona-release":{}}}],["vote][result",{"_index":2912,"text":{"community/contributor/":{},"community/contributor/#close-a-vote":{}},"title":{}}],["vs",{"_index":2954,"text":{"community/contributor/":{},"community/contributor/#send-the-invitation":{}},"title":{}}],["w",{"_index":1037,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{}},"title":{}}],["w/o",{"_index":2095,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{}}}],["wa",{"_index":3102,"text":{"community/publication/":{},"community/publication/#geospark-ecosystem":{}},"title":{}}],["wahkiakum",{"_index":2606,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#create-a-geometry-type-column":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#create-a-geometry-type-column":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["wait",{"_index":1755,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{}},"title":{}}],["wakai",{"_index":1399,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["wang",{"_index":1401,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["want",{"_index":961,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/viz/sql/":{},"api/viz/sql/#st_render":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/download/compile/":{},"archive/download/compile/#compile-geospark":{},"archive/download/project/":{},"archive/download/project/#open-geospark-template-project":{},"archive/download/project/#select-an-ide":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#generate-a-single-image":{},"community/contributor/":{},"community/contributor/#committer-done-template":{},"community/publish/":{},"community/publish/#publish-the-doc-website":{},"community/publish/#update-mkdocsyml":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#maven-coordinates":{},"setup/maven-coordinates/#sernetcdf-010_1":{},"setup/maven-coordinates/#use-sedona-and-third-party-jars-separately":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#v112":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/viz/":{},"tutorial/viz/#generate-a-single-image":{}},"title":{}}],["warn",{"_index":516,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"api/sql/Constructor/#st_geomfromgeojson":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-source-code":{},"archive/download/project/":{},"archive/download/project/#package-the-project":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes_1":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/rdd/#use-spatial-indexes_1":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#dataframe-to-spatialrdd":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#pixelize-spatial-objects":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/platform/":{},"setup/release-notes/":{},"setup/zeppelin/":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-indexes_1":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/rdd/#use-spatial-indexes_1":{},"tutorial/sql/":{},"tutorial/sql/#dataframe-to-spatialrdd":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{}},"title":{}}],["watch",{"_index":3993,"text":{"tutorial/viz-gallery/":{}},"title":{}}],["way",{"_index":544,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromgeojson":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromgeojson":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v091-geospark-core":{},"archive/download/overview/":{},"archive/download/overview/#install-geospark":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#use-spatial-partitioning":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#use-spatial-partitioning":{},"archive/tutorial/viz/":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"community/contributor/":{},"community/contributor/#mentors":{},"community/rule/":{},"community/rule/#make-a-pull-request":{},"setup/install-scala/":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#known-issue":{},"setup/release-notes/#v091-geospark-core":{},"tutorial/core-python/":{},"tutorial/core-python/#use-spatial-partitioning":{},"tutorial/demo/":{},"tutorial/demo/#submit-your-fat-jar-to-spark":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#store-non-spatial-attributes-in-geometries":{},"tutorial/rdd/":{},"tutorial/rdd/#use-spatial-partitioning":{},"tutorial/viz/":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{}},"title":{}}],["way(area)[\"highway",{"_index":3806,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#connecting-to-overpass-api-to-search-and-downloading-data-for-saving-into-hdfs":{}},"title":{}}],["web",{"_index":3282,"text":{"community/publish/":{},"community/publish/#release-the-package":{},"setup/databricks/":{},"setup/databricks/#community-edition-free-tier":{}},"title":{"setup/databricks/#install-sedona-from-the-web-ui":{}}}],["webpag",{"_index":3269,"text":{"community/publish/":{},"community/publish/#failed-vote":{}},"title":{}}],["websit",{"_index":1758,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/download/project/":{},"archive/download/project/#quick-start":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/publish/":{},"community/publish/#publish-maven-snapshots":{},"community/publish/#publish-the-doc-website":{},"community/publish/#update-mkdocsyml":{},"community/publish/#vote-in-general-incubatorapacheorg":{},"community/rule/":{},"community/rule/#develop-a-document-contribution":{},"setup/cluster/":{},"setup/cluster/#preliminary":{},"setup/compile/":{},"setup/compile/#compile-the-documentation":{},"setup/compile/#mkdocs-website":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{}},"title":{"community/publish/#publish-the-doc-website":{},"setup/compile/#mkdocs-website":{}}}],["week",{"_index":2899,"text":{"community/contributor/":{},"community/contributor/#call-for-a-vote":{}},"title":{}}],["weight",{"_index":1194,"text":{"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#aggregate-pixels":{},"archive/tutorial/viz/#colorize-pixels":{},"archive/tutorial/viz/#create-tile-name":{},"tutorial/viz/":{},"tutorial/viz/#aggregate-pixels":{},"tutorial/viz/#colorize-pixels":{},"tutorial/viz/#create-tile-name":{}},"title":{}}],["weight:doubl",{"_index":1203,"text":{"api/viz/sql/":{},"api/viz/sql/#st_colorize":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_colorize":{}},"title":{}}],["welcom",{"_index":1924,"text":{"archive/tutorial/benchmark/":{},"archive/tutorial/benchmark/#benchmark":{},"community/contact/":{},"community/contact/#feature-requests":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#send-the-invitation":{},"community/rule/":{},"community/rule/#contributing-to-apache-sedona":{},"community/rule/#review-a-pull-request":{},"tutorial/benchmark/":{},"tutorial/benchmark/#benchmark":{}},"title":{}}],["well",{"_index":222,"text":{"api/flink/Function/":{},"api/flink/Function/#st_asbinary":{},"api/flink/Function/#st_asewkb":{},"api/flink/Function/#st_asewkt":{},"api/flink/Function/#st_astext":{},"api/flink/Function/#st_isvalid":{},"api/sql/Function/":{},"api/sql/Function/#st_asbinary":{},"api/sql/Function/#st_asewkb":{},"api/sql/Function/#st_asewkt":{},"api/sql/Function/#st_astext":{},"api/sql/Function/#st_isvalid":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_astext":{},"archive/api/sql/GeoSparkSQL-Function/#st_isvalid":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#choose-a-proper-spatial-rdd-constructor":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"community/contributor/":{},"community/contributor/#become-a-committer":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#choose-a-proper-spatial-rdd-constructor":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/demo/":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd-r/#what-are-spatialrdds":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{}},"title":{}}],["wget",{"_index":3272,"text":{"community/publish/":{},"community/publish/#release-the-package":{},"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["wgs84",{"_index":947,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#transform-the-coordinate-reference-system":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#transform-the-coordinate-reference-system":{},"tutorial/rdd/":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{},"tutorial/sql/":{},"tutorial/sql/#transform-the-coordinate-reference-system":{}},"title":{}}],["wheel",{"_index":1973,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"setup/compile/":{},"setup/compile/#run-python-test":{}},"title":{"archive/tutorial/geospark-core-python/#installing-from-wheel-file":{},"archive/tutorial/geospark-sql-python/#installing-from-wheel-file":{}}}],["wherev",{"_index":2662,"text":{"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"tutorial/sql/":{},"tutorial/sql/#save-to-permanent-storage":{}},"title":{}}],["wherobot",{"_index":2840,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["whether",{"_index":966,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{}},"title":{}}],["whole",{"_index":2128,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#core-classes-and-methods":{}},"title":{}}],["whose",{"_index":265,"text":{"api/flink/Function/":{},"api/flink/Function/#st_buffer":{},"api/sql/Function/":{},"api/sql/Function/#st_buffer":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_buffer":{}},"title":{}}],["wide",{"_index":3517,"text":{"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["width",{"_index":953,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"api/sql/Raster-loader/#rs_array":{},"api/sql/Raster-operators/":{},"api/sql/Raster-operators/#rs_fetchregion":{}},"title":{}}],["width:int",{"_index":1029,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{}},"title":{}}],["width_in_px:str",{"_index":1066,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_html":{}},"title":{}}],["window",{"_index":1660,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v01-v07":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/geospark-core-python/#use-spatial-indexes":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#query-center-geometry":{},"archive/tutorial/rdd/#range-query-window":{},"archive/tutorial/rdd/#use-spatial-indexes":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#range-query":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/release-notes/":{},"setup/release-notes/#v01-v07":{},"tutorial/core-python/":{},"tutorial/core-python/#range-query-window":{},"tutorial/core-python/#tips":{},"tutorial/core-python/#use-spatial-indexes":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#query-center-geometry":{},"tutorial/rdd/#range-query-window":{},"tutorial/rdd/#use-spatial-indexes":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql/":{},"tutorial/sql/#range-query":{}},"title":{"archive/tutorial/geospark-core-python/#range-query-window":{},"archive/tutorial/rdd/#range-query-window":{},"tutorial/core-python/#range-query-window":{},"tutorial/rdd/#range-query-window":{}}}],["wink",{"_index":2801,"text":{"community/contact/":{},"community/contact/#bug-reports":{}},"title":{}}],["wink\u2019",{"_index":2798,"text":{"community/contact/":{},"community/contact/#bug-reports":{}},"title":{}}],["wip",{"_index":3244,"text":{"community/publish/":{},"community/publish/#vote-in-dev-sedonaapacheorg":{},"community/publish/#vote-in-general-incubatorapacheorg":{}},"title":{}}],["withcolumn",{"_index":874,"text":{"api/sql/Overview/":{},"api/sql/Overview/#function-list":{}},"title":{}}],["withcolumn(\"id",{"_index":3839,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["withcolumn(\"new",{"_index":3842,"text":{"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#consulting-and-organizing-data-for-analisis":{}},"title":{}}],["within",{"_index":808,"text":{"api/sql/Optimizer/":{},"api/sql/Optimizer/#distance-join":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Optimizer/":{},"archive/api/sql/GeoSparkSQL-Optimizer/#distance-join":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#geosparksql":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#range-query":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#send-the-invitation":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/demo/":{},"tutorial/demo/#compile":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#range-query":{},"tutorial/rdd/":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/sql-python/":{},"tutorial/sql-python/#sedonasql":{},"tutorial/sql/":{},"tutorial/sql/#range-query":{}},"title":{}}],["without",{"_index":1216,"text":{"api/viz/sql/":{},"archive/api/viz/sql/":{},"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-automatically":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"archive/tutorial/GeoSpark-Runnable-DEMO/":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/zeppelin/":{},"setup/compile/":{},"setup/compile/#compile-scala-java-source-code":{},"setup/databricks/":{},"setup/databricks/#pure-sql-environment":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"tutorial/core-python/":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/viz/":{},"tutorial/viz/#pixelize-spatial-objects":{},"tutorial/zeppelin/":{}},"title":{"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}}}],["wkb",{"_index":163,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/flink/Function/":{},"api/flink/Function/#st_asewkb":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromwkb":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkb":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"setup/release-notes/":{},"setup/release-notes/#v112":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-typed-spatialrdd":{}},"title":{"archive/tutorial/geospark-core-python/#read-from-wkb-file":{},"tutorial/core-python/#read-from-wkb-file":{}}}],["wkb:binari",{"_index":165,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromwkb":{}},"title":{}}],["wkb:byte",{"_index":166,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromwkb":{}},"title":{}}],["wkb:string",{"_index":164,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromwkb":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromwkb":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkb":{}},"title":{}}],["wkb_geometries_loc",{"_index":2111,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-wkb-file":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-wkb-file":{}},"title":{}}],["wkbreader",{"_index":1426,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-wkb-file":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-wkb-file":{}},"title":{}}],["wkt",{"_index":156,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromtext":{},"api/flink/Constructor/#st_geomfromwkt":{},"api/flink/Function/":{},"api/flink/Function/#st_asewkt":{},"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/#st_linefromtext":{},"api/sql/Function/":{},"api/sql/Function/#st_asewkt":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#create-a-typed-spatialrdd":{},"archive/tutorial/geospark-core-python/#save-to-permanent-storage":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#create-a-generic-spatialrdd-behavoir-changed-in-v120":{},"archive/tutorial/rdd/#create-a-typed-spatialrdd":{},"archive/tutorial/rdd/#save-to-permanent-storage":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#load-data-from-files":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/overview/":{},"setup/overview/#complex-spatial-objects":{},"tutorial/core-python/":{},"tutorial/core-python/#create-a-typed-spatialrdd":{},"tutorial/core-python/#save-to-permanent-storage":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/flink/sql/#create-row-objects":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#create-a-generic-spatialrdd":{},"tutorial/rdd/#create-a-typed-spatialrdd":{},"tutorial/rdd/#save-to-permanent-storage":{},"tutorial/sql/":{},"tutorial/sql/#load-data-from-files":{},"tutorial/sql/#save-to-permanent-storage":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{"archive/tutorial/geospark-core-python/#read-from-wkt-file":{},"tutorial/core-python/#read-from-wkt-file":{}}}],["wkt/wkb",{"_index":2302,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["wkt/wkb/geojson",{"_index":2015,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/rdd/":{},"tutorial/core-python/":{},"tutorial/rdd/":{}},"title":{}}],["wkt:string",{"_index":159,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_geomfromtext":{},"api/flink/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_geomfromtext":{},"api/sql/Constructor/#st_geomfromwkt":{},"api/sql/Constructor/#st_linefromtext":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_geomfromwkt":{}},"title":{}}],["wkt_geometries_loc",{"_index":2108,"text":{"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-wkt-file":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-wkt-file":{}},"title":{}}],["wktcolumn",{"_index":2318,"text":{"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["wktpoint",{"_index":2743,"text":{"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{}},"title":{}}],["wktreader",{"_index":1425,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#read-from-wkt-file":{},"archive/tutorial/rdd/":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"tutorial/core-python/":{},"tutorial/core-python/#read-from-wkt-file":{},"tutorial/rdd/":{}},"title":{}}],["wolf",{"_index":407,"text":{"api/flink/Function/":{},"api/flink/Function/#st_transform":{},"api/sql/Function/":{},"api/sql/Function/#st_transform":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v110":{},"setup/release-notes/":{},"setup/release-notes/#v110":{}},"title":{}}],["work",{"_index":651,"text":{"api/sql/Function/":{},"api/sql/Function/#st_linemerge":{},"api/sql/Function/#st_linesubstring":{},"api/sql/Function/#st_makevalid":{},"api/sql/Function/#st_subdivideexplode":{},"api/sql/Optimizer/":{},"api/sql/Optimizer/#broadcast-join":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_linemerge":{},"archive/download/scalashell/":{},"archive/download/scalashell/#spark-scala-shell":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#installing-the-package":{},"archive/tutorial/geospark-core-python/#python":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#installation":{},"archive/tutorial/geospark-sql-python/#supported-shapely-objects":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#save-to-permanent-storage":{},"archive/tutorial/viz/":{},"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{},"community/contributor/#send-the-invitation":{},"community/develop/":{},"community/publication/":{},"community/publication/#key-publications":{},"setup/databricks/":{},"setup/databricks/#community-edition-free-tier":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#introduction":{},"setup/release-notes/":{},"setup/release-notes/#python_1":{},"setup/release-notes/#sql_3":{},"tutorial/core-python/":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/demo/":{},"tutorial/demo/#run-template-projects-locally":{},"tutorial/flink/sql/":{},"tutorial/rdd/":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/sql-pure-sql/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#supported-shapely-objects":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{},"tutorial/sql/":{},"tutorial/viz/":{}},"title":{"tutorial/sql-pure-sql/#work-with-data":{}}}],["worker",{"_index":1726,"text":{"archive/download/cluster/":{},"archive/download/cluster/#preliminary":{},"setup/cluster/":{},"setup/cluster/#preliminary":{}},"title":{}}],["workflow",{"_index":3339,"text":{"community/rule/":{},"community/rule/#contributing-to-apache-sedona":{},"setup/install-r/":{},"setup/install-r/#introduction":{}},"title":{}}],["workload",{"_index":3061,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["works.html",{"_index":2989,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["worri",{"_index":1901,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["worth",{"_index":3055,"text":{"community/publication/":{},"community/publication/#third-party-evaluation":{}},"title":{}}],["wrapper",{"_index":1349,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v130":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/geospark-core-python/#supported-versions":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#introduction":{},"archive/tutorial/geospark-sql-python/#supported-versions":{},"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{},"setup/maven-coordinates/":{},"setup/maven-coordinates/#geotools-240":{},"setup/maven-coordinates/#use-sedona-fat-jars":{},"setup/release-notes/":{},"setup/release-notes/#global_1":{},"setup/release-notes/#global_2":{},"setup/release-notes/#v130":{},"setup/release-notes/#v131":{},"tutorial/core-python/":{},"tutorial/core-python/#introduction":{}},"title":{"setup/flink/platform/":{},"setup/platform/":{}}}],["wrapper/1.1.0",{"_index":3479,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-via-init-script-for-dbrs-73":{}},"title":{}}],["wrapper:1.1.0",{"_index":3465,"text":{"setup/databricks/":{},"setup/databricks/#install-sedona-from-the-web-ui":{},"setup/install-python/":{},"setup/install-python/#prepare-python-adapter-jar":{},"setup/install-r/":{},"setup/install-r/#connect-to-spark":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-automatically":{},"setup/install-scala/#download-sedona-jar-manually":{},"tutorial/python-vector-osm/":{},"tutorial/python-vector-osm/#registering-spark-session-adding-node-executor-configurations-and-sedona-registrator":{}},"title":{}}],["wrapper:geotool",{"_index":3930,"text":{"tutorial/sql-pure-sql/":{},"tutorial/sql-pure-sql/#initiate-session":{}},"title":{}}],["write",{"_index":880,"text":{"api/sql/Overview/":{},"api/sql/Overview/#quick-start":{},"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#quick-start":{},"archive/download/project/":{},"archive/download/project/#self-contained-spark-projects":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/rdd/":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-spatial-dataframe":{},"community/contributor/":{},"community/contributor/#committers":{},"community/publish/":{},"setup/flink/install-scala/":{},"setup/install-scala/":{},"setup/install-scala/#self-contained-spark-projects":{},"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{},"tutorial/core-python/":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#create-geometries-using-sedona-formatutils":{},"tutorial/rdd/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#register-package":{},"tutorial/sql/":{},"tutorial/sql/#save-geoparquet":{},"tutorial/viz/":{},"tutorial/viz/#create-spatial-dataframe":{}},"title":{"archive/tutorial/geospark-core-python/#write-a-distance-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-join-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-knn-query":{},"archive/tutorial/geospark-core-python/#write-a-spatial-range-query":{},"archive/tutorial/geospark-sql-python/#writing-application":{},"archive/tutorial/rdd/#write-a-distance-join-query":{},"archive/tutorial/rdd/#write-a-spatial-join-query":{},"archive/tutorial/rdd/#write-a-spatial-knn-query":{},"archive/tutorial/rdd/#write-a-spatial-range-query":{},"community/publish/#obtain-write-access-to-sedona-github-repo":{},"tutorial/core-python/#write-a-distance-join-query":{},"tutorial/core-python/#write-a-spatial-join-query":{},"tutorial/core-python/#write-a-spatial-knn-query":{},"tutorial/core-python/#write-a-spatial-range-query":{},"tutorial/rdd/#write-a-distance-join-query":{},"tutorial/rdd/#write-a-spatial-join-query":{},"tutorial/rdd/#write-a-spatial-knn-query":{},"tutorial/rdd/#write-a-spatial-range-query":{},"tutorial/sql-python/#writing-application":{}}}],["writer",{"_index":991,"text":{"api/sql/Raster-loader/":{}},"title":{"api/sql/Raster-loader/#geotiff-dataframe-writer":{}}}],["writetocr",{"_index":1015,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{}},"title":{}}],["written",{"_index":993,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-writer":{},"archive/download/compile/":{},"archive/download/compile/#compile-the-documentation":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#geospark-serializers":{},"archive/tutorial/geospark-core-python/#introduction":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#initiate-sparkcontext":{},"archive/tutorial/sql/":{},"archive/tutorial/sql/#initiate-sparksession":{},"archive/tutorial/viz/":{},"setup/compile/":{},"setup/compile/#mkdocs-website":{},"tutorial/core-python/":{},"tutorial/core-python/#apache-sedona-serializers":{},"tutorial/core-python/#introduction":{},"tutorial/demo/":{},"tutorial/demo/#scala-and-java-examples":{},"tutorial/flink/sql/":{},"tutorial/flink/sql/#register-sedonasql":{},"tutorial/rdd-r/":{},"tutorial/rdd-r/#creating-a-spatialrdd":{},"tutorial/rdd/":{},"tutorial/rdd/#initiate-sparkcontext":{},"tutorial/sql-pure-sql/":{},"tutorial/sql/":{},"tutorial/sql/#initiate-sparksession":{},"tutorial/viz/":{}},"title":{}}],["wrong",{"_index":1496,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v111":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v112":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/":{},"archive/tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"archive/tutorial/rdd/#transform-the-coordinate-reference-system":{},"setup/release-notes/":{},"setup/release-notes/#sql-for-spark":{},"setup/release-notes/#v111":{},"setup/release-notes/#v112":{},"tutorial/core-python/":{},"tutorial/core-python/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/":{},"tutorial/rdd/#save-an-spatialrdd-spatialpartitioned-wo-indexed":{},"tutorial/rdd/#transform-the-coordinate-reference-system":{}},"title":{}}],["wrussia",{"_index":1402,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{}},"title":{}}],["wu",{"_index":2846,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{}},"title":{}}],["x",{"_index":180,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_point":{},"api/flink/Function/":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_transform":{},"api/flink/Function/#st_x":{},"api/flink/Function/#st_xmax":{},"api/flink/Function/#st_xmin":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_point":{},"api/sql/Function/":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_transform":{},"api/sql/Function/#st_x":{},"api/sql/Function/#st_xmax":{},"api/sql/Function/#st_xmin":{},"api/viz/sql/":{},"api/viz/sql/#st_tilename":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_x":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{},"archive/tutorial/geospark-core-python/":{},"archive/tutorial/geospark-core-python/#output-format":{},"archive/tutorial/geospark-core-python/#output-format_3":{},"archive/tutorial/geospark-core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/core-python/":{},"tutorial/core-python/#output-format":{},"tutorial/core-python/#output-format_3":{},"tutorial/core-python/#read-other-attributes-in-an-spatialrdd":{},"tutorial/sql-r/":{},"tutorial/sql-r/#spatial-sql-applications-in-r-language":{}},"title":{}}],["x.x.x",{"_index":1862,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#pick-a-proper-geospark-version":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#pick-a-proper-sedona-version":{}},"title":{}}],["x/i",{"_index":1277,"text":{"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_transform":{}},"title":{}}],["x:decim",{"_index":182,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_point":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{}},"title":{}}],["xmax",{"_index":433,"text":{"api/flink/Function/":{},"api/flink/Function/#st_xmax":{},"api/sql/Function/":{},"api/sql/Function/#st_xmax":{}},"title":{}}],["xmin",{"_index":437,"text":{"api/flink/Function/":{},"api/flink/Function/#st_xmin":{},"api/sql/Function/":{},"api/sql/Function/#st_xmin":{}},"title":{}}],["xvf",{"_index":3382,"text":{"community/vote/":{},"community/vote/#run-the-verify-script":{}},"title":{}}],["xxx.jar",{"_index":3432,"text":{"setup/compile/":{},"setup/compile/#run-python-test":{}},"title":{}}],["y",{"_index":181,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_point":{},"api/flink/Function/":{},"api/flink/Function/#st_flipcoordinates":{},"api/flink/Function/#st_force_2d":{},"api/flink/Function/#st_transform":{},"api/flink/Function/#st_y":{},"api/flink/Function/#st_ymax":{},"api/flink/Function/#st_ymin":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_point":{},"api/sql/Function/":{},"api/sql/Function/#st_flipcoordinates":{},"api/sql/Function/#st_force_2d":{},"api/sql/Function/#st_transform":{},"api/sql/Function/#st_y":{},"api/sql/Function/#st_ymax":{},"api/sql/Function/#st_ymin":{},"api/viz/sql/":{},"api/viz/sql/#st_tilename":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Function/":{},"archive/api/sql/GeoSparkSQL-Function/#st_y":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{},"community/publication/":{},"community/publication/#third-party-evaluation":{},"setup/compile/":{},"setup/compile/#run-python-test":{}},"title":{}}],["y:decim",{"_index":183,"text":{"api/flink/Constructor/":{},"api/flink/Constructor/#st_point":{},"api/sql/Constructor/":{},"api/sql/Constructor/#st_point":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#st_point":{}},"title":{}}],["yarn",{"_index":3544,"text":{"setup/install-r/":{},"setup/install-r/#connect-to-spark":{}},"title":{}}],["ye",{"_index":467,"text":{"api/flink/Overview/":{},"api/flink/Overview/#introduction":{},"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"community/develop/":{}},"title":{}}],["yitao",{"_index":2832,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["yitaoli@apache.org",{"_index":2835,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["ylorbr",{"_index":2232,"text":{"archive/tutorial/geospark-sql-python/":{},"archive/tutorial/geospark-sql-python/#integration-with-geopandas-and-shapely":{},"tutorial/sql-python/":{},"tutorial/sql-python/#integration-with-geopandas-and-shapely":{}},"title":{}}],["you'd",{"_index":1904,"text":{"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/":{},"archive/tutorial/Advanced-Tutorial-Tune-your-GeoSpark-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{},"tutorial/Advanced-Tutorial-Tune-your-Application/":{},"tutorial/Advanced-Tutorial-Tune-your-Application/#cache-the-spatial-rdd-that-is-repeatedly-used":{}},"title":{}}],["you'll",{"_index":523,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#read-esri-shapefile":{},"archive/api/sql/GeoSparkSQL-Constructor/":{},"archive/api/sql/GeoSparkSQL-Constructor/#read-esri-shapefile":{},"archive/tutorial/rdd/":{},"tutorial/rdd/":{}},"title":{}}],["your",{"_index":2996,"text":{"community/contributor/":{},"community/contributor/#pmc-accept-and-icla-instruction":{}},"title":{}}],["your_path",{"_index":950,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#geotiff-dataframe-loader":{}},"title":{}}],["your_sql",{"_index":871,"text":{"api/sql/Overview/":{},"api/sql/Overview/#function-list":{},"archive/api/sql/GeoSparkSQL-Overview/":{},"archive/api/sql/GeoSparkSQL-Overview/#function-list":{},"archive/tutorial/sql/":{},"tutorial/flink/sql/":{},"tutorial/sql-python/":{},"tutorial/sql-python/#introduction":{},"tutorial/sql/":{}},"title":{}}],["yourself",{"_index":1832,"text":{"archive/download/scalashell/":{},"archive/download/scalashell/#download-geospark-jar-manually":{},"community/contact/":{},"community/contact/#bug-reports":{},"setup/install-scala/":{},"setup/install-scala/#download-sedona-jar-manually":{}},"title":{}}],["you\u2019v",{"_index":2796,"text":{"community/contact/":{},"community/contact/#bug-reports":{}},"title":{}}],["yu",{"_index":1404,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"community/publication/":{},"community/publication/#a-tutorial-about-geospatial-data-management-in-spark":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparksim-traffic-simulator":{},"community/publication/#geosparkviz-visualization-system":{},"community/vote/":{},"community/vote/#run-the-verify-script":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"setup/release-notes/#v131":{}},"title":{}}],["z",{"_index":445,"text":{"api/flink/Function/":{},"api/flink/Function/#st_z":{},"api/sql/Function/":{},"api/sql/Function/#st_z":{},"api/viz/sql/":{},"api/viz/sql/#st_tilename":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{},"setup/release-notes/":{},"setup/release-notes/#sql":{}},"title":{}}],["z(0",{"_index":383,"text":{"api/flink/Function/":{},"api/flink/Function/#st_pointonsurface":{},"api/sql/Function/":{},"api/sql/Function/#st_pointonsurface":{}},"title":{}}],["z:decim",{"_index":550,"text":{"api/sql/Constructor/":{},"api/sql/Constructor/#st_point":{}},"title":{}}],["zeppelin",{"_index":1233,"text":{"api/viz/sql/":{},"api/viz/sql/#st_encodeimage":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_encodeimage":{},"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v120":{},"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/download/zeppelin/#compatibility":{},"archive/download/zeppelin/#create-helium-folder-optional":{},"archive/download/zeppelin/#display-geosparkviz-results":{},"archive/download/zeppelin/#enable-geospark-zeppelin":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/download/zeppelin/#installation":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#large-scale-with-geosparkviz":{},"archive/tutorial/zeppelin/#small-scale-without-geosparkviz":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/publish/":{},"community/publish/#release-the-package":{},"setup/modules/":{},"setup/modules/#sedona-modules-for-apache-spark":{},"setup/overview/":{},"setup/overview/#rich-spatial-analytics-tools":{},"setup/release-notes/":{},"setup/release-notes/#v120":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"setup/zeppelin/#compatibility":{},"setup/zeppelin/#create-helium-folder-optional":{},"setup/zeppelin/#display-sedonaviz-results":{},"setup/zeppelin/#enable-sedona-zeppelin":{},"setup/zeppelin/#install-sedona-zeppelin":{},"setup/zeppelin/#installation":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#large-scale-with-sedonaviz":{},"tutorial/zeppelin/#small-scale-without-sedonaviz":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}},"title":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-dependencies-in-zeppelin-spark-interpreter":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"archive/download/zeppelin/#enable-geospark-zeppelin":{},"archive/download/zeppelin/#install-geospark-zeppelin":{},"archive/tutorial/zeppelin/":{},"archive/tutorial/zeppelin/#zeppelin-spark-notebook-demo":{},"community/publish/#update-sedona-python-r-and-zeppelin-versions":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-dependencies-in-zeppelin-spark-interpreter":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{},"setup/zeppelin/#enable-sedona-zeppelin":{},"setup/zeppelin/#install-sedona-zeppelin":{},"tutorial/zeppelin/":{},"tutorial/zeppelin/#zeppelin-spark-notebook-demo":{}}}],["zeppelin.json",{"_index":1845,"text":{"archive/download/zeppelin/":{},"archive/download/zeppelin/#add-geospark-zeppelin-description-optional":{},"setup/zeppelin/":{},"setup/zeppelin/#add-sedona-zeppelin-description-optional":{}},"title":{}}],["zero",{"_index":1047,"text":{"api/sql/Raster-loader/":{},"api/sql/Raster-loader/#rs_base64":{}},"title":{}}],["zhang",{"_index":2852,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparkviz-visualization-system":{}},"title":{}}],["zhu",{"_index":1406,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}],["zippartit",{"_index":1598,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v080-geospark-core":{},"setup/release-notes/":{},"setup/release-notes/#v080-geospark-core":{}},"title":{}}],["zishan",{"_index":3114,"text":{"community/publication/":{},"community/publication/#geosparksim-traffic-simulator":{}},"title":{}}],["zongsi",{"_index":2851,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{},"community/publication/":{},"community/publication/#geospark-ecosystem":{},"community/publication/#geosparkviz-visualization-system":{}},"title":{}}],["zongsizhang@apache.org",{"_index":2854,"text":{"community/contributor/":{},"community/contributor/#project-management-committee-pmc":{}},"title":{}}],["zoom",{"_index":1244,"text":{"api/viz/sql/":{},"api/viz/sql/#st_render":{},"api/viz/sql/#st_tilename":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{},"archive/tutorial/viz/":{},"archive/tutorial/viz/#create-tile-name":{},"archive/tutorial/viz/#generate-map-tiles":{},"archive/tutorial/viz/#why-scalable-map-visualization":{},"tutorial/viz/":{},"tutorial/viz/#create-tile-name":{},"tutorial/viz/#generate-map-tiles":{},"tutorial/viz/#render-map-tiles":{},"tutorial/viz/#why-scalable-map-visualization":{}},"title":{}}],["zoomlevel",{"_index":1247,"text":{"api/viz/sql/":{},"api/viz/sql/#st_tilename":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{}},"title":{}}],["zoomlevel:int",{"_index":1249,"text":{"api/viz/sql/":{},"api/viz/sql/#st_tilename":{},"archive/api/viz/sql/":{},"archive/api/viz/sql/#st_tilename":{}},"title":{}}],["zverev",{"_index":1408,"text":{"archive/download/GeoSpark-All-Modules-Release-notes/":{},"archive/download/GeoSpark-All-Modules-Release-notes/#v131":{},"setup/release-notes/":{},"setup/release-notes/#v131":{}},"title":{}}]],"pipeline":["stemmer"],"version":"2.3.9"}}